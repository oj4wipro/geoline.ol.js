{"version":3,"file":"geoline.ol.js","mappings":"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","sources":["webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ms/index.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/jsonp/index.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/debug/src/browser.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/debug/src/debug.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/webpack/bootstrap","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/webpack/runtime/define property getters","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/webpack/runtime/hasOwnProperty shorthand","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/ObjectEventType.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/events/EventType.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/Disposable.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/array.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/functions.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/obj.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/events/Event.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/events/Target.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/events.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/Observable.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/util.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/Object.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/asserts.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/Feature.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/CollectionEventType.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/Collection.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/MapEvent.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/MapBrowserEvent.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/MapBrowserEventType.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/has.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/pointer/EventType.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/MapBrowserEventHandler.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/MapEventType.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/MapProperty.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/structs/PriorityQueue.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/TileQueue.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/TileState.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/ViewProperty.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/math.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/centerconstraint.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/extent.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/extent/Relationship.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/coordinate.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/easing.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/console.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/proj/Units.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/proj/Projection.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/proj/epsg3857.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/proj/epsg4326.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/proj/projections.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/proj/transforms.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/proj/utm.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/sphere.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/proj.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/transform.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/transform.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/Geometry.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/SimpleGeometry.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/area.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/closest.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/deflate.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/inflate.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/simplify.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/LinearRing.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/Point.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/contains.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/interiorpoint.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/segments.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/intersectsextent.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/reverse.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/orient.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/Polygon.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/resolutionconstraint.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/rotationconstraint.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/View.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/tilegrid/common.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/ViewHint.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/css.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/dom.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/control/Control.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/control/Attribution.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/control/Rotate.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/control/Zoom.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/control/defaults.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/Kinetic.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/Property.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/Interaction.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/DoubleClickZoom.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/events/condition.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/Pointer.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/DragPan.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/DragRotate.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/Box.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/DragBox.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/DragZoom.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/events/Key.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/KeyboardPan.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/KeyboardZoom.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/MouseWheelZoom.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/PinchRotate.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/PinchZoom.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/Property.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/Base.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/Group.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/EventType.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/Layer.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/quickselect/index.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/rbush/index.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/color.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/size.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/expr/expression.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/expr/cpu.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/Image.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/ImageState.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/style/IconImageCache.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/style/IconImage.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/colorlike.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/style/Image.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/style/RegularShape.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/style/Circle.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/style/Fill.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/style/Icon.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/style/Stroke.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/style/Style.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/style/Text.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/style.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/BaseVector.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/Event.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/renderer/Map.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/renderer/Composite.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/Map.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/interaction/defaults.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/Overlay.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/TileRange.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/tilecoord.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/tilegrid/TileGrid.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/interpolate.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/length.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/LineString.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/MultiLineString.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/MultiPoint.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/center.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/MultiPolygon.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/GeometryCollection.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/Feature.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/format/Feature.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/format/JSONFeature.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/format/EsriJSON.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/format/GeoJSON.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/xml.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/format/XML.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/format/xlink.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/format/xsd.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/format/OWS.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/format/WMTSCapabilities.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/ZIndexContext.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/renderer/Layer.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/renderer/canvas/Layer.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/renderer/canvas/ImageLayer.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/BaseImage.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/Image.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/Tile.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/DataTile.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/ImageTile.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/reproj.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/reproj/Triangulation.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/reproj/Tile.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/reproj/common.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/structs/LRUCache.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/renderer/canvas/TileLayer.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/TileProperty.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/BaseTile.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/Tile.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/VectorContext.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/Instruction.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/Builder.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/PolygonBuilder.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/linechunk.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/straightchunk.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/TextBuilder.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/BuilderGroup.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/ImageBuilder.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/LineStringBuilder.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/geom/flat/textpath.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/Executor.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/ExecutorGroup.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/Immediate.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/render/canvas/hitdetect.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/renderer/vector.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/renderer/canvas/VectorLayer.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/layer/Vector.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/resolution.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/reproj/Image.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/Source.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/Image.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/common.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/uri.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/ImageArcGISRest.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/arcgisRest.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/string.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/wms.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/ImageWMS.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/tilegrid.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/tileurlfunction.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/Tile.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/UrlTile.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/TileEventType.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/TileImage.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/TileWMS.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/featureloader.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/loadingstrategy.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/structs/RBush.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/VectorEventType.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/Vector.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/XYZ.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/tilegrid/WMTS.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/source/WMTS.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/ol/proj/proj4.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/constants/values.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/constants/PrimeMeridian.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/constants/units.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/match.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projString.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/wkt-parser/PROJJSONBuilderBase.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/wkt-parser/PROJJSONBuilder2015.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/wkt-parser/PROJJSONBuilder2019.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/wkt-parser/parser.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/wkt-parser/process.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/wkt-parser/util.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/wkt-parser/transformPROJJSON.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/wkt-parser/index.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/wkt-parser/detectWKTVersion.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/wkt-parser/buildPROJJSON.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/defs.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/global.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/parseCode.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/extend.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/msfnz.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/sign.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/adjust_lon.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/tsfnz.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/phi2z.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/longlat.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/merc.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/constants/Ellipsoid.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/deriveConstants.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/constants/Datum.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/nadgrid.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/Proj.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/datum.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/datumUtils.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/datum_transform.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/adjust_axis.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/toPoint.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/checkSanity.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/transform.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/core.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/mgrs/mgrs.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/Point.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/pj_enfn.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/pj_mlfn.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/pj_inv_mlfn.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/tmerc.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/sinh.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/hypot.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/gatg.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/clens_cmplx.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/cosh.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/etmerc.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/clens.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/asinhy.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/log1py.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/utm.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/adjust_zone.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/srat.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/gauss.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/sterea.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/stere.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/somerc.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/omerc.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/lcc.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/krovak.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/mlfn.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/e0fn.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/e1fn.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/e2fn.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/e3fn.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/gN.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/adjust_lat.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/imlfn.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/cass.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/qsfnz.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/laea.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/asinz.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/aea.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/gnom.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/cea.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/iqsfnz.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/eqc.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/poly.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/nzmg.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/mill.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/sinu.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/moll.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/eqdc.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/vandg.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/aeqd.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/common/vincenty.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/ortho.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/qsc.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/robin.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/geocent.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/tpers.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/geos.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/eqearth.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/projections/bonne.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/lib/index.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./node_modules/proj4/projs.js","webpack://@stadtmessungsamt-stuttgart/geoline.ol.js/./src/geoline.ol.js"],"sourcesContent":["/**\n * Helpers.\n */\n\nvar s = 1000;\nvar m = s * 60;\nvar h = m * 60;\nvar d = h * 24;\nvar y = d * 365.25;\n\n/**\n * Parse or format the given `val`.\n *\n * Options:\n *\n *  - `long` verbose formatting [false]\n *\n * @param {String|Number} val\n * @param {Object} [options]\n * @throws {Error} throw an error if val is not a non-empty string or a number\n * @return {String|Number}\n * @api public\n */\n\nmodule.exports = function(val, options) {\n  options = options || {};\n  var type = typeof val;\n  if (type === 'string' && val.length > 0) {\n    return parse(val);\n  } else if (type === 'number' && isNaN(val) === false) {\n    return options.long ? fmtLong(val) : fmtShort(val);\n  }\n  throw new Error(\n    'val is not a non-empty string or a valid number. val=' +\n      JSON.stringify(val)\n  );\n};\n\n/**\n * Parse the given `str` and return milliseconds.\n *\n * @param {String} str\n * @return {Number}\n * @api private\n */\n\nfunction parse(str) {\n  str = String(str);\n  if (str.length > 100) {\n    return;\n  }\n  var match = /^((?:\\d+)?\\.?\\d+) *(milliseconds?|msecs?|ms|seconds?|secs?|s|minutes?|mins?|m|hours?|hrs?|h|days?|d|years?|yrs?|y)?$/i.exec(\n    str\n  );\n  if (!match) {\n    return;\n  }\n  var n = parseFloat(match[1]);\n  var type = (match[2] || 'ms').toLowerCase();\n  switch (type) {\n    case 'years':\n    case 'year':\n    case 'yrs':\n    case 'yr':\n    case 'y':\n      return n * y;\n    case 'days':\n    case 'day':\n    case 'd':\n      return n * d;\n    case 'hours':\n    case 'hour':\n    case 'hrs':\n    case 'hr':\n    case 'h':\n      return n * h;\n    case 'minutes':\n    case 'minute':\n    case 'mins':\n    case 'min':\n    case 'm':\n      return n * m;\n    case 'seconds':\n    case 'second':\n    case 'secs':\n    case 'sec':\n    case 's':\n      return n * s;\n    case 'milliseconds':\n    case 'millisecond':\n    case 'msecs':\n    case 'msec':\n    case 'ms':\n      return n;\n    default:\n      return undefined;\n  }\n}\n\n/**\n * Short format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtShort(ms) {\n  if (ms >= d) {\n    return Math.round(ms / d) + 'd';\n  }\n  if (ms >= h) {\n    return Math.round(ms / h) + 'h';\n  }\n  if (ms >= m) {\n    return Math.round(ms / m) + 'm';\n  }\n  if (ms >= s) {\n    return Math.round(ms / s) + 's';\n  }\n  return ms + 'ms';\n}\n\n/**\n * Long format for `ms`.\n *\n * @param {Number} ms\n * @return {String}\n * @api private\n */\n\nfunction fmtLong(ms) {\n  return plural(ms, d, 'day') ||\n    plural(ms, h, 'hour') ||\n    plural(ms, m, 'minute') ||\n    plural(ms, s, 'second') ||\n    ms + ' ms';\n}\n\n/**\n * Pluralization helper.\n */\n\nfunction plural(ms, n, name) {\n  if (ms < n) {\n    return;\n  }\n  if (ms < n * 1.5) {\n    return Math.floor(ms / n) + ' ' + name;\n  }\n  return Math.ceil(ms / n) + ' ' + name + 's';\n}\n","/**\n * Module dependencies\n */\n\nvar debug = require('debug')('jsonp');\n\n/**\n * Module exports.\n */\n\nmodule.exports = jsonp;\n\n/**\n * Callback index.\n */\n\nvar count = 0;\n\n/**\n * Noop function.\n */\n\nfunction noop(){}\n\n/**\n * JSONP handler\n *\n * Options:\n *  - param {String} qs parameter (`callback`)\n *  - prefix {String} qs parameter (`__jp`)\n *  - name {String} qs parameter (`prefix` + incr)\n *  - timeout {Number} how long after a timeout error is emitted (`60000`)\n *\n * @param {String} url\n * @param {Object|Function} optional options / callback\n * @param {Function} optional callback\n */\n\nfunction jsonp(url, opts, fn){\n  if ('function' == typeof opts) {\n    fn = opts;\n    opts = {};\n  }\n  if (!opts) opts = {};\n\n  var prefix = opts.prefix || '__jp';\n\n  // use the callback name that was passed if one was provided.\n  // otherwise generate a unique name by incrementing our counter.\n  var id = opts.name || (prefix + (count++));\n\n  var param = opts.param || 'callback';\n  var timeout = null != opts.timeout ? opts.timeout : 60000;\n  var enc = encodeURIComponent;\n  var target = document.getElementsByTagName('script')[0] || document.head;\n  var script;\n  var timer;\n\n\n  if (timeout) {\n    timer = setTimeout(function(){\n      cleanup();\n      if (fn) fn(new Error('Timeout'));\n    }, timeout);\n  }\n\n  function cleanup(){\n    if (script.parentNode) script.parentNode.removeChild(script);\n    window[id] = noop;\n    if (timer) clearTimeout(timer);\n  }\n\n  function cancel(){\n    if (window[id]) {\n      cleanup();\n    }\n  }\n\n  window[id] = function(data){\n    debug('jsonp got', data);\n    cleanup();\n    if (fn) fn(null, data);\n  };\n\n  // add qs component\n  url += (~url.indexOf('?') ? '&' : '?') + param + '=' + enc(id);\n  url = url.replace('?&', '?');\n\n  debug('jsonp req \"%s\"', url);\n\n  // create script\n  script = document.createElement('script');\n  script.src = url;\n  target.parentNode.insertBefore(script, target);\n\n  return cancel;\n}\n","/**\n * This is the web browser implementation of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = require('./debug');\nexports.log = log;\nexports.formatArgs = formatArgs;\nexports.save = save;\nexports.load = load;\nexports.useColors = useColors;\nexports.storage = 'undefined' != typeof chrome\n               && 'undefined' != typeof chrome.storage\n                  ? chrome.storage.local\n                  : localstorage();\n\n/**\n * Colors.\n */\n\nexports.colors = [\n  'lightseagreen',\n  'forestgreen',\n  'goldenrod',\n  'dodgerblue',\n  'darkorchid',\n  'crimson'\n];\n\n/**\n * Currently only WebKit-based Web Inspectors, Firefox >= v31,\n * and the Firebug extension (any Firefox version) are known\n * to support \"%c\" CSS customizations.\n *\n * TODO: add a `localStorage` variable to explicitly enable/disable colors\n */\n\nfunction useColors() {\n  // NB: In an Electron preload script, document will be defined but not fully\n  // initialized. Since we know we're in Chrome, we'll just detect this case\n  // explicitly\n  if (typeof window !== 'undefined' && window.process && window.process.type === 'renderer') {\n    return true;\n  }\n\n  // is webkit? http://stackoverflow.com/a/16459606/376773\n  // document is undefined in react-native: https://github.com/facebook/react-native/pull/1632\n  return (typeof document !== 'undefined' && document.documentElement && document.documentElement.style && document.documentElement.style.WebkitAppearance) ||\n    // is firebug? http://stackoverflow.com/a/398120/376773\n    (typeof window !== 'undefined' && window.console && (window.console.firebug || (window.console.exception && window.console.table))) ||\n    // is firefox >= v31?\n    // https://developer.mozilla.org/en-US/docs/Tools/Web_Console#Styling_messages\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/firefox\\/(\\d+)/) && parseInt(RegExp.$1, 10) >= 31) ||\n    // double check webkit in userAgent just in case we are in a worker\n    (typeof navigator !== 'undefined' && navigator.userAgent && navigator.userAgent.toLowerCase().match(/applewebkit\\/(\\d+)/));\n}\n\n/**\n * Map %j to `JSON.stringify()`, since no Web Inspectors do that by default.\n */\n\nexports.formatters.j = function(v) {\n  try {\n    return JSON.stringify(v);\n  } catch (err) {\n    return '[UnexpectedJSONParseError]: ' + err.message;\n  }\n};\n\n\n/**\n * Colorize log arguments if enabled.\n *\n * @api public\n */\n\nfunction formatArgs(args) {\n  var useColors = this.useColors;\n\n  args[0] = (useColors ? '%c' : '')\n    + this.namespace\n    + (useColors ? ' %c' : ' ')\n    + args[0]\n    + (useColors ? '%c ' : ' ')\n    + '+' + exports.humanize(this.diff);\n\n  if (!useColors) return;\n\n  var c = 'color: ' + this.color;\n  args.splice(1, 0, c, 'color: inherit')\n\n  // the final \"%c\" is somewhat tricky, because there could be other\n  // arguments passed either before or after the %c, so we need to\n  // figure out the correct index to insert the CSS into\n  var index = 0;\n  var lastC = 0;\n  args[0].replace(/%[a-zA-Z%]/g, function(match) {\n    if ('%%' === match) return;\n    index++;\n    if ('%c' === match) {\n      // we only are interested in the *last* %c\n      // (the user may have provided their own)\n      lastC = index;\n    }\n  });\n\n  args.splice(lastC, 0, c);\n}\n\n/**\n * Invokes `console.log()` when available.\n * No-op when `console.log` is not a \"function\".\n *\n * @api public\n */\n\nfunction log() {\n  // this hackery is required for IE8/9, where\n  // the `console.log` function doesn't have 'apply'\n  return 'object' === typeof console\n    && console.log\n    && Function.prototype.apply.call(console.log, console, arguments);\n}\n\n/**\n * Save `namespaces`.\n *\n * @param {String} namespaces\n * @api private\n */\n\nfunction save(namespaces) {\n  try {\n    if (null == namespaces) {\n      exports.storage.removeItem('debug');\n    } else {\n      exports.storage.debug = namespaces;\n    }\n  } catch(e) {}\n}\n\n/**\n * Load `namespaces`.\n *\n * @return {String} returns the previously persisted debug modes\n * @api private\n */\n\nfunction load() {\n  var r;\n  try {\n    r = exports.storage.debug;\n  } catch(e) {}\n\n  // If debug isn't set in LS, and we're in Electron, try to load $DEBUG\n  if (!r && typeof process !== 'undefined' && 'env' in process) {\n    r = process.env.DEBUG;\n  }\n\n  return r;\n}\n\n/**\n * Enable namespaces listed in `localStorage.debug` initially.\n */\n\nexports.enable(load());\n\n/**\n * Localstorage attempts to return the localstorage.\n *\n * This is necessary because safari throws\n * when a user disables cookies/localstorage\n * and you attempt to access it.\n *\n * @return {LocalStorage}\n * @api private\n */\n\nfunction localstorage() {\n  try {\n    return window.localStorage;\n  } catch (e) {}\n}\n","\n/**\n * This is the common logic for both the Node.js and web browser\n * implementations of `debug()`.\n *\n * Expose `debug()` as the module.\n */\n\nexports = module.exports = createDebug.debug = createDebug['default'] = createDebug;\nexports.coerce = coerce;\nexports.disable = disable;\nexports.enable = enable;\nexports.enabled = enabled;\nexports.humanize = require('ms');\n\n/**\n * The currently active debug mode names, and names to skip.\n */\n\nexports.names = [];\nexports.skips = [];\n\n/**\n * Map of special \"%n\" handling functions, for the debug \"format\" argument.\n *\n * Valid key names are a single, lower or upper-case letter, i.e. \"n\" and \"N\".\n */\n\nexports.formatters = {};\n\n/**\n * Previous log timestamp.\n */\n\nvar prevTime;\n\n/**\n * Select a color.\n * @param {String} namespace\n * @return {Number}\n * @api private\n */\n\nfunction selectColor(namespace) {\n  var hash = 0, i;\n\n  for (i in namespace) {\n    hash  = ((hash << 5) - hash) + namespace.charCodeAt(i);\n    hash |= 0; // Convert to 32bit integer\n  }\n\n  return exports.colors[Math.abs(hash) % exports.colors.length];\n}\n\n/**\n * Create a debugger with the given `namespace`.\n *\n * @param {String} namespace\n * @return {Function}\n * @api public\n */\n\nfunction createDebug(namespace) {\n\n  function debug() {\n    // disabled?\n    if (!debug.enabled) return;\n\n    var self = debug;\n\n    // set `diff` timestamp\n    var curr = +new Date();\n    var ms = curr - (prevTime || curr);\n    self.diff = ms;\n    self.prev = prevTime;\n    self.curr = curr;\n    prevTime = curr;\n\n    // turn the `arguments` into a proper Array\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n\n    args[0] = exports.coerce(args[0]);\n\n    if ('string' !== typeof args[0]) {\n      // anything else let's inspect with %O\n      args.unshift('%O');\n    }\n\n    // apply any `formatters` transformations\n    var index = 0;\n    args[0] = args[0].replace(/%([a-zA-Z%])/g, function(match, format) {\n      // if we encounter an escaped % then don't increase the array index\n      if (match === '%%') return match;\n      index++;\n      var formatter = exports.formatters[format];\n      if ('function' === typeof formatter) {\n        var val = args[index];\n        match = formatter.call(self, val);\n\n        // now we need to remove `args[index]` since it's inlined in the `format`\n        args.splice(index, 1);\n        index--;\n      }\n      return match;\n    });\n\n    // apply env-specific formatting (colors, etc.)\n    exports.formatArgs.call(self, args);\n\n    var logFn = debug.log || exports.log || console.log.bind(console);\n    logFn.apply(self, args);\n  }\n\n  debug.namespace = namespace;\n  debug.enabled = exports.enabled(namespace);\n  debug.useColors = exports.useColors();\n  debug.color = selectColor(namespace);\n\n  // env-specific initialization logic for debug instances\n  if ('function' === typeof exports.init) {\n    exports.init(debug);\n  }\n\n  return debug;\n}\n\n/**\n * Enables a debug mode by namespaces. This can include modes\n * separated by a colon and wildcards.\n *\n * @param {String} namespaces\n * @api public\n */\n\nfunction enable(namespaces) {\n  exports.save(namespaces);\n\n  exports.names = [];\n  exports.skips = [];\n\n  var split = (typeof namespaces === 'string' ? namespaces : '').split(/[\\s,]+/);\n  var len = split.length;\n\n  for (var i = 0; i < len; i++) {\n    if (!split[i]) continue; // ignore empty strings\n    namespaces = split[i].replace(/\\*/g, '.*?');\n    if (namespaces[0] === '-') {\n      exports.skips.push(new RegExp('^' + namespaces.substr(1) + '$'));\n    } else {\n      exports.names.push(new RegExp('^' + namespaces + '$'));\n    }\n  }\n}\n\n/**\n * Disable debug output.\n *\n * @api public\n */\n\nfunction disable() {\n  exports.enable('');\n}\n\n/**\n * Returns true if the given mode name is enabled, false otherwise.\n *\n * @param {String} name\n * @return {Boolean}\n * @api public\n */\n\nfunction enabled(name) {\n  var i, len;\n  for (i = 0, len = exports.skips.length; i < len; i++) {\n    if (exports.skips[i].test(name)) {\n      return false;\n    }\n  }\n  for (i = 0, len = exports.names.length; i < len; i++) {\n    if (exports.names[i].test(name)) {\n      return true;\n    }\n  }\n  return false;\n}\n\n/**\n * Coerce `val`.\n *\n * @param {Mixed} val\n * @return {Mixed}\n * @api private\n */\n\nfunction coerce(val) {\n  if (val instanceof Error) return val.stack || val.message;\n  return val;\n}\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","/**\n * @module ol/ObjectEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a property is changed.\n   * @event module:ol/Object.ObjectEvent#propertychange\n   * @api\n   */\n  PROPERTYCHANGE: 'propertychange',\n};\n\n/**\n * @typedef {'propertychange'} Types\n */\n","/**\n * @module ol/events/EventType\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  /**\n   * Generic change event. Triggered when the revision counter is increased.\n   * @event module:ol/events/Event~BaseEvent#change\n   * @api\n   */\n  CHANGE: 'change',\n\n  /**\n   * Generic error event. Triggered when an error occurs.\n   * @event module:ol/events/Event~BaseEvent#error\n   * @api\n   */\n  ERROR: 'error',\n\n  BLUR: 'blur',\n  CLEAR: 'clear',\n  CONTEXTMENU: 'contextmenu',\n  CLICK: 'click',\n  DBLCLICK: 'dblclick',\n  DRAGENTER: 'dragenter',\n  DRAGOVER: 'dragover',\n  DROP: 'drop',\n  FOCUS: 'focus',\n  KEYDOWN: 'keydown',\n  KEYPRESS: 'keypress',\n  LOAD: 'load',\n  RESIZE: 'resize',\n  TOUCHMOVE: 'touchmove',\n  WHEEL: 'wheel',\n};\n","/**\n * @module ol/Disposable\n */\n\n/**\n * @classdesc\n * Objects that need to clean up after themselves.\n */\nclass Disposable {\n  constructor() {\n    /**\n     * The object has already been disposed.\n     * @type {boolean}\n     * @protected\n     */\n    this.disposed = false;\n  }\n\n  /**\n   * Clean up.\n   */\n  dispose() {\n    if (!this.disposed) {\n      this.disposed = true;\n      this.disposeInternal();\n    }\n  }\n\n  /**\n   * Extension point for disposable objects.\n   * @protected\n   */\n  disposeInternal() {}\n}\n\nexport default Disposable;\n","/**\n * @module ol/array\n */\n\n/**\n * Performs a binary search on the provided sorted list and returns the index of the item if found. If it can't be found it'll return -1.\n * https://github.com/darkskyapp/binary-search\n *\n * @param {Array<*>} haystack Items to search through.\n * @param {*} needle The item to look for.\n * @param {Function} [comparator] Comparator function.\n * @return {number} The index of the item if found, -1 if not.\n */\nexport function binarySearch(haystack, needle, comparator) {\n  let mid, cmp;\n  comparator = comparator || ascending;\n  let low = 0;\n  let high = haystack.length;\n  let found = false;\n\n  while (low < high) {\n    /* Note that \"(low + high) >>> 1\" may overflow, and results in a typecast\n     * to double (which gives the wrong results). */\n    mid = low + ((high - low) >> 1);\n    cmp = +comparator(haystack[mid], needle);\n\n    if (cmp < 0.0) {\n      /* Too low. */\n      low = mid + 1;\n    } else {\n      /* Key found or too high */\n      high = mid;\n      found = !cmp;\n    }\n  }\n\n  /* Key not found. */\n  return found ? low : ~low;\n}\n\n/**\n * Compare function sorting arrays in ascending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is less than, equal to, or greater than the second.\n */\nexport function ascending(a, b) {\n  return a > b ? 1 : a < b ? -1 : 0;\n}\n\n/**\n * Compare function sorting arrays in descending order.  Safe to use for numeric values.\n * @param {*} a The first object to be compared.\n * @param {*} b The second object to be compared.\n * @return {number} A negative number, zero, or a positive number as the first\n *     argument is greater than, equal to, or less than the second.\n */\nexport function descending(a, b) {\n  return a < b ? 1 : a > b ? -1 : 0;\n}\n\n/**\n * {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution} can use a function\n * of this type to determine which nearest resolution to use.\n *\n * This function takes a `{number}` representing a value between two array entries,\n * a `{number}` representing the value of the nearest higher entry and\n * a `{number}` representing the value of the nearest lower entry\n * as arguments and returns a `{number}`. If a negative number or zero is returned\n * the lower value will be used, if a positive number is returned the higher value\n * will be used.\n * @typedef {function(number, number, number): number} NearestDirectionFunction\n * @api\n */\n\n/**\n * @param {Array<number>} arr Array in descending order.\n * @param {number} target Target.\n * @param {number|NearestDirectionFunction} direction\n *    0 means return the nearest,\n *    > 0 means return the largest nearest,\n *    < 0 means return the smallest nearest.\n * @return {number} Index.\n */\nexport function linearFindNearest(arr, target, direction) {\n  if (arr[0] <= target) {\n    return 0;\n  }\n\n  const n = arr.length;\n  if (target <= arr[n - 1]) {\n    return n - 1;\n  }\n\n  if (typeof direction === 'function') {\n    for (let i = 1; i < n; ++i) {\n      const candidate = arr[i];\n      if (candidate === target) {\n        return i;\n      }\n      if (candidate < target) {\n        if (direction(target, arr[i - 1], candidate) > 0) {\n          return i - 1;\n        }\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction > 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] < target) {\n        return i - 1;\n      }\n    }\n    return n - 1;\n  }\n\n  if (direction < 0) {\n    for (let i = 1; i < n; ++i) {\n      if (arr[i] <= target) {\n        return i;\n      }\n    }\n    return n - 1;\n  }\n\n  for (let i = 1; i < n; ++i) {\n    if (arr[i] == target) {\n      return i;\n    }\n    if (arr[i] < target) {\n      if (arr[i - 1] - target < target - arr[i]) {\n        return i - 1;\n      }\n      return i;\n    }\n  }\n  return n - 1;\n}\n\n/**\n * @param {Array<*>} arr Array.\n * @param {number} begin Begin index.\n * @param {number} end End index.\n */\nexport function reverseSubArray(arr, begin, end) {\n  while (begin < end) {\n    const tmp = arr[begin];\n    arr[begin] = arr[end];\n    arr[end] = tmp;\n    ++begin;\n    --end;\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {!Array<VALUE>|VALUE} data The elements or arrays of elements to add to arr.\n * @template VALUE\n */\nexport function extend(arr, data) {\n  const extension = Array.isArray(data) ? data : [data];\n  const length = extension.length;\n  for (let i = 0; i < length; i++) {\n    arr[arr.length] = extension[i];\n  }\n}\n\n/**\n * @param {Array<VALUE>} arr The array to modify.\n * @param {VALUE} obj The element to remove.\n * @template VALUE\n * @return {boolean} If the element was removed.\n */\nexport function remove(arr, obj) {\n  const i = arr.indexOf(obj);\n  const found = i > -1;\n  if (found) {\n    arr.splice(i, 1);\n  }\n  return found;\n}\n\n/**\n * @param {Array<any>|Uint8ClampedArray} arr1 The first array to compare.\n * @param {Array<any>|Uint8ClampedArray} arr2 The second array to compare.\n * @return {boolean} Whether the two arrays are equal.\n */\nexport function equals(arr1, arr2) {\n  const len1 = arr1.length;\n  if (len1 !== arr2.length) {\n    return false;\n  }\n  for (let i = 0; i < len1; i++) {\n    if (arr1[i] !== arr2[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * Sort the passed array such that the relative order of equal elements is preserved.\n * See https://en.wikipedia.org/wiki/Sorting_algorithm#Stability for details.\n * @param {Array<*>} arr The array to sort (modifies original).\n * @param {!function(*, *): number} compareFnc Comparison function.\n * @api\n */\nexport function stableSort(arr, compareFnc) {\n  const length = arr.length;\n  const tmp = Array(arr.length);\n  let i;\n  for (i = 0; i < length; i++) {\n    tmp[i] = {index: i, value: arr[i]};\n  }\n  tmp.sort(function (a, b) {\n    return compareFnc(a.value, b.value) || a.index - b.index;\n  });\n  for (i = 0; i < arr.length; i++) {\n    arr[i] = tmp[i].value;\n  }\n}\n\n/**\n * @param {Array<*>} arr The array to test.\n * @param {Function} [func] Comparison function.\n * @param {boolean} [strict] Strictly sorted (default false).\n * @return {boolean} Return index.\n */\nexport function isSorted(arr, func, strict) {\n  const compare = func || ascending;\n  return arr.every(function (currentVal, index) {\n    if (index === 0) {\n      return true;\n    }\n    const res = compare(arr[index - 1], currentVal);\n    return !(res > 0 || (strict && res === 0));\n  });\n}\n","/**\n * @module ol/functions\n */\n\nimport {equals as arrayEquals} from './array.js';\n\n/**\n * Always returns true.\n * @return {boolean} true.\n */\nexport function TRUE() {\n  return true;\n}\n\n/**\n * Always returns false.\n * @return {boolean} false.\n */\nexport function FALSE() {\n  return false;\n}\n\n/**\n * A reusable function, used e.g. as a default for callbacks.\n *\n * @return {void} Nothing.\n */\nexport function VOID() {}\n\n/**\n * Wrap a function in another function that remembers the last return.  If the\n * returned function is called twice in a row with the same arguments and the same\n * this object, it will return the value from the first call in the second call.\n *\n * @param {function(...any): ReturnType} fn The function to memoize.\n * @return {function(...any): ReturnType} The memoized function.\n * @template ReturnType\n */\nexport function memoizeOne(fn) {\n  /** @type {ReturnType} */\n  let lastResult;\n\n  /** @type {Array<any>|undefined} */\n  let lastArgs;\n\n  let lastThis;\n\n  /**\n   * @this {*} Only need to know if `this` changed, don't care what type\n   * @return {ReturnType} Memoized value\n   */\n  return function () {\n    const nextArgs = Array.prototype.slice.call(arguments);\n    if (!lastArgs || this !== lastThis || !arrayEquals(nextArgs, lastArgs)) {\n      lastThis = this;\n      lastArgs = nextArgs;\n      lastResult = fn.apply(this, arguments);\n    }\n    return lastResult;\n  };\n}\n\n/**\n * @template T\n * @param {function(): (T | Promise<T>)} getter A function that returns a value or a promise for a value.\n * @return {Promise<T>} A promise for the value.\n */\nexport function toPromise(getter) {\n  function promiseGetter() {\n    let value;\n    try {\n      value = getter();\n    } catch (err) {\n      return Promise.reject(err);\n    }\n    if (value instanceof Promise) {\n      return value;\n    }\n    return Promise.resolve(value);\n  }\n  return promiseGetter();\n}\n","/**\n * @module ol/obj\n */\n\n/**\n * Removes all properties from an object.\n * @param {Object<string, unknown>} object The object to clear.\n */\nexport function clear(object) {\n  for (const property in object) {\n    delete object[property];\n  }\n}\n\n/**\n * Determine if an object has any properties.\n * @param {Object} object The object to check.\n * @return {boolean} The object is empty.\n */\nexport function isEmpty(object) {\n  let property;\n  for (property in object) {\n    return false;\n  }\n  return !property;\n}\n","/**\n * @module ol/events/Event\n */\n\n/**\n * @classdesc\n * Stripped down implementation of the W3C DOM Level 2 Event interface.\n * See https://www.w3.org/TR/DOM-Level-2-Events/events.html#Events-interface.\n *\n * This implementation only provides `type` and `target` properties, and\n * `stopPropagation` and `preventDefault` methods. It is meant as base class\n * for higher level events defined in the library, and works with\n * {@link module:ol/events/Target~Target}.\n */\nclass BaseEvent {\n  /**\n   * @param {string} type Type.\n   */\n  constructor(type) {\n    /**\n     * @type {boolean}\n     */\n    this.propagationStopped;\n\n    /**\n     * @type {boolean}\n     */\n    this.defaultPrevented;\n\n    /**\n     * The event type.\n     * @type {string}\n     * @api\n     */\n    this.type = type;\n\n    /**\n     * The event target.\n     * @type {Object}\n     * @api\n     */\n    this.target = null;\n  }\n\n  /**\n   * Prevent default. This means that no emulated `click`, `singleclick` or `doubleclick` events\n   * will be fired.\n   * @api\n   */\n  preventDefault() {\n    this.defaultPrevented = true;\n  }\n\n  /**\n   * Stop event propagation.\n   * @api\n   */\n  stopPropagation() {\n    this.propagationStopped = true;\n  }\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function stopPropagation(evt) {\n  evt.stopPropagation();\n}\n\n/**\n * @param {Event|import(\"./Event.js\").default} evt Event\n */\nexport function preventDefault(evt) {\n  evt.preventDefault();\n}\n\nexport default BaseEvent;\n","/**\n * @module ol/events/Target\n */\nimport Disposable from '../Disposable.js';\nimport {VOID} from '../functions.js';\nimport {clear} from '../obj.js';\nimport Event from './Event.js';\n\n/**\n * @typedef {EventTarget|Target} EventTargetLike\n */\n\n/**\n * @classdesc\n * A simplified implementation of the W3C DOM Level 2 EventTarget interface.\n * See https://www.w3.org/TR/2000/REC-DOM-Level-2-Events-20001113/events.html#Events-EventTarget.\n *\n * There are two important simplifications compared to the specification:\n *\n * 1. The handling of `useCapture` in `addEventListener` and\n *    `removeEventListener`. There is no real capture model.\n * 2. The handling of `stopPropagation` and `preventDefault` on `dispatchEvent`.\n *    There is no event target hierarchy. When a listener calls\n *    `stopPropagation` or `preventDefault` on an event object, it means that no\n *    more listeners after this one will be called. Same as when the listener\n *    returns false.\n */\nclass Target extends Disposable {\n  /**\n   * @param {*} [target] Default event target for dispatched events.\n   */\n  constructor(target) {\n    super();\n\n    /**\n     * @private\n     * @type {*}\n     */\n    this.eventTarget_ = target;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.pendingRemovals_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, number>|null}\n     */\n    this.dispatching_ = null;\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").Listener>>|null}\n     */\n    this.listeners_ = null;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  addEventListener(type, listener) {\n    if (!type || !listener) {\n      return;\n    }\n    const listeners = this.listeners_ || (this.listeners_ = {});\n    const listenersForType = listeners[type] || (listeners[type] = []);\n    if (!listenersForType.includes(listener)) {\n      listenersForType.push(listener);\n    }\n  }\n\n  /**\n   * Dispatches an event and calls all listeners listening for events\n   * of this type. The event parameter can either be a string or an\n   * Object with a `type` property.\n   *\n   * @param {import(\"./Event.js\").default|string} event Event object.\n   * @return {boolean|undefined} `false` if anyone called preventDefault on the\n   *     event object or if any of the listeners returned false.\n   * @api\n   */\n  dispatchEvent(event) {\n    const isString = typeof event === 'string';\n    const type = isString ? event : event.type;\n    const listeners = this.listeners_ && this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n\n    const evt = isString ? new Event(event) : /** @type {Event} */ (event);\n    if (!evt.target) {\n      evt.target = this.eventTarget_ || this;\n    }\n    const dispatching = this.dispatching_ || (this.dispatching_ = {});\n    const pendingRemovals =\n      this.pendingRemovals_ || (this.pendingRemovals_ = {});\n    if (!(type in dispatching)) {\n      dispatching[type] = 0;\n      pendingRemovals[type] = 0;\n    }\n    ++dispatching[type];\n    let propagate;\n    for (let i = 0, ii = listeners.length; i < ii; ++i) {\n      if ('handleEvent' in listeners[i]) {\n        propagate = /** @type {import(\"../events.js\").ListenerObject} */ (\n          listeners[i]\n        ).handleEvent(evt);\n      } else {\n        propagate = /** @type {import(\"../events.js\").ListenerFunction} */ (\n          listeners[i]\n        ).call(this, evt);\n      }\n      if (propagate === false || evt.propagationStopped) {\n        propagate = false;\n        break;\n      }\n    }\n    if (--dispatching[type] === 0) {\n      let pr = pendingRemovals[type];\n      delete pendingRemovals[type];\n      while (pr--) {\n        this.removeEventListener(type, VOID);\n      }\n      delete dispatching[type];\n    }\n    return propagate;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.listeners_ && clear(this.listeners_);\n  }\n\n  /**\n   * Get the listeners for a specified event type. Listeners are returned in the\n   * order that they will be called in.\n   *\n   * @param {string} type Type.\n   * @return {Array<import(\"../events.js\").Listener>|undefined} Listeners.\n   */\n  getListeners(type) {\n    return (this.listeners_ && this.listeners_[type]) || undefined;\n  }\n\n  /**\n   * @param {string} [type] Type. If not provided,\n   *     `true` will be returned if this event target has any listeners.\n   * @return {boolean} Has listeners.\n   */\n  hasListener(type) {\n    if (!this.listeners_) {\n      return false;\n    }\n    return type\n      ? type in this.listeners_\n      : Object.keys(this.listeners_).length > 0;\n  }\n\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../events.js\").Listener} listener Listener.\n   */\n  removeEventListener(type, listener) {\n    if (!this.listeners_) {\n      return;\n    }\n    const listeners = this.listeners_[type];\n    if (!listeners) {\n      return;\n    }\n    const index = listeners.indexOf(listener);\n    if (index !== -1) {\n      if (this.pendingRemovals_ && type in this.pendingRemovals_) {\n        // make listener a no-op, and remove later in #dispatchEvent()\n        listeners[index] = VOID;\n        ++this.pendingRemovals_[type];\n      } else {\n        listeners.splice(index, 1);\n        if (listeners.length === 0) {\n          delete this.listeners_[type];\n        }\n      }\n    }\n  }\n}\n\nexport default Target;\n","/**\n * @module ol/events\n */\nimport {clear} from './obj.js';\n\n/**\n * Key to use with {@link module:ol/Observable.unByKey}.\n * @typedef {Object} EventsKey\n * @property {ListenerFunction} listener Listener.\n * @property {import(\"./events/Target.js\").EventTargetLike} target Target.\n * @property {string} type Type.\n * @api\n */\n\n/**\n * Listener function. This function is called with an event object as argument.\n * When the function returns `false`, event propagation will stop.\n *\n * @typedef {function((Event|import(\"./events/Event.js\").default)): (void|boolean)} ListenerFunction\n * @api\n */\n\n/**\n * @typedef {Object} ListenerObject\n * @property {ListenerFunction} handleEvent HandleEvent listener function.\n */\n\n/**\n * @typedef {ListenerFunction|ListenerObject} Listener\n */\n\n/**\n * Registers an event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` to a `this` object, and returns\n * a key for use with {@link module:ol/events.unlistenByKey}.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @param {boolean} [once] If true, add the listener as one-off listener.\n * @return {EventsKey} Unique key for the listener.\n */\nexport function listen(target, type, listener, thisArg, once) {\n  if (once) {\n    const originalListener = listener;\n    /**\n     * @param {Event|import('./events/Event.js').default} event The event\n     * @return {void|boolean} When the function returns `false`, event propagation will stop.\n     * @this {typeof target}\n     */\n    listener = function (event) {\n      target.removeEventListener(type, listener);\n      return originalListener.call(thisArg ?? this, event);\n    };\n  } else if (thisArg && thisArg !== target) {\n    listener = listener.bind(thisArg);\n  }\n  const eventsKey = {\n    target: target,\n    type: type,\n    listener: listener,\n  };\n  target.addEventListener(type, listener);\n  return eventsKey;\n}\n\n/**\n * Registers a one-off event listener on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * This function efficiently binds a `listener` as self-unregistering listener\n * to a `this` object, and returns a key for use with\n * {@link module:ol/events.unlistenByKey} in case the listener needs to be\n * unregistered before it is called.\n *\n * When {@link module:ol/events.listen} is called with the same arguments after this\n * function, the self-unregistering listener will be turned into a permanent\n * listener.\n *\n * @param {import(\"./events/Target.js\").EventTargetLike} target Event target.\n * @param {string} type Event type.\n * @param {ListenerFunction} listener Listener.\n * @param {Object} [thisArg] Object referenced by the `this` keyword in the\n *     listener. Default is the `target`.\n * @return {EventsKey} Key for unlistenByKey.\n */\nexport function listenOnce(target, type, listener, thisArg) {\n  return listen(target, type, listener, thisArg, true);\n}\n\n/**\n * Unregisters event listeners on an event target. Inspired by\n * https://google.github.io/closure-library/api/source/closure/goog/events/events.js.src.html\n *\n * The argument passed to this function is the key returned from\n * {@link module:ol/events.listen} or {@link module:ol/events.listenOnce}.\n *\n * @param {EventsKey} key The key.\n */\nexport function unlistenByKey(key) {\n  if (key && key.target) {\n    key.target.removeEventListener(key.type, key.listener);\n    clear(key);\n  }\n}\n","/**\n * @module ol/Observable\n */\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listen, listenOnce, unlistenByKey} from './events.js';\n\n/***\n * @template {string} Type\n * @template {Event|import(\"./events/Event.js\").default} EventClass\n * @template Return\n * @typedef {(type: Type, listener: (event: EventClass) => ?) => Return} OnSignature\n */\n\n/***\n * @template {string} Type\n * @template Return\n * @typedef {(type: Type[], listener: (event: Event|import(\"./events/Event\").default) => ?) => Return extends void ? void : Return[]} CombinedOnSignature\n */\n\n/**\n * @typedef {'change'|'error'} EventTypes\n */\n\n/***\n * @template Return\n * @typedef {OnSignature<EventTypes, import(\"./events/Event.js\").default, Return> & CombinedOnSignature<EventTypes, Return>} ObservableOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * An event target providing convenient methods for listener registration\n * and unregistration. A generic `change` event is always available through\n * {@link module:ol/Observable~Observable#changed}.\n *\n * @fires import(\"./events/Event.js\").default\n * @api\n */\nclass Observable extends EventTarget {\n  constructor() {\n    super();\n\n    this.on =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onInternal\n      );\n\n    this.once =\n      /** @type {ObservableOnSignature<import(\"./events\").EventsKey>} */ (\n        this.onceInternal\n      );\n\n    this.un = /** @type {ObservableOnSignature<void>} */ (this.unInternal);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.revision_ = 0;\n  }\n\n  /**\n   * Increases the revision counter and dispatches a 'change' event.\n   * @api\n   */\n  changed() {\n    ++this.revision_;\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Get the version number for this object.  Each time the object is modified,\n   * its version number will be incremented.\n   * @return {number} Revision.\n   * @api\n   */\n  getRevision() {\n    return this.revision_;\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onInternal(type, listener) {\n    if (Array.isArray(type)) {\n      const len = type.length;\n      const keys = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        keys[i] = listen(this, type[i], listener);\n      }\n      return keys;\n    }\n    return listen(this, /** @type {string} */ (type), listener);\n  }\n\n  /**\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Event key.\n   * @protected\n   */\n  onceInternal(type, listener) {\n    let key;\n    if (Array.isArray(type)) {\n      const len = type.length;\n      key = new Array(len);\n      for (let i = 0; i < len; ++i) {\n        key[i] = listenOnce(this, type[i], listener);\n      }\n    } else {\n      key = listenOnce(this, /** @type {string} */ (type), listener);\n    }\n    /** @type {Object} */ (listener).ol_key = key;\n    return key;\n  }\n\n  /**\n   * Unlisten for a certain type of event.\n   * @param {string|Array<string>} type Type.\n   * @param {function((Event|import(\"./events/Event\").default)): ?} listener Listener.\n   * @protected\n   */\n  unInternal(type, listener) {\n    const key = /** @type {Object} */ (listener).ol_key;\n    if (key) {\n      unByKey(key);\n    } else if (Array.isArray(type)) {\n      for (let i = 0, ii = type.length; i < ii; ++i) {\n        this.removeEventListener(type[i], listener);\n      }\n    } else {\n      this.removeEventListener(type, listener);\n    }\n  }\n}\n\n/**\n * Listen for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.on;\n\n/**\n * Listen once for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @return {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} Unique key for the listener. If\n *     called with an array of event types as the first argument, the return\n *     will be an array of keys.\n * @api\n */\nObservable.prototype.once;\n\n/**\n * Unlisten for a certain type of event.\n * @function\n * @param {string|Array<string>} type The event type or array of event types.\n * @param {function((Event|import(\"./events/Event\").default)): ?} listener The listener function.\n * @api\n */\nObservable.prototype.un;\n\n/**\n * Removes an event listener using the key returned by `on()` or `once()`.\n * @param {import(\"./events.js\").EventsKey|Array<import(\"./events.js\").EventsKey>} key The key returned by `on()`\n *     or `once()` (or an array of keys).\n * @api\n */\nexport function unByKey(key) {\n  if (Array.isArray(key)) {\n    for (let i = 0, ii = key.length; i < ii; ++i) {\n      unlistenByKey(key[i]);\n    }\n  } else {\n    unlistenByKey(/** @type {import(\"./events.js\").EventsKey} */ (key));\n  }\n}\n\nexport default Observable;\n","/**\n * @module ol/util\n */\n\n/**\n * @return {never} Any return.\n */\nexport function abstract() {\n  throw new Error('Unimplemented abstract method.');\n}\n\n/**\n * Counter for getUid.\n * @type {number}\n * @private\n */\nlet uidCounter_ = 0;\n\n/**\n * Gets a unique ID for an object. This mutates the object so that further calls\n * with the same object as a parameter returns the same value. Unique IDs are generated\n * as a strictly increasing sequence. Adapted from goog.getUid.\n *\n * @param {Object} obj The object to get the unique ID for.\n * @return {string} The unique ID for the object.\n * @api\n */\nexport function getUid(obj) {\n  return obj.ol_uid || (obj.ol_uid = String(++uidCounter_));\n}\n\n/**\n * OpenLayers version.\n * @type {string}\n */\nexport const VERSION = '10.6.1';\n","/**\n * @module ol/Object\n */\nimport ObjectEventType from './ObjectEventType.js';\nimport Observable from './Observable.js';\nimport Event from './events/Event.js';\nimport {isEmpty} from './obj.js';\nimport {getUid} from './util.js';\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Object~BaseObject} instances are instances of this type.\n */\nexport class ObjectEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {string} key The property name.\n   * @param {*} oldValue The old value for `key`.\n   */\n  constructor(type, key, oldValue) {\n    super(type);\n\n    /**\n     * The name of the property whose value is changing.\n     * @type {string}\n     * @api\n     */\n    this.key = key;\n\n    /**\n     * The old value. To get the new value use `e.target.get(e.key)` where\n     * `e` is the event object.\n     * @type {*}\n     * @api\n     */\n    this.oldValue = oldValue;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types, ObjectEvent, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types, Return>} ObjectOnSignature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Most non-trivial classes inherit from this.\n *\n * This extends {@link module:ol/Observable~Observable} with observable\n * properties, where each property is observable as well as the object as a\n * whole.\n *\n * Classes that inherit from this have pre-defined properties, to which you can\n * add your owns. The pre-defined properties are listed in this documentation as\n * 'Observable Properties', and have their own accessors; for example,\n * {@link module:ol/Map~Map} has a `target` property, accessed with\n * `getTarget()` and changed with `setTarget()`. Not all properties are however\n * settable. There are also general-purpose accessors `get()` and `set()`. For\n * example, `get('target')` is equivalent to `getTarget()`.\n *\n * The `set` accessors trigger a change event, and you can monitor this by\n * registering a listener. For example, {@link module:ol/View~View} has a\n * `center` property, so `view.on('change:center', function(evt) {...});` would\n * call the function whenever the value of the center property changes. Within\n * the function, `evt.target` would be the view, so `evt.target.getCenter()`\n * would return the new center.\n *\n * You can add your own observable properties with\n * `object.set('prop', 'value')`, and retrieve that with `object.get('prop')`.\n * You can listen for changes on that property value with\n * `object.on('change:prop', listener)`. You can get a list of all\n * properties with {@link module:ol/Object~BaseObject#getProperties}.\n *\n * Note that the observable properties are separate from standard JS properties.\n * You can, for example, give your map object a title with\n * `map.title='New title'` and with `map.set('title', 'Another title')`. The\n * first will be a `hasOwnProperty`; the second will appear in\n * `getProperties()`. Only the second is observable.\n *\n * Properties can be deleted by using the unset method. E.g.\n * object.unset('foo').\n *\n * @fires ObjectEvent\n * @api\n */\nclass BaseObject extends Observable {\n  /**\n   * @param {Object<string, *>} [values] An object with key-value pairs.\n   */\n  constructor(values) {\n    super();\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ObjectOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ObjectOnSignature<void>}\n     */\n    this.un;\n\n    // Call {@link module:ol/util.getUid} to ensure that the order of objects' ids is\n    // the same as the order in which they were created.  This also helps to\n    // ensure that object properties are always added in the same order, which\n    // helps many JavaScript engines generate faster code.\n    getUid(this);\n\n    /**\n     * @private\n     * @type {Object<string, *>|null}\n     */\n    this.values_ = null;\n\n    if (values !== undefined) {\n      this.setProperties(values);\n    }\n  }\n\n  /**\n   * Gets a value.\n   * @param {string} key Key name.\n   * @return {*} Value.\n   * @api\n   */\n  get(key) {\n    let value;\n    if (this.values_ && this.values_.hasOwnProperty(key)) {\n      value = this.values_[key];\n    }\n    return value;\n  }\n\n  /**\n   * Get a list of object property names.\n   * @return {Array<string>} List of property names.\n   * @api\n   */\n  getKeys() {\n    return (this.values_ && Object.keys(this.values_)) || [];\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>} Object.\n   * @api\n   */\n  getProperties() {\n    return (this.values_ && Object.assign({}, this.values_)) || {};\n  }\n\n  /**\n   * Get an object of all property names and values.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.values_;\n  }\n\n  /**\n   * @return {boolean} The object has properties.\n   */\n  hasProperties() {\n    return !!this.values_;\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {*} oldValue Old value.\n   */\n  notify(key, oldValue) {\n    let eventType;\n    eventType = `change:${key}`;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n    eventType = ObjectEventType.PROPERTYCHANGE;\n    if (this.hasListener(eventType)) {\n      this.dispatchEvent(new ObjectEvent(eventType, key, oldValue));\n    }\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  addChangeListener(key, listener) {\n    this.addEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * @param {string} key Key name.\n   * @param {import(\"./events.js\").Listener} listener Listener.\n   */\n  removeChangeListener(key, listener) {\n    this.removeEventListener(`change:${key}`, listener);\n  }\n\n  /**\n   * Sets a value.\n   * @param {string} key Key name.\n   * @param {*} value Value.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  set(key, value, silent) {\n    const values = this.values_ || (this.values_ = {});\n    if (silent) {\n      values[key] = value;\n    } else {\n      const oldValue = values[key];\n      values[key] = value;\n      if (oldValue !== value) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n\n  /**\n   * Sets a collection of key-value pairs.  Note that this changes any existing\n   * properties and adds new ones (it does not remove any existing properties).\n   * @param {Object<string, *>} values Values.\n   * @param {boolean} [silent] Update without triggering an event.\n   * @api\n   */\n  setProperties(values, silent) {\n    for (const key in values) {\n      this.set(key, values[key], silent);\n    }\n  }\n\n  /**\n   * Apply any properties from another object without triggering events.\n   * @param {BaseObject} source The source object.\n   * @protected\n   */\n  applyProperties(source) {\n    if (!source.values_) {\n      return;\n    }\n    Object.assign(this.values_ || (this.values_ = {}), source.values_);\n  }\n\n  /**\n   * Unsets a property.\n   * @param {string} key Key name.\n   * @param {boolean} [silent] Unset without triggering an event.\n   * @api\n   */\n  unset(key, silent) {\n    if (this.values_ && key in this.values_) {\n      const oldValue = this.values_[key];\n      delete this.values_[key];\n      if (isEmpty(this.values_)) {\n        this.values_ = null;\n      }\n      if (!silent) {\n        this.notify(key, oldValue);\n      }\n    }\n  }\n}\n\nexport default BaseObject;\n","/**\n * @module ol/asserts\n */\n\n/**\n * @param {*} assertion Assertion we expected to be truthy.\n * @param {string} errorMessage Error message.\n */\nexport function assert(assertion, errorMessage) {\n  if (!assertion) {\n    throw new Error(errorMessage);\n  }\n}\n","/**\n * @module ol/Feature\n */\nimport BaseObject from './Object.js';\nimport {assert} from './asserts.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\n\n/**\n * @typedef {typeof Feature|typeof import(\"./render/Feature.js\").default} FeatureClass\n */\n\n/**\n * @typedef {Feature|import(\"./render/Feature.js\").default} FeatureLike\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:geometry', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types\n *     |'change:geometry', Return>} FeatureOnSignature\n */\n\n/***\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n * @typedef {Object<string, *> & { geometry?: Geometry }} ObjectWithGeometry\n */\n\n/**\n * @classdesc\n * A vector object for geographic features with a geometry and other\n * attribute properties, similar to the features in vector file formats like\n * GeoJSON.\n *\n * Features can be styled individually with `setStyle`; otherwise they use the\n * style of their vector layer.\n *\n * Note that attribute properties are set as {@link module:ol/Object~BaseObject} properties on\n * the feature object, so they are observable, and have get/set accessors.\n *\n * Typically, a feature has a single geometry property. You can set the\n * geometry using the `setGeometry` method and get it with `getGeometry`.\n * It is possible to store more than one geometry on a feature using attribute\n * properties. By default, the geometry used for rendering is identified by\n * the property name `geometry`. If you want to use another geometry property\n * for rendering, use the `setGeometryName` method to change the attribute\n * property associated with the geometry for the feature.  For example:\n *\n * ```js\n *\n * import Feature from 'ol/Feature.js';\n * import Polygon from 'ol/geom/Polygon.js';\n * import Point from 'ol/geom/Point.js';\n *\n * const feature = new Feature({\n *   geometry: new Polygon(polyCoords),\n *   labelPoint: new Point(labelCoords),\n *   name: 'My Polygon',\n * });\n *\n * // get the polygon geometry\n * const poly = feature.getGeometry();\n *\n * // Render the feature as a point using the coordinates from labelPoint\n * feature.setGeometryName('labelPoint');\n *\n * // get the point geometry\n * const point = feature.getGeometry();\n * ```\n *\n * @api\n * @template {import(\"./geom/Geometry.js\").default} [Geometry=import(\"./geom/Geometry.js\").default]\n */\nclass Feature extends BaseObject {\n  /**\n   * @param {Geometry|ObjectWithGeometry<Geometry>} [geometryOrProperties]\n   *     You may pass a Geometry object directly, or an object literal containing\n   *     properties. If you pass an object literal, you may include a Geometry\n   *     associated with a `geometry` key.\n   */\n  constructor(geometryOrProperties) {\n    super();\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {FeatureOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {FeatureOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = undefined;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.geometryName_ = 'geometry';\n\n    /**\n     * User provided style.\n     * @private\n     * @type {import(\"./style/Style.js\").StyleLike}\n     */\n    this.style_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction_ = undefined;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.geometryChangeKey_ = null;\n\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n\n    if (geometryOrProperties) {\n      if (\n        typeof (\n          /** @type {?} */ (geometryOrProperties).getSimplifiedGeometry\n        ) === 'function'\n      ) {\n        const geometry = /** @type {Geometry} */ (geometryOrProperties);\n        this.setGeometry(geometry);\n      } else {\n        /** @type {Object<string, *>} */\n        const properties = geometryOrProperties;\n        this.setProperties(properties);\n      }\n    }\n  }\n\n  /**\n   * Clone this feature. If the original feature has a geometry it\n   * is also cloned. The feature id is not set in the clone.\n   * @return {Feature<Geometry>} The clone.\n   * @api\n   */\n  clone() {\n    const clone = /** @type {Feature<Geometry>} */ (\n      new Feature(this.hasProperties() ? this.getProperties() : null)\n    );\n    clone.setGeometryName(this.getGeometryName());\n    const geometry = this.getGeometry();\n    if (geometry) {\n      clone.setGeometry(/** @type {Geometry} */ (geometry.clone()));\n    }\n    const style = this.getStyle();\n    if (style) {\n      clone.setStyle(style);\n    }\n    return clone;\n  }\n\n  /**\n   * Get the feature's default geometry.  A feature may have any number of named\n   * geometries.  The \"default\" geometry (the one that is rendered by default) is\n   * set when calling {@link module:ol/Feature~Feature#setGeometry}.\n   * @return {Geometry|undefined} The default geometry for the feature.\n   * @api\n   * @observable\n   */\n  getGeometry() {\n    return /** @type {Geometry|undefined} */ (this.get(this.geometryName_));\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is either set when reading data from a remote source or set explicitly by\n   * calling {@link module:ol/Feature~Feature#setId}.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * Get the name of the feature's default geometry.  By default, the default\n   * geometry is named `geometry`.\n   * @return {string} Get the property name associated with the default geometry\n   *     for this feature.\n   * @api\n   */\n  getGeometryName() {\n    return this.geometryName_;\n  }\n\n  /**\n   * Get the feature's style. Will return what was provided to the\n   * {@link module:ol/Feature~Feature#setStyle} method.\n   * @return {import(\"./style/Style.js\").StyleLike|undefined} The feature style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the feature's style function.\n   * @return {import(\"./style/Style.js\").StyleFunction|undefined} Return a function\n   * representing the current style of this feature.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleGeometryChanged_() {\n    if (this.geometryChangeKey_) {\n      unlistenByKey(this.geometryChangeKey_);\n      this.geometryChangeKey_ = null;\n    }\n    const geometry = this.getGeometry();\n    if (geometry) {\n      this.geometryChangeKey_ = listen(\n        geometry,\n        EventType.CHANGE,\n        this.handleGeometryChange_,\n        this,\n      );\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the default geometry for the feature.  This will update the property\n   * with the name returned by {@link module:ol/Feature~Feature#getGeometryName}.\n   * @param {Geometry|undefined} geometry The new geometry.\n   * @api\n   * @observable\n   */\n  setGeometry(geometry) {\n    this.set(this.geometryName_, geometry);\n  }\n\n  /**\n   * Set the style for the feature to override the layer style.  This can be a\n   * single style object, an array of styles, or a function that takes a\n   * resolution and returns an array of styles. To unset the feature style, call\n   * `setStyle()` without arguments or a falsey value.\n   * @param {import(\"./style/Style.js\").StyleLike} [style] Style for this feature.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setStyle(style) {\n    this.style_ = style;\n    this.styleFunction_ = !style ? undefined : createStyleFunction(style);\n    this.changed();\n  }\n\n  /**\n   * Set the feature id.  The feature id is considered stable and may be used when\n   * requesting features or comparing identifiers returned from a remote source.\n   * The feature id can be used with the\n   * {@link module:ol/source/Vector~VectorSource#getFeatureById} method.\n   * @param {number|string|undefined} id The feature id.\n   * @api\n   * @fires module:ol/events/Event~BaseEvent#event:change\n   */\n  setId(id) {\n    this.id_ = id;\n    this.changed();\n  }\n\n  /**\n   * Set the property name to be used when getting the feature's default geometry.\n   * When calling {@link module:ol/Feature~Feature#getGeometry}, the value of the property with\n   * this name will be returned.\n   * @param {string} name The property name of the default geometry.\n   * @api\n   */\n  setGeometryName(name) {\n    this.removeChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.geometryName_ = name;\n    this.addChangeListener(this.geometryName_, this.handleGeometryChanged_);\n    this.handleGeometryChanged_();\n  }\n}\n\n/**\n * Convert the provided object into a feature style function.  Functions passed\n * through unchanged.  Arrays of Style or single style objects wrapped\n * in a new feature style function.\n * @param {!import(\"./style/Style.js\").StyleFunction|!Array<import(\"./style/Style.js\").default>|!import(\"./style/Style.js\").default} obj\n *     A feature style function, a single style, or an array of styles.\n * @return {import(\"./style/Style.js\").StyleFunction} A style function.\n */\nexport function createStyleFunction(obj) {\n  if (typeof obj === 'function') {\n    return obj;\n  }\n  /**\n   * @type {Array<import(\"./style/Style.js\").default>}\n   */\n  let styles;\n  if (Array.isArray(obj)) {\n    styles = obj;\n  } else {\n    assert(\n      typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n      'Expected an `ol/style/Style` or an array of `ol/style/Style.js`',\n    );\n    const style = /** @type {import(\"./style/Style.js\").default} */ (obj);\n    styles = [style];\n  }\n  return function () {\n    return styles;\n  };\n}\nexport default Feature;\n","/**\n * @module ol/CollectionEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when an item is added to the collection.\n   * @event module:ol/Collection.CollectionEvent#add\n   * @api\n   */\n  ADD: 'add',\n  /**\n   * Triggered when an item is removed from the collection.\n   * @event module:ol/Collection.CollectionEvent#remove\n   * @api\n   */\n  REMOVE: 'remove',\n};\n","/**\n * @module ol/Collection\n */\nimport CollectionEventType from './CollectionEventType.js';\nimport BaseObject from './Object.js';\nimport Event from './events/Event.js';\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LENGTH: 'length',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/Collection~Collection} instances are instances of this\n * type.\n * @template T\n */\nexport class CollectionEvent extends Event {\n  /**\n   * @param {import(\"./CollectionEventType.js\").default} type Type.\n   * @param {T} element Element.\n   * @param {number} index The index of the added or removed element.\n   */\n  constructor(type, element, index) {\n    super(type);\n\n    /**\n     * The element that is added to or removed from the collection.\n     * @type {T}\n     * @api\n     */\n    this.element = element;\n\n    /**\n     * The index of the added or removed element.\n     * @type {number}\n     * @api\n     */\n    this.index = index;\n  }\n}\n\n/***\n * @template T\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<import(\"./ObjectEventType\").Types|'change:length', import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").OnSignature<'add'|'remove', CollectionEvent<T>, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|import(\"./ObjectEventType\").Types|\n *     'change:length'|'add'|'remove',Return>} CollectionOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {boolean} [unique=false] Disallow the same item from being added to\n * the collection twice.\n */\n\n/**\n * @classdesc\n * An expanded version of standard JS Array, adding convenience methods for\n * manipulation. Add and remove changes to the Collection trigger a Collection\n * event. Note that this does not cover changes to the objects _within_ the\n * Collection; they trigger events on the appropriate object, not on the\n * Collection as a whole.\n *\n * @fires CollectionEvent\n *\n * @template T\n * @api\n */\nclass Collection extends BaseObject {\n  /**\n   * @param {Array<T>} [array] Array.\n   * @param {Options} [options] Collection options.\n   */\n  constructor(array, options) {\n    super();\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {CollectionOnSignature<T, import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {CollectionOnSignature<T, void>}\n     */\n    this.un;\n\n    options = options || {};\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.unique_ = !!options.unique;\n\n    /**\n     * @private\n     * @type {!Array<T>}\n     */\n    this.array_ = array ? array : [];\n\n    if (this.unique_) {\n      for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n        this.assertUnique_(this.array_[i], i);\n      }\n    }\n\n    this.updateLength_();\n  }\n\n  /**\n   * Remove all elements from the collection.\n   * @api\n   */\n  clear() {\n    while (this.getLength() > 0) {\n      this.pop();\n    }\n  }\n\n  /**\n   * Add elements to the collection.  This pushes each item in the provided array\n   * to the end of the collection.\n   * @param {!Array<T>} arr Array.\n   * @return {Collection<T>} This collection.\n   * @api\n   */\n  extend(arr) {\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      this.push(arr[i]);\n    }\n    return this;\n  }\n\n  /**\n   * Iterate over each element, calling the provided callback.\n   * @param {function(T, number, Array<T>): *} f The function to call\n   *     for every element. This function takes 3 arguments (the element, the\n   *     index and the array). The return value is ignored.\n   * @api\n   */\n  forEach(f) {\n    const array = this.array_;\n    for (let i = 0, ii = array.length; i < ii; ++i) {\n      f(array[i], i, array);\n    }\n  }\n\n  /**\n   * Get a reference to the underlying Array object. Warning: if the array\n   * is mutated, no events will be dispatched by the collection, and the\n   * collection's \"length\" property won't be in sync with the actual length\n   * of the array.\n   * @return {!Array<T>} Array.\n   * @api\n   */\n  getArray() {\n    return this.array_;\n  }\n\n  /**\n   * Get the element at the provided index.\n   * @param {number} index Index.\n   * @return {T} Element.\n   * @api\n   */\n  item(index) {\n    return this.array_[index];\n  }\n\n  /**\n   * Get the length of this collection.\n   * @return {number} The length of the array.\n   * @observable\n   * @api\n   */\n  getLength() {\n    return this.get(Property.LENGTH);\n  }\n\n  /**\n   * Insert an element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  insertAt(index, elem) {\n    if (index < 0 || index > this.getLength()) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    this.array_.splice(index, 0, elem);\n    this.updateLength_();\n    this.dispatchEvent(\n      new CollectionEvent(CollectionEventType.ADD, elem, index),\n    );\n  }\n\n  /**\n   * Remove the last element of the collection and return it.\n   * Return `undefined` if the collection is empty.\n   * @return {T|undefined} Element.\n   * @api\n   */\n  pop() {\n    return this.removeAt(this.getLength() - 1);\n  }\n\n  /**\n   * Insert the provided element at the end of the collection.\n   * @param {T} elem Element.\n   * @return {number} New length of the collection.\n   * @api\n   */\n  push(elem) {\n    if (this.unique_) {\n      this.assertUnique_(elem);\n    }\n    const n = this.getLength();\n    this.insertAt(n, elem);\n    return this.getLength();\n  }\n\n  /**\n   * Remove the first occurrence of an element from the collection.\n   * @param {T} elem Element.\n   * @return {T|undefined} The removed element or undefined if none found.\n   * @api\n   */\n  remove(elem) {\n    const arr = this.array_;\n    for (let i = 0, ii = arr.length; i < ii; ++i) {\n      if (arr[i] === elem) {\n        return this.removeAt(i);\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * Remove the element at the provided index and return it.\n   * Return `undefined` if the collection does not contain this index.\n   * @param {number} index Index.\n   * @return {T|undefined} Value.\n   * @api\n   */\n  removeAt(index) {\n    if (index < 0 || index >= this.getLength()) {\n      return undefined;\n    }\n    const prev = this.array_[index];\n    this.array_.splice(index, 1);\n    this.updateLength_();\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    return prev;\n  }\n\n  /**\n   * Set the element at the provided index.\n   * @param {number} index Index.\n   * @param {T} elem Element.\n   * @api\n   */\n  setAt(index, elem) {\n    const n = this.getLength();\n    if (index >= n) {\n      this.insertAt(index, elem);\n      return;\n    }\n    if (index < 0) {\n      throw new Error('Index out of bounds: ' + index);\n    }\n    if (this.unique_) {\n      this.assertUnique_(elem, index);\n    }\n    const prev = this.array_[index];\n    this.array_[index] = elem;\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.REMOVE, prev, index)\n      ),\n    );\n    this.dispatchEvent(\n      /** @type {CollectionEvent<T>} */ (\n        new CollectionEvent(CollectionEventType.ADD, elem, index)\n      ),\n    );\n  }\n\n  /**\n   * @private\n   */\n  updateLength_() {\n    this.set(Property.LENGTH, this.array_.length);\n  }\n\n  /**\n   * @private\n   * @param {T} elem Element.\n   * @param {number} [except] Optional index to ignore.\n   */\n  assertUnique_(elem, except) {\n    for (let i = 0, ii = this.array_.length; i < ii; ++i) {\n      if (this.array_[i] === elem && i !== except) {\n        throw new Error('Duplicate item added to a unique collection');\n      }\n    }\n  }\n}\n\nexport default Collection;\n","/**\n * @module ol/MapEvent\n */\nimport Event from './events/Event.js';\n\n/**\n * @classdesc\n * Events emitted as map events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map event.\n */\nclass MapEvent extends Event {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {?import(\"./Map.js\").FrameState} [frameState] Frame state.\n   */\n  constructor(type, map, frameState) {\n    super(type);\n\n    /**\n     * The map where the event occurred.\n     * @type {import(\"./Map.js\").default}\n     * @api\n     */\n    this.map = map;\n\n    /**\n     * The frame state at the time of the event.\n     * @type {?import(\"./Map.js\").FrameState}\n     * @api\n     */\n    this.frameState = frameState !== undefined ? frameState : null;\n  }\n}\n\nexport default MapEvent;\n","/**\n * @module ol/MapBrowserEvent\n */\nimport MapEvent from './MapEvent.js';\n\n/**\n * @classdesc\n * Events emitted as map browser events are instances of this type.\n * See {@link module:ol/Map~Map} for which events trigger a map browser event.\n * @template {PointerEvent|KeyboardEvent|WheelEvent} [EVENT=PointerEvent|KeyboardEvent|WheelEvent]\n */\nclass MapBrowserEvent extends MapEvent {\n  /**\n   * @param {string} type Event type.\n   * @param {import(\"./Map.js\").default} map Map.\n   * @param {EVENT} originalEvent Original event.\n   * @param {boolean} [dragging] Is the map currently being dragged?\n   * @param {import(\"./Map.js\").FrameState} [frameState] Frame state.\n   * @param {Array<PointerEvent>} [activePointers] Active pointers.\n   */\n  constructor(type, map, originalEvent, dragging, frameState, activePointers) {\n    super(type, map, frameState);\n\n    /**\n     * The original browser event.\n     * @const\n     * @type {EVENT}\n     * @api\n     */\n    this.originalEvent = originalEvent;\n\n    /**\n     * The map pixel relative to the viewport corresponding to the original browser event.\n     * @type {?import(\"./pixel.js\").Pixel}\n     * @private\n     */\n    this.pixel_ = null;\n\n    /**\n     * The coordinate in the user projection corresponding to the original browser event.\n     * @type {?import(\"./coordinate.js\").Coordinate}\n     * @private\n     */\n    this.coordinate_ = null;\n\n    /**\n     * Indicates if the map is currently being dragged. Only set for\n     * `POINTERDRAG` and `POINTERMOVE` events. Default is `false`.\n     *\n     * @type {boolean}\n     * @api\n     */\n    this.dragging = dragging !== undefined ? dragging : false;\n\n    /**\n     * @type {Array<PointerEvent>|undefined}\n     */\n    this.activePointers = activePointers;\n  }\n\n  /**\n   * The map pixel relative to the viewport corresponding to the original event.\n   * @type {import(\"./pixel.js\").Pixel}\n   * @api\n   */\n  get pixel() {\n    if (!this.pixel_) {\n      this.pixel_ = this.map.getEventPixel(this.originalEvent);\n    }\n    return this.pixel_;\n  }\n  set pixel(pixel) {\n    this.pixel_ = pixel;\n  }\n\n  /**\n   * The coordinate corresponding to the original browser event.  This will be in the user\n   * projection if one is set.  Otherwise it will be in the view projection.\n   * @type {import(\"./coordinate.js\").Coordinate}\n   * @api\n   */\n  get coordinate() {\n    if (!this.coordinate_) {\n      this.coordinate_ = this.map.getCoordinateFromPixel(this.pixel);\n    }\n    return this.coordinate_;\n  }\n  set coordinate(coordinate) {\n    this.coordinate_ = coordinate;\n  }\n\n  /**\n   * Prevents the default browser action.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.preventDefault.\n   * @api\n   * @override\n   */\n  preventDefault() {\n    super.preventDefault();\n    if ('preventDefault' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).preventDefault();\n    }\n  }\n\n  /**\n   * Prevents further propagation of the current event.\n   * See https://developer.mozilla.org/en-US/docs/Web/API/event.stopPropagation.\n   * @api\n   * @override\n   */\n  stopPropagation() {\n    super.stopPropagation();\n    if ('stopPropagation' in this.originalEvent) {\n      /** @type {UIEvent} */ (this.originalEvent).stopPropagation();\n    }\n  }\n}\n\nexport default MapBrowserEvent;\n","/**\n * @module ol/MapBrowserEventType\n */\nimport EventType from './events/EventType.js';\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  /**\n   * A true single click with no dragging and no double click. Note that this\n   * event is delayed by 250 ms to ensure that it is not a double click.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#singleclick\n   * @api\n   */\n  SINGLECLICK: 'singleclick',\n\n  /**\n   * A click with no dragging. A double click will fire two of this.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#click\n   * @api\n   */\n  CLICK: EventType.CLICK,\n\n  /**\n   * A true double click, with no dragging.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#dblclick\n   * @api\n   */\n  DBLCLICK: EventType.DBLCLICK,\n\n  /**\n   * Triggered when a pointer is dragged.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointerdrag\n   * @api\n   */\n  POINTERDRAG: 'pointerdrag',\n\n  /**\n   * Triggered when a pointer is moved. Note that on touch devices this is\n   * triggered when the map is panned, so is not the same as mousemove.\n   * @event module:ol/MapBrowserEvent~MapBrowserEvent#pointermove\n   * @api\n   */\n  POINTERMOVE: 'pointermove',\n\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n\n/***\n * @typedef {'singleclick'|'click'|'dblclick'|'pointerdrag'|'pointermove'} Types\n */\n","/**\n * @module ol/has\n */\n\nconst ua =\n  typeof navigator !== 'undefined' && typeof navigator.userAgent !== 'undefined'\n    ? navigator.userAgent.toLowerCase()\n    : '';\n\n/**\n * User agent string says we are dealing with Safari as browser.\n * @type {boolean}\n */\nexport const SAFARI = ua.includes('safari') && !ua.includes('chrom');\n\n/**\n * https://bugs.webkit.org/show_bug.cgi?id=237906\n * @type {boolean}\n */\nexport const SAFARI_BUG_237906 =\n  SAFARI &&\n  (ua.includes('version/15.4') ||\n    /cpu (os|iphone os) 15_4 like mac os x/.test(ua));\n\n/**\n * User agent string says we are dealing with a WebKit engine.\n * @type {boolean}\n */\nexport const WEBKIT = ua.includes('webkit') && !ua.includes('edge');\n\n/**\n * User agent string says we are dealing with a Mac as platform.\n * @type {boolean}\n */\nexport const MAC = ua.includes('macintosh');\n\n/**\n * The ratio between physical pixels and device-independent pixels\n * (dips) on the device (`window.devicePixelRatio`).\n * @const\n * @type {number}\n * @api\n */\nexport const DEVICE_PIXEL_RATIO =\n  typeof devicePixelRatio !== 'undefined' ? devicePixelRatio : 1;\n\n/**\n * The execution context is a worker with OffscreenCanvas available.\n * @const\n * @type {boolean}\n */\nexport const WORKER_OFFSCREEN_CANVAS =\n  typeof WorkerGlobalScope !== 'undefined' &&\n  typeof OffscreenCanvas !== 'undefined' &&\n  self instanceof WorkerGlobalScope; //eslint-disable-line\n\n/**\n * Image.prototype.decode() is supported.\n * @type {boolean}\n */\nexport const IMAGE_DECODE =\n  typeof Image !== 'undefined' && Image.prototype.decode;\n\n/**\n * createImageBitmap() is supported.\n * @type {boolean}\n */\nexport const CREATE_IMAGE_BITMAP = typeof createImageBitmap === 'function';\n\n/**\n * @type {boolean}\n */\nexport const PASSIVE_EVENT_LISTENERS = (function () {\n  let passive = false;\n  try {\n    const options = Object.defineProperty({}, 'passive', {\n      get: function () {\n        passive = true;\n      },\n    });\n\n    // @ts-ignore Ignore invalid event type '_'\n    window.addEventListener('_', null, options);\n    // @ts-ignore Ignore invalid event type '_'\n    window.removeEventListener('_', null, options);\n  } catch {\n    // passive not supported\n  }\n  return passive;\n})();\n","/**\n * @module ol/pointer/EventType\n */\n\n/**\n * Constants for event names.\n * @enum {string}\n */\nexport default {\n  POINTERMOVE: 'pointermove',\n  POINTERDOWN: 'pointerdown',\n  POINTERUP: 'pointerup',\n  POINTEROVER: 'pointerover',\n  POINTEROUT: 'pointerout',\n  POINTERENTER: 'pointerenter',\n  POINTERLEAVE: 'pointerleave',\n  POINTERCANCEL: 'pointercancel',\n};\n","/**\n * @module ol/MapBrowserEventHandler\n */\n\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport EventType from './events/EventType.js';\nimport Target from './events/Target.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {PASSIVE_EVENT_LISTENERS} from './has.js';\nimport PointerEventType from './pointer/EventType.js';\n\nclass MapBrowserEventHandler extends Target {\n  /**\n   * @param {import(\"./Map.js\").default} map The map with the viewport to listen to events on.\n   * @param {number} [moveTolerance] The minimal distance the pointer must travel to trigger a move.\n   */\n  constructor(map, moveTolerance) {\n    super(map);\n\n    /**\n     * This is the element that we will listen to the real events on.\n     * @type {import(\"./Map.js\").default}\n     * @private\n     */\n    this.map_ = map;\n\n    /**\n     * @type {ReturnType<typeof setTimeout>}\n     * @private\n     */\n    this.clickTimeoutId_;\n\n    /**\n     * Emulate dblclick and singleclick. Will be true when only one pointer is active.\n     * @type {boolean}\n     */\n    this.emulateClicks_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.dragging_ = false;\n\n    /**\n     * @type {!Array<import(\"./events.js\").EventsKey>}\n     * @private\n     */\n    this.dragListenerKeys_ = [];\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.moveTolerance_ = moveTolerance === undefined ? 1 : moveTolerance;\n\n    /**\n     * The most recent \"down\" type event (or null if none have occurred).\n     * Set on pointerdown.\n     * @type {PointerEvent|null}\n     * @private\n     */\n    this.down_ = null;\n\n    const element = this.map_.getViewport();\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @private\n     */\n    this.activePointers_ = [];\n\n    /**\n     * @type {!Object<number, Event>}\n     * @private\n     */\n    this.trackedTouches_ = {};\n\n    /**\n     * @private\n     */\n    this.element_ = element;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.pointerdownListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERDOWN,\n      this.handlePointerDown_,\n      this,\n    );\n\n    /**\n     * @type {PointerEvent}\n     * @private\n     */\n    this.originalPointerMoveEvent_;\n\n    /**\n     * @type {?import(\"./events.js\").EventsKey}\n     * @private\n     */\n    this.relayedListenerKey_ = listen(\n      element,\n      PointerEventType.POINTERMOVE,\n      this.relayMoveEvent_,\n      this,\n    );\n\n    /**\n     * @private\n     */\n    this.boundHandleTouchMove_ = this.handleTouchMove_.bind(this);\n\n    this.element_.addEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n      PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n    );\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  emulateClick_(pointerEvent) {\n    let newEvent = new MapBrowserEvent(\n      MapBrowserEventType.CLICK,\n      this.map_,\n      pointerEvent,\n    );\n    this.dispatchEvent(newEvent);\n    if (this.clickTimeoutId_ !== undefined) {\n      // double-click\n      clearTimeout(this.clickTimeoutId_);\n      this.clickTimeoutId_ = undefined;\n      newEvent = new MapBrowserEvent(\n        MapBrowserEventType.DBLCLICK,\n        this.map_,\n        pointerEvent,\n      );\n      this.dispatchEvent(newEvent);\n    } else {\n      // click\n      this.clickTimeoutId_ = setTimeout(() => {\n        this.clickTimeoutId_ = undefined;\n        const newEvent = new MapBrowserEvent(\n          MapBrowserEventType.SINGLECLICK,\n          this.map_,\n          pointerEvent,\n        );\n        this.dispatchEvent(newEvent);\n      }, 250);\n    }\n  }\n\n  /**\n   * Keeps track on how many pointers are currently active.\n   *\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  updateActivePointers_(pointerEvent) {\n    const event = pointerEvent;\n    const id = event.pointerId;\n\n    if (\n      event.type == MapBrowserEventType.POINTERUP ||\n      event.type == MapBrowserEventType.POINTERCANCEL\n    ) {\n      delete this.trackedTouches_[id];\n      for (const pointerId in this.trackedTouches_) {\n        if (this.trackedTouches_[pointerId].target !== event.target) {\n          // Some platforms assign a new pointerId when the target changes.\n          // If this happens, delete one tracked pointer. If there is more\n          // than one tracked pointer for the old target, it will be cleared\n          // by subsequent POINTERUP events from other pointers.\n          delete this.trackedTouches_[pointerId];\n          break;\n        }\n      }\n    } else if (\n      event.type == MapBrowserEventType.POINTERDOWN ||\n      event.type == MapBrowserEventType.POINTERMOVE\n    ) {\n      this.trackedTouches_[id] = event;\n    }\n    this.activePointers_ = Object.values(this.trackedTouches_);\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerUp_(pointerEvent) {\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERUP,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    // We emulate click events on left mouse button click, touch contact, and pen\n    // contact. isMouseActionButton returns true in these cases (evt.button is set\n    // to 0).\n    // See http://www.w3.org/TR/pointerevents/#button-states\n    // We only fire click, singleclick, and doubleclick if nobody has called\n    // event.preventDefault().\n    if (\n      this.emulateClicks_ &&\n      !newEvent.defaultPrevented &&\n      !this.dragging_ &&\n      this.isMouseActionButton_(pointerEvent)\n    ) {\n      this.emulateClick_(this.down_);\n    }\n\n    if (this.activePointers_.length === 0) {\n      this.dragListenerKeys_.forEach(unlistenByKey);\n      this.dragListenerKeys_.length = 0;\n      this.dragging_ = false;\n      this.down_ = null;\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} If the left mouse button was pressed.\n   * @private\n   */\n  isMouseActionButton_(pointerEvent) {\n    return pointerEvent.button === 0;\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerDown_(pointerEvent) {\n    this.emulateClicks_ = this.activePointers_.length === 0;\n    this.updateActivePointers_(pointerEvent);\n    const newEvent = new MapBrowserEvent(\n      MapBrowserEventType.POINTERDOWN,\n      this.map_,\n      pointerEvent,\n      undefined,\n      undefined,\n      this.activePointers_,\n    );\n    this.dispatchEvent(newEvent);\n\n    this.down_ = new PointerEvent(pointerEvent.type, pointerEvent);\n    Object.defineProperty(this.down_, 'target', {\n      writable: false,\n      value: pointerEvent.target,\n    });\n\n    if (this.dragListenerKeys_.length === 0) {\n      const doc = this.map_.getOwnerDocument();\n      this.dragListenerKeys_.push(\n        listen(\n          doc,\n          MapBrowserEventType.POINTERMOVE,\n          this.handlePointerMove_,\n          this,\n        ),\n        listen(doc, MapBrowserEventType.POINTERUP, this.handlePointerUp_, this),\n        /* Note that the listener for `pointercancel is set up on\n         * `pointerEventHandler_` and not `documentPointerEventHandler_` like\n         * the `pointerup` and `pointermove` listeners.\n         *\n         * The reason for this is the following: `TouchSource.vacuumTouches_()`\n         * issues `pointercancel` events, when there was no `touchend` for a\n         * `touchstart`. Now, let's say a first `touchstart` is registered on\n         * `pointerEventHandler_`. The `documentPointerEventHandler_` is set up.\n         * But `documentPointerEventHandler_` doesn't know about the first\n         * `touchstart`. If there is no `touchend` for the `touchstart`, we can\n         * only receive a `touchcancel` from `pointerEventHandler_`, because it is\n         * only registered there.\n         */\n        listen(\n          this.element_,\n          MapBrowserEventType.POINTERCANCEL,\n          this.handlePointerUp_,\n          this,\n        ),\n      );\n      if (this.element_.getRootNode && this.element_.getRootNode() !== doc) {\n        this.dragListenerKeys_.push(\n          listen(\n            this.element_.getRootNode(),\n            MapBrowserEventType.POINTERUP,\n            this.handlePointerUp_,\n            this,\n          ),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  handlePointerMove_(pointerEvent) {\n    // Between pointerdown and pointerup, pointermove events are triggered.\n    // To avoid a 'false' touchmove event to be dispatched, we test if the pointer\n    // moved a significant distance.\n    if (this.isMoving_(pointerEvent)) {\n      this.updateActivePointers_(pointerEvent);\n      this.dragging_ = true;\n      const newEvent = new MapBrowserEvent(\n        MapBrowserEventType.POINTERDRAG,\n        this.map_,\n        pointerEvent,\n        this.dragging_,\n        undefined,\n        this.activePointers_,\n      );\n      this.dispatchEvent(newEvent);\n    }\n  }\n\n  /**\n   * Wrap and relay a pointermove event.\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @private\n   */\n  relayMoveEvent_(pointerEvent) {\n    this.originalPointerMoveEvent_ = pointerEvent;\n    const dragging = !!(this.down_ && this.isMoving_(pointerEvent));\n    this.dispatchEvent(\n      new MapBrowserEvent(\n        MapBrowserEventType.POINTERMOVE,\n        this.map_,\n        pointerEvent,\n        dragging,\n      ),\n    );\n  }\n\n  /**\n   * Flexible handling of a `touch-action: none` css equivalent: because calling\n   * `preventDefault()` on a `pointermove` event does not stop native page scrolling\n   * and zooming, we also listen for `touchmove` and call `preventDefault()` on it\n   * when an interaction (currently `DragPan` handles the event.\n   * @param {TouchEvent} event Event.\n   * @private\n   */\n  handleTouchMove_(event) {\n    // Due to https://github.com/mpizenberg/elm-pep/issues/2, `this.originalPointerMoveEvent_`\n    // may not be initialized yet when we get here on a platform without native pointer events,\n    // when elm-pep is used as pointer events polyfill.\n    const originalEvent = this.originalPointerMoveEvent_;\n    if (\n      (!originalEvent || originalEvent.defaultPrevented) &&\n      (typeof event.cancelable !== 'boolean' || event.cancelable === true)\n    ) {\n      event.preventDefault();\n    }\n  }\n\n  /**\n   * @param {PointerEvent} pointerEvent Pointer\n   * event.\n   * @return {boolean} Is moving.\n   * @private\n   */\n  isMoving_(pointerEvent) {\n    return (\n      this.dragging_ ||\n      Math.abs(pointerEvent.clientX - this.down_.clientX) >\n        this.moveTolerance_ ||\n      Math.abs(pointerEvent.clientY - this.down_.clientY) > this.moveTolerance_\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.relayedListenerKey_) {\n      unlistenByKey(this.relayedListenerKey_);\n      this.relayedListenerKey_ = null;\n    }\n    this.element_.removeEventListener(\n      EventType.TOUCHMOVE,\n      this.boundHandleTouchMove_,\n    );\n\n    if (this.pointerdownListenerKey_) {\n      unlistenByKey(this.pointerdownListenerKey_);\n      this.pointerdownListenerKey_ = null;\n    }\n\n    this.dragListenerKeys_.forEach(unlistenByKey);\n    this.dragListenerKeys_.length = 0;\n\n    this.element_ = null;\n    super.disposeInternal();\n  }\n}\n\nexport default MapBrowserEventHandler;\n","/**\n * @module ol/MapEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered after a map frame is rendered.\n   * @event module:ol/MapEvent~MapEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered when the map starts moving.\n   * @event module:ol/MapEvent~MapEvent#movestart\n   * @api\n   */\n  MOVESTART: 'movestart',\n\n  /**\n   * Triggered after the map is moved.\n   * @event module:ol/MapEvent~MapEvent#moveend\n   * @api\n   */\n  MOVEEND: 'moveend',\n\n  /**\n   * Triggered when loading of additional map data (tiles, images, features) starts.\n   * @event module:ol/MapEvent~MapEvent#loadstart\n   * @api\n   */\n  LOADSTART: 'loadstart',\n\n  /**\n   * Triggered when loading of additional map data has completed.\n   * @event module:ol/MapEvent~MapEvent#loadend\n   * @api\n   */\n  LOADEND: 'loadend',\n};\n\n/***\n * @typedef {'postrender'|'movestart'|'moveend'|'loadstart'|'loadend'} Types\n */\n","/**\n * @module ol/MapProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  LAYERGROUP: 'layergroup',\n  SIZE: 'size',\n  TARGET: 'target',\n  VIEW: 'view',\n};\n","/**\n * @module ol/structs/PriorityQueue\n */\nimport {assert} from '../asserts.js';\nimport {clear} from '../obj.js';\n\n/**\n * @type {number}\n */\nexport const DROP = Infinity;\n\n/**\n * @classdesc\n * Priority queue.\n *\n * The implementation is inspired from the Closure Library's Heap class and\n * Python's heapq module.\n *\n * See https://github.com/google/closure-library/blob/master/closure/goog/structs/heap.js\n * and https://hg.python.org/cpython/file/2.7/Lib/heapq.py.\n *\n * @template T\n */\nclass PriorityQueue {\n  /**\n   * @param {function(T): number} priorityFunction Priority function.\n   * @param {function(T): string} keyFunction Key function.\n   */\n  constructor(priorityFunction, keyFunction) {\n    /**\n     * @type {function(T): number}\n     * @private\n     */\n    this.priorityFunction_ = priorityFunction;\n\n    /**\n     * @type {function(T): string}\n     * @private\n     */\n    this.keyFunction_ = keyFunction;\n\n    /**\n     * @type {Array<T>}\n     * @private\n     */\n    this.elements_ = [];\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.priorities_ = [];\n\n    /**\n     * @type {!Object<string, boolean>}\n     * @private\n     */\n    this.queuedElements_ = {};\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.elements_.length = 0;\n    this.priorities_.length = 0;\n    clear(this.queuedElements_);\n  }\n\n  /**\n   * Remove and return the highest-priority element. O(log N).\n   * @return {T} Element.\n   */\n  dequeue() {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[0];\n    if (elements.length == 1) {\n      elements.length = 0;\n      priorities.length = 0;\n    } else {\n      elements[0] = /** @type {T} */ (elements.pop());\n      priorities[0] = /** @type {number} */ (priorities.pop());\n      this.siftUp_(0);\n    }\n    const elementKey = this.keyFunction_(element);\n    delete this.queuedElements_[elementKey];\n    return element;\n  }\n\n  /**\n   * Enqueue an element. O(log N).\n   * @param {T} element Element.\n   * @return {boolean} The element was added to the queue.\n   */\n  enqueue(element) {\n    assert(\n      !(this.keyFunction_(element) in this.queuedElements_),\n      'Tried to enqueue an `element` that was already added to the queue',\n    );\n    const priority = this.priorityFunction_(element);\n    if (priority != DROP) {\n      this.elements_.push(element);\n      this.priorities_.push(priority);\n      this.queuedElements_[this.keyFunction_(element)] = true;\n      this.siftDown_(0, this.elements_.length - 1);\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.elements_.length;\n  }\n\n  /**\n   * Gets the index of the left child of the node at the given index.\n   * @param {number} index The index of the node to get the left child for.\n   * @return {number} The index of the left child.\n   * @private\n   */\n  getLeftChildIndex_(index) {\n    return index * 2 + 1;\n  }\n\n  /**\n   * Gets the index of the right child of the node at the given index.\n   * @param {number} index The index of the node to get the right child for.\n   * @return {number} The index of the right child.\n   * @private\n   */\n  getRightChildIndex_(index) {\n    return index * 2 + 2;\n  }\n\n  /**\n   * Gets the index of the parent of the node at the given index.\n   * @param {number} index The index of the node to get the parent for.\n   * @return {number} The index of the parent.\n   * @private\n   */\n  getParentIndex_(index) {\n    return (index - 1) >> 1;\n  }\n\n  /**\n   * Make this a heap. O(N).\n   * @private\n   */\n  heapify_() {\n    let i;\n    for (i = (this.elements_.length >> 1) - 1; i >= 0; i--) {\n      this.siftUp_(i);\n    }\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.elements_.length === 0;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Is key queued.\n   */\n  isKeyQueued(key) {\n    return key in this.queuedElements_;\n  }\n\n  /**\n   * @param {T} element Element.\n   * @return {boolean} Is queued.\n   */\n  isQueued(element) {\n    return this.isKeyQueued(this.keyFunction_(element));\n  }\n\n  /**\n   * @param {number} index The index of the node to move down.\n   * @private\n   */\n  siftUp_(index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const count = elements.length;\n    const element = elements[index];\n    const priority = priorities[index];\n    const startIndex = index;\n\n    while (index < count >> 1) {\n      const lIndex = this.getLeftChildIndex_(index);\n      const rIndex = this.getRightChildIndex_(index);\n\n      const smallerChildIndex =\n        rIndex < count && priorities[rIndex] < priorities[lIndex]\n          ? rIndex\n          : lIndex;\n\n      elements[index] = elements[smallerChildIndex];\n      priorities[index] = priorities[smallerChildIndex];\n      index = smallerChildIndex;\n    }\n\n    elements[index] = element;\n    priorities[index] = priority;\n    this.siftDown_(startIndex, index);\n  }\n\n  /**\n   * @param {number} startIndex The index of the root.\n   * @param {number} index The index of the node to move up.\n   * @private\n   */\n  siftDown_(startIndex, index) {\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    const element = elements[index];\n    const priority = priorities[index];\n\n    while (index > startIndex) {\n      const parentIndex = this.getParentIndex_(index);\n      if (priorities[parentIndex] > priority) {\n        elements[index] = elements[parentIndex];\n        priorities[index] = priorities[parentIndex];\n        index = parentIndex;\n      } else {\n        break;\n      }\n    }\n    elements[index] = element;\n    priorities[index] = priority;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  reprioritize() {\n    const priorityFunction = this.priorityFunction_;\n    const elements = this.elements_;\n    const priorities = this.priorities_;\n    let index = 0;\n    const n = elements.length;\n    let element, i, priority;\n    for (i = 0; i < n; ++i) {\n      element = elements[i];\n      priority = priorityFunction(element);\n      if (priority == DROP) {\n        delete this.queuedElements_[this.keyFunction_(element)];\n      } else {\n        priorities[index] = priority;\n        elements[index++] = element;\n      }\n    }\n    elements.length = index;\n    priorities.length = index;\n    this.heapify_();\n  }\n}\n\nexport default PriorityQueue;\n","/**\n * @module ol/TileQueue\n */\nimport TileState from './TileState.js';\nimport EventType from './events/EventType.js';\nimport PriorityQueue, {DROP} from './structs/PriorityQueue.js';\n\n/**\n * @typedef {function(import(\"./Tile.js\").default, string, import('./tilecoord.js').TileCoord, number): number} PriorityFunction\n */\n\n/**\n * @typedef {[import('./Tile.js').default, string, import('./tilecoord.js').TileCoord, number]} TileQueueElement\n */\n\n/**\n * @extends PriorityQueue<TileQueueElement>}\n */\nclass TileQueue extends PriorityQueue {\n  /**\n   * @param {PriorityFunction} tilePriorityFunction Tile priority function.\n   * @param {function(): ?} tileChangeCallback Function called on each tile change event.\n   */\n  constructor(tilePriorityFunction, tileChangeCallback) {\n    super(\n      (element) => tilePriorityFunction.apply(null, element),\n      (element) => element[0].getKey(),\n    );\n\n    /** @private */\n    this.boundHandleTileChange_ = this.handleTileChange.bind(this);\n\n    /**\n     * @private\n     * @type {function(): ?}\n     */\n    this.tileChangeCallback_ = tileChangeCallback;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilesLoading_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string,boolean>}\n     */\n    this.tilesLoadingKeys_ = {};\n  }\n\n  /**\n   * @param {TileQueueElement} element Element.\n   * @return {boolean} The element was added to the queue.\n   * @override\n   */\n  enqueue(element) {\n    const added = super.enqueue(element);\n    if (added) {\n      const tile = element[0];\n      tile.addEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n    }\n    return added;\n  }\n\n  /**\n   * @return {number} Number of tiles loading.\n   */\n  getTilesLoading() {\n    return this.tilesLoading_;\n  }\n\n  /**\n   * @param {import(\"./events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"./Tile.js\").default} */ (event.target);\n    const state = tile.getState();\n    if (\n      state === TileState.LOADED ||\n      state === TileState.ERROR ||\n      state === TileState.EMPTY\n    ) {\n      if (state !== TileState.ERROR) {\n        tile.removeEventListener(EventType.CHANGE, this.boundHandleTileChange_);\n      }\n      const tileKey = tile.getKey();\n      if (tileKey in this.tilesLoadingKeys_) {\n        delete this.tilesLoadingKeys_[tileKey];\n        --this.tilesLoading_;\n      }\n      this.tileChangeCallback_();\n    }\n  }\n\n  /**\n   * @param {number} maxTotalLoading Maximum number tiles to load simultaneously.\n   * @param {number} maxNewLoads Maximum number of new tiles to load.\n   */\n  loadMoreTiles(maxTotalLoading, maxNewLoads) {\n    let newLoads = 0;\n    while (\n      this.tilesLoading_ < maxTotalLoading &&\n      newLoads < maxNewLoads &&\n      this.getCount() > 0\n    ) {\n      const tile = this.dequeue()[0];\n      const tileKey = tile.getKey();\n      const state = tile.getState();\n      if (state === TileState.IDLE && !(tileKey in this.tilesLoadingKeys_)) {\n        this.tilesLoadingKeys_[tileKey] = true;\n        ++this.tilesLoading_;\n        ++newLoads;\n        tile.load();\n      }\n    }\n  }\n}\n\nexport default TileQueue;\n\n/**\n * @param {import('./Map.js').FrameState} frameState Frame state.\n * @param {import(\"./Tile.js\").default} tile Tile.\n * @param {string} tileSourceKey Tile source key.\n * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n * @param {number} tileResolution Tile resolution.\n * @return {number} Tile priority.\n */\nexport function getTilePriority(\n  frameState,\n  tile,\n  tileSourceKey,\n  tileCenter,\n  tileResolution,\n) {\n  // Filter out tiles at higher zoom levels than the current zoom level, or that\n  // are outside the visible extent.\n  if (!frameState || !(tileSourceKey in frameState.wantedTiles)) {\n    return DROP;\n  }\n  if (!frameState.wantedTiles[tileSourceKey][tile.getKey()]) {\n    return DROP;\n  }\n  // Prioritize the highest zoom level tiles closest to the focus.\n  // Tiles at higher zoom levels are prioritized using Math.log(tileResolution).\n  // Within a zoom level, tiles are prioritized by the distance in pixels between\n  // the center of the tile and the center of the viewport.  The factor of 65536\n  // means that the prioritization should behave as desired for tiles up to\n  // 65536 * Math.log(2) = 45426 pixels from the focus.\n  const center = frameState.viewState.center;\n  const deltaX = tileCenter[0] - center[0];\n  const deltaY = tileCenter[1] - center[1];\n  return (\n    65536 * Math.log(tileResolution) +\n    Math.sqrt(deltaX * deltaX + deltaY * deltaY) / tileResolution\n  );\n}\n","/**\n * @module ol/TileState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  /**\n   * Indicates that tile loading failed\n   * @type {number}\n   */\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/ViewProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  CENTER: 'center',\n  RESOLUTION: 'resolution',\n  ROTATION: 'rotation',\n};\n","/**\n * @module ol/math\n */\n\n/**\n * Takes a number and clamps it to within the provided bounds.\n * @param {number} value The input number.\n * @param {number} min The minimum value to return.\n * @param {number} max The maximum value to return.\n * @return {number} The input number if it is within bounds, or the nearest\n *     number within the bounds.\n */\nexport function clamp(value, min, max) {\n  return Math.min(Math.max(value, min), max);\n}\n\n/**\n * Returns the square of the closest distance between the point (x, y) and the\n * line segment (x1, y1) to (x2, y2).\n * @param {number} x X.\n * @param {number} y Y.\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredSegmentDistance(x, y, x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  if (dx !== 0 || dy !== 0) {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      x1 = x2;\n      y1 = y2;\n    } else if (t > 0) {\n      x1 += dx * t;\n      y1 += dy * t;\n    }\n  }\n  return squaredDistance(x, y, x1, y1);\n}\n\n/**\n * Returns the square of the distance between the points (x1, y1) and (x2, y2).\n * @param {number} x1 X1.\n * @param {number} y1 Y1.\n * @param {number} x2 X2.\n * @param {number} y2 Y2.\n * @return {number} Squared distance.\n */\nexport function squaredDistance(x1, y1, x2, y2) {\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  return dx * dx + dy * dy;\n}\n\n/**\n * Solves system of linear equations using Gaussian elimination method.\n *\n * @param {Array<Array<number>>} mat Augmented matrix (n x n + 1 column)\n *                                     in row-major order.\n * @return {Array<number>|null} The resulting vector.\n */\nexport function solveLinearSystem(mat) {\n  const n = mat.length;\n\n  for (let i = 0; i < n; i++) {\n    // Find max in the i-th column (ignoring i - 1 first rows)\n    let maxRow = i;\n    let maxEl = Math.abs(mat[i][i]);\n    for (let r = i + 1; r < n; r++) {\n      const absValue = Math.abs(mat[r][i]);\n      if (absValue > maxEl) {\n        maxEl = absValue;\n        maxRow = r;\n      }\n    }\n\n    if (maxEl === 0) {\n      return null; // matrix is singular\n    }\n\n    // Swap max row with i-th (current) row\n    const tmp = mat[maxRow];\n    mat[maxRow] = mat[i];\n    mat[i] = tmp;\n\n    // Subtract the i-th row to make all the remaining rows 0 in the i-th column\n    for (let j = i + 1; j < n; j++) {\n      const coef = -mat[j][i] / mat[i][i];\n      for (let k = i; k < n + 1; k++) {\n        if (i == k) {\n          mat[j][k] = 0;\n        } else {\n          mat[j][k] += coef * mat[i][k];\n        }\n      }\n    }\n  }\n\n  // Solve Ax=b for upper triangular matrix A (mat)\n  const x = new Array(n);\n  for (let l = n - 1; l >= 0; l--) {\n    x[l] = mat[l][n] / mat[l][l];\n    for (let m = l - 1; m >= 0; m--) {\n      mat[m][n] -= mat[m][l] * x[l];\n    }\n  }\n  return x;\n}\n\n/**\n * Converts radians to to degrees.\n *\n * @param {number} angleInRadians Angle in radians.\n * @return {number} Angle in degrees.\n */\nexport function toDegrees(angleInRadians) {\n  return (angleInRadians * 180) / Math.PI;\n}\n\n/**\n * Converts degrees to radians.\n *\n * @param {number} angleInDegrees Angle in degrees.\n * @return {number} Angle in radians.\n */\nexport function toRadians(angleInDegrees) {\n  return (angleInDegrees * Math.PI) / 180;\n}\n\n/**\n * Returns the modulo of a / b, depending on the sign of b.\n *\n * @param {number} a Dividend.\n * @param {number} b Divisor.\n * @return {number} Modulo.\n */\nexport function modulo(a, b) {\n  const r = a % b;\n  return r * b < 0 ? r + b : r;\n}\n\n/**\n * Calculates the linearly interpolated value of x between a and b.\n *\n * @param {number} a Number\n * @param {number} b Number\n * @param {number} x Value to be interpolated.\n * @return {number} Interpolated value.\n */\nexport function lerp(a, b, x) {\n  return a + x * (b - a);\n}\n\n/**\n * Returns a number with a limited number of decimal digits.\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The input number with a limited number of decimal digits.\n */\nexport function toFixed(n, decimals) {\n  const factor = Math.pow(10, decimals);\n  return Math.round(n * factor) / factor;\n}\n\n/**\n * Rounds a number to the nearest integer value considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The nearest integer.\n */\nexport function round(n, decimals) {\n  return Math.round(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next smaller integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next smaller integer.\n */\nexport function floor(n, decimals) {\n  return Math.floor(toFixed(n, decimals));\n}\n\n/**\n * Rounds a number to the next bigger integer considering only the given number\n * of decimal digits (with rounding on the final digit).\n * @param {number} n The input number.\n * @param {number} decimals The maximum number of decimal digits.\n * @return {number} The next bigger integer.\n */\nexport function ceil(n, decimals) {\n  return Math.ceil(toFixed(n, decimals));\n}\n\n/**\n * Wraps a number between some minimum and maximum values.\n * @param {number} n The number to wrap.\n * @param {number} min The minimum of the range (inclusive).\n * @param {number} max The maximum of the range (exclusive).\n * @return {number} The wrapped number.\n */\nexport function wrap(n, min, max) {\n  if (n >= min && n < max) {\n    return n;\n  }\n  const range = max - min;\n  return ((((n - min) % range) + range) % range) + min;\n}\n","/**\n * @module ol/centerconstraint\n */\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((import(\"./coordinate.js\").Coordinate|undefined), number, import(\"./size.js\").Size, boolean=, Array<number>=): (import(\"./coordinate.js\").Coordinate|undefined)} Type\n */\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {boolean} onlyCenter If true, the constraint will only apply to the view center.\n * @param {boolean} smooth If true, the view will be able to go slightly out of the given extent\n * (only during interaction and animation).\n * @return {Type} The constraint.\n */\nexport function createExtent(extent, onlyCenter, smooth) {\n  return (\n    /**\n     * @param {import(\"./coordinate.js\").Coordinate|undefined} center Center.\n     * @param {number|undefined} resolution Resolution.\n     * @param {import(\"./size.js\").Size} size Viewport size; unused if `onlyCenter` was specified.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @param {Array<number>} [centerShift] Shift between map center and viewport center.\n     * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n     */\n    function (center, resolution, size, isMoving, centerShift) {\n      if (!center) {\n        return undefined;\n      }\n      if (!resolution && !onlyCenter) {\n        return center;\n      }\n      const viewWidth = onlyCenter ? 0 : size[0] * resolution;\n      const viewHeight = onlyCenter ? 0 : size[1] * resolution;\n      const shiftX = centerShift ? centerShift[0] : 0;\n      const shiftY = centerShift ? centerShift[1] : 0;\n      let minX = extent[0] + viewWidth / 2 + shiftX;\n      let maxX = extent[2] - viewWidth / 2 + shiftX;\n      let minY = extent[1] + viewHeight / 2 + shiftY;\n      let maxY = extent[3] - viewHeight / 2 + shiftY;\n\n      // note: when zooming out of bounds, min and max values for x and y may\n      // end up inverted (min > max); this has to be accounted for\n      if (minX > maxX) {\n        minX = (maxX + minX) / 2;\n        maxX = minX;\n      }\n      if (minY > maxY) {\n        minY = (maxY + minY) / 2;\n        maxY = minY;\n      }\n\n      let x = clamp(center[0], minX, maxX);\n      let y = clamp(center[1], minY, maxY);\n\n      // during an interaction, allow some overscroll\n      if (isMoving && smooth && resolution) {\n        const ratio = 30 * resolution;\n        x +=\n          -ratio * Math.log(1 + Math.max(0, minX - center[0]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[0] - maxX) / ratio);\n        y +=\n          -ratio * Math.log(1 + Math.max(0, minY - center[1]) / ratio) +\n          ratio * Math.log(1 + Math.max(0, center[1] - maxY) / ratio);\n      }\n\n      return [x, y];\n    }\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} [center] Center.\n * @return {import(\"./coordinate.js\").Coordinate|undefined} Center.\n */\nexport function none(center) {\n  return center;\n}\n","/**\n * @module ol/extent\n */\nimport Relationship from './extent/Relationship.js';\n\n/**\n * An array of numbers representing an extent: `[minx, miny, maxx, maxy]`.\n * @typedef {Array<number>} Extent\n * @api\n */\n\n/**\n * Extent corner.\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} Corner\n */\n\n/**\n * Build an extent that includes all given coordinates.\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Bounding extent.\n * @api\n */\nexport function boundingExtent(coordinates) {\n  const extent = createEmpty();\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Array<number>} xs Xs.\n * @param {Array<number>} ys Ys.\n * @param {Extent} [dest] Destination extent.\n * @private\n * @return {Extent} Extent.\n */\nfunction _boundingExtentXYs(xs, ys, dest) {\n  const minX = Math.min.apply(null, xs);\n  const minY = Math.min.apply(null, ys);\n  const maxX = Math.max.apply(null, xs);\n  const maxY = Math.max.apply(null, ys);\n  return createOrUpdate(minX, minY, maxX, maxY, dest);\n}\n\n/**\n * Return extent increased by the provided value.\n * @param {Extent} extent Extent.\n * @param {number} value The amount by which the extent should be buffered.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n * @api\n */\nexport function buffer(extent, value, dest) {\n  if (dest) {\n    dest[0] = extent[0] - value;\n    dest[1] = extent[1] - value;\n    dest[2] = extent[2] + value;\n    dest[3] = extent[3] + value;\n    return dest;\n  }\n  return [\n    extent[0] - value,\n    extent[1] - value,\n    extent[2] + value,\n    extent[3] + value,\n  ];\n}\n\n/**\n * Creates a clone of an extent.\n *\n * @param {Extent} extent Extent to clone.\n * @param {Extent} [dest] Extent.\n * @return {Extent} The clone.\n */\nexport function clone(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent.slice();\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {number} Closest squared distance.\n */\nexport function closestSquaredDistanceXY(extent, x, y) {\n  let dx, dy;\n  if (x < extent[0]) {\n    dx = extent[0] - x;\n  } else if (extent[2] < x) {\n    dx = x - extent[2];\n  } else {\n    dx = 0;\n  }\n  if (y < extent[1]) {\n    dy = extent[1] - y;\n  } else if (extent[3] < y) {\n    dy = y - extent[3];\n  } else {\n    dy = 0;\n  }\n  return dx * dx + dy * dy;\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @return {boolean} The coordinate is contained in the extent.\n * @api\n */\nexport function containsCoordinate(extent, coordinate) {\n  return containsXY(extent, coordinate[0], coordinate[1]);\n}\n\n/**\n * Check if one extent contains another.\n *\n * An extent is deemed contained if it lies completely within the other extent,\n * including if they share one or more edges.\n *\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The second extent is contained by or on the edge of the\n *     first.\n * @api\n */\nexport function containsExtent(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[0] &&\n    extent2[2] <= extent1[2] &&\n    extent1[1] <= extent2[1] &&\n    extent2[3] <= extent1[3]\n  );\n}\n\n/**\n * Check if the passed coordinate is contained or on the edge of the extent.\n *\n * @param {Extent} extent Extent.\n * @param {number} x X coordinate.\n * @param {number} y Y coordinate.\n * @return {boolean} The x, y values are contained in the extent.\n * @api\n */\nexport function containsXY(extent, x, y) {\n  return extent[0] <= x && x <= extent[2] && extent[1] <= y && y <= extent[3];\n}\n\n/**\n * Get the relationship between a coordinate and extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate The coordinate.\n * @return {import(\"./extent/Relationship.js\").default} The relationship (bitwise compare with\n *     import(\"./extent/Relationship.js\").Relationship).\n */\nexport function coordinateRelationship(extent, coordinate) {\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const x = coordinate[0];\n  const y = coordinate[1];\n  let relationship = Relationship.UNKNOWN;\n  if (x < minX) {\n    relationship = relationship | Relationship.LEFT;\n  } else if (x > maxX) {\n    relationship = relationship | Relationship.RIGHT;\n  }\n  if (y < minY) {\n    relationship = relationship | Relationship.BELOW;\n  } else if (y > maxY) {\n    relationship = relationship | Relationship.ABOVE;\n  }\n  if (relationship === Relationship.UNKNOWN) {\n    relationship = Relationship.INTERSECTING;\n  }\n  return relationship;\n}\n\n/**\n * Create an empty extent.\n * @return {Extent} Empty extent.\n * @api\n */\nexport function createEmpty() {\n  return [Infinity, Infinity, -Infinity, -Infinity];\n}\n\n/**\n * Create a new extent or update the provided extent.\n * @param {number} minX Minimum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxX Maximum X.\n * @param {number} maxY Maximum Y.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdate(minX, minY, maxX, maxY, dest) {\n  if (dest) {\n    dest[0] = minX;\n    dest[1] = minY;\n    dest[2] = maxX;\n    dest[3] = maxY;\n    return dest;\n  }\n  return [minX, minY, maxX, maxY];\n}\n\n/**\n * Create a new empty extent or make the provided one empty.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateEmpty(dest) {\n  return createOrUpdate(Infinity, Infinity, -Infinity, -Infinity, dest);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinate(coordinate, dest) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  return createOrUpdate(x, y, x, y, dest);\n}\n\n/**\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromCoordinates(coordinates, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendCoordinates(extent, coordinates);\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromFlatCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  dest,\n) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendFlatCoordinates(extent, flatCoordinates, offset, end, stride);\n}\n\n/**\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function createOrUpdateFromRings(rings, dest) {\n  const extent = createOrUpdateEmpty(dest);\n  return extendRings(extent, rings);\n}\n\n/**\n * Determine if two extents are equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {boolean} The two extents are equivalent.\n * @api\n */\nexport function equals(extent1, extent2) {\n  return (\n    extent1[0] == extent2[0] &&\n    extent1[2] == extent2[2] &&\n    extent1[1] == extent2[1] &&\n    extent1[3] == extent2[3]\n  );\n}\n\n/**\n * Determine if two extents are approximately equivalent.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {number} tolerance Tolerance in extent coordinate units.\n * @return {boolean} The two extents differ by less than the tolerance.\n */\nexport function approximatelyEquals(extent1, extent2, tolerance) {\n  return (\n    Math.abs(extent1[0] - extent2[0]) < tolerance &&\n    Math.abs(extent1[2] - extent2[2]) < tolerance &&\n    Math.abs(extent1[1] - extent2[1]) < tolerance &&\n    Math.abs(extent1[3] - extent2[3]) < tolerance\n  );\n}\n\n/**\n * Modify an extent to include another extent.\n * @param {Extent} extent1 The extent to be modified.\n * @param {Extent} extent2 The extent that will be included in the first.\n * @return {Extent} A reference to the first (extended) extent.\n * @api\n */\nexport function extend(extent1, extent2) {\n  if (extent2[0] < extent1[0]) {\n    extent1[0] = extent2[0];\n  }\n  if (extent2[2] > extent1[2]) {\n    extent1[2] = extent2[2];\n  }\n  if (extent2[1] < extent1[1]) {\n    extent1[1] = extent2[1];\n  }\n  if (extent2[3] > extent1[3]) {\n    extent1[3] = extent2[3];\n  }\n  return extent1;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n */\nexport function extendCoordinate(extent, coordinate) {\n  if (coordinate[0] < extent[0]) {\n    extent[0] = coordinate[0];\n  }\n  if (coordinate[0] > extent[2]) {\n    extent[2] = coordinate[0];\n  }\n  if (coordinate[1] < extent[1]) {\n    extent[1] = coordinate[1];\n  }\n  if (coordinate[1] > extent[3]) {\n    extent[3] = coordinate[1];\n  }\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates Coordinates.\n * @return {Extent} Extent.\n */\nexport function extendCoordinates(extent, coordinates) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    extendCoordinate(extent, coordinates[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Extent} Extent.\n */\nexport function extendFlatCoordinates(\n  extent,\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n) {\n  for (; offset < end; offset += stride) {\n    extendXY(extent, flatCoordinates[offset], flatCoordinates[offset + 1]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Array<Array<import(\"./coordinate.js\").Coordinate>>} rings Rings.\n * @return {Extent} Extent.\n */\nexport function extendRings(extent, rings) {\n  for (let i = 0, ii = rings.length; i < ii; ++i) {\n    extendCoordinates(extent, rings[i]);\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} x X.\n * @param {number} y Y.\n */\nexport function extendXY(extent, x, y) {\n  extent[0] = Math.min(extent[0], x);\n  extent[1] = Math.min(extent[1], y);\n  extent[2] = Math.max(extent[2], x);\n  extent[3] = Math.max(extent[3], y);\n}\n\n/**\n * This function calls `callback` for each corner of the extent. If the\n * callback returns a truthy value the function returns that value\n * immediately. Otherwise the function returns `false`.\n * @param {Extent} extent Extent.\n * @param {function(import(\"./coordinate.js\").Coordinate): S} callback Callback.\n * @return {S|boolean} Value.\n * @template S\n */\nexport function forEachCorner(extent, callback) {\n  let val;\n  val = callback(getBottomLeft(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getBottomRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopRight(extent));\n  if (val) {\n    return val;\n  }\n  val = callback(getTopLeft(extent));\n  if (val) {\n    return val;\n  }\n  return false;\n}\n\n/**\n * Get the size of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Area.\n * @api\n */\nexport function getArea(extent) {\n  let area = 0;\n  if (!isEmpty(extent)) {\n    area = getWidth(extent) * getHeight(extent);\n  }\n  return area;\n}\n\n/**\n * Get the bottom left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom left coordinate.\n * @api\n */\nexport function getBottomLeft(extent) {\n  return [extent[0], extent[1]];\n}\n\n/**\n * Get the bottom right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Bottom right coordinate.\n * @api\n */\nexport function getBottomRight(extent) {\n  return [extent[2], extent[1]];\n}\n\n/**\n * Get the center coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Center.\n * @api\n */\nexport function getCenter(extent) {\n  return [(extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2];\n}\n\n/**\n * Get a corner coordinate of an extent.\n * @param {Extent} extent Extent.\n * @param {Corner} corner Corner.\n * @return {import(\"./coordinate.js\").Coordinate} Corner coordinate.\n */\nexport function getCorner(extent, corner) {\n  let coordinate;\n  if (corner === 'bottom-left') {\n    coordinate = getBottomLeft(extent);\n  } else if (corner === 'bottom-right') {\n    coordinate = getBottomRight(extent);\n  } else if (corner === 'top-left') {\n    coordinate = getTopLeft(extent);\n  } else if (corner === 'top-right') {\n    coordinate = getTopRight(extent);\n  } else {\n    throw new Error('Invalid corner');\n  }\n  return coordinate;\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Enlarged area.\n */\nexport function getEnlargedArea(extent1, extent2) {\n  const minX = Math.min(extent1[0], extent2[0]);\n  const minY = Math.min(extent1[1], extent2[1]);\n  const maxX = Math.max(extent1[2], extent2[2]);\n  const maxY = Math.max(extent1[3], extent2[3]);\n  return (maxX - minX) * (maxY - minY);\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @param {Extent} [dest] Destination extent.\n * @return {Extent} Extent.\n */\nexport function getForViewAndSize(center, resolution, rotation, size, dest) {\n  const [x0, y0, x1, y1, x2, y2, x3, y3] = getRotatedViewport(\n    center,\n    resolution,\n    rotation,\n    size,\n  );\n  return createOrUpdate(\n    Math.min(x0, x1, x2, x3),\n    Math.min(y0, y1, y2, y3),\n    Math.max(x0, x1, x2, x3),\n    Math.max(y0, y1, y2, y3),\n    dest,\n  );\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} center Center.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {import(\"./size.js\").Size} size Size.\n * @return {Array<number>} Linear ring representing the viewport.\n */\nexport function getRotatedViewport(center, resolution, rotation, size) {\n  const dx = (resolution * size[0]) / 2;\n  const dy = (resolution * size[1]) / 2;\n  const cosRotation = Math.cos(rotation);\n  const sinRotation = Math.sin(rotation);\n  const xCos = dx * cosRotation;\n  const xSin = dx * sinRotation;\n  const yCos = dy * cosRotation;\n  const ySin = dy * sinRotation;\n  const x = center[0];\n  const y = center[1];\n  return [\n    x - xCos + ySin,\n    y - xSin - yCos,\n    x - xCos - ySin,\n    y - xSin + yCos,\n    x + xCos - ySin,\n    y + xSin + yCos,\n    x + xCos + ySin,\n    y + xSin - yCos,\n    x - xCos + ySin,\n    y - xSin - yCos,\n  ];\n}\n\n/**\n * Get the height of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Height.\n * @api\n */\nexport function getHeight(extent) {\n  return extent[3] - extent[1];\n}\n\n/**\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @return {number} Intersection area.\n */\nexport function getIntersectionArea(extent1, extent2) {\n  const intersection = getIntersection(extent1, extent2);\n  return getArea(intersection);\n}\n\n/**\n * Get the intersection of two extents.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent 2.\n * @param {Extent} [dest] Optional extent to populate with intersection.\n * @return {Extent} Intersecting extent.\n * @api\n */\nexport function getIntersection(extent1, extent2, dest) {\n  const intersection = dest ? dest : createEmpty();\n  if (intersects(extent1, extent2)) {\n    if (extent1[0] > extent2[0]) {\n      intersection[0] = extent1[0];\n    } else {\n      intersection[0] = extent2[0];\n    }\n    if (extent1[1] > extent2[1]) {\n      intersection[1] = extent1[1];\n    } else {\n      intersection[1] = extent2[1];\n    }\n    if (extent1[2] < extent2[2]) {\n      intersection[2] = extent1[2];\n    } else {\n      intersection[2] = extent2[2];\n    }\n    if (extent1[3] < extent2[3]) {\n      intersection[3] = extent1[3];\n    } else {\n      intersection[3] = extent2[3];\n    }\n  } else {\n    createOrUpdateEmpty(intersection);\n  }\n  return intersection;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @return {number} Margin.\n */\nexport function getMargin(extent) {\n  return getWidth(extent) + getHeight(extent);\n}\n\n/**\n * Get the size (width, height) of an extent.\n * @param {Extent} extent The extent.\n * @return {import(\"./size.js\").Size} The extent size.\n * @api\n */\nexport function getSize(extent) {\n  return [extent[2] - extent[0], extent[3] - extent[1]];\n}\n\n/**\n * Get the top left coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top left coordinate.\n * @api\n */\nexport function getTopLeft(extent) {\n  return [extent[0], extent[3]];\n}\n\n/**\n * Get the top right coordinate of an extent.\n * @param {Extent} extent Extent.\n * @return {import(\"./coordinate.js\").Coordinate} Top right coordinate.\n * @api\n */\nexport function getTopRight(extent) {\n  return [extent[2], extent[3]];\n}\n\n/**\n * Get the width of an extent.\n * @param {Extent} extent Extent.\n * @return {number} Width.\n * @api\n */\nexport function getWidth(extent) {\n  return extent[2] - extent[0];\n}\n\n/**\n * Determine if one extent intersects another.\n * @param {Extent} extent1 Extent 1.\n * @param {Extent} extent2 Extent.\n * @return {boolean} The two extents intersect.\n * @api\n */\nexport function intersects(extent1, extent2) {\n  return (\n    extent1[0] <= extent2[2] &&\n    extent1[2] >= extent2[0] &&\n    extent1[1] <= extent2[3] &&\n    extent1[3] >= extent2[1]\n  );\n}\n\n/**\n * Determine if an extent is empty.\n * @param {Extent} extent Extent.\n * @return {boolean} Is empty.\n * @api\n */\nexport function isEmpty(extent) {\n  return extent[2] < extent[0] || extent[3] < extent[1];\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {Extent} [dest] Extent.\n * @return {Extent} Extent.\n */\nexport function returnOrUpdate(extent, dest) {\n  if (dest) {\n    dest[0] = extent[0];\n    dest[1] = extent[1];\n    dest[2] = extent[2];\n    dest[3] = extent[3];\n    return dest;\n  }\n  return extent;\n}\n\n/**\n * @param {Extent} extent Extent.\n * @param {number} value Value.\n */\nexport function scaleFromCenter(extent, value) {\n  const deltaX = ((extent[2] - extent[0]) / 2) * (value - 1);\n  const deltaY = ((extent[3] - extent[1]) / 2) * (value - 1);\n  extent[0] -= deltaX;\n  extent[2] += deltaX;\n  extent[1] -= deltaY;\n  extent[3] += deltaY;\n}\n\n/**\n * Determine if the segment between two coordinates intersects (crosses,\n * touches, or is contained by) the provided extent.\n * @param {Extent} extent The extent.\n * @param {import(\"./coordinate.js\").Coordinate} start Segment start coordinate.\n * @param {import(\"./coordinate.js\").Coordinate} end Segment end coordinate.\n * @return {boolean} The segment intersects the extent.\n */\nexport function intersectsSegment(extent, start, end) {\n  let intersects = false;\n  const startRel = coordinateRelationship(extent, start);\n  const endRel = coordinateRelationship(extent, end);\n  if (\n    startRel === Relationship.INTERSECTING ||\n    endRel === Relationship.INTERSECTING\n  ) {\n    intersects = true;\n  } else {\n    const minX = extent[0];\n    const minY = extent[1];\n    const maxX = extent[2];\n    const maxY = extent[3];\n    const startX = start[0];\n    const startY = start[1];\n    const endX = end[0];\n    const endY = end[1];\n    const slope = (endY - startY) / (endX - startX);\n    let x, y;\n    if (!!(endRel & Relationship.ABOVE) && !(startRel & Relationship.ABOVE)) {\n      // potentially intersects top\n      x = endX - (endY - maxY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.RIGHT) &&\n      !(startRel & Relationship.RIGHT)\n    ) {\n      // potentially intersects right\n      y = endY - (endX - maxX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.BELOW) &&\n      !(startRel & Relationship.BELOW)\n    ) {\n      // potentially intersects bottom\n      x = endX - (endY - minY) / slope;\n      intersects = x >= minX && x <= maxX;\n    }\n    if (\n      !intersects &&\n      !!(endRel & Relationship.LEFT) &&\n      !(startRel & Relationship.LEFT)\n    ) {\n      // potentially intersects left\n      y = endY - (endX - minX) * slope;\n      intersects = y >= minY && y <= maxY;\n    }\n  }\n  return intersects;\n}\n\n/**\n * Apply a transform function to the extent.\n * @param {Extent} extent Extent.\n * @param {import(\"./proj.js\").TransformFunction} transformFn Transform function.\n * Called with `[minX, minY, maxX, maxY]` extent coordinates.\n * @param {Extent} [dest] Destination extent.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {Extent} Extent.\n * @api\n */\nexport function applyTransform(extent, transformFn, dest, stops) {\n  if (isEmpty(extent)) {\n    return createOrUpdateEmpty(dest);\n  }\n  let coordinates = [];\n  if (stops > 1) {\n    const width = extent[2] - extent[0];\n    const height = extent[3] - extent[1];\n    for (let i = 0; i < stops; ++i) {\n      coordinates.push(\n        extent[0] + (width * i) / stops,\n        extent[1],\n        extent[2],\n        extent[1] + (height * i) / stops,\n        extent[2] - (width * i) / stops,\n        extent[3],\n        extent[0],\n        extent[3] - (height * i) / stops,\n      );\n    }\n  } else {\n    coordinates = [\n      extent[0],\n      extent[1],\n      extent[2],\n      extent[1],\n      extent[2],\n      extent[3],\n      extent[0],\n      extent[3],\n    ];\n  }\n  transformFn(coordinates, coordinates, 2);\n  const xs = [];\n  const ys = [];\n  for (let i = 0, l = coordinates.length; i < l; i += 2) {\n    xs.push(coordinates[i]);\n    ys.push(coordinates[i + 1]);\n  }\n  return _boundingExtentXYs(xs, ys, dest);\n}\n\n/**\n * Modifies the provided extent in-place to be within the real world\n * extent.\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @return {Extent} The extent within the real world extent.\n */\nexport function wrapX(extent, projection) {\n  const projectionExtent = projection.getExtent();\n  const center = getCenter(extent);\n  if (\n    projection.canWrapX() &&\n    (center[0] < projectionExtent[0] || center[0] >= projectionExtent[2])\n  ) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.floor(\n      (center[0] - projectionExtent[0]) / worldWidth,\n    );\n    const offset = worldsAway * worldWidth;\n    extent[0] -= offset;\n    extent[2] -= offset;\n  }\n  return extent;\n}\n\n/**\n * Fits the extent to the real world\n *\n * If the extent does not cross the anti meridian, this will return the extent in an array\n * If the extent crosses the anti meridian, the extent will be sliced, so each part fits within the\n * real world\n *\n *\n * @param {Extent} extent Extent.\n * @param {import(\"./proj/Projection.js\").default} projection Projection\n * @param {boolean} [multiWorld] Return all worlds\n * @return {Array<Extent>} The extent within the real world extent.\n */\nexport function wrapAndSliceX(extent, projection, multiWorld) {\n  if (projection.canWrapX()) {\n    const projectionExtent = projection.getExtent();\n\n    if (!isFinite(extent[0]) || !isFinite(extent[2])) {\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n\n    wrapX(extent, projection);\n    const worldWidth = getWidth(projectionExtent);\n\n    if (getWidth(extent) > worldWidth && !multiWorld) {\n      // the extent wraps around on itself\n      return [[projectionExtent[0], extent[1], projectionExtent[2], extent[3]]];\n    }\n    if (extent[0] < projectionExtent[0]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0] + worldWidth, extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2], extent[3]],\n      ];\n    }\n    if (extent[2] > projectionExtent[2]) {\n      // the extent crosses the anti meridian, so it needs to be sliced\n      return [\n        [extent[0], extent[1], projectionExtent[2], extent[3]],\n        [projectionExtent[0], extent[1], extent[2] - worldWidth, extent[3]],\n      ];\n    }\n  }\n\n  return [extent];\n}\n","/**\n * @module ol/extent/Relationship\n */\n\n/**\n * Relationship to an extent.\n * @enum {number}\n */\nexport default {\n  UNKNOWN: 0,\n  INTERSECTING: 1,\n  ABOVE: 2,\n  RIGHT: 4,\n  BELOW: 8,\n  LEFT: 16,\n};\n","/**\n * @module ol/coordinate\n */\nimport {getWidth} from './extent.js';\nimport {modulo, toFixed} from './math.js';\nimport {padNumber} from './string.js';\n\n/**\n * An array of numbers representing an `xy`, `xyz` or `xyzm` coordinate.\n * Example: `[16, 48]`.\n * @typedef {Array<number>} Coordinate\n * @api\n */\n\n/**\n * A function that takes a {@link module:ol/coordinate~Coordinate} and\n * transforms it into a `{string}`.\n *\n * @typedef {function((Coordinate|undefined)): string} CoordinateFormat\n * @api\n */\n\n/**\n * Add `delta` to `coordinate`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {add} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     add(coord, [-2, 4]);\n *     // coord is now [5.85, 51.983333]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {Coordinate} delta Delta.\n * @return {Coordinate} The input coordinate adjusted by\n * the given delta.\n * @api\n */\nexport function add(coordinate, delta) {\n  coordinate[0] += +delta[0];\n  coordinate[1] += +delta[1];\n  return coordinate;\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed circle.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {import(\"./geom/Circle.js\").default} circle The circle.\n * @return {Coordinate} Closest point on the circumference.\n */\nexport function closestOnCircle(coordinate, circle) {\n  const r = circle.getRadius();\n  const center = circle.getCenter();\n  const x0 = center[0];\n  const y0 = center[1];\n  const x1 = coordinate[0];\n  const y1 = coordinate[1];\n\n  let dx = x1 - x0;\n  const dy = y1 - y0;\n  if (dx === 0 && dy === 0) {\n    dx = 1;\n  }\n  const d = Math.sqrt(dx * dx + dy * dy);\n\n  const x = x0 + (r * dx) / d;\n  const y = y0 + (r * dy) / d;\n\n  return [x, y];\n}\n\n/**\n * Calculates the point closest to the passed coordinate on the passed segment.\n * This is the foot of the perpendicular of the coordinate to the segment when\n * the foot is on the segment, or the closest segment coordinate when the foot\n * is outside the segment.\n *\n * @param {Coordinate} coordinate The coordinate.\n * @param {Array<Coordinate>} segment The two coordinates\n * of the segment.\n * @return {Coordinate} The foot of the perpendicular of\n * the coordinate to the segment.\n */\nexport function closestOnSegment(coordinate, segment) {\n  const x0 = coordinate[0];\n  const y0 = coordinate[1];\n  const start = segment[0];\n  const end = segment[1];\n  const x1 = start[0];\n  const y1 = start[1];\n  const x2 = end[0];\n  const y2 = end[1];\n  const dx = x2 - x1;\n  const dy = y2 - y1;\n  const along =\n    dx === 0 && dy === 0\n      ? 0\n      : (dx * (x0 - x1) + dy * (y0 - y1)) / (dx * dx + dy * dy || 0);\n  let x, y;\n  if (along <= 0) {\n    x = x1;\n    y = y1;\n  } else if (along >= 1) {\n    x = x2;\n    y = y2;\n  } else {\n    x = x1 + along * dx;\n    y = y1 + along * dy;\n  }\n  return [x, y];\n}\n\n/**\n * Returns a {@link module:ol/coordinate~CoordinateFormat} function that can be\n * used to format\n * a {Coordinate} to a string.\n *\n * Example without specifying the fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY();\n *     const out = stringifyFunc(coord);\n *     // out is now '8, 48'\n *\n * Example with explicitly specifying 2 fractional digits:\n *\n *     import {createStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const stringifyFunc = createStringXY(2);\n *     const out = stringifyFunc(coord);\n *     // out is now '7.85, 47.98'\n *\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {CoordinateFormat} Coordinate format.\n * @api\n */\nexport function createStringXY(fractionDigits) {\n  return (\n    /**\n     * @param {Coordinate} coordinate Coordinate.\n     * @return {string} String XY.\n     */\n    function (coordinate) {\n      return toStringXY(coordinate, fractionDigits);\n    }\n  );\n}\n\n/**\n * @param {string} hemispheres Hemispheres.\n * @param {number} degrees Degrees.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} String.\n */\nexport function degreesToStringHDMS(hemispheres, degrees, fractionDigits) {\n  const normalizedDegrees = modulo(degrees + 180, 360) - 180;\n  const x = Math.abs(3600 * normalizedDegrees);\n  const decimals = fractionDigits || 0;\n\n  let deg = Math.floor(x / 3600);\n  let min = Math.floor((x - deg * 3600) / 60);\n  let sec = toFixed(x - deg * 3600 - min * 60, decimals);\n\n  if (sec >= 60) {\n    sec = 0;\n    min += 1;\n  }\n\n  if (min >= 60) {\n    min = 0;\n    deg += 1;\n  }\n\n  let hdms = deg + '\\u00b0';\n  if (min !== 0 || sec !== 0) {\n    hdms += ' ' + padNumber(min, 2) + '\\u2032';\n  }\n  if (sec !== 0) {\n    hdms += ' ' + padNumber(sec, 2, decimals) + '\\u2033';\n  }\n  if (normalizedDegrees !== 0) {\n    hdms += ' ' + hemispheres.charAt(normalizedDegrees < 0 ? 1 : 0);\n  }\n\n  return hdms;\n}\n\n/**\n * Transforms the given {@link module:ol/coordinate~Coordinate} to a string\n * using the given string template. The strings `{x}` and `{y}` in the template\n * will be replaced with the first and second coordinate values respectively.\n *\n * Example without specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template);\n *     // out is now 'Coordinate is (8|48).'\n *\n * Example explicitly specifying the fractional digits:\n *\n *     import {format} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const template = 'Coordinate is ({x}|{y}).';\n *     const out = format(coord, template, 2);\n *     // out is now 'Coordinate is (7.85|47.98).'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {string} template A template string with `{x}` and `{y}` placeholders\n *     that will be replaced by first and second coordinate values.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Formatted coordinate.\n * @api\n */\nexport function format(coordinate, template, fractionDigits) {\n  if (coordinate) {\n    return template\n      .replace('{x}', coordinate[0].toFixed(fractionDigits))\n      .replace('{y}', coordinate[1].toFixed(fractionDigits));\n  }\n  return '';\n}\n\n/**\n * @param {Coordinate} coordinate1 First coordinate.\n * @param {Coordinate} coordinate2 Second coordinate.\n * @return {boolean} The two coordinates are equal.\n */\nexport function equals(coordinate1, coordinate2) {\n  let equals = true;\n  for (let i = coordinate1.length - 1; i >= 0; --i) {\n    if (coordinate1[i] != coordinate2[i]) {\n      equals = false;\n      break;\n    }\n  }\n  return equals;\n}\n\n/**\n * Rotate `coordinate` by `angle`. `coordinate` is modified in place and\n * returned by the function.\n *\n * Example:\n *\n *     import {rotate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const rotateRadians = Math.PI / 2; // 90 degrees\n *     rotate(coord, rotateRadians);\n *     // coord is now [-47.983333, 7.85]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} angle Angle in radian.\n * @return {Coordinate} Coordinate.\n * @api\n */\nexport function rotate(coordinate, angle) {\n  const cosAngle = Math.cos(angle);\n  const sinAngle = Math.sin(angle);\n  const x = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  const y = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  coordinate[0] = x;\n  coordinate[1] = y;\n  return coordinate;\n}\n\n/**\n * Scale `coordinate` by `scale`. `coordinate` is modified in place and returned\n * by the function.\n *\n * Example:\n *\n *     import {scale as scaleCoordinate} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const scale = 1.2;\n *     scaleCoordinate(coord, scale);\n *     // coord is now [9.42, 57.5799996]\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} scale Scale factor.\n * @return {Coordinate} Coordinate.\n */\nexport function scale(coordinate, scale) {\n  coordinate[0] *= scale;\n  coordinate[1] *= scale;\n  return coordinate;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Squared distance between coord1 and coord2.\n */\nexport function squaredDistance(coord1, coord2) {\n  const dx = coord1[0] - coord2[0];\n  const dy = coord1[1] - coord2[1];\n  return dx * dx + dy * dy;\n}\n\n/**\n * @param {Coordinate} coord1 First coordinate.\n * @param {Coordinate} coord2 Second coordinate.\n * @return {number} Distance between coord1 and coord2.\n */\nexport function distance(coord1, coord2) {\n  return Math.sqrt(squaredDistance(coord1, coord2));\n}\n\n/**\n * Calculate the squared distance from a coordinate to a line segment.\n *\n * @param {Coordinate} coordinate Coordinate of the point.\n * @param {Array<Coordinate>} segment Line segment (2\n * coordinates).\n * @return {number} Squared distance from the point to the line segment.\n */\nexport function squaredDistanceToSegment(coordinate, segment) {\n  return squaredDistance(coordinate, closestOnSegment(coordinate, segment));\n}\n\n/**\n * Format a geographic coordinate with the hemisphere, degrees, minutes, and\n * seconds.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord);\n *     // out is now '47° 58′ 60″ N 7° 50′ 60″ E'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringHDMS} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringHDMS(coord, 1);\n *     // out is now '47° 58′ 60.0″ N 7° 50′ 60.0″ E'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} Hemisphere, degrees, minutes and seconds.\n * @api\n */\nexport function toStringHDMS(coordinate, fractionDigits) {\n  if (coordinate) {\n    return (\n      degreesToStringHDMS('NS', coordinate[1], fractionDigits) +\n      ' ' +\n      degreesToStringHDMS('EW', coordinate[0], fractionDigits)\n    );\n  }\n  return '';\n}\n\n/**\n * Format a coordinate as a comma delimited string.\n *\n * Example without specifying fractional digits:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord);\n *     // out is now '8, 48'\n *\n * Example explicitly specifying 1 fractional digit:\n *\n *     import {toStringXY} from 'ol/coordinate.js';\n *\n *     const coord = [7.85, 47.983333];\n *     const out = toStringXY(coord, 1);\n *     // out is now '7.8, 48.0'\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {number} [fractionDigits] The number of digits to include\n *    after the decimal point. Default is `0`.\n * @return {string} XY.\n * @api\n */\nexport function toStringXY(coordinate, fractionDigits) {\n  return format(coordinate, '{x}, {y}', fractionDigits);\n}\n\n/**\n * Modifies the provided coordinate in-place to be within the real world\n * extent. The lower projection extent boundary is inclusive, the upper one\n * exclusive.\n *\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {Coordinate} The coordinate within the real world extent.\n */\nexport function wrapX(coordinate, projection) {\n  if (projection.canWrapX()) {\n    const worldWidth = getWidth(projection.getExtent());\n    const worldsAway = getWorldsAway(coordinate, projection, worldWidth);\n    if (worldsAway) {\n      coordinate[0] -= worldsAway * worldWidth;\n    }\n  }\n  return coordinate;\n}\n/**\n * @param {Coordinate} coordinate Coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {number} [sourceExtentWidth] Width of the source extent.\n * @return {number} Offset in world widths.\n */\nexport function getWorldsAway(coordinate, projection, sourceExtentWidth) {\n  const projectionExtent = projection.getExtent();\n  let worldsAway = 0;\n  if (\n    projection.canWrapX() &&\n    (coordinate[0] < projectionExtent[0] || coordinate[0] > projectionExtent[2])\n  ) {\n    sourceExtentWidth = sourceExtentWidth || getWidth(projectionExtent);\n    worldsAway = Math.floor(\n      (coordinate[0] - projectionExtent[0]) / sourceExtentWidth,\n    );\n  }\n  return worldsAway;\n}\n","/**\n * @module ol/easing\n */\n\n/**\n * Start slow and speed up.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeIn(t) {\n  return Math.pow(t, 3);\n}\n\n/**\n * Start fast and slow down.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function easeOut(t) {\n  return 1 - easeIn(1 - t);\n}\n\n/**\n * Start slow, speed up, and then slow down again.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function inAndOut(t) {\n  return 3 * t * t - 2 * t * t * t;\n}\n\n/**\n * Maintain a constant speed over time.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function linear(t) {\n  return t;\n}\n\n/**\n * Start slow, speed up, and at the very end slow down again.  This has the\n * same general behavior as {@link module:ol/easing.inAndOut}, but the final\n * slowdown is delayed.\n * @param {number} t Input between 0 and 1.\n * @return {number} Output between 0 and 1.\n * @api\n */\nexport function upAndDown(t) {\n  if (t < 0.5) {\n    return inAndOut(2 * t);\n  }\n  return 1 - inAndOut(2 * (t - 0.5));\n}\n","/**\n * @module ol/console\n */\n\n/**\n * @typedef {'info'|'warn'|'error'|'none'} Level\n */\n\n/**\n * @type {Object<Level, number>}\n */\nconst levels = {\n  info: 1,\n  warn: 2,\n  error: 3,\n  none: 4,\n};\n\n/**\n * @type {number}\n */\nlet level = levels.info;\n\n/**\n * Set the logging level.  By default, the level is set to 'info' and all\n * messages will be logged.  Set to 'warn' to only display warnings and errors.\n * Set to 'error' to only display errors.  Set to 'none' to silence all messages.\n *\n * @param {Level} l The new level.\n */\nexport function setLevel(l) {\n  level = levels[l];\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function log(...args) {\n  if (level > levels.info) {\n    return;\n  }\n  console.log(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function warn(...args) {\n  if (level > levels.warn) {\n    return;\n  }\n  console.warn(...args); // eslint-disable-line no-console\n}\n\n/**\n * @param  {...any} args Arguments to log\n */\nexport function error(...args) {\n  if (level > levels.error) {\n    return;\n  }\n  console.error(...args); // eslint-disable-line no-console\n}\n","/**\n * @module ol/proj/Units\n */\n\n/**\n * @typedef {'radians' | 'degrees' | 'ft' | 'm' | 'pixels' | 'tile-pixels' | 'us-ft'} Units\n * Projection units.\n */\n\n/**\n * See http://duff.ess.washington.edu/data/raster/drg/docs/geotiff.txt\n * @type {Object<number, Units>}\n */\nconst unitByCode = {\n  '9001': 'm',\n  '9002': 'ft',\n  '9003': 'us-ft',\n  '9101': 'radians',\n  '9102': 'degrees',\n};\n\n/**\n * @param {number} code Unit code.\n * @return {Units} Units.\n */\nexport function fromCode(code) {\n  return unitByCode[code];\n}\n\n/**\n * @typedef {Object} MetersPerUnitLookup\n * @property {number} radians Radians\n * @property {number} degrees Degrees\n * @property {number} ft  Feet\n * @property {number} m Meters\n * @property {number} us-ft US feet\n */\n\n/**\n * Meters per unit lookup table.\n * @const\n * @type {MetersPerUnitLookup}\n * @api\n */\nexport const METERS_PER_UNIT = {\n  // use the radius of the Normal sphere\n  'radians': 6370997 / (2 * Math.PI),\n  'degrees': (2 * Math.PI * 6370997) / 360,\n  'ft': 0.3048,\n  'm': 1,\n  'us-ft': 1200 / 3937,\n};\n","/**\n * @module ol/proj/Projection\n */\nimport {METERS_PER_UNIT} from './Units.js';\n\n/**\n * The function is called with a `number` view resolution and a\n * {@link module:ol/coordinate~Coordinate} as arguments, and returns the `number` resolution\n * in projection units at the passed coordinate.\n * @typedef {function(number, import(\"../coordinate.js\").Coordinate):number} GetPointResolution\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} code The SRS identifier code, e.g. `EPSG:4326`.\n * @property {import(\"./Units.js\").Units} [units] Units. Required unless a\n * proj4 projection is defined for `code`.\n * @property {import(\"../extent.js\").Extent} [extent] The validity extent for the SRS.\n * @property {string} [axisOrientation='enu'] The axis orientation as specified in Proj4.\n * @property {boolean} [global=false] Whether the projection is valid for the whole globe.\n * @property {number} [metersPerUnit] The meters per unit for the SRS.\n * If not provided, the `units` are used to get the meters per unit from the {@link METERS_PER_UNIT}\n * lookup table.\n * @property {import(\"../extent.js\").Extent} [worldExtent] The world extent for the SRS.\n * @property {GetPointResolution} [getPointResolution]\n * Function to determine resolution at a point. The function is called with a\n * `number` view resolution and a {@link module:ol/coordinate~Coordinate} as arguments, and returns\n * the `number` resolution in projection units at the passed coordinate. If this is `undefined`,\n * the default {@link module:ol/proj.getPointResolution} function will be used.\n */\n\n/**\n * @classdesc\n * In most cases, you should not need to create instances of this class.\n * Instead, where projection information is required, you can use a string\n * projection code or identifier (e.g. `EPSG:4326`) instead of a projection\n * instance.\n *\n * The library includes support for transforming coordinates between the following\n * projections:\n *\n *  WGS 84 / Geographic - Using codes `EPSG:4326`, `CRS:84`, `urn:ogc:def:crs:EPSG:6.6:4326`,\n *    `urn:ogc:def:crs:OGC:1.3:CRS84`, `urn:ogc:def:crs:OGC:2:84`, `http://www.opengis.net/gml/srs/epsg.xml#4326`,\n *    or `urn:x-ogc:def:crs:EPSG:4326`\n *  WGS 84 / Spherical Mercator - Using codes `EPSG:3857`, `EPSG:102100`, `EPSG:102113`, `EPSG:900913`,\n *    `urn:ogc:def:crs:EPSG:6.18:3:3857`, or `http://www.opengis.net/gml/srs/epsg.xml#3857`\n *  WGS 84 / UTM zones - Using codes `EPSG:32601` through `EPSG:32660` for northern zones\n *    and `EPSG:32701` through `EPSG:32760` for southern zones. Note that the built-in UTM transforms\n *    are lower accuracy (with errors on the order of 0.1 m) than those that you might get in a\n *    library like [proj4js](https://github.com/proj4js/proj4js).\n *\n * For additional projection support, or to use higher accuracy transforms than the built-in ones, you can use\n * the [proj4js](https://github.com/proj4js/proj4js) library. With `proj4js`, after adding any new projection\n * definitions, call the {@link module:ol/proj/proj4.register} function.\n *\n * You can use the {@link module:ol/proj.get} function to retrieve a projection instance\n * for one of the registered projections.\n *\n * @api\n */\nclass Projection {\n  /**\n   * @param {Options} options Projection options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.code_ = options.code;\n\n    /**\n     * Units of projected coordinates. When set to `TILE_PIXELS`, a\n     * `this.extent_` and `this.worldExtent_` must be configured properly for each\n     * tile.\n     * @private\n     * @type {import(\"./Units.js\").Units}\n     */\n    this.units_ = /** @type {import(\"./Units.js\").Units} */ (options.units);\n\n    /**\n     * Validity extent of the projection in projected coordinates. For projections\n     * with `TILE_PIXELS` units, this is the extent of the tile in\n     * tile pixel space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = options.extent !== undefined ? options.extent : null;\n\n    /**\n     * Extent of the world in EPSG:4326. For projections with\n     * `TILE_PIXELS` units, this is the extent of the tile in\n     * projected coordinate space.\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.worldExtent_ =\n      options.worldExtent !== undefined ? options.worldExtent : null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.axisOrientation_ =\n      options.axisOrientation !== undefined ? options.axisOrientation : 'enu';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.global_ = options.global !== undefined ? options.global : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.canWrapX_ = !!(this.global_ && this.extent_);\n\n    /**\n     * @private\n     * @type {GetPointResolution|undefined}\n     */\n    this.getPointResolutionFunc_ = options.getPointResolution;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.defaultTileGrid_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.metersPerUnit_ = options.metersPerUnit;\n  }\n\n  /**\n   * @return {boolean} The projection is suitable for wrapping the x-axis\n   */\n  canWrapX() {\n    return this.canWrapX_;\n  }\n\n  /**\n   * Get the code for this projection, e.g. 'EPSG:4326'.\n   * @return {string} Code.\n   * @api\n   */\n  getCode() {\n    return this.code_;\n  }\n\n  /**\n   * Get the validity extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the units of this projection.\n   * @return {import(\"./Units.js\").Units} Units.\n   * @api\n   */\n  getUnits() {\n    return this.units_;\n  }\n\n  /**\n   * Get the amount of meters per unit of this projection.  If the projection is\n   * not configured with `metersPerUnit` or a units identifier, the return is\n   * `undefined`.\n   * @return {number|undefined} Meters.\n   * @api\n   */\n  getMetersPerUnit() {\n    return this.metersPerUnit_ || METERS_PER_UNIT[this.units_];\n  }\n\n  /**\n   * Get the world extent for this projection.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getWorldExtent() {\n    return this.worldExtent_;\n  }\n\n  /**\n   * Get the axis orientation of this projection.\n   * Example values are:\n   * enu - the default easting, northing, elevation.\n   * neu - northing, easting, up - useful for \"lat/long\" geographic coordinates,\n   *     or south orientated transverse mercator.\n   * wnu - westing, northing, up - some planetary coordinate systems have\n   *     \"west positive\" coordinate systems\n   * @return {string} Axis orientation.\n   * @api\n   */\n  getAxisOrientation() {\n    return this.axisOrientation_;\n  }\n\n  /**\n   * Is this projection a global projection which spans the whole world?\n   * @return {boolean} Whether the projection is global.\n   * @api\n   */\n  isGlobal() {\n    return this.global_;\n  }\n\n  /**\n   * Set if the projection is a global projection which spans the whole world\n   * @param {boolean} global Whether the projection is global.\n   * @api\n   */\n  setGlobal(global) {\n    this.global_ = global;\n    this.canWrapX_ = !!(global && this.extent_);\n  }\n\n  /**\n   * @return {import(\"../tilegrid/TileGrid.js\").default} The default tile grid.\n   */\n  getDefaultTileGrid() {\n    return this.defaultTileGrid_;\n  }\n\n  /**\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tileGrid The default tile grid.\n   */\n  setDefaultTileGrid(tileGrid) {\n    this.defaultTileGrid_ = tileGrid;\n  }\n\n  /**\n   * Set the validity extent for this projection.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  setExtent(extent) {\n    this.extent_ = extent;\n    this.canWrapX_ = !!(this.global_ && extent);\n  }\n\n  /**\n   * Set the world extent for this projection.\n   * @param {import(\"../extent.js\").Extent} worldExtent World extent\n   *     [minlon, minlat, maxlon, maxlat].\n   * @api\n   */\n  setWorldExtent(worldExtent) {\n    this.worldExtent_ = worldExtent;\n  }\n\n  /**\n   * Set the getPointResolution function (see {@link module:ol/proj.getPointResolution}\n   * for this projection.\n   * @param {function(number, import(\"../coordinate.js\").Coordinate):number} func Function\n   * @api\n   */\n  setGetPointResolution(func) {\n    this.getPointResolutionFunc_ = func;\n  }\n\n  /**\n   * Get the custom point resolution function for this projection (if set).\n   * @return {GetPointResolution|undefined} The custom point\n   * resolution function (if set).\n   */\n  getPointResolutionFunc() {\n    return this.getPointResolutionFunc_;\n  }\n}\n\nexport default Projection;\n","/**\n * @module ol/proj/epsg3857\n */\nimport Projection from './Projection.js';\n\n/**\n * Radius of WGS84 sphere\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * @const\n * @type {number}\n */\nexport const HALF_SIZE = Math.PI * RADIUS;\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-HALF_SIZE, -HALF_SIZE, HALF_SIZE, HALF_SIZE];\n\n/**\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const WORLD_EXTENT = [-180, -85, 180, 85];\n\n/**\n * Maximum safe value in y direction\n * @const\n * @type {number}\n */\nexport const MAX_SAFE_Y = RADIUS * Math.log(Math.tan(Math.PI / 2));\n\n/**\n * @classdesc\n * Projection object for web/spherical Mercator (EPSG:3857).\n */\nclass EPSG3857Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   */\n  constructor(code) {\n    super({\n      code: code,\n      units: 'm',\n      extent: EXTENT,\n      global: true,\n      worldExtent: WORLD_EXTENT,\n      getPointResolution: function (resolution, point) {\n        return resolution / Math.cosh(point[1] / RADIUS);\n      },\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:3857.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG3857Projection('EPSG:3857'),\n  new EPSG3857Projection('EPSG:102100'),\n  new EPSG3857Projection('EPSG:102113'),\n  new EPSG3857Projection('EPSG:900913'),\n  new EPSG3857Projection('http://www.opengis.net/def/crs/EPSG/0/3857'),\n  new EPSG3857Projection('http://www.opengis.net/gml/srs/epsg.xml#3857'),\n];\n\n/**\n * Transformation from EPSG:4326 to EPSG:3857.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function fromEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (HALF_SIZE * input[i]) / 180;\n    let y = RADIUS * Math.log(Math.tan((Math.PI * (+input[i + 1] + 90)) / 360));\n    if (y > MAX_SAFE_Y) {\n      y = MAX_SAFE_Y;\n    } else if (y < -MAX_SAFE_Y) {\n      y = -MAX_SAFE_Y;\n    }\n    output[i + 1] = y;\n  }\n  return output;\n}\n\n/**\n * Transformation from EPSG:3857 to EPSG:4326.\n *\n * @param {Array<number>} input Input array of coordinate values.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @param {number} [dimension] Dimension (default is `2`).\n * @param {number} [stride] Stride (default is `dimension`).\n * @return {Array<number>} Output array of coordinate values.\n */\nexport function toEPSG4326(input, output, dimension, stride) {\n  const length = input.length;\n  dimension = dimension > 1 ? dimension : 2;\n  stride = stride ?? dimension;\n  if (output === undefined) {\n    if (dimension > 2) {\n      // preserve values beyond second dimension\n      output = input.slice();\n    } else {\n      output = new Array(length);\n    }\n  }\n  for (let i = 0; i < length; i += stride) {\n    output[i] = (180 * input[i]) / HALF_SIZE;\n    output[i + 1] =\n      (360 * Math.atan(Math.exp(input[i + 1] / RADIUS))) / Math.PI - 90;\n  }\n  return output;\n}\n","/**\n * @module ol/proj/epsg4326\n */\nimport Projection from './Projection.js';\n\n/**\n * Semi-major radius of the WGS84 ellipsoid.\n *\n * @const\n * @type {number}\n */\nexport const RADIUS = 6378137;\n\n/**\n * Extent of the EPSG:4326 projection which is the whole world.\n *\n * @const\n * @type {import(\"../extent.js\").Extent}\n */\nexport const EXTENT = [-180, -90, 180, 90];\n\n/**\n * @const\n * @type {number}\n */\nexport const METERS_PER_UNIT = (Math.PI * RADIUS) / 180;\n\n/**\n * @classdesc\n * Projection object for WGS84 geographic coordinates (EPSG:4326).\n *\n * Note that OpenLayers does not strictly comply with the EPSG definition.\n * The EPSG registry defines 4326 as a CRS for Latitude,Longitude (y,x).\n * OpenLayers treats EPSG:4326 as a pseudo-projection, with x,y coordinates.\n */\nclass EPSG4326Projection extends Projection {\n  /**\n   * @param {string} code Code.\n   * @param {string} [axisOrientation] Axis orientation.\n   */\n  constructor(code, axisOrientation) {\n    super({\n      code: code,\n      units: 'degrees',\n      extent: EXTENT,\n      axisOrientation: axisOrientation,\n      global: true,\n      metersPerUnit: METERS_PER_UNIT,\n      worldExtent: EXTENT,\n    });\n  }\n}\n\n/**\n * Projections equal to EPSG:4326.\n *\n * @const\n * @type {Array<import(\"./Projection.js\").default>}\n */\nexport const PROJECTIONS = [\n  new EPSG4326Projection('CRS:84'),\n  new EPSG4326Projection('EPSG:4326', 'neu'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:1.3:CRS84'),\n  new EPSG4326Projection('urn:ogc:def:crs:OGC:2:84'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/OGC/1.3/CRS84'),\n  new EPSG4326Projection('http://www.opengis.net/gml/srs/epsg.xml#4326', 'neu'),\n  new EPSG4326Projection('http://www.opengis.net/def/crs/EPSG/0/4326', 'neu'),\n];\n","/**\n * @module ol/proj/projections\n */\n\n/**\n * @type {Object<string, import(\"./Projection.js\").default>}\n */\nlet cache = {};\n\n/**\n * Clear the projections cache.\n */\nexport function clear() {\n  cache = {};\n}\n\n/**\n * Get a cached projection by code.\n * @param {string} code The code for the projection.\n * @return {import(\"./Projection.js\").default|null} The projection (if cached).\n */\nexport function get(code) {\n  return (\n    cache[code] ||\n    cache[code.replace(/urn:(x-)?ogc:def:crs:EPSG:(.*:)?(\\w+)$/, 'EPSG:$3')] ||\n    null\n  );\n}\n\n/**\n * Add a projection to the cache.\n * @param {string} code The projection code.\n * @param {import(\"./Projection.js\").default} projection The projection to cache.\n */\nexport function add(code, projection) {\n  cache[code] = projection;\n}\n","/**\n * @module ol/proj/transforms\n */\nimport {isEmpty} from '../obj.js';\n\n/**\n * @private\n * @type {!Object<string, Object<string, import(\"../proj.js\").TransformFunction>>}\n */\nlet transforms = {};\n\n/**\n * Clear the transform cache.\n */\nexport function clear() {\n  transforms = {};\n}\n\n/**\n * Registers a conversion function to convert coordinates from the source\n * projection to the destination projection.\n *\n * @param {import(\"./Projection.js\").default} source Source.\n * @param {import(\"./Projection.js\").default} destination Destination.\n * @param {import(\"../proj.js\").TransformFunction} transformFn Transform.\n */\nexport function add(source, destination, transformFn) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  if (!(sourceCode in transforms)) {\n    transforms[sourceCode] = {};\n  }\n  transforms[sourceCode][destinationCode] = transformFn;\n}\n\n/**\n * Unregisters the conversion function to convert coordinates from the source\n * projection to the destination projection.  This method is used to clean up\n * cached transforms during testing.\n *\n * @param {import(\"./Projection.js\").default} source Source projection.\n * @param {import(\"./Projection.js\").default} destination Destination projection.\n * @return {import(\"../proj.js\").TransformFunction} transformFn The unregistered transform.\n */\nexport function remove(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  const transform = transforms[sourceCode][destinationCode];\n  delete transforms[sourceCode][destinationCode];\n  if (isEmpty(transforms[sourceCode])) {\n    delete transforms[sourceCode];\n  }\n  return transform;\n}\n\n/**\n * Get a transform given a source code and a destination code.\n * @param {string} sourceCode The code for the source projection.\n * @param {string} destinationCode The code for the destination projection.\n * @return {import(\"../proj.js\").TransformFunction|null} The transform function (if found).\n */\nexport function get(sourceCode, destinationCode) {\n  if (sourceCode in transforms && destinationCode in transforms[sourceCode]) {\n    return transforms[sourceCode][destinationCode];\n  }\n  return null;\n}\n","/**\n * @module ol/proj/utm\n */\n\n/**\n * Adapted from https://github.com/Turbo87/utm\n * Copyright (c) 2012-2017 Tobias Bieniek\n *\n * The functions here provide approximate transforms to and from UTM.\n * They are not appropriate for use beyond the validity extend of a UTM\n * zone, and the accuracy of the transform decreases toward the zone\n * edges.\n */\n\nimport {toDegrees, toRadians, wrap} from '../math.js';\nimport Projection from './Projection.js';\n\n/**\n * @typedef {Object} UTMZone\n * @property {number} number The zone number (1 - 60).\n * @property {boolean} north The northern hemisphere.\n */\n\nconst K0 = 0.9996;\n\nconst E = 0.00669438;\nconst E2 = E * E;\nconst E3 = E2 * E;\nconst E_P2 = E / (1 - E);\n\nconst SQRT_E = Math.sqrt(1 - E);\nconst _E = (1 - SQRT_E) / (1 + SQRT_E);\nconst _E2 = _E * _E;\nconst _E3 = _E2 * _E;\nconst _E4 = _E3 * _E;\nconst _E5 = _E4 * _E;\n\nconst M1 = 1 - E / 4 - (3 * E2) / 64 - (5 * E3) / 256;\nconst M2 = (3 * E) / 8 + (3 * E2) / 32 + (45 * E3) / 1024;\nconst M3 = (15 * E2) / 256 + (45 * E3) / 1024;\nconst M4 = (35 * E3) / 3072;\n\nconst P2 = (3 / 2) * _E - (27 / 32) * _E3 + (269 / 512) * _E5;\nconst P3 = (21 / 16) * _E2 - (55 / 32) * _E4;\nconst P4 = (151 / 96) * _E3 - (417 / 128) * _E5;\nconst P5 = (1097 / 512) * _E4;\n\nconst R = 6378137;\n\n/**\n * @param {number} easting Easting value of coordinate.\n * @param {number} northing Northing value of coordinate.\n * @param {UTMZone} zone The UTM zone.\n * @return {import(\"../coordinate.js\").Coordinate} The transformed coordinate.\n */\nfunction toLonLat(easting, northing, zone) {\n  const x = easting - 500000;\n  const y = zone.north ? northing : northing - 10000000;\n\n  const m = y / K0;\n  const mu = m / (R * M1);\n\n  const pRad =\n    mu +\n    P2 * Math.sin(2 * mu) +\n    P3 * Math.sin(4 * mu) +\n    P4 * Math.sin(6 * mu) +\n    P5 * Math.sin(8 * mu);\n\n  const pSin = Math.sin(pRad);\n  const pSin2 = pSin * pSin;\n\n  const pCos = Math.cos(pRad);\n\n  const pTan = pSin / pCos;\n  const pTan2 = pTan * pTan;\n  const pTan4 = pTan2 * pTan2;\n\n  const epSin = 1 - E * pSin2;\n  const epSinSqrt = Math.sqrt(1 - E * pSin2);\n\n  const n = R / epSinSqrt;\n  const r = (1 - E) / epSin;\n\n  const c = E_P2 * pCos ** 2;\n  const c2 = c * c;\n\n  const d = x / (n * K0);\n  const d2 = d * d;\n  const d3 = d2 * d;\n  const d4 = d3 * d;\n  const d5 = d4 * d;\n  const d6 = d5 * d;\n\n  const latitude =\n    pRad -\n    (pTan / r) *\n      (d2 / 2 - (d4 / 24) * (5 + 3 * pTan2 + 10 * c - 4 * c2 - 9 * E_P2)) +\n    (d6 / 720) * (61 + 90 * pTan2 + 298 * c + 45 * pTan4 - 252 * E_P2 - 3 * c2);\n\n  let longitude =\n    (d -\n      (d3 / 6) * (1 + 2 * pTan2 + c) +\n      (d5 / 120) * (5 - 2 * c + 28 * pTan2 - 3 * c2 + 8 * E_P2 + 24 * pTan4)) /\n    pCos;\n\n  longitude = wrap(\n    longitude + toRadians(zoneToCentralLongitude(zone.number)),\n    -Math.PI,\n    Math.PI,\n  );\n\n  return [toDegrees(longitude), toDegrees(latitude)];\n}\n\nconst MIN_LATITUDE = -80;\nconst MAX_LATITUDE = 84;\nconst MIN_LONGITUDE = -180;\nconst MAX_LONGITUDE = 180;\n\n/**\n * @param {number} longitude The longitude.\n * @param {number} latitude The latitude.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../coordinate.js').Coordinate} The UTM coordinate.\n */\nfunction fromLonLat(longitude, latitude, zone) {\n  longitude = wrap(longitude, MIN_LONGITUDE, MAX_LONGITUDE);\n\n  if (latitude < MIN_LATITUDE) {\n    latitude = MIN_LATITUDE;\n  } else if (latitude > MAX_LATITUDE) {\n    latitude = MAX_LATITUDE;\n  }\n\n  const latRad = toRadians(latitude);\n  const latSin = Math.sin(latRad);\n  const latCos = Math.cos(latRad);\n\n  const latTan = latSin / latCos;\n  const latTan2 = latTan * latTan;\n  const latTan4 = latTan2 * latTan2;\n\n  const lonRad = toRadians(longitude);\n  const centralLon = zoneToCentralLongitude(zone.number);\n  const centralLonRad = toRadians(centralLon);\n\n  const n = R / Math.sqrt(1 - E * latSin ** 2);\n  const c = E_P2 * latCos ** 2;\n\n  const a = latCos * wrap(lonRad - centralLonRad, -Math.PI, Math.PI);\n  const a2 = a * a;\n  const a3 = a2 * a;\n  const a4 = a3 * a;\n  const a5 = a4 * a;\n  const a6 = a5 * a;\n\n  const m =\n    R *\n    (M1 * latRad -\n      M2 * Math.sin(2 * latRad) +\n      M3 * Math.sin(4 * latRad) -\n      M4 * Math.sin(6 * latRad));\n\n  const easting =\n    K0 *\n      n *\n      (a +\n        (a3 / 6) * (1 - latTan2 + c) +\n        (a5 / 120) * (5 - 18 * latTan2 + latTan4 + 72 * c - 58 * E_P2)) +\n    500000;\n\n  let northing =\n    K0 *\n    (m +\n      n *\n        latTan *\n        (a2 / 2 +\n          (a4 / 24) * (5 - latTan2 + 9 * c + 4 * c ** 2) +\n          (a6 / 720) * (61 - 58 * latTan2 + latTan4 + 600 * c - 330 * E_P2)));\n\n  if (!zone.north) {\n    northing += 10000000;\n  }\n\n  return [easting, northing];\n}\n\n/**\n * @param {number} zone The zone number.\n * @return {number} The central longitude in degrees.\n */\nfunction zoneToCentralLongitude(zone) {\n  return (zone - 1) * 6 - 180 + 3;\n}\n\n/**\n * @type {Array<RegExp>}\n */\nconst epsgRegExes = [\n  /^EPSG:(\\d+)$/,\n  /^urn:ogc:def:crs:EPSG::(\\d+)$/,\n  /^http:\\/\\/www\\.opengis\\.net\\/def\\/crs\\/EPSG\\/0\\/(\\d+)$/,\n];\n\n/**\n * @param {string} code The projection code.\n * @return {UTMZone|null} The UTM zone info (or null if not UTM).\n */\nexport function zoneFromCode(code) {\n  let epsgId = 0;\n  for (const re of epsgRegExes) {\n    const match = code.match(re);\n    if (match) {\n      epsgId = parseInt(match[1]);\n      break;\n    }\n  }\n  if (!epsgId) {\n    return null;\n  }\n\n  let number = 0;\n  let north = false;\n  if (epsgId > 32700 && epsgId < 32761) {\n    number = epsgId - 32700;\n  } else if (epsgId > 32600 && epsgId < 32661) {\n    north = true;\n    number = epsgId - 32600;\n  }\n  if (!number) {\n    return null;\n  }\n\n  return {number, north};\n}\n\n/**\n * @param {function(number, number, UTMZone): import('../coordinate.js').Coordinate} transformer The transformer.\n * @param {UTMZone} zone The UTM zone.\n * @return {import('../proj.js').TransformFunction} The transform function.\n */\nfunction makeTransformFunction(transformer, zone) {\n  return function (input, output, dimension, stride) {\n    const length = input.length;\n    dimension = dimension > 1 ? dimension : 2;\n    stride = stride ?? dimension;\n    if (!output) {\n      if (dimension > 2) {\n        output = input.slice();\n      } else {\n        output = new Array(length);\n      }\n    }\n    for (let i = 0; i < length; i += stride) {\n      const x = input[i];\n      const y = input[i + 1];\n      const coord = transformer(x, y, zone);\n      output[i] = coord[0];\n      output[i + 1] = coord[1];\n    }\n    return output;\n  };\n}\n\n/**\n * @param {string} code The projection code.\n * @return {import('./Projection.js').default|null} A projection or null if unable to create one.\n */\nexport function makeProjection(code) {\n  const zone = zoneFromCode(code);\n  if (!zone) {\n    return null;\n  }\n  return new Projection({code, units: 'm'});\n}\n\n/**\n * @param {import('./Projection.js').default} projection The projection.\n * @return {import('../proj.js').Transforms|null} The transforms lookup or null if unable to handle projection.\n */\nexport function makeTransforms(projection) {\n  const zone = zoneFromCode(projection.getCode());\n  if (!zone) {\n    return null;\n  }\n\n  return {\n    forward: makeTransformFunction(fromLonLat, zone),\n    inverse: makeTransformFunction(toLonLat, zone),\n  };\n}\n","/**\n * @module ol/sphere\n */\nimport {toDegrees, toRadians} from './math.js';\n\n/**\n * Object literal with options for the {@link getLength} or {@link getArea}\n * functions.\n * @typedef {Object} SphereMetricOptions\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857']\n * Projection of the  geometry.  By default, the geometry is assumed to be in\n * Web Mercator.\n * @property {number} [radius=6371008.8] Sphere radius.  By default, the\n * [mean Earth radius](https://en.wikipedia.org/wiki/Earth_radius#Mean_radius)\n * for the WGS84 ellipsoid is used.\n */\n\n/**\n * The mean Earth radius (1/3 * (2a + b)) for the WGS84 ellipsoid.\n * https://en.wikipedia.org/wiki/Earth_radius#Mean_radius\n * @type {number}\n */\nexport const DEFAULT_RADIUS = 6371008.8;\n\n/**\n * Get the great circle distance (in meters) between two geographic coordinates.\n * @param {Array} c1 Starting coordinate.\n * @param {Array} c2 Ending coordinate.\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {number} The great circle distance between the points (in meters).\n * @api\n */\nexport function getDistance(c1, c2, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lat2 = toRadians(c2[1]);\n  const deltaLatBy2 = (lat2 - lat1) / 2;\n  const deltaLonBy2 = toRadians(c2[0] - c1[0]) / 2;\n  const a =\n    Math.sin(deltaLatBy2) * Math.sin(deltaLatBy2) +\n    Math.sin(deltaLonBy2) *\n      Math.sin(deltaLonBy2) *\n      Math.cos(lat1) *\n      Math.cos(lat2);\n  return 2 * radius * Math.atan2(Math.sqrt(a), Math.sqrt(1 - a));\n}\n\n/**\n * Get the cumulative great circle length of linestring coordinates (geographic).\n * @param {Array} coordinates Linestring coordinates.\n * @param {number} radius The sphere radius to use.\n * @return {number} The length (in meters).\n */\nfunction getLengthInternal(coordinates, radius) {\n  let length = 0;\n  for (let i = 0, ii = coordinates.length; i < ii - 1; ++i) {\n    length += getDistance(coordinates[i], coordinates[i + 1], radius);\n  }\n  return length;\n}\n\n/**\n * Get the spherical length of a geometry.  This length is the sum of the\n * great circle distances between coordinates.  For polygons, the length is\n * the sum of all rings.  For points, the length is zero.  For multi-part\n * geometries, the length is the sum of the length of each part.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the\n * length calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n * You can change this by providing a `projection` option.\n * @return {number} The spherical length (in meters).\n * @api\n */\nexport function getLength(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let length = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint': {\n      break;\n    }\n    case 'LineString':\n    case 'LinearRing': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      length = getLengthInternal(coordinates, radius);\n      break;\n    }\n    case 'MultiLineString':\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        length += getLengthInternal(coordinates[i], radius);\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        for (j = 0, jj = coords.length; j < jj; ++j) {\n          length += getLengthInternal(coords[j], radius);\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        length += getLength(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return length;\n}\n\n/**\n * Returns the spherical area for a list of coordinates.\n *\n * [Reference](https://trs.jpl.nasa.gov/handle/2014/40409)\n * Robert. G. Chamberlain and William H. Duquette, \"Some Algorithms for\n * Polygons on a Sphere\", JPL Publication 07-03, Jet Propulsion\n * Laboratory, Pasadena, CA, June 2007\n *\n * @param {Array<import(\"./coordinate.js\").Coordinate>} coordinates List of coordinates of a linear\n * ring. If the ring is oriented clockwise, the area will be positive,\n * otherwise it will be negative.\n * @param {number} radius The sphere radius.\n * @return {number} Area (in square meters).\n */\nfunction getAreaInternal(coordinates, radius) {\n  let area = 0;\n  const len = coordinates.length;\n  let x1 = coordinates[len - 1][0];\n  let y1 = coordinates[len - 1][1];\n  for (let i = 0; i < len; i++) {\n    const x2 = coordinates[i][0];\n    const y2 = coordinates[i][1];\n    area +=\n      toRadians(x2 - x1) *\n      (2 + Math.sin(toRadians(y1)) + Math.sin(toRadians(y2)));\n    x1 = x2;\n    y1 = y2;\n  }\n  return (area * radius * radius) / 2.0;\n}\n\n/**\n * Get the spherical area of a geometry.  This is the area (in meters) assuming\n * that polygon edges are segments of great circles on a sphere.\n * @param {import(\"./geom/Geometry.js\").default} geometry A geometry.\n * @param {SphereMetricOptions} [options] Options for the area\n *     calculation.  By default, geometries are assumed to be in 'EPSG:3857'.\n *     You can change this by providing a `projection` option.\n * @return {number} The spherical area (in square meters).\n * @api\n */\nexport function getArea(geometry, options) {\n  options = options || {};\n  const radius = options.radius || DEFAULT_RADIUS;\n  const projection = options.projection || 'EPSG:3857';\n  const type = geometry.getType();\n  if (type !== 'GeometryCollection') {\n    geometry = geometry.clone().transform(projection, 'EPSG:4326');\n  }\n  let area = 0;\n  let coordinates, coords, i, ii, j, jj;\n  switch (type) {\n    case 'Point':\n    case 'MultiPoint':\n    case 'LineString':\n    case 'MultiLineString':\n    case 'LinearRing': {\n      break;\n    }\n    case 'Polygon': {\n      coordinates = /** @type {import(\"./geom/Polygon.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      area = Math.abs(getAreaInternal(coordinates[0], radius));\n      for (i = 1, ii = coordinates.length; i < ii; ++i) {\n        area -= Math.abs(getAreaInternal(coordinates[i], radius));\n      }\n      break;\n    }\n    case 'MultiPolygon': {\n      coordinates = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n        geometry\n      ).getCoordinates();\n      for (i = 0, ii = coordinates.length; i < ii; ++i) {\n        coords = coordinates[i];\n        area += Math.abs(getAreaInternal(coords[0], radius));\n        for (j = 1, jj = coords.length; j < jj; ++j) {\n          area -= Math.abs(getAreaInternal(coords[j], radius));\n        }\n      }\n      break;\n    }\n    case 'GeometryCollection': {\n      const geometries =\n        /** @type {import(\"./geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries();\n      for (i = 0, ii = geometries.length; i < ii; ++i) {\n        area += getArea(geometries[i], options);\n      }\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return area;\n}\n\n/**\n * Returns the coordinate at the given distance and bearing from `c1`.\n *\n * @param {import(\"./coordinate.js\").Coordinate} c1 The origin point (`[lon, lat]` in degrees).\n * @param {number} distance The great-circle distance between the origin\n *     point and the target point.\n * @param {number} bearing The bearing (in radians).\n * @param {number} [radius] The sphere radius to use.  Defaults to the Earth's\n *     mean radius using the WGS84 ellipsoid.\n * @return {import(\"./coordinate.js\").Coordinate} The target point.\n */\nexport function offset(c1, distance, bearing, radius) {\n  radius = radius || DEFAULT_RADIUS;\n  const lat1 = toRadians(c1[1]);\n  const lon1 = toRadians(c1[0]);\n  const dByR = distance / radius;\n  const lat = Math.asin(\n    Math.sin(lat1) * Math.cos(dByR) +\n      Math.cos(lat1) * Math.sin(dByR) * Math.cos(bearing),\n  );\n  const lon =\n    lon1 +\n    Math.atan2(\n      Math.sin(bearing) * Math.sin(dByR) * Math.cos(lat1),\n      Math.cos(dByR) - Math.sin(lat1) * Math.sin(lat),\n    );\n  return [toDegrees(lon), toDegrees(lat)];\n}\n","/**\n * @module ol/proj\n */\n\n/**\n * The ol/proj module stores:\n * a list of {@link module:ol/proj/Projection~Projection}\n * objects, one for each projection supported by the application\n * a list of transform functions needed to convert coordinates in one projection\n * into another.\n *\n * The static functions are the methods used to maintain these.\n * Each transform function can handle not only simple coordinate pairs, but also\n * large arrays of coordinates such as vector geometries.\n *\n * When loaded, the library adds projection objects for EPSG:4326 (WGS84\n * geographic coordinates) and EPSG:3857 (Web or Spherical Mercator, as used\n * for example by Bing Maps or OpenStreetMap), together with the relevant\n * transform functions.\n *\n * Additional transforms may be added by using the http://proj4js.org/\n * library (version 2.2 or later). You can use the full build supplied by\n * Proj4js, or create a custom build to support those projections you need; see\n * the Proj4js website for how to do this. You also need the Proj4js definitions\n * for the required projections. These definitions can be obtained from\n * https://epsg.io/, and are a JS function, so can be loaded in a script\n * tag (as in the examples) or pasted into your application.\n *\n * After all required projection definitions are added to proj4's registry (by\n * using `proj4.defs()`), simply call `register(proj4)` from the `ol/proj/proj4`\n * package. Existing transforms are not changed by this function. See\n * examples/wms-image-custom-proj for an example of this.\n *\n * Additional projection definitions can be registered with `proj4.defs()` any\n * time. Just make sure to call `register(proj4)` again; for example, with user-supplied data where you don't\n * know in advance what projections are needed, you can initially load minimal\n * support and then load whichever are requested.\n *\n * Note that Proj4js does not support projection extents. If you want to add\n * one for creating default tile grids, you can add it after the Projection\n * object has been created with `setExtent`, for example,\n * `get('EPSG:1234').setExtent(extent)`.\n *\n * In addition to Proj4js support, any transform functions can be added with\n * {@link module:ol/proj.addCoordinateTransforms}. To use this, you must first create\n * a {@link module:ol/proj/Projection~Projection} object for the new projection and add it with\n * {@link module:ol/proj.addProjection}. You can then add the forward and inverse\n * functions with {@link module:ol/proj.addCoordinateTransforms}. See\n * examples/wms-custom-proj for an example of this.\n *\n * Note that if no transforms are needed and you only need to define the\n * projection, just add a {@link module:ol/proj/Projection~Projection} with\n * {@link module:ol/proj.addProjection}. See examples/wms-no-proj for an example of\n * this.\n */\nimport {warn} from './console.js';\nimport {equals, getWorldsAway} from './coordinate.js';\nimport {applyTransform, getWidth} from './extent.js';\nimport {clamp, modulo} from './math.js';\nimport Projection from './proj/Projection.js';\nimport {METERS_PER_UNIT} from './proj/Units.js';\nimport {\n  PROJECTIONS as EPSG3857_PROJECTIONS,\n  fromEPSG4326,\n  toEPSG4326,\n} from './proj/epsg3857.js';\nimport {PROJECTIONS as EPSG4326_PROJECTIONS} from './proj/epsg4326.js';\nimport {\n  add as addProj,\n  clear as clearProj,\n  get as getProj,\n} from './proj/projections.js';\nimport {\n  add as addTransformFunc,\n  clear as clearTransformFuncs,\n  get as getTransformFunc,\n} from './proj/transforms.js';\nimport {\n  makeProjection as makeUTMProjection,\n  makeTransforms as makeUTMTransforms,\n} from './proj/utm.js';\nimport {getDistance} from './sphere.js';\n\n/**\n * A projection as {@link module:ol/proj/Projection~Projection}, SRS identifier\n * string or undefined.\n * @typedef {Projection|string|undefined} ProjectionLike\n * @api\n */\n\n/**\n * @typedef {Object} Transforms\n * @property {TransformFunction} forward The forward transform (from geographic).\n * @property {TransformFunction} inverse The inverse transform (to geographic).\n */\n\n/**\n * @type {Array<function(Projection): Transforms|null>}\n */\nconst transformFactories = [makeUTMTransforms];\n\n/**\n * @type {Array<function(string): Projection|null>}\n */\nconst projectionFactories = [makeUTMProjection];\n\n/**\n * A transform function accepts an array of input coordinate values, an optional\n * output array, and an optional dimension (default should be 2).  The function\n * transforms the input coordinate values, populates the output array, and\n * returns the output array.\n *\n * @callback TransformFunction\n * @param {Array<number>} input\n * @param {Array<number>} [output]\n * @param {number} [dimension]\n * @param {number} [stride]\n * @return {Array<number>}\n *\n * @api\n */\n\nexport {METERS_PER_UNIT};\n\nexport {Projection};\n\nlet showCoordinateWarning = true;\n\n/**\n * @param {boolean} [disable] Disable console info about `useGeographic()`\n */\nexport function disableCoordinateWarning(disable) {\n  const hide = disable === undefined ? true : disable;\n  showCoordinateWarning = !hide;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Output coordinate array (new array, same coordinate\n *     values).\n */\nexport function cloneTransform(input, output) {\n  if (output !== undefined) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    output = output;\n  } else {\n    output = input.slice();\n  }\n  return output;\n}\n\n/**\n * @param {Array<number>} input Input coordinate array.\n * @param {Array<number>} [output] Output array of coordinate values.\n * @return {Array<number>} Input coordinate array (same array as input).\n */\nexport function identityTransform(input, output) {\n  if (output !== undefined && input !== output) {\n    for (let i = 0, ii = input.length; i < ii; ++i) {\n      output[i] = input[i];\n    }\n    input = output;\n  }\n  return input;\n}\n\n/**\n * Add a Projection object to the list of supported projections that can be\n * looked up by their code.\n *\n * @param {Projection} projection Projection instance.\n * @api\n */\nexport function addProjection(projection) {\n  addProj(projection.getCode(), projection);\n  addTransformFunc(projection, projection, cloneTransform);\n}\n\n/**\n * @param {Array<Projection>} projections Projections.\n */\nexport function addProjections(projections) {\n  projections.forEach(addProjection);\n}\n\n/**\n * Fetches a Projection object for the code specified.\n *\n * @param {ProjectionLike} projectionLike Either a code string which is\n *     a combination of authority and identifier such as \"EPSG:4326\", or an\n *     existing projection object, or undefined.\n * @return {Projection|null} Projection object, or null if not in list.\n * @api\n */\nexport function get(projectionLike) {\n  if (!(typeof projectionLike === 'string')) {\n    return projectionLike;\n  }\n  const projection = getProj(projectionLike);\n  if (projection) {\n    return projection;\n  }\n  for (const makeProjection of projectionFactories) {\n    const projection = makeProjection(projectionLike);\n    if (projection) {\n      return projection;\n    }\n  }\n  return null;\n}\n\n/**\n * Get the resolution of the point in degrees or distance units.\n * For projections with degrees as the unit this will simply return the\n * provided resolution. For other projections the point resolution is\n * by default estimated by transforming the `point` pixel to EPSG:4326,\n * measuring its width and height on the normal sphere,\n * and taking the average of the width and height.\n * A custom function can be provided for a specific projection, either\n * by setting the `getPointResolution` option in the\n * {@link module:ol/proj/Projection~Projection} constructor or by using\n * {@link module:ol/proj/Projection~Projection#setGetPointResolution} to change an existing\n * projection object.\n * @param {ProjectionLike} projection The projection.\n * @param {number} resolution Nominal resolution in projection units.\n * @param {import(\"./coordinate.js\").Coordinate} point Point to find adjusted resolution at.\n * @param {import(\"./proj/Units.js\").Units} [units] Units to get the point resolution in.\n * Default is the projection's units.\n * @return {number} Point resolution.\n * @api\n */\nexport function getPointResolution(projection, resolution, point, units) {\n  projection = get(projection);\n  let pointResolution;\n  const getter = projection.getPointResolutionFunc();\n  if (getter) {\n    pointResolution = getter(resolution, point);\n    if (units && units !== projection.getUnits()) {\n      const metersPerUnit = projection.getMetersPerUnit();\n      if (metersPerUnit) {\n        pointResolution =\n          (pointResolution * metersPerUnit) / METERS_PER_UNIT[units];\n      }\n    }\n  } else {\n    const projUnits = projection.getUnits();\n    if ((projUnits == 'degrees' && !units) || units == 'degrees') {\n      pointResolution = resolution;\n    } else {\n      // Estimate point resolution by transforming the center pixel to EPSG:4326,\n      // measuring its width and height on the normal sphere, and taking the\n      // average of the width and height.\n      const toEPSG4326 = getTransformFromProjections(\n        projection,\n        get('EPSG:4326'),\n      );\n      if (!toEPSG4326 && projUnits !== 'degrees') {\n        // no transform is available\n        pointResolution = resolution * projection.getMetersPerUnit();\n      } else {\n        let vertices = [\n          point[0] - resolution / 2,\n          point[1],\n          point[0] + resolution / 2,\n          point[1],\n          point[0],\n          point[1] - resolution / 2,\n          point[0],\n          point[1] + resolution / 2,\n        ];\n        vertices = toEPSG4326(vertices, vertices, 2);\n        const width = getDistance(vertices.slice(0, 2), vertices.slice(2, 4));\n        const height = getDistance(vertices.slice(4, 6), vertices.slice(6, 8));\n        pointResolution = (width + height) / 2;\n      }\n      const metersPerUnit = units\n        ? METERS_PER_UNIT[units]\n        : projection.getMetersPerUnit();\n      if (metersPerUnit !== undefined) {\n        pointResolution /= metersPerUnit;\n      }\n    }\n  }\n  return pointResolution;\n}\n\n/**\n * Registers transformation functions that don't alter coordinates. Those allow\n * to transform between projections with equal meaning.\n *\n * @param {Array<Projection>} projections Projections.\n * @api\n */\nexport function addEquivalentProjections(projections) {\n  addProjections(projections);\n  projections.forEach(function (source) {\n    projections.forEach(function (destination) {\n      if (source !== destination) {\n        addTransformFunc(source, destination, cloneTransform);\n      }\n    });\n  });\n}\n\n/**\n * Registers transformation functions to convert coordinates in any projection\n * in projection1 to any projection in projection2.\n *\n * @param {Array<Projection>} projections1 Projections with equal\n *     meaning.\n * @param {Array<Projection>} projections2 Projections with equal\n *     meaning.\n * @param {TransformFunction} forwardTransform Transformation from any\n *   projection in projection1 to any projection in projection2.\n * @param {TransformFunction} inverseTransform Transform from any projection\n *   in projection2 to any projection in projection1..\n */\nexport function addEquivalentTransforms(\n  projections1,\n  projections2,\n  forwardTransform,\n  inverseTransform,\n) {\n  projections1.forEach(function (projection1) {\n    projections2.forEach(function (projection2) {\n      addTransformFunc(projection1, projection2, forwardTransform);\n      addTransformFunc(projection2, projection1, inverseTransform);\n    });\n  });\n}\n\n/**\n * Clear all cached projections and transforms.\n */\nexport function clearAllProjections() {\n  clearProj();\n  clearTransformFuncs();\n}\n\n/**\n * @param {Projection|string|undefined} projection Projection.\n * @param {string} defaultCode Default code.\n * @return {Projection} Projection.\n */\nexport function createProjection(projection, defaultCode) {\n  if (!projection) {\n    return get(defaultCode);\n  }\n  if (typeof projection === 'string') {\n    return get(projection);\n  }\n  return /** @type {Projection} */ (projection);\n}\n\n/**\n * Creates a {@link module:ol/proj~TransformFunction} from a simple 2D coordinate transform\n * function.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} coordTransform Coordinate\n *     transform.\n * @return {TransformFunction} Transform function.\n */\nexport function createTransformFromCoordinateTransform(coordTransform) {\n  return (\n    /**\n     * @param {Array<number>} input Input.\n     * @param {Array<number>} [output] Output.\n     * @param {number} [dimension] Dimensions that should be transformed.\n     * @param {number} [stride] Stride.\n     * @return {Array<number>} Output.\n     */\n    function (input, output, dimension, stride) {\n      const length = input.length;\n      dimension = dimension !== undefined ? dimension : 2;\n      stride = stride ?? dimension;\n      output = output !== undefined ? output : new Array(length);\n      for (let i = 0; i < length; i += stride) {\n        const point = coordTransform(input.slice(i, i + dimension));\n        const pointLength = point.length;\n        for (let j = 0, jj = stride; j < jj; ++j) {\n          output[i + j] = j >= pointLength ? input[i + j] : point[j];\n        }\n      }\n      return output;\n    }\n  );\n}\n\n/**\n * Registers coordinate transform functions to convert coordinates between the\n * source projection and the destination projection.\n * The forward and inverse functions convert coordinate pairs; this function\n * converts these into the functions used internally which also handle\n * extents and coordinate arrays.\n *\n * @param {ProjectionLike} source Source projection.\n * @param {ProjectionLike} destination Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} forward The forward transform\n *     function (that is, from the source projection to the destination\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} inverse The inverse transform\n *     function (that is, from the destination projection to the source\n *     projection) that takes a {@link module:ol/coordinate~Coordinate} as argument and returns\n *     the transformed {@link module:ol/coordinate~Coordinate}. If the transform function can only\n *     transform less dimensions than the input coordinate, it is supposeed to return a coordinate\n *     with only the length it can transform. The other dimensions will be taken unchanged from the\n *     source.\n * @api\n */\nexport function addCoordinateTransforms(source, destination, forward, inverse) {\n  const sourceProj = get(source);\n  const destProj = get(destination);\n  addTransformFunc(\n    sourceProj,\n    destProj,\n    createTransformFromCoordinateTransform(forward),\n  );\n  addTransformFunc(\n    destProj,\n    sourceProj,\n    createTransformFromCoordinateTransform(inverse),\n  );\n}\n\n/**\n * Transforms a coordinate from longitude/latitude to a different projection.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate as longitude and latitude, i.e.\n *     an array with longitude as 1st and latitude as 2nd element.\n * @param {ProjectionLike} [projection] Target projection. The\n *     default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate projected to the target projection.\n * @api\n */\nexport function fromLonLat(coordinate, projection) {\n  disableCoordinateWarning();\n  return transform(\n    coordinate,\n    'EPSG:4326',\n    projection !== undefined ? projection : 'EPSG:3857',\n  );\n}\n\n/**\n * Transforms a coordinate to longitude/latitude.\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Projected coordinate.\n * @param {ProjectionLike} [projection] Projection of the coordinate.\n *     The default is Web Mercator, i.e. 'EPSG:3857'.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate as longitude and latitude, i.e. an array\n *     with longitude as 1st and latitude as 2nd element.\n * @api\n */\nexport function toLonLat(coordinate, projection) {\n  const lonLat = transform(\n    coordinate,\n    projection !== undefined ? projection : 'EPSG:3857',\n    'EPSG:4326',\n  );\n  const lon = lonLat[0];\n  if (lon < -180 || lon > 180) {\n    lonLat[0] = modulo(lon + 180, 360) - 180;\n  }\n  return lonLat;\n}\n\n/**\n * Checks if two projections are the same, that is every coordinate in one\n * projection does represent the same geographic point as the same coordinate in\n * the other projection.\n *\n * @param {Projection} projection1 Projection 1.\n * @param {Projection} projection2 Projection 2.\n * @return {boolean} Equivalent.\n * @api\n */\nexport function equivalent(projection1, projection2) {\n  if (projection1 === projection2) {\n    return true;\n  }\n  const equalUnits = projection1.getUnits() === projection2.getUnits();\n  if (projection1.getCode() === projection2.getCode()) {\n    return equalUnits;\n  }\n  const transformFunc = getTransformFromProjections(projection1, projection2);\n  return transformFunc === cloneTransform && equalUnits;\n}\n\n/**\n * Searches in the list of transform functions for the function for converting\n * coordinates from the source projection to the destination projection.\n *\n * @param {Projection} source Source Projection object.\n * @param {Projection} destination Destination Projection\n *     object.\n * @return {TransformFunction|null} Transform function.\n */\nexport function getTransformFromProjections(source, destination) {\n  const sourceCode = source.getCode();\n  const destinationCode = destination.getCode();\n  let transformFunc = getTransformFunc(sourceCode, destinationCode);\n  if (transformFunc) {\n    return transformFunc;\n  }\n\n  /**\n   * @type {Transforms|null}\n   */\n  let sourceTransforms = null;\n\n  /**\n   * @type {Transforms|null}\n   */\n  let destinationTransforms = null;\n\n  // lazily add projections if we have supported transforms\n  for (const makeTransforms of transformFactories) {\n    if (!sourceTransforms) {\n      sourceTransforms = makeTransforms(source);\n    }\n    if (!destinationTransforms) {\n      destinationTransforms = makeTransforms(destination);\n    }\n  }\n\n  if (!sourceTransforms && !destinationTransforms) {\n    return null;\n  }\n\n  const intermediateCode = 'EPSG:4326';\n  if (!destinationTransforms) {\n    const toDestination = getTransformFunc(intermediateCode, destinationCode);\n    if (toDestination) {\n      transformFunc = composeTransformFuncs(\n        sourceTransforms.inverse,\n        toDestination,\n      );\n    }\n  } else if (!sourceTransforms) {\n    const fromSource = getTransformFunc(sourceCode, intermediateCode);\n    if (fromSource) {\n      transformFunc = composeTransformFuncs(\n        fromSource,\n        destinationTransforms.forward,\n      );\n    }\n  } else {\n    transformFunc = composeTransformFuncs(\n      sourceTransforms.inverse,\n      destinationTransforms.forward,\n    );\n  }\n\n  if (transformFunc) {\n    addProjection(source);\n    addProjection(destination);\n    addTransformFunc(source, destination, transformFunc);\n  }\n\n  return transformFunc;\n}\n\n/**\n * @param {TransformFunction} t1 The first transform function.\n * @param {TransformFunction} t2 The second transform function.\n * @return {TransformFunction} The composed transform function.\n */\nfunction composeTransformFuncs(t1, t2) {\n  return function (input, output, dimensions, stride) {\n    output = t1(input, output, dimensions, stride);\n    return t2(output, output, dimensions, stride);\n  };\n}\n\n/**\n * Given the projection-like objects, searches for a transformation\n * function to convert a coordinates array from the source projection to the\n * destination projection.\n *\n * @param {ProjectionLike} source Source.\n * @param {ProjectionLike} destination Destination.\n * @return {TransformFunction} Transform function.\n * @api\n */\nexport function getTransform(source, destination) {\n  const sourceProjection = get(source);\n  const destinationProjection = get(destination);\n  return getTransformFromProjections(sourceProjection, destinationProjection);\n}\n\n/**\n * Transforms a coordinate from source projection to destination projection.\n * This returns a new coordinate (and does not modify the original). If there\n * is no available transform between the two projection, the function will throw\n * an error.\n *\n * See {@link module:ol/proj.transformExtent} for extent transformation.\n * See the transform method of {@link module:ol/geom/Geometry~Geometry} and its\n * subclasses for geometry transforms.\n *\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n * @api\n */\nexport function transform(coordinate, source, destination) {\n  const transformFunc = getTransform(source, destination);\n  if (!transformFunc) {\n    const sourceCode = get(source).getCode();\n    const destinationCode = get(destination).getCode();\n    throw new Error(\n      `No transform available between ${sourceCode} and ${destinationCode}`,\n    );\n  }\n  return transformFunc(coordinate, undefined, coordinate.length);\n}\n\n/**\n * Transforms an extent from source projection to destination projection.  This\n * returns a new extent (and does not modify the original).\n *\n * @param {import(\"./extent.js\").Extent} extent The extent to transform.\n * @param {ProjectionLike} source Source projection-like.\n * @param {ProjectionLike} destination Destination projection-like.\n * @param {number} [stops] Number of stops per side used for the transform.\n * By default only the corners are used.\n * @return {import(\"./extent.js\").Extent} The transformed extent.\n * @api\n */\nexport function transformExtent(extent, source, destination, stops) {\n  const transformFunc = getTransform(source, destination);\n  return applyTransform(extent, transformFunc, undefined, stops);\n}\n\n/**\n * Transforms the given point to the destination projection.\n *\n * @param {import(\"./coordinate.js\").Coordinate} point Point.\n * @param {Projection} sourceProjection Source projection.\n * @param {Projection} destinationProjection Destination projection.\n * @return {import(\"./coordinate.js\").Coordinate} Point.\n */\nexport function transformWithProjections(\n  point,\n  sourceProjection,\n  destinationProjection,\n) {\n  const transformFunc = getTransformFromProjections(\n    sourceProjection,\n    destinationProjection,\n  );\n  return transformFunc(point);\n}\n\n/**\n * @type {Projection|null}\n */\nlet userProjection = null;\n\n/**\n * Set the projection for coordinates supplied from and returned by API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @param {ProjectionLike} projection The user projection.\n * @api\n */\nexport function setUserProjection(projection) {\n  userProjection = get(projection);\n}\n\n/**\n * Clear the user projection if set.\n * @api\n */\nexport function clearUserProjection() {\n  userProjection = null;\n}\n\n/**\n * Get the projection for coordinates supplied from and returned by API methods.\n * @return {Projection|null} The user projection (or null if not set).\n * @api\n */\nexport function getUserProjection() {\n  return userProjection;\n}\n\n/**\n * Use geographic coordinates (WGS-84 datum) in API methods.\n * This includes all API methods except for those interacting with tile grids,\n * plus {@link import(\"./Map.js\").FrameState} and {@link import(\"./View.js\").State}.\n * @api\n */\nexport function useGeographic() {\n  setUserProjection('EPSG:4326');\n}\n\n/**\n * Return a coordinate transformed into the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} sourceProjection The input coordinate projection.\n * @return {Array<number>} The input coordinate in the user projection.\n */\nexport function toUserCoordinate(coordinate, sourceProjection) {\n  if (!userProjection) {\n    return coordinate;\n  }\n  return transform(coordinate, sourceProjection, userProjection);\n}\n\n/**\n * Return a coordinate transformed from the user projection.  If no user projection\n * is set, the original coordinate is returned.\n * @param {Array<number>} coordinate Input coordinate.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {Array<number>} The input coordinate transformed.\n */\nexport function fromUserCoordinate(coordinate, destProjection) {\n  if (!userProjection) {\n    if (\n      showCoordinateWarning &&\n      !equals(coordinate, [0, 0]) &&\n      coordinate[0] >= -180 &&\n      coordinate[0] <= 180 &&\n      coordinate[1] >= -90 &&\n      coordinate[1] <= 90\n    ) {\n      showCoordinateWarning = false;\n      warn(\n        'Call useGeographic() from ol/proj once to work with [longitude, latitude] coordinates.',\n      );\n    }\n    return coordinate;\n  }\n  return transform(coordinate, userProjection, destProjection);\n}\n\n/**\n * Return an extent transformed into the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} sourceProjection The input extent projection.\n * @return {import(\"./extent.js\").Extent} The input extent in the user projection.\n */\nexport function toUserExtent(extent, sourceProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, sourceProjection, userProjection);\n}\n\n/**\n * Return an extent transformed from the user projection.  If no user projection\n * is set, the original extent is returned.\n * @param {import(\"./extent.js\").Extent} extent Input extent.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {import(\"./extent.js\").Extent} The input extent transformed.\n */\nexport function fromUserExtent(extent, destProjection) {\n  if (!userProjection) {\n    return extent;\n  }\n  return transformExtent(extent, userProjection, destProjection);\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in input projection units per pixel.\n * @param {ProjectionLike} sourceProjection The input projection.\n * @return {number} Resolution in user projection units per pixel.\n */\nexport function toUserResolution(resolution, sourceProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const sourceMetersPerUnit = get(sourceProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return sourceMetersPerUnit && userMetersPerUnit\n    ? (resolution * sourceMetersPerUnit) / userMetersPerUnit\n    : resolution;\n}\n\n/**\n * Return the resolution in user projection units per pixel. If no user projection\n * is set, or source or user projection are missing units, the original resolution\n * is returned.\n * @param {number} resolution Resolution in user projection units per pixel.\n * @param {ProjectionLike} destProjection The destination projection.\n * @return {number} Resolution in destination projection units per pixel.\n */\nexport function fromUserResolution(resolution, destProjection) {\n  if (!userProjection) {\n    return resolution;\n  }\n  const destMetersPerUnit = get(destProjection).getMetersPerUnit();\n  const userMetersPerUnit = userProjection.getMetersPerUnit();\n  return destMetersPerUnit && userMetersPerUnit\n    ? (resolution * userMetersPerUnit) / destMetersPerUnit\n    : resolution;\n}\n\n/**\n * Creates a safe coordinate transform function from a coordinate transform function.\n * \"Safe\" means that it can handle wrapping of x-coordinates for global projections,\n * and that coordinates exceeding the source projection validity extent's range will be\n * clamped to the validity range.\n * @param {Projection} sourceProj Source projection.\n * @param {Projection} destProj Destination projection.\n * @param {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} transform Transform function (source to destination).\n * @return {function(import(\"./coordinate.js\").Coordinate): import(\"./coordinate.js\").Coordinate} Safe transform function (source to destination).\n */\nexport function createSafeCoordinateTransform(sourceProj, destProj, transform) {\n  return function (coord) {\n    let transformed, worldsAway;\n    if (sourceProj.canWrapX()) {\n      const sourceExtent = sourceProj.getExtent();\n      const sourceExtentWidth = getWidth(sourceExtent);\n      coord = coord.slice(0);\n      worldsAway = getWorldsAway(coord, sourceProj, sourceExtentWidth);\n      if (worldsAway) {\n        // Move x to the real world\n        coord[0] = coord[0] - worldsAway * sourceExtentWidth;\n      }\n      coord[0] = clamp(coord[0], sourceExtent[0], sourceExtent[2]);\n      coord[1] = clamp(coord[1], sourceExtent[1], sourceExtent[3]);\n      transformed = transform(coord);\n    } else {\n      transformed = transform(coord);\n    }\n    if (worldsAway && destProj.canWrapX()) {\n      // Move transformed coordinate back to the offset world\n      transformed[0] += worldsAway * getWidth(destProj.getExtent());\n    }\n    return transformed;\n  };\n}\n\n/**\n * Add transforms to and from EPSG:4326 and EPSG:3857.  This function is called\n * by when this module is executed and should only need to be called again after\n * `clearAllProjections()` is called (e.g. in tests).\n */\nexport function addCommon() {\n  // Add transformations that don't alter coordinates to convert within set of\n  // projections with equal meaning.\n  addEquivalentProjections(EPSG3857_PROJECTIONS);\n  addEquivalentProjections(EPSG4326_PROJECTIONS);\n  // Add transformations to convert EPSG:4326 like coordinates to EPSG:3857 like\n  // coordinates and back.\n  addEquivalentTransforms(\n    EPSG4326_PROJECTIONS,\n    EPSG3857_PROJECTIONS,\n    fromEPSG4326,\n    toEPSG4326,\n  );\n}\n\naddCommon();\n","/**\n * @module ol/transform\n */\nimport {assert} from './asserts.js';\n\n/**\n * An array representing an affine 2d transformation for use with\n * {@link module:ol/transform} functions. The array has 6 elements.\n * @typedef {!Array<number>} Transform\n * @api\n */\n\n/**\n * Collection of affine 2d transformation functions. The functions work on an\n * array of 6 elements. The element order is compatible with the [SVGMatrix\n * interface](https://developer.mozilla.org/en-US/docs/Web/API/SVGMatrix) and is\n * a subset (elements a to f) of a 3×3 matrix:\n * ```\n * [ a c e ]\n * [ b d f ]\n * [ 0 0 1 ]\n * ```\n */\n\n/**\n * @private\n * @type {Transform}\n */\nconst tmp_ = new Array(6);\n\n/**\n * Create an identity transform.\n * @return {!Transform} Identity transform.\n */\nexport function create() {\n  return [1, 0, 0, 1, 0, 0];\n}\n\n/**\n * Resets the given transform to an identity transform.\n * @param {!Transform} transform Transform.\n * @return {!Transform} Transform.\n */\nexport function reset(transform) {\n  return set(transform, 1, 0, 0, 1, 0, 0);\n}\n\n/**\n * Multiply the underlying matrices of two transforms and return the result in\n * the first transform.\n * @param {!Transform} transform1 Transform parameters of matrix 1.\n * @param {!Transform} transform2 Transform parameters of matrix 2.\n * @return {!Transform} transform1 multiplied with transform2.\n */\nexport function multiply(transform1, transform2) {\n  const a1 = transform1[0];\n  const b1 = transform1[1];\n  const c1 = transform1[2];\n  const d1 = transform1[3];\n  const e1 = transform1[4];\n  const f1 = transform1[5];\n  const a2 = transform2[0];\n  const b2 = transform2[1];\n  const c2 = transform2[2];\n  const d2 = transform2[3];\n  const e2 = transform2[4];\n  const f2 = transform2[5];\n\n  transform1[0] = a1 * a2 + c1 * b2;\n  transform1[1] = b1 * a2 + d1 * b2;\n  transform1[2] = a1 * c2 + c1 * d2;\n  transform1[3] = b1 * c2 + d1 * d2;\n  transform1[4] = a1 * e2 + c1 * f2 + e1;\n  transform1[5] = b1 * e2 + d1 * f2 + f1;\n\n  return transform1;\n}\n\n/**\n * Set the transform components a-f on a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} a The a component of the transform.\n * @param {number} b The b component of the transform.\n * @param {number} c The c component of the transform.\n * @param {number} d The d component of the transform.\n * @param {number} e The e component of the transform.\n * @param {number} f The f component of the transform.\n * @return {!Transform} Matrix with transform applied.\n */\nexport function set(transform, a, b, c, d, e, f) {\n  transform[0] = a;\n  transform[1] = b;\n  transform[2] = c;\n  transform[3] = d;\n  transform[4] = e;\n  transform[5] = f;\n  return transform;\n}\n\n/**\n * Set transform on one matrix from another matrix.\n * @param {!Transform} transform1 Matrix to set transform to.\n * @param {!Transform} transform2 Matrix to set transform from.\n * @return {!Transform} transform1 with transform from transform2 applied.\n */\nexport function setFromArray(transform1, transform2) {\n  transform1[0] = transform2[0];\n  transform1[1] = transform2[1];\n  transform1[2] = transform2[2];\n  transform1[3] = transform2[3];\n  transform1[4] = transform2[4];\n  transform1[5] = transform2[5];\n  return transform1;\n}\n\n/**\n * Transforms the given coordinate with the given transform returning the\n * resulting, transformed coordinate. The coordinate will be modified in-place.\n *\n * @param {Transform} transform The transformation.\n * @param {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} coordinate The coordinate to transform.\n * @return {import(\"./coordinate.js\").Coordinate|import(\"./pixel.js\").Pixel} return coordinate so that operations can be\n *     chained together.\n */\nexport function apply(transform, coordinate) {\n  const x = coordinate[0];\n  const y = coordinate[1];\n  coordinate[0] = transform[0] * x + transform[2] * y + transform[4];\n  coordinate[1] = transform[1] * x + transform[3] * y + transform[5];\n  return coordinate;\n}\n\n/**\n * Applies rotation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} angle Angle in radians.\n * @return {!Transform} The rotated transform.\n */\nexport function rotate(transform, angle) {\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  return multiply(transform, set(tmp_, cos, sin, -sin, cos, 0, 0));\n}\n\n/**\n * Applies scale to a given transform.\n * @param {!Transform} transform Transform.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scaled transform.\n */\nexport function scale(transform, x, y) {\n  return multiply(transform, set(tmp_, x, 0, 0, y, 0, 0));\n}\n\n/**\n * Creates a scale transform.\n * @param {!Transform} target Transform to overwrite.\n * @param {number} x Scale factor x.\n * @param {number} y Scale factor y.\n * @return {!Transform} The scale transform.\n */\nexport function makeScale(target, x, y) {\n  return set(target, x, 0, 0, y, 0, 0);\n}\n\n/**\n * Applies translation to the given transform.\n * @param {!Transform} transform Transform.\n * @param {number} dx Translation x.\n * @param {number} dy Translation y.\n * @return {!Transform} The translated transform.\n */\nexport function translate(transform, dx, dy) {\n  return multiply(transform, set(tmp_, 1, 0, 0, 1, dx, dy));\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative).\n * @param {!Transform} transform The transform (will be modified in place).\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {!Transform} The composite transform.\n */\nexport function compose(transform, dx1, dy1, sx, sy, angle, dx2, dy2) {\n  const sin = Math.sin(angle);\n  const cos = Math.cos(angle);\n  transform[0] = sx * cos;\n  transform[1] = sy * sin;\n  transform[2] = -sx * sin;\n  transform[3] = sy * cos;\n  transform[4] = dx2 * sx * cos - dy2 * sx * sin + dx1;\n  transform[5] = dx2 * sy * sin + dy2 * sy * cos + dy1;\n  return transform;\n}\n\n/**\n * Creates a composite transform given an initial translation, scale, rotation, and\n * final translation (in that order only, not commutative). The resulting transform\n * string can be applied as `transform` property of an HTMLElement's style.\n * @param {number} dx1 Initial translation x.\n * @param {number} dy1 Initial translation y.\n * @param {number} sx Scale factor x.\n * @param {number} sy Scale factor y.\n * @param {number} angle Rotation (in counter-clockwise radians).\n * @param {number} dx2 Final translation x.\n * @param {number} dy2 Final translation y.\n * @return {string} The composite css transform.\n * @api\n */\nexport function composeCssTransform(dx1, dy1, sx, sy, angle, dx2, dy2) {\n  return toString(compose(create(), dx1, dy1, sx, sy, angle, dx2, dy2));\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (source) transform.\n */\nexport function invert(source) {\n  return makeInverse(source, source);\n}\n\n/**\n * Invert the given transform.\n * @param {!Transform} target Transform to be set as the inverse of\n *     the source transform.\n * @param {!Transform} source The source transform to invert.\n * @return {!Transform} The inverted (target) transform.\n */\nexport function makeInverse(target, source) {\n  const det = determinant(source);\n  assert(det !== 0, 'Transformation matrix cannot be inverted');\n\n  const a = source[0];\n  const b = source[1];\n  const c = source[2];\n  const d = source[3];\n  const e = source[4];\n  const f = source[5];\n\n  target[0] = d / det;\n  target[1] = -b / det;\n  target[2] = -c / det;\n  target[3] = a / det;\n  target[4] = (c * f - d * e) / det;\n  target[5] = -(a * f - b * e) / det;\n\n  return target;\n}\n\n/**\n * Returns the determinant of the given matrix.\n * @param {!Transform} mat Matrix.\n * @return {number} Determinant.\n */\nexport function determinant(mat) {\n  return mat[0] * mat[3] - mat[1] * mat[2];\n}\n\n/**\n * @type {Array}\n */\nconst matrixPrecision = [1e5, 1e5, 1e5, 1e5, 2, 2];\n\n/**\n * A matrix string version of the transform.  This can be used\n * for CSS transforms.\n * @param {!Transform} mat Matrix.\n * @return {string} The transform as a string.\n */\nexport function toString(mat) {\n  const transformString = 'matrix(' + mat.join(', ') + ')';\n  return transformString;\n}\n\n/**\n * Create a transform from a CSS transform matrix string.\n * @param {string} cssTransform The CSS string to parse.\n * @return {!Transform} The transform.\n */\nfunction fromString(cssTransform) {\n  const values = cssTransform.substring(7, cssTransform.length - 1).split(',');\n  return values.map(parseFloat);\n}\n\n/**\n * Compare two matrices for equality.\n * @param {!string} cssTransform1 A CSS transform matrix string.\n * @param {!string} cssTransform2 A CSS transform matrix string.\n * @return {boolean} The two matrices are equal.\n */\nexport function equivalent(cssTransform1, cssTransform2) {\n  const mat1 = fromString(cssTransform1);\n  const mat2 = fromString(cssTransform2);\n  for (let i = 0; i < 6; ++i) {\n    if (Math.round((mat1[i] - mat2[i]) * matrixPrecision[i]) !== 0) {\n      return false;\n    }\n  }\n  return true;\n}\n","/**\n * @module ol/geom/flat/transform\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [destinationStride] Stride of destination coordinates; if unspecified, assumed to be 2.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function transform2D(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  transform,\n  dest,\n  destinationStride,\n) {\n  dest = dest ? dest : [];\n  destinationStride = destinationStride ? destinationStride : 2;\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const x = flatCoordinates[j];\n    const y = flatCoordinates[j + 1];\n    dest[i++] = transform[0] * x + transform[2] * y + transform[4];\n    dest[i++] = transform[1] * x + transform[3] * y + transform[5];\n\n    for (let k = 2; k < destinationStride; k++) {\n      dest[i++] = flatCoordinates[j + k];\n    }\n  }\n\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} angle Angle.\n * @param {Array<number>} anchor Rotation anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function rotate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  angle,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const cos = Math.cos(angle);\n  const sin = Math.sin(angle);\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + deltaX * cos - deltaY * sin;\n    dest[i++] = anchorY + deltaX * sin + deltaY * cos;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * Scale the coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} sx Scale factor in the x-direction.\n * @param {number} sy Scale factor in the y-direction.\n * @param {Array<number>} anchor Scale anchor point.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function scale(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  sx,\n  sy,\n  anchor,\n  dest,\n) {\n  dest = dest ? dest : [];\n  const anchorX = anchor[0];\n  const anchorY = anchor[1];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    const deltaX = flatCoordinates[j] - anchorX;\n    const deltaY = flatCoordinates[j + 1] - anchorY;\n    dest[i++] = anchorX + sx * deltaX;\n    dest[i++] = anchorY + sy * deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} deltaX Delta X.\n * @param {number} deltaY Delta Y.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed coordinates.\n */\nexport function translate(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  deltaX,\n  deltaY,\n  dest,\n) {\n  dest = dest ? dest : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    dest[i++] = flatCoordinates[j] + deltaX;\n    dest[i++] = flatCoordinates[j + 1] + deltaY;\n    for (let k = j + 2; k < j + stride; ++k) {\n      dest[i++] = flatCoordinates[k];\n    }\n  }\n  if (dest && dest.length != i) {\n    dest.length = i;\n  }\n  return dest;\n}\n","/**\n * @module ol/geom/Geometry\n */\nimport BaseObject from '../Object.js';\nimport {\n  createEmpty,\n  createOrUpdateEmpty,\n  getHeight,\n  returnOrUpdate,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {get as getProjection, getTransform} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\nimport {abstract} from '../util.js';\nimport {transform2D} from './flat/transform.js';\n\n/**\n * @typedef {'XY' | 'XYZ' | 'XYM' | 'XYZM'} GeometryLayout\n * The coordinate layout for geometries, indicating whether a 3rd or 4th z ('Z')\n * or measure ('M') coordinate is available.\n */\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString' | 'MultiPolygon' | 'GeometryCollection' | 'Circle'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'`, `'MultiLineString'`, `'MultiPolygon'`,\n * `'GeometryCollection'`, or `'Circle'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/** @type {import('../coordinate.js').Coordinate} */\nconst tmpPoint = [NaN, NaN];\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for vector geometries.\n *\n * To get notified of changes to the geometry, register a listener for the\n * generic `change` event on your geometry instance.\n *\n * @abstract\n * @api\n */\nclass Geometry extends BaseObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.extentRevision_ = -1;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.simplifiedGeometryRevision = 0;\n\n    /**\n     * Get a transformed and simplified version of the geometry.\n     * @abstract\n     * @param {number} revision The geometry revision.\n     * @param {number} squaredTolerance Squared tolerance.\n     * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n     * @return {Geometry} Simplified geometry.\n     */\n    this.simplifyTransformedInternal = memoizeOne(\n      (revision, squaredTolerance, transform) => {\n        if (!transform) {\n          return this.getSimplifiedGeometry(squaredTolerance);\n        }\n        const clone = this.clone();\n        clone.applyTransform(transform);\n        return clone.getSimplifiedGeometry(squaredTolerance);\n      },\n    );\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {Geometry} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this.simplifyTransformedInternal(\n      this.getRevision(),\n      squaredTolerance,\n      transform,\n    );\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @abstract\n   * @return {!Geometry} Clone.\n   */\n  clone() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    return abstract();\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   */\n  containsXY(x, y) {\n    return this.closestPointXY(x, y, tmpPoint, Number.MIN_VALUE) === 0;\n  }\n\n  /**\n   * Return the closest point of the geometry to the passed point as\n   * {@link module:ol/coordinate~Coordinate coordinate}.\n   * @param {import(\"../coordinate.js\").Coordinate} point Point.\n   * @param {import(\"../coordinate.js\").Coordinate} [closestPoint] Closest point.\n   * @return {import(\"../coordinate.js\").Coordinate} Closest point.\n   * @api\n   */\n  getClosestPoint(point, closestPoint) {\n    closestPoint = closestPoint ? closestPoint : [NaN, NaN];\n    this.closestPointXY(point[0], point[1], closestPoint, Infinity);\n    return closestPoint;\n  }\n\n  /**\n   * Returns true if this geometry includes the specified coordinate. If the\n   * coordinate is on the boundary of the geometry, returns false.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {boolean} Contains coordinate.\n   * @api\n   */\n  intersectsCoordinate(coordinate) {\n    return this.containsXY(coordinate[0], coordinate[1]);\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   */\n  computeExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Get the extent of the geometry.\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  getExtent(extent) {\n    if (this.extentRevision_ != this.getRevision()) {\n      const extent = this.computeExtent(this.extent_);\n      if (isNaN(extent[0]) || isNaN(extent[1])) {\n        createOrUpdateEmpty(extent);\n      }\n      this.extentRevision_ = this.getRevision();\n    }\n    return returnOrUpdate(this.extent_, extent);\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   */\n  rotate(angle, anchor) {\n    abstract();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   */\n  scale(sx, sy, anchor) {\n    abstract();\n  }\n\n  /**\n   * Create a simplified version of this geometry.  For linestrings, this uses\n   * the [Douglas Peucker](https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm)\n   * algorithm.  For polygons, a quantization-based\n   * simplification is used to preserve topology.\n   * @param {number} tolerance The tolerance distance for simplification.\n   * @return {Geometry} A new, simplified version of the original geometry.\n   * @api\n   */\n  simplify(tolerance) {\n    return this.getSimplifiedGeometry(tolerance * tolerance);\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker\n   * algorithm.\n   * See https://en.wikipedia.org/wiki/Ramer-Douglas-Peucker_algorithm.\n   * @abstract\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Geometry} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return abstract();\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @abstract\n   * @return {Type} Geometry type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @abstract\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   */\n  applyTransform(transformFn) {\n    abstract();\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   */\n  intersectsExtent(extent) {\n    return abstract();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @abstract\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   */\n  translate(deltaX, deltaY) {\n    abstract();\n  }\n\n  /**\n   * Transform each coordinate of the geometry from one coordinate reference\n   * system to another. The geometry is modified in place.\n   * For example, a line will be transformed to a line and a circle to a circle.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} source The current projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @param {import(\"../proj.js\").ProjectionLike} destination The desired projection.  Can be a\n   *     string identifier or a {@link module:ol/proj/Projection~Projection} object.\n   * @return {this} This geometry.  Note that original geometry is\n   *     modified in place.\n   * @api\n   */\n  transform(source, destination) {\n    /** @type {import(\"../proj/Projection.js\").default} */\n    const sourceProj = getProjection(source);\n    const transformFn =\n      sourceProj.getUnits() == 'tile-pixels'\n        ? function (inCoordinates, outCoordinates, stride) {\n            const pixelExtent = sourceProj.getExtent();\n            const projectedExtent = sourceProj.getWorldExtent();\n            const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n            composeTransform(\n              tmpTransform,\n              projectedExtent[0],\n              projectedExtent[3],\n              scale,\n              -scale,\n              0,\n              0,\n              0,\n            );\n            const transformed = transform2D(\n              inCoordinates,\n              0,\n              inCoordinates.length,\n              stride,\n              tmpTransform,\n              outCoordinates,\n            );\n            const projTransform = getTransform(sourceProj, destination);\n            if (projTransform) {\n              return projTransform(transformed, transformed, stride);\n            }\n            return transformed;\n          }\n        : getTransform(sourceProj, destination);\n    this.applyTransform(transformFn);\n    return this;\n  }\n}\n\nexport default Geometry;\n","/**\n * @module ol/geom/SimpleGeometry\n */\nimport {createOrUpdateFromFlatCoordinates, getCenter} from '../extent.js';\nimport {abstract} from '../util.js';\nimport Geometry from './Geometry.js';\nimport {rotate, scale, transform2D, translate} from './flat/transform.js';\n\n/**\n * @classdesc\n * Abstract base class; only used for creating subclasses; do not instantiate\n * in apps, as cannot be rendered.\n *\n * @abstract\n * @api\n */\nclass SimpleGeometry extends Geometry {\n  constructor() {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./Geometry.js\").GeometryLayout}\n     */\n    this.layout = 'XY';\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.stride = 2;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.flatCoordinates;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromFlatCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Array<*> | null} Coordinates.\n   */\n  getCoordinates() {\n    return abstract();\n  }\n\n  /**\n   * Return the first coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} First coordinate.\n   * @api\n   */\n  getFirstCoordinate() {\n    return this.flatCoordinates.slice(0, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getFlatCoordinates() {\n    return this.flatCoordinates;\n  }\n\n  /**\n   * Return the last coordinate of the geometry.\n   * @return {import(\"../coordinate.js\").Coordinate} Last point.\n   * @api\n   */\n  getLastCoordinate() {\n    return this.flatCoordinates.slice(\n      this.flatCoordinates.length - this.stride,\n    );\n  }\n\n  /**\n   * Return the {@link import(\"./Geometry.js\").GeometryLayout layout} of the geometry.\n   * @return {import(\"./Geometry.js\").GeometryLayout} Layout.\n   * @api\n   */\n  getLayout() {\n    return this.layout;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    // If squaredTolerance is negative or if we know that simplification will not\n    // have any effect then just return this.\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance <= this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometry =\n      this.getSimplifiedGeometryInternal(squaredTolerance);\n    const simplifiedFlatCoordinates = simplifiedGeometry.getFlatCoordinates();\n    if (simplifiedFlatCoordinates.length < this.flatCoordinates.length) {\n      return simplifiedGeometry;\n    }\n    // Simplification did not actually remove any coordinates.  We now know\n    // that any calls to getSimplifiedGeometry with a squaredTolerance less\n    // than or equal to the current squaredTolerance will also not have any\n    // effect.  This allows us to short circuit simplification (saving CPU\n    // cycles) and prevents the cache of simplified geometries from filling\n    // up with useless identical copies of this geometry (saving memory).\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {SimpleGeometry} Simplified geometry.\n   * @protected\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride;\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   */\n  setFlatCoordinates(layout, flatCoordinates) {\n    this.stride = getStrideForLayout(layout);\n    this.layout = layout;\n    this.flatCoordinates = flatCoordinates;\n  }\n\n  /**\n   * @abstract\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  setCoordinates(coordinates, layout) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"./Geometry.js\").GeometryLayout|undefined} layout Layout.\n   * @param {Array<*>} coordinates Coordinates.\n   * @param {number} nesting Nesting.\n   * @protected\n   */\n  setLayout(layout, coordinates, nesting) {\n    let stride;\n    if (layout) {\n      stride = getStrideForLayout(layout);\n    } else {\n      for (let i = 0; i < nesting; ++i) {\n        if (coordinates.length === 0) {\n          this.layout = 'XY';\n          this.stride = 2;\n          return;\n        }\n        coordinates = /** @type {Array<unknown>} */ (coordinates[0]);\n      }\n      stride = coordinates.length;\n      layout = getLayoutForStride(stride);\n    }\n    this.layout = layout;\n    this.stride = stride;\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    if (this.flatCoordinates) {\n      transformFn(\n        this.flatCoordinates,\n        this.flatCoordinates,\n        this.layout.startsWith('XYZ') ? 3 : 2,\n        this.stride,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in counter-clockwise radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      rotate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        angle,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (sy === undefined) {\n      sy = sx;\n    }\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      scale(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        sx,\n        sy,\n        anchor,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const flatCoordinates = this.getFlatCoordinates();\n    if (flatCoordinates) {\n      const stride = this.getStride();\n      translate(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        stride,\n        deltaX,\n        deltaY,\n        flatCoordinates,\n      );\n      this.changed();\n    }\n  }\n}\n\n/**\n * @param {number} stride Stride.\n * @return {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n */\nexport function getLayoutForStride(stride) {\n  let layout;\n  if (stride == 2) {\n    layout = 'XY';\n  } else if (stride == 3) {\n    layout = 'XYZ';\n  } else if (stride == 4) {\n    layout = 'XYZM';\n  }\n  return /** @type {import(\"./Geometry.js\").GeometryLayout} */ (layout);\n}\n\n/**\n * @param {import(\"./Geometry.js\").GeometryLayout} layout Layout.\n * @return {number} Stride.\n */\nexport function getStrideForLayout(layout) {\n  let stride;\n  if (layout == 'XY') {\n    stride = 2;\n  } else if (layout == 'XYZ' || layout == 'XYM') {\n    stride = 3;\n  } else if (layout == 'XYZM') {\n    stride = 4;\n  }\n  return /** @type {number} */ (stride);\n}\n\n/**\n * @param {SimpleGeometry} simpleGeometry Simple geometry.\n * @param {import(\"../transform.js\").Transform} transform Transform.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Transformed flat coordinates.\n */\nexport function transformGeom2D(simpleGeometry, transform, dest) {\n  const flatCoordinates = simpleGeometry.getFlatCoordinates();\n  if (!flatCoordinates) {\n    return null;\n  }\n  const stride = simpleGeometry.getStride();\n  return transform2D(\n    flatCoordinates,\n    0,\n    flatCoordinates.length,\n    stride,\n    transform,\n    dest,\n  );\n}\n\nexport default SimpleGeometry;\n","/**\n * @module ol/geom/flat/area\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRing(flatCoordinates, offset, end, stride) {\n  let twiceArea = 0;\n  const x0 = flatCoordinates[end - stride];\n  const y0 = flatCoordinates[end - stride + 1];\n  let dx1 = 0;\n  let dy1 = 0;\n  for (; offset < end; offset += stride) {\n    const dx2 = flatCoordinates[offset] - x0;\n    const dy2 = flatCoordinates[offset + 1] - y0;\n    twiceArea += dy1 * dx2 - dx1 * dy2;\n    dx1 = dx2;\n    dy1 = dy2;\n  }\n  return twiceArea / 2;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRings(flatCoordinates, offset, ends, stride) {\n  let area = 0;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    area += linearRing(flatCoordinates, offset, end, stride);\n    offset = end;\n  }\n  return area;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {number} Area.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  let area = 0;\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    area += linearRings(flatCoordinates, offset, ends, stride);\n    offset = ends[ends.length - 1];\n  }\n  return area;\n}\n","/**\n * @module ol/geom/flat/closest\n */\nimport {lerp, squaredDistance as squaredDx} from '../../math.js';\n\n/**\n * Returns the point on the 2D line segment flatCoordinates[offset1] to\n * flatCoordinates[offset2] that is closest to the point (x, y).  Extra\n * dimensions are linearly interpolated.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset1 Offset 1.\n * @param {number} offset2 Offset 2.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n */\nfunction assignClosest(\n  flatCoordinates,\n  offset1,\n  offset2,\n  stride,\n  x,\n  y,\n  closestPoint,\n) {\n  const x1 = flatCoordinates[offset1];\n  const y1 = flatCoordinates[offset1 + 1];\n  const dx = flatCoordinates[offset2] - x1;\n  const dy = flatCoordinates[offset2 + 1] - y1;\n  let offset;\n  if (dx === 0 && dy === 0) {\n    offset = offset1;\n  } else {\n    const t = ((x - x1) * dx + (y - y1) * dy) / (dx * dx + dy * dy);\n    if (t > 1) {\n      offset = offset2;\n    } else if (t > 0) {\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = lerp(\n          flatCoordinates[offset1 + i],\n          flatCoordinates[offset2 + i],\n          t,\n        );\n      }\n      closestPoint.length = stride;\n      return;\n    } else {\n      offset = offset1;\n    }\n  }\n  for (let i = 0; i < stride; ++i) {\n    closestPoint[i] = flatCoordinates[offset + i];\n  }\n  closestPoint.length = stride;\n}\n\n/**\n * Return the squared of the largest distance between any pair of consecutive\n * coordinates.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function maxSquaredDelta(flatCoordinates, offset, end, stride, max) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  for (offset += stride; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    const squaredDelta = squaredDx(x1, y1, x2, y2);\n    if (squaredDelta > max) {\n      max = squaredDelta;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function arrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    max = maxSquaredDelta(flatCoordinates, offset, end, stride, max);\n    offset = end;\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} max Max squared delta.\n * @return {number} Max squared delta.\n */\nexport function multiArrayMaxSquaredDelta(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  max,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    max = arrayMaxSquaredDelta(flatCoordinates, offset, ends, stride, max);\n    offset = ends[ends.length - 1];\n  }\n  return max;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestPoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  if (offset == end) {\n    return minSquaredDistance;\n  }\n  let i, squaredDistance;\n  if (maxDelta === 0) {\n    // All points are identical, so just test the first point.\n    squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[offset],\n      flatCoordinates[offset + 1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[offset + i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  let index = offset + stride;\n  while (index < end) {\n    assignClosest(\n      flatCoordinates,\n      index - stride,\n      index,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n      index += stride;\n    } else {\n      // Skip ahead multiple points, because we know that all the skipped\n      // points cannot be any closer than the closest point we have found so\n      // far.  We know this because we know how close the current point is, how\n      // close the closest point we have found so far is, and the maximum\n      // distance between consecutive points.  For example, if we're currently\n      // at distance 10, the best we've found so far is 3, and that the maximum\n      // distance between consecutive points is 2, then we'll need to skip at\n      // least (10 - 3) / 2 == 3 (rounded down) points to have any chance of\n      // finding a closer point.  We use Math.max(..., 1) to ensure that we\n      // always advance at least one point, to avoid an infinite loop.\n      index +=\n        stride *\n        Math.max(\n          ((Math.sqrt(squaredDistance) - Math.sqrt(minSquaredDistance)) /\n            maxDelta) |\n            0,\n          1,\n        );\n    }\n  }\n  if (isRing) {\n    // Check the closing segment.\n    assignClosest(\n      flatCoordinates,\n      end - stride,\n      offset,\n      stride,\n      x,\n      y,\n      tmpPoint,\n    );\n    squaredDistance = squaredDx(x, y, tmpPoint[0], tmpPoint[1]);\n    if (squaredDistance < minSquaredDistance) {\n      minSquaredDistance = squaredDistance;\n      for (i = 0; i < stride; ++i) {\n        closestPoint[i] = tmpPoint[i];\n      }\n      closestPoint.length = stride;\n    }\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestArrayPoint(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    minSquaredDistance = assignClosestPoint(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = end;\n  }\n  return minSquaredDistance;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} maxDelta Max delta.\n * @param {boolean} isRing Is ring.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {Array<number>} closestPoint Closest point.\n * @param {number} minSquaredDistance Minimum squared distance.\n * @param {Array<number>} [tmpPoint] Temporary point object.\n * @return {number} Minimum squared distance.\n */\nexport function assignClosestMultiArrayPoint(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  maxDelta,\n  isRing,\n  x,\n  y,\n  closestPoint,\n  minSquaredDistance,\n  tmpPoint,\n) {\n  tmpPoint = tmpPoint ? tmpPoint : [NaN, NaN];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    minSquaredDistance = assignClosestArrayPoint(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      maxDelta,\n      isRing,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n      tmpPoint,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return minSquaredDistance;\n}\n","/**\n * @module ol/geom/flat/deflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinate(flatCoordinates, offset, coordinate, stride) {\n  for (let i = 0, ii = coordinate.length; i < ii; ++i) {\n    flatCoordinates[offset++] = coordinate[i];\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} coordinates Coordinates.\n * @param {number} stride Stride.\n * @return {number} offset Offset.\n */\nexport function deflateCoordinates(\n  flatCoordinates,\n  offset,\n  coordinates,\n  stride,\n) {\n  for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n    const coordinate = coordinates[i];\n    for (let j = 0; j < stride; ++j) {\n      flatCoordinates[offset++] = coordinate[j];\n    }\n  }\n  return offset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} coordinatess Coordinatess.\n * @param {number} stride Stride.\n * @param {Array<number>} [ends] Ends.\n * @return {Array<number>} Ends.\n */\nexport function deflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatess,\n  stride,\n  ends,\n) {\n  ends = ends ? ends : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatess.length; j < jj; ++j) {\n    const end = deflateCoordinates(\n      flatCoordinates,\n      offset,\n      coordinatess[j],\n      stride,\n    );\n    ends[i++] = end;\n    offset = end;\n  }\n  ends.length = i;\n  return ends;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} coordinatesss Coordinatesss.\n * @param {number} stride Stride.\n * @param {Array<Array<number>>} [endss] Endss.\n * @return {Array<Array<number>>} Endss.\n */\nexport function deflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  coordinatesss,\n  stride,\n  endss,\n) {\n  endss = endss ? endss : [];\n  let i = 0;\n  for (let j = 0, jj = coordinatesss.length; j < jj; ++j) {\n    const ends = deflateCoordinatesArray(\n      flatCoordinates,\n      offset,\n      coordinatesss[j],\n      stride,\n      endss[i],\n    );\n    if (ends.length === 0) {\n      ends[0] = offset;\n    }\n    endss[i++] = ends;\n    offset = ends[ends.length - 1];\n  }\n  endss.length = i;\n  return endss;\n}\n","/**\n * @module ol/geom/flat/inflate\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} [coordinates] Coordinates.\n * @return {Array<import(\"../../coordinate.js\").Coordinate>} Coordinates.\n */\nexport function inflateCoordinates(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  coordinates,\n) {\n  coordinates = coordinates !== undefined ? coordinates : [];\n  let i = 0;\n  for (let j = offset; j < end; j += stride) {\n    coordinates[i++] = flatCoordinates.slice(j, j + stride);\n  }\n  coordinates.length = i;\n  return coordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<Array<import(\"../../coordinate.js\").Coordinate>>} [coordinatess] Coordinatess.\n * @return {Array<Array<import(\"../../coordinate.js\").Coordinate>>} Coordinatess.\n */\nexport function inflateCoordinatesArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  coordinatess,\n) {\n  coordinatess = coordinatess !== undefined ? coordinatess : [];\n  let i = 0;\n  for (let j = 0, jj = ends.length; j < jj; ++j) {\n    const end = ends[j];\n    coordinatess[i++] = inflateCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      coordinatess[i],\n    );\n    offset = end;\n  }\n  coordinatess.length = i;\n  return coordinatess;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} [coordinatesss]\n *     Coordinatesss.\n * @return {Array<Array<Array<import(\"../../coordinate.js\").Coordinate>>>} Coordinatesss.\n */\nexport function inflateMultiCoordinatesArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  coordinatesss,\n) {\n  coordinatesss = coordinatesss !== undefined ? coordinatesss : [];\n  let i = 0;\n  for (let j = 0, jj = endss.length; j < jj; ++j) {\n    const ends = endss[j];\n    coordinatesss[i++] =\n      ends.length === 1 && ends[0] === offset\n        ? []\n        : inflateCoordinatesArray(\n            flatCoordinates,\n            offset,\n            ends,\n            stride,\n            coordinatesss[i],\n          );\n    offset = ends[ends.length - 1];\n  }\n  coordinatesss.length = i;\n  return coordinatesss;\n}\n","/**\n * @module ol/geom/flat/simplify\n */\n// Based on simplify-js https://github.com/mourner/simplify-js\n// Copyright (c) 2012, Vladimir Agafonkin\n// All rights reserved.\n//\n// Redistribution and use in source and binary forms, with or without\n// modification, are permitted provided that the following conditions are met:\n//\n//    1. Redistributions of source code must retain the above copyright notice,\n//       this list of conditions and the following disclaimer.\n//\n//    2. Redistributions in binary form must reproduce the above copyright\n//       notice, this list of conditions and the following disclaimer in the\n//       documentation and/or other materials provided with the distribution.\n//\n// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n// AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n// IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE\n// ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE\n// LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR\n// CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF\n// SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS\n// INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN\n// CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\n// ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\n// POSSIBILITY OF SUCH DAMAGE.\n\nimport {squaredDistance, squaredSegmentDistance} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {boolean} highQuality Highest quality.\n * @param {Array<number>} [simplifiedFlatCoordinates] Simplified flat\n *     coordinates.\n * @return {Array<number>} Simplified line string.\n */\nexport function simplifyLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  highQuality,\n  simplifiedFlatCoordinates,\n) {\n  simplifiedFlatCoordinates =\n    simplifiedFlatCoordinates !== undefined ? simplifiedFlatCoordinates : [];\n  if (!highQuality) {\n    end = radialDistance(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    flatCoordinates = simplifiedFlatCoordinates;\n    offset = 0;\n    stride = 2;\n  }\n  simplifiedFlatCoordinates.length = douglasPeucker(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    squaredTolerance,\n    simplifiedFlatCoordinates,\n    0,\n  );\n  return simplifiedFlatCoordinates;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function douglasPeucker(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  const n = (end - offset) / stride;\n  if (n < 3) {\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  /** @type {Array<number>} */\n  const markers = new Array(n);\n  markers[0] = 1;\n  markers[n - 1] = 1;\n  /** @type {Array<number>} */\n  const stack = [offset, end - stride];\n  let index = 0;\n  while (stack.length > 0) {\n    const last = stack.pop();\n    const first = stack.pop();\n    let maxSquaredDistance = 0;\n    const x1 = flatCoordinates[first];\n    const y1 = flatCoordinates[first + 1];\n    const x2 = flatCoordinates[last];\n    const y2 = flatCoordinates[last + 1];\n    for (let i = first + stride; i < last; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      const squaredDistance = squaredSegmentDistance(x, y, x1, y1, x2, y2);\n      if (squaredDistance > maxSquaredDistance) {\n        index = i;\n        maxSquaredDistance = squaredDistance;\n      }\n    }\n    if (maxSquaredDistance > squaredTolerance) {\n      markers[(index - offset) / stride] = 1;\n      if (first + stride < index) {\n        stack.push(first, index);\n      }\n      if (index + stride < last) {\n        stack.push(index, last);\n      }\n    }\n  }\n  for (let i = 0; i < n; ++i) {\n    if (markers[i]) {\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + i * stride + 1];\n    }\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = douglasPeucker(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function douglasPeuckerMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = douglasPeuckerArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function radialDistance(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  squaredTolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  if (end <= offset + stride) {\n    // zero or one point, no simplification possible, so copy and return\n    for (; offset < end; offset += stride) {\n      simplifiedFlatCoordinates[simplifiedOffset++] = flatCoordinates[offset];\n      simplifiedFlatCoordinates[simplifiedOffset++] =\n        flatCoordinates[offset + 1];\n    }\n    return simplifiedOffset;\n  }\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  // copy first point\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  let x2 = x1;\n  let y2 = y1;\n  for (offset += stride; offset < end; offset += stride) {\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    if (squaredDistance(x1, y1, x2, y2) > squaredTolerance) {\n      // copy point at offset\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  if (x2 != x1 || y2 != y1) {\n    // copy last point\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {number} value Value.\n * @param {number} tolerance Tolerance.\n * @return {number} Rounded value.\n */\nexport function snap(value, tolerance) {\n  return tolerance * Math.round(value / tolerance);\n}\n\n/**\n * Simplifies a line string using an algorithm designed by Tim Schaub.\n * Coordinates are snapped to the nearest value in a virtual grid and\n * consecutive duplicate coordinates are discarded.  This effectively preserves\n * topology as the simplification of any subsection of a line string is\n * independent of the rest of the line string.  This means that, for examples,\n * the common edge between two polygons will be simplified to the same line\n * string independently in both polygons.  This implementation uses a single\n * pass over the coordinates and eliminates intermediate collinear points.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @return {number} Simplified offset.\n */\nexport function quantize(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n) {\n  // do nothing if the line is empty\n  if (offset == end) {\n    return simplifiedOffset;\n  }\n  // snap the first coordinate (P1)\n  let x1 = snap(flatCoordinates[offset], tolerance);\n  let y1 = snap(flatCoordinates[offset + 1], tolerance);\n  offset += stride;\n  // add the first coordinate to the output\n  simplifiedFlatCoordinates[simplifiedOffset++] = x1;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y1;\n  // find the next coordinate that does not snap to the same value as the first\n  // coordinate (P2)\n  let x2, y2;\n  do {\n    x2 = snap(flatCoordinates[offset], tolerance);\n    y2 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    if (offset == end) {\n      // all coordinates snap to the same value, the line collapses to a point\n      // push the last snapped value anyway to ensure that the output contains\n      // at least two points\n      // FIXME should we really return at least two points anyway?\n      simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n      simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n      return simplifiedOffset;\n    }\n  } while (x2 == x1 && y2 == y1);\n  while (offset < end) {\n    // snap the next coordinate (P3)\n    const x3 = snap(flatCoordinates[offset], tolerance);\n    const y3 = snap(flatCoordinates[offset + 1], tolerance);\n    offset += stride;\n    // skip P3 if it is equal to P2\n    if (x3 == x2 && y3 == y2) {\n      continue;\n    }\n    // calculate the delta between P1 and P2\n    const dx1 = x2 - x1;\n    const dy1 = y2 - y1;\n    // calculate the delta between P3 and P1\n    const dx2 = x3 - x1;\n    const dy2 = y3 - y1;\n    // if P1, P2, and P3 are colinear and P3 is further from P1 than P2 is from\n    // P1 in the same direction then P2 is on the straight line between P1 and\n    // P3\n    if (\n      dx1 * dy2 == dy1 * dx2 &&\n      ((dx1 < 0 && dx2 < dx1) || dx1 == dx2 || (dx1 > 0 && dx2 > dx1)) &&\n      ((dy1 < 0 && dy2 < dy1) || dy1 == dy2 || (dy1 > 0 && dy2 > dy1))\n    ) {\n      // discard P2 and set P2 = P3\n      x2 = x3;\n      y2 = y3;\n      continue;\n    }\n    // either P1, P2, and P3 are not colinear, or they are colinear but P3 is\n    // between P3 and P1 or on the opposite half of the line to P2.  add P2,\n    // and continue with P1 = P2 and P2 = P3\n    simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n    simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n    x1 = x2;\n    y1 = y2;\n    x2 = x3;\n    y2 = y3;\n  }\n  // add the last point (P2)\n  simplifiedFlatCoordinates[simplifiedOffset++] = x2;\n  simplifiedFlatCoordinates[simplifiedOffset++] = y2;\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<number>} simplifiedEnds Simplified ends.\n * @return {number} Simplified offset.\n */\nexport function quantizeArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEnds,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    simplifiedOffset = quantize(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n    );\n    simplifiedEnds.push(simplifiedOffset);\n    offset = end;\n  }\n  return simplifiedOffset;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} tolerance Tolerance.\n * @param {Array<number>} simplifiedFlatCoordinates Simplified flat\n *     coordinates.\n * @param {number} simplifiedOffset Simplified offset.\n * @param {Array<Array<number>>} simplifiedEndss Simplified endss.\n * @return {number} Simplified offset.\n */\nexport function quantizeMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  tolerance,\n  simplifiedFlatCoordinates,\n  simplifiedOffset,\n  simplifiedEndss,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedOffset = quantizeArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      tolerance,\n      simplifiedFlatCoordinates,\n      simplifiedOffset,\n      simplifiedEnds,\n    );\n    simplifiedEndss.push(simplifiedEnds);\n    offset = ends[ends.length - 1];\n  }\n  return simplifiedOffset;\n}\n","/**\n * @module ol/geom/LinearRing\n */\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRing as linearRingArea} from './flat/area.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linear ring geometry. Only used as part of polygon; cannot be rendered\n * on its own.\n *\n * @api\n */\nclass LinearRing extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LinearRing} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    return new LinearRing(this.flatCoordinates.slice(), this.layout);\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Return the area of the linear ring on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingArea(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linear ring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LinearRing} Simplified LinearRing.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LinearRing(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LinearRing';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the linear ring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LinearRing;\n","/**\n * @module ol/geom/Point\n */\nimport {containsXY, createOrUpdateFromCoordinate} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinate} from './flat/deflate.js';\n\n/**\n * @classdesc\n * Point geometry.\n *\n * @api\n */\nclass Point extends SimpleGeometry {\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    this.setCoordinates(coordinates, layout);\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Point} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const point = new Point(this.flatCoordinates.slice(), this.layout);\n    point.applyProperties(this);\n    return point;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    const flatCoordinates = this.flatCoordinates;\n    const squaredDistance = squaredDx(\n      x,\n      y,\n      flatCoordinates[0],\n      flatCoordinates[1],\n    );\n    if (squaredDistance < minSquaredDistance) {\n      const stride = this.stride;\n      for (let i = 0; i < stride; ++i) {\n        closestPoint[i] = flatCoordinates[i];\n      }\n      closestPoint.length = stride;\n      return squaredDistance;\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinate of the point.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return this.flatCoordinates.slice();\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    return createOrUpdateFromCoordinate(this.flatCoordinates, extent);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Point';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return containsXY(extent, this.flatCoordinates[0], this.flatCoordinates[1]);\n  }\n\n  /**\n   * @param {!Array<*>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 0);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinate(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default Point;\n","/**\n * @module ol/geom/flat/contains\n */\nimport {forEachCorner} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} Contains extent.\n */\nexport function linearRingContainsExtent(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  const outside = forEachCorner(\n    extent,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n     * @return {boolean} Contains (x, y).\n     */\n    function (coordinate) {\n      return !linearRingContainsXY(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        coordinate[0],\n        coordinate[1],\n      );\n    },\n  );\n  return !outside;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingContainsXY(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  x,\n  y,\n) {\n  // https://web.archive.org/web/20210504233957/http://geomalgorithms.com/a03-_inclusion.html\n  // Copyright 2000 softSurfer, 2012 Dan Sunday\n  // This code may be freely used and modified for any purpose\n  // providing that this copyright notice is included with it.\n  // SoftSurfer makes no warranty for this code, and cannot be held\n  // liable for any real or imagined damage resulting from its use.\n  // Users of this code must verify correctness for their application.\n  let wn = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    if (y1 <= y) {\n      if (y2 > y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) > 0) {\n        wn++;\n      }\n    } else if (y2 <= y && (x2 - x1) * (y - y1) - (x - x1) * (y2 - y1) < 0) {\n      wn--;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  return wn !== 0;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingsContainsXY(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  x,\n  y,\n) {\n  if (ends.length === 0) {\n    return false;\n  }\n  if (!linearRingContainsXY(flatCoordinates, offset, ends[0], stride, x, y)) {\n    return false;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsXY(flatCoordinates, ends[i - 1], ends[i], stride, x, y)\n    ) {\n      return false;\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {boolean} Contains (x, y).\n */\nexport function linearRingssContainsXY(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  x,\n  y,\n) {\n  if (endss.length === 0) {\n    return false;\n  }\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/interiorpoint\n */\nimport {ascending} from '../../array.js';\nimport {linearRingsContainsXY} from './contains.js';\n\n/**\n * Calculates a point that is likely to lie in the interior of the linear rings.\n * Inspired by JTS's com.vividsolutions.jts.geom.Geometry#getInteriorPoint.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @param {number} flatCentersOffset Flat center offset.\n * @param {Array<number>} [dest] Destination.\n * @return {Array<number>} Destination point as XYM coordinate, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointOfArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  flatCenters,\n  flatCentersOffset,\n  dest,\n) {\n  let i, ii, x, x1, x2, y1, y2;\n  const y = flatCenters[flatCentersOffset + 1];\n  /** @type {Array<number>} */\n  const intersections = [];\n  // Calculate intersections with the horizontal line\n  for (let r = 0, rr = ends.length; r < rr; ++r) {\n    const end = ends[r];\n    x1 = flatCoordinates[end - stride];\n    y1 = flatCoordinates[end - stride + 1];\n    for (i = offset; i < end; i += stride) {\n      x2 = flatCoordinates[i];\n      y2 = flatCoordinates[i + 1];\n      if ((y <= y1 && y2 <= y) || (y1 <= y && y <= y2)) {\n        x = ((y - y1) / (y2 - y1)) * (x2 - x1) + x1;\n        intersections.push(x);\n      }\n      x1 = x2;\n      y1 = y2;\n    }\n  }\n  // Find the longest segment of the horizontal line that has its center point\n  // inside the linear ring.\n  let pointX = NaN;\n  let maxSegmentLength = -Infinity;\n  intersections.sort(ascending);\n  x1 = intersections[0];\n  for (i = 1, ii = intersections.length; i < ii; ++i) {\n    x2 = intersections[i];\n    const segmentLength = Math.abs(x2 - x1);\n    if (segmentLength > maxSegmentLength) {\n      x = (x1 + x2) / 2;\n      if (linearRingsContainsXY(flatCoordinates, offset, ends, stride, x, y)) {\n        pointX = x;\n        maxSegmentLength = segmentLength;\n      }\n    }\n    x1 = x2;\n  }\n  if (isNaN(pointX)) {\n    // There is no horizontal line that has its center point inside the linear\n    // ring.  Use the center of the the linear ring's extent.\n    pointX = flatCenters[flatCentersOffset];\n  }\n  if (dest) {\n    dest.push(pointX, y, maxSegmentLength);\n    return dest;\n  }\n  return [pointX, y, maxSegmentLength];\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {Array<number>} flatCenters Flat centers.\n * @return {Array<number>} Interior points as XYM coordinates, where M is the\n * length of the horizontal intersection that the point belongs to.\n */\nexport function getInteriorPointsOfMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  flatCenters,\n) {\n  /** @type {Array<number>} */\n  let interiorPoints = [];\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    interiorPoints = getInteriorPointOfArray(\n      flatCoordinates,\n      offset,\n      ends,\n      stride,\n      flatCenters,\n      2 * i,\n      interiorPoints,\n    );\n    offset = ends[ends.length - 1];\n  }\n  return interiorPoints;\n}\n","/**\n * @module ol/geom/flat/segments\n */\n\n/**\n * This function calls `callback` for each segment of the flat coordinates\n * array. If the callback returns a truthy value the function returns that\n * value immediately. Otherwise the function returns `false`.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {function(import(\"../../coordinate.js\").Coordinate, import(\"../../coordinate.js\").Coordinate): T} callback Function\n *     called for each segment.\n * @return {T|boolean} Value.\n * @template T\n */\nexport function forEach(flatCoordinates, offset, end, stride, callback) {\n  let ret;\n  offset += stride;\n  for (; offset < end; offset += stride) {\n    ret = callback(\n      flatCoordinates.slice(offset - stride, offset),\n      flatCoordinates.slice(offset, offset + stride),\n    );\n    if (ret) {\n      return ret;\n    }\n  }\n  return false;\n}\n\n/**\n * Calculate the intersection point of two line segments.\n * Reference: https://stackoverflow.com/a/72474223/2389327\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment1 The first line segment as an array of two points.\n * @param {Array<import(\"../../coordinate.js\").Coordinate>} segment2 The second line segment as an array of two points.\n * @return {import(\"../../coordinate.js\").Coordinate|undefined} The intersection point or `undefined` if no intersection.\n */\nexport function getIntersectionPoint(segment1, segment2) {\n  const [a, b] = segment1;\n  const [c, d] = segment2;\n  const t =\n    ((a[0] - c[0]) * (c[1] - d[1]) - (a[1] - c[1]) * (c[0] - d[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n  const u =\n    ((a[0] - c[0]) * (a[1] - b[1]) - (a[1] - c[1]) * (a[0] - b[0])) /\n    ((a[0] - b[0]) * (c[1] - d[1]) - (a[1] - b[1]) * (c[0] - d[0]));\n\n  // Check if lines actually intersect\n  if (0 <= t && t <= 1 && 0 <= u && u <= 1) {\n    return [a[0] + t * (b[0] - a[0]), a[1] + t * (b[1] - a[1])];\n  }\n  return undefined;\n}\n","/**\n * @module ol/geom/flat/intersectsextent\n */\nimport {\n  createEmpty,\n  extendFlatCoordinates,\n  intersects,\n  intersectsSegment,\n} from '../../extent.js';\nimport {linearRingContainsExtent, linearRingContainsXY} from './contains.js';\nimport {forEach as forEachSegment} from './segments.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @param {import('../../extent.js').Extent} [coordinatesExtent] Coordinates extent\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineString(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n  coordinatesExtent,\n) {\n  coordinatesExtent =\n    coordinatesExtent ??\n    extendFlatCoordinates(createEmpty(), flatCoordinates, offset, end, stride);\n  if (!intersects(extent, coordinatesExtent)) {\n    return false;\n  }\n  if (\n    (coordinatesExtent[0] >= extent[0] && coordinatesExtent[2] <= extent[2]) ||\n    (coordinatesExtent[1] >= extent[1] && coordinatesExtent[3] <= extent[3])\n  ) {\n    return true;\n  }\n  return forEachSegment(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    /**\n     * @param {import(\"../../coordinate.js\").Coordinate} point1 Start point.\n     * @param {import(\"../../coordinate.js\").Coordinate} point2 End point.\n     * @return {boolean} `true` if the segment and the extent intersect,\n     *     `false` otherwise.\n     */\n    function (point1, point2) {\n      return intersectsSegment(extent, point1, point2);\n    },\n  );\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLineStringArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    if (\n      intersectsLineString(flatCoordinates, offset, ends[i], stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[i];\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRing(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  extent,\n) {\n  if (intersectsLineString(flatCoordinates, offset, end, stride, extent)) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[0],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[1],\n    )\n  ) {\n    return true;\n  }\n  if (\n    linearRingContainsXY(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      extent[2],\n      extent[3],\n    )\n  ) {\n    return true;\n  }\n  return false;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingArray(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  extent,\n) {\n  if (!intersectsLinearRing(flatCoordinates, offset, ends[0], stride, extent)) {\n    return false;\n  }\n  if (ends.length === 1) {\n    return true;\n  }\n  for (let i = 1, ii = ends.length; i < ii; ++i) {\n    if (\n      linearRingContainsExtent(\n        flatCoordinates,\n        ends[i - 1],\n        ends[i],\n        stride,\n        extent,\n      )\n    ) {\n      if (\n        !intersectsLineString(\n          flatCoordinates,\n          ends[i - 1],\n          ends[i],\n          stride,\n          extent,\n        )\n      ) {\n        return false;\n      }\n    }\n  }\n  return true;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @param {import(\"../../extent.js\").Extent} extent Extent.\n * @return {boolean} True if the geometry and the extent intersect.\n */\nexport function intersectsLinearRingMultiArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  extent,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (\n      intersectsLinearRingArray(flatCoordinates, offset, ends, stride, extent)\n    ) {\n      return true;\n    }\n    offset = ends[ends.length - 1];\n  }\n  return false;\n}\n","/**\n * @module ol/geom/flat/reverse\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n */\nexport function coordinates(flatCoordinates, offset, end, stride) {\n  while (offset < end - stride) {\n    for (let i = 0; i < stride; ++i) {\n      const tmp = flatCoordinates[offset + i];\n      flatCoordinates[offset + i] = flatCoordinates[end - stride + i];\n      flatCoordinates[end - stride + i] = tmp;\n    }\n    offset += stride;\n    end -= stride;\n  }\n}\n","/**\n * @module ol/geom/flat/orient\n */\nimport {coordinates as reverseCoordinates} from './reverse.js';\n\n/**\n * Is the linear ring oriented clockwise in a coordinate system with a bottom-left\n * coordinate origin? For a coordinate system with a top-left coordinate origin,\n * the ring's orientation is clockwise when this function returns false.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {boolean|undefined} Is clockwise.\n */\nexport function linearRingIsClockwise(flatCoordinates, offset, end, stride) {\n  // https://stackoverflow.com/q/1165647/clockwise-method#1165943\n  // https://github.com/OSGeo/gdal/blob/master/gdal/ogr/ogrlinearring.cpp\n  let edge = 0;\n  let x1 = flatCoordinates[end - stride];\n  let y1 = flatCoordinates[end - stride + 1];\n  for (; offset < end; offset += stride) {\n    const x2 = flatCoordinates[offset];\n    const y2 = flatCoordinates[offset + 1];\n    edge += (x2 - x1) * (y2 + y1);\n    x1 = x2;\n    y1 = y2;\n  }\n  return edge === 0 ? undefined : edge > 0;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingsAreOriented(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    if (i === 0) {\n      if ((right && isClockwise) || (!right && !isClockwise)) {\n        return false;\n      }\n    } else {\n      if ((right && !isClockwise) || (!right && isClockwise)) {\n        return false;\n      }\n    }\n    offset = end;\n  }\n  return true;\n}\n\n/**\n * Determines if linear rings are oriented.  By default, left-hand orientation\n * is tested (first ring must be clockwise, remaining rings counter-clockwise).\n * To test for right-hand orientation, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Test for right-hand orientation\n *     (counter-clockwise exterior ring and clockwise interior rings).\n * @return {boolean} Rings are correctly oriented.\n */\nexport function linearRingssAreOriented(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    if (!linearRingsAreOriented(flatCoordinates, offset, ends, stride, right)) {\n      return false;\n    }\n    if (ends.length) {\n      offset = ends[ends.length - 1];\n    }\n  }\n  return true;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRings(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  right,\n) {\n  right = right !== undefined ? right : false;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    const isClockwise = linearRingIsClockwise(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n    );\n    const reverse =\n      i === 0\n        ? (right && isClockwise) || (!right && !isClockwise)\n        : (right && !isClockwise) || (!right && isClockwise);\n    if (reverse) {\n      reverseCoordinates(flatCoordinates, offset, end, stride);\n    }\n    offset = end;\n  }\n  return offset;\n}\n\n/**\n * Orient coordinates in a flat array of linear rings.  By default, rings\n * are oriented following the left-hand rule (clockwise for exterior and\n * counter-clockwise for interior rings).  To orient according to the\n * right-hand rule, use the `right` argument.\n *\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Array of array of end indexes.\n * @param {number} stride Stride.\n * @param {boolean} [right] Follow the right-hand rule for orientation.\n * @return {number} End.\n */\nexport function orientLinearRingsArray(\n  flatCoordinates,\n  offset,\n  endss,\n  stride,\n  right,\n) {\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    offset = orientLinearRings(\n      flatCoordinates,\n      offset,\n      endss[i],\n      stride,\n      right,\n    );\n  }\n  return offset;\n}\n\n/**\n * Return a two-dimensional endss\n * @param {Array<number>} flatCoordinates Flat coordinates\n * @param {Array<number>} ends Linear ring end indexes\n * @return {Array<Array<number>>} Two dimensional endss array that can\n * be used to construct a MultiPolygon\n */\nexport function inflateEnds(flatCoordinates, ends) {\n  const endss = [];\n  let offset = 0;\n  let prevEndIndex = 0;\n  let startOrientation;\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    // classifies an array of rings into polygons with outer rings and holes\n    const orientation = linearRingIsClockwise(flatCoordinates, offset, end, 2);\n    if (startOrientation === undefined) {\n      startOrientation = orientation;\n    }\n    if (orientation === startOrientation) {\n      endss.push(ends.slice(prevEndIndex, i + 1));\n    } else {\n      if (endss.length === 0) {\n        continue;\n      }\n      endss[endss.length - 1].push(ends[prevEndIndex]);\n    }\n    prevEndIndex = i + 1;\n    offset = end;\n  }\n  return endss;\n}\n","/**\n * @module ol/geom/Polygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, getCenter, isEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {offset as sphereOffset} from '../sphere.js';\nimport LinearRing from './LinearRing.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRings as linearRingsArea} from './flat/area.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {linearRingsContainsXY} from './flat/contains.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointOfArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingArray} from './flat/intersectsextent.js';\nimport {linearRingsAreOriented, orientLinearRings} from './flat/orient.js';\nimport {quantizeArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Polygon geometry.\n *\n * @api\n */\nclass Polygon extends SimpleGeometry {\n  /**\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>|!Array<number>} coordinates\n   *     Array of linear rings that define the polygon. The first linear ring of the\n   *     array defines the outer-boundary or surface of the polygon. Each subsequent\n   *     linear ring defines a hole in the surface of the polygon. A linear ring is\n   *     an array of vertices' coordinates where the first coordinate and the last are\n   *     equivalent. (For internal use, flat coordinates in combination with\n   *     `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Ends (for internal use with flat coordinates).\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatInteriorPoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed linear ring to this polygon.\n   * @param {LinearRing} linearRing Linear ring.\n   * @api\n   */\n  appendLinearRing(linearRing) {\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = linearRing.getFlatCoordinates().slice();\n    } else {\n      extend(this.flatCoordinates, linearRing.getFlatCoordinates());\n    }\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!Polygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const polygon = new Polygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    polygon.applyProperties(this);\n    return polygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingsContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the polygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingsArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRings(flatCoordinates, 0, this.ends_, this.stride, right);\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateCoordinatesArray(flatCoordinates, 0, this.ends_, this.stride);\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * @return {Array<number>} Interior point.\n   */\n  getFlatInteriorPoint() {\n    if (this.flatInteriorPointRevision_ != this.getRevision()) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoint_ = getInteriorPointOfArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.ends_,\n        this.stride,\n        flatCenter,\n        0,\n      );\n      this.flatInteriorPointRevision_ = this.getRevision();\n    }\n    return /** @type {import(\"../coordinate.js\").Coordinate} */ (\n      this.flatInteriorPoint_\n    );\n  }\n\n  /**\n   * Return an interior point of the polygon.\n   * @return {Point} Interior point as XYM coordinate, where M is the\n   * length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoint() {\n    return new Point(this.getFlatInteriorPoint(), 'XYM');\n  }\n\n  /**\n   * Return the number of rings of the polygon,  this includes the exterior\n   * ring and any interior rings.\n   *\n   * @return {number} Number of rings.\n   * @api\n   */\n  getLinearRingCount() {\n    return this.ends_.length;\n  }\n\n  /**\n   * Return the Nth linear ring of the polygon geometry. Return `null` if the\n   * given index is out of range.\n   * The exterior linear ring is available at index `0` and the interior rings\n   * at index `1` and beyond.\n   *\n   * @param {number} index Index.\n   * @return {LinearRing|null} Linear ring.\n   * @api\n   */\n  getLinearRing(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LinearRing(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linear rings of the polygon.\n   * @return {Array<LinearRing>} Linear rings.\n   * @api\n   */\n  getLinearRings() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const linearRings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const linearRing = new LinearRing(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      linearRings.push(linearRing);\n      offset = end;\n    }\n    return linearRings;\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (linearRingsAreOriented(flatCoordinates, 0, this.ends_, this.stride)) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRings(\n          this.orientedFlatCoordinates_,\n          0,\n          this.ends_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {Polygon} Simplified Polygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = quantizeArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new Polygon(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'Polygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the polygon.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default Polygon;\n\n/**\n * Create an approximation of a circle on the surface of a sphere.\n * @param {import(\"../coordinate.js\").Coordinate} center Center (`[lon, lat]` in degrees).\n * @param {number} radius The great-circle distance from the center to\n *     the polygon vertices in meters.\n * @param {number} [n] Optional number of vertices for the resulting\n *     polygon. Default is `32`.\n * @param {number} [sphereRadius] Optional radius for the sphere (defaults to\n *     the Earth's mean radius using the WGS84 ellipsoid).\n * @return {Polygon} The \"circular\" polygon.\n * @api\n */\nexport function circular(center, radius, n, sphereRadius) {\n  n = n ? n : 32;\n  /** @type {Array<number>} */\n  const flatCoordinates = [];\n  for (let i = 0; i < n; ++i) {\n    extend(\n      flatCoordinates,\n      sphereOffset(center, radius, (2 * Math.PI * i) / n, sphereRadius),\n    );\n  }\n  flatCoordinates.push(flatCoordinates[0], flatCoordinates[1]);\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a polygon from an extent. The layout used is `XY`.\n * @param {import(\"../extent.js\").Extent} extent The extent.\n * @return {Polygon} The polygon.\n * @api\n */\nexport function fromExtent(extent) {\n  if (isEmpty(extent)) {\n    throw new Error('Cannot create polygon from empty extent');\n  }\n  const minX = extent[0];\n  const minY = extent[1];\n  const maxX = extent[2];\n  const maxY = extent[3];\n  const flatCoordinates = [\n    minX,\n    minY,\n    minX,\n    maxY,\n    maxX,\n    maxY,\n    maxX,\n    minY,\n    minX,\n    minY,\n  ];\n  return new Polygon(flatCoordinates, 'XY', [flatCoordinates.length]);\n}\n\n/**\n * Create a regular polygon from a circle.\n * @param {import(\"./Circle.js\").default} circle Circle geometry.\n * @param {number} [sides] Number of sides of the polygon. Default is 32.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n * @return {Polygon} Polygon geometry.\n * @api\n */\nexport function fromCircle(circle, sides, angle) {\n  sides = sides ? sides : 32;\n  const stride = circle.getStride();\n  const layout = circle.getLayout();\n  const center = circle.getCenter();\n  const arrayLength = stride * (sides + 1);\n  const flatCoordinates = new Array(arrayLength);\n  for (let i = 0; i < arrayLength; i += stride) {\n    flatCoordinates[i] = 0;\n    flatCoordinates[i + 1] = 0;\n    for (let j = 2; j < stride; j++) {\n      flatCoordinates[i + j] = center[j];\n    }\n  }\n  const ends = [flatCoordinates.length];\n  const polygon = new Polygon(flatCoordinates, layout, ends);\n  makeRegular(polygon, center, circle.getRadius(), angle);\n  return polygon;\n}\n\n/**\n * Modify the coordinates of a polygon to make it a regular polygon.\n * @param {Polygon} polygon Polygon geometry.\n * @param {import(\"../coordinate.js\").Coordinate} center Center of the regular polygon.\n * @param {number} radius Radius of the regular polygon.\n * @param {number} [angle] Start angle for the first vertex of the polygon in\n *     counter-clockwise radians. 0 means East. Default is 0.\n */\nexport function makeRegular(polygon, center, radius, angle) {\n  const flatCoordinates = polygon.getFlatCoordinates();\n  const stride = polygon.getStride();\n  const sides = flatCoordinates.length / stride - 1;\n  const startAngle = angle ? angle : 0;\n  for (let i = 0; i <= sides; ++i) {\n    const offset = i * stride;\n    const angle = startAngle + (modulo(i, sides) * 2 * Math.PI) / sides;\n    flatCoordinates[offset] = center[0] + radius * Math.cos(angle);\n    flatCoordinates[offset + 1] = center[1] + radius * Math.sin(angle);\n  }\n  polygon.changed();\n}\n","/**\n * @module ol/resolutionconstraint\n */\nimport {linearFindNearest} from './array.js';\nimport {getHeight, getWidth} from './extent.js';\nimport {clamp} from './math.js';\n\n/**\n * @typedef {function((number|undefined), number, import(\"./size.js\").Size, boolean=): (number|undefined)} Type\n */\n\n/**\n * Returns a modified resolution taking into account the viewport size and maximum\n * allowed extent.\n * @param {number} resolution Resolution\n * @param {import(\"./extent.js\").Extent} maxExtent Maximum allowed extent.\n * @param {import(\"./size.js\").Size} viewportSize Viewport size.\n * @param {boolean} showFullExtent Whether to show the full extent.\n * @return {number} Capped resolution.\n */\nfunction getViewportClampedResolution(\n  resolution,\n  maxExtent,\n  viewportSize,\n  showFullExtent,\n) {\n  const xResolution = getWidth(maxExtent) / viewportSize[0];\n  const yResolution = getHeight(maxExtent) / viewportSize[1];\n\n  if (showFullExtent) {\n    return Math.min(resolution, Math.max(xResolution, yResolution));\n  }\n  return Math.min(resolution, Math.min(xResolution, yResolution));\n}\n\n/**\n * Returns a modified resolution to be between maxResolution and minResolution while\n * still allowing the value to be slightly out of bounds.\n * Note: the computation is based on the logarithm function (ln):\n *  - at 1, ln(x) is 0\n *  - above 1, ln(x) keeps increasing but at a much slower pace than x\n * The final result is clamped to prevent getting too far away from bounds.\n * @param {number} resolution Resolution.\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @return {number} Smoothed resolution.\n */\nfunction getSmoothClampedResolution(resolution, maxResolution, minResolution) {\n  let result = Math.min(resolution, maxResolution);\n  const ratio = 50;\n\n  result *=\n    Math.log(1 + ratio * Math.max(0, resolution / maxResolution - 1)) / ratio +\n    1;\n  if (minResolution) {\n    result = Math.max(result, minResolution);\n    result /=\n      Math.log(1 + ratio * Math.max(0, minResolution / resolution - 1)) /\n        ratio +\n      1;\n  }\n  return clamp(result, minResolution / 2, maxResolution * 2);\n}\n\n/**\n * @param {Array<number>} resolutions Resolutions.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToResolutions(\n  resolutions,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const maxResolution = resolutions[0];\n        const minResolution = resolutions[resolutions.length - 1];\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const capped = Math.min(cappedMaxRes, resolution);\n        const z = Math.floor(linearFindNearest(resolutions, capped, direction));\n        if (resolutions[z] > cappedMaxRes && z < resolutions.length - 1) {\n          return resolutions[z + 1];\n        }\n        return resolutions[z];\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} power Power.\n * @param {number} maxResolution Maximum resolution.\n * @param {number} [minResolution] Minimum resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createSnapToPower(\n  power,\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n  minResolution = minResolution !== undefined ? minResolution : 0;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        // during interacting or animating, allow intermediary values\n        if (isMoving) {\n          if (!smooth) {\n            return clamp(resolution, minResolution, cappedMaxRes);\n          }\n          return getSmoothClampedResolution(\n            resolution,\n            cappedMaxRes,\n            minResolution,\n          );\n        }\n\n        const tolerance = 1e-9;\n        const minZoomLevel = Math.ceil(\n          Math.log(maxResolution / cappedMaxRes) / Math.log(power) - tolerance,\n        );\n        const offset = -direction * (0.5 - tolerance) + 0.5;\n        const capped = Math.min(cappedMaxRes, resolution);\n        const cappedZoomLevel = Math.floor(\n          Math.log(maxResolution / capped) / Math.log(power) + offset,\n        );\n        const zoomLevel = Math.max(minZoomLevel, cappedZoomLevel);\n        const newResolution = maxResolution / Math.pow(power, zoomLevel);\n        return clamp(newResolution, minResolution, cappedMaxRes);\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} maxResolution Max resolution.\n * @param {number} minResolution Min resolution.\n * @param {boolean} [smooth] If true, the view will be able to slightly exceed resolution limits. Default: true.\n * @param {import(\"./extent.js\").Extent} [maxExtent] Maximum allowed extent.\n * @param {boolean} [showFullExtent] If true, allows us to show the full extent. Default: false.\n * @return {Type} Zoom function.\n */\nexport function createMinMaxResolution(\n  maxResolution,\n  minResolution,\n  smooth,\n  maxExtent,\n  showFullExtent,\n) {\n  smooth = smooth !== undefined ? smooth : true;\n\n  return (\n    /**\n     * @param {number|undefined} resolution Resolution.\n     * @param {number} direction Direction.\n     * @param {import(\"./size.js\").Size} size Viewport size.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Resolution.\n     */\n    function (resolution, direction, size, isMoving) {\n      if (resolution !== undefined) {\n        const cappedMaxRes = maxExtent\n          ? getViewportClampedResolution(\n              maxResolution,\n              maxExtent,\n              size,\n              showFullExtent,\n            )\n          : maxResolution;\n\n        if (!smooth || !isMoving) {\n          return clamp(resolution, minResolution, cappedMaxRes);\n        }\n        return getSmoothClampedResolution(\n          resolution,\n          cappedMaxRes,\n          minResolution,\n        );\n      }\n      return undefined;\n    }\n  );\n}\n","/**\n * @module ol/rotationconstraint\n */\nimport {toRadians} from './math.js';\n\n/**\n * @typedef {function((number|undefined), boolean=): (number|undefined)} Type\n */\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function disable(rotation) {\n  if (rotation !== undefined) {\n    return 0;\n  }\n  return undefined;\n}\n\n/**\n * @param {number|undefined} rotation Rotation.\n * @return {number|undefined} Rotation.\n */\nexport function none(rotation) {\n  if (rotation !== undefined) {\n    return rotation;\n  }\n  return undefined;\n}\n\n/**\n * @param {number} n N.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToN(n) {\n  const theta = (2 * Math.PI) / n;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving) {\n        return rotation;\n      }\n\n      if (rotation !== undefined) {\n        rotation = Math.floor(rotation / theta + 0.5) * theta;\n        return rotation;\n      }\n      return undefined;\n    }\n  );\n}\n\n/**\n * @param {number} [tolerance] Tolerance.\n * @return {Type} Rotation constraint.\n */\nexport function createSnapToZero(tolerance) {\n  const t = tolerance === undefined ? toRadians(5) : tolerance;\n  return (\n    /**\n     * @param {number|undefined} rotation Rotation.\n     * @param {boolean} [isMoving] True if an interaction or animation is in progress.\n     * @return {number|undefined} Rotation.\n     */\n    function (rotation, isMoving) {\n      if (isMoving || rotation === undefined) {\n        return rotation;\n      }\n\n      if (Math.abs(rotation) <= t) {\n        return 0;\n      }\n      return rotation;\n    }\n  );\n}\n","/**\n * @module ol/View\n */\nimport BaseObject from './Object.js';\nimport ViewHint from './ViewHint.js';\nimport ViewProperty from './ViewProperty.js';\nimport {linearFindNearest} from './array.js';\nimport {assert} from './asserts.js';\nimport {createExtent, none as centerNone} from './centerconstraint.js';\nimport {\n  add as addCoordinate,\n  equals,\n  equals as coordinatesEqual,\n  rotate as rotateCoordinate,\n} from './coordinate.js';\nimport {easeOut, inAndOut} from './easing.js';\nimport {\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n  isEmpty,\n} from './extent.js';\nimport {VOID} from './functions.js';\nimport {fromExtent as polygonFromExtent} from './geom/Polygon.js';\nimport {clamp, modulo} from './math.js';\nimport {\n  METERS_PER_UNIT,\n  createProjection,\n  disableCoordinateWarning,\n  fromUserCoordinate,\n  fromUserExtent,\n  getUserProjection,\n  toUserCoordinate,\n  toUserExtent,\n} from './proj.js';\nimport {\n  createMinMaxResolution,\n  createSnapToPower,\n  createSnapToResolutions,\n} from './resolutionconstraint.js';\nimport {\n  createSnapToN,\n  createSnapToZero,\n  disable,\n  none as rotationNone,\n} from './rotationconstraint.js';\nimport {DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\n/**\n * An animation configuration\n *\n * @typedef {Object} Animation\n * @property {import(\"./coordinate.js\").Coordinate} [sourceCenter] Source center.\n * @property {import(\"./coordinate.js\").Coordinate} [targetCenter] Target center.\n * @property {number} [sourceResolution] Source resolution.\n * @property {number} [targetResolution] Target resolution.\n * @property {number} [sourceRotation] Source rotation.\n * @property {number} [targetRotation] Target rotation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Anchor.\n * @property {number} start Start.\n * @property {number} duration Duration.\n * @property {boolean} complete Complete.\n * @property {function(number):number} easing Easing.\n * @property {function(boolean):void} callback Callback.\n */\n\n/**\n * @typedef {Object} Constraints\n * @property {import(\"./centerconstraint.js\").Type} center Center.\n * @property {import(\"./resolutionconstraint.js\").Type} resolution Resolution.\n * @property {import(\"./rotationconstraint.js\").Type} rotation Rotation.\n */\n\n/**\n * @typedef {Object} FitOptions\n * @property {import(\"./size.js\").Size} [size] The size in pixels of the box to\n * fit the extent into. Defaults to the size of the map the view is associated with.\n * If no map or multiple maps are connected to the view, provide the desired box size\n * (e.g. `map.getSize()`).\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in pixels) to be\n * cleared inside the view. Values in the array are top, right, bottom and left\n * padding.\n * @property {boolean} [nearest=false] If the view `constrainResolution` option is `true`,\n * get the nearest extent instead of the closest that actually fits the view.\n * @property {number} [minResolution=0] Minimum resolution that we zoom to.\n * @property {number} [maxZoom] Maximum zoom level that we zoom to. If\n * `minResolution` is given, this property is ignored.\n * @property {number} [duration] The duration of the animation in milliseconds.\n * By default, there is no animation to the target extent.\n * @property {function(number):number} [easing] The easing function used during\n * the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n * @property {function(boolean):void} [callback] Function called when the view is in\n * its final position. The callback will be called with `true` if the animation\n * series completed on its own or `false` if it was cancelled.\n */\n\n/**\n * @typedef {Object} ViewOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The initial center for\n * the view. If a user projection is not set, the coordinate system for the center is\n * specified with the `projection` option. Layer sources will not be fetched if this\n * is not set, but the center can be set later with {@link #setCenter}.\n * @property {boolean|number} [constrainRotation=true] Rotation constraint.\n * `false` means no constraint. `true` means no constraint, but snap to zero\n * near zero. A number constrains the rotation to that number of values. For\n * example, `4` will constrain the rotation to 0, 90, 180, and 270 degrees.\n * @property {boolean} [enableRotation=true] Enable rotation.\n * If `false`, a rotation constraint that always sets the rotation to zero is\n * used. The `constrainRotation` option has no effect if `enableRotation` is\n * `false`.\n * @property {import(\"./extent.js\").Extent} [extent] The extent that constrains the\n * view, in other words, nothing outside of this extent can be visible on the map.\n * @property {boolean} [constrainOnlyCenter=false] If true, the extent\n * constraint will only apply to the view center and not the whole extent.\n * @property {boolean} [smoothExtentConstraint=true] If true, the extent\n * constraint will be applied smoothly, i.e. allow the view to go slightly outside\n * of the given `extent`.\n * @property {number} [maxResolution] The maximum resolution used to determine\n * the resolution constraint. It is used together with `minResolution` (or\n * `maxZoom`) and `zoomFactor`. If unspecified it is calculated in such a way\n * that the projection's validity extent fits in a 256x256 px tile. If the\n * projection is Spherical Mercator (the default) then `maxResolution` defaults\n * to `40075016.68557849 / 256 = 156543.03392804097`.\n * @property {number} [minResolution] The minimum resolution used to determine\n * the resolution constraint.  It is used together with `maxResolution` (or\n * `minZoom`) and `zoomFactor`.  If unspecified it is calculated assuming 29\n * zoom levels (with a factor of 2). If the projection is Spherical Mercator\n * (the default) then `minResolution` defaults to\n * `40075016.68557849 / 256 / Math.pow(2, 28) = 0.0005831682455839253`.\n * @property {number} [maxZoom=28] The maximum zoom level used to determine the\n * resolution constraint. It is used together with `minZoom` (or\n * `maxResolution`) and `zoomFactor`.  Note that if `minResolution` is also\n * provided, it is given precedence over `maxZoom`.\n * @property {number} [minZoom=0] The minimum zoom level used to determine the\n * resolution constraint. It is used together with `maxZoom` (or\n * `minResolution`) and `zoomFactor`.  Note that if `maxResolution` is also\n * provided, it is given precedence over `minZoom`.\n * @property {boolean} [multiWorld=false] If `false` the view is constrained so\n * only one world is visible, and you cannot pan off the edge.  If `true` the map\n * may show multiple worlds at low zoom levels.  Only used if the `projection` is\n * global.  Note that if `extent` is also provided it is given precedence.\n * @property {boolean} [constrainResolution=false] If true, the view will always\n * animate to the closest zoom level after an interaction; false means\n * intermediary zoom levels are allowed.\n * @property {boolean} [smoothResolutionConstraint=true] If true, the resolution\n * min/max values will be applied smoothly, i. e. allow the view to exceed slightly\n * the given resolution or zoom bounds.\n * @property {boolean} [showFullExtent=false] Allow the view to be zoomed out to\n * show the full configured extent. By default, when a view is configured with an\n * extent, users will not be able to zoom out so the viewport exceeds the extent in\n * either dimension. This means the full extent may not be visible if the viewport\n * is taller or wider than the aspect ratio of the configured extent. If\n * showFullExtent is true, the user will be able to zoom out so that the viewport\n * exceeds the height or width of the configured extent, but not both, allowing the\n * full extent to be shown.\n * @property {import(\"./proj.js\").ProjectionLike} [projection='EPSG:3857'] The\n * projection. The default is Spherical Mercator.\n * @property {number} [resolution] The initial resolution for the view. The\n * units are `projection` units per pixel (e.g. meters per pixel). An\n * alternative to setting this is to set `zoom`. Layer sources will not be\n * fetched if neither this nor `zoom` are defined, but they can be set later\n * with {@link #setZoom} or {@link #setResolution}.\n * @property {Array<number>} [resolutions] Resolutions that determine the\n * zoom levels if specified. The index in the array corresponds to the zoom level,\n * therefore the resolution values have to be in descending order. It also constrains\n * the resolution by the minimum and maximum value. If set the `maxResolution`,\n * `minResolution`, `minZoom`, `maxZoom`, and `zoomFactor` options are ignored.\n * @property {number} [rotation=0] The initial rotation for the view in radians\n * (positive rotation clockwise, 0 means North).\n * @property {number} [zoom] Only used if `resolution` is not defined. Zoom\n * level used to calculate the initial resolution for the view.\n * @property {number} [zoomFactor=2] The zoom factor used to compute the\n * corresponding resolution.\n * @property {!Array<number>} [padding=[0, 0, 0, 0]] Padding (in css pixels).\n * If the map viewport is partially covered with other content (overlays) along\n * its edges, this setting allows to shift the center of the viewport away from\n * that content. The order of the values is top, right, bottom, left.\n */\n\n/**\n * @typedef {Object} AnimationOptions\n * @property {import(\"./coordinate.js\").Coordinate} [center] The center of the view at the end of\n * the animation.\n * @property {number} [zoom] The zoom level of the view at the end of the\n * animation. This takes precedence over `resolution`.\n * @property {number} [resolution] The resolution of the view at the end\n * of the animation.  If `zoom` is also provided, this option will be ignored.\n * @property {number} [rotation] The rotation of the view at the end of\n * the animation.\n * @property {import(\"./coordinate.js\").Coordinate} [anchor] Optional anchor to remain fixed\n * during a rotation or resolution animation.\n * @property {number} [duration=1000] The duration of the animation in milliseconds.\n * @property {function(number):number} [easing] The easing function used\n * during the animation (defaults to {@link module:ol/easing.inAndOut}).\n * The function will be called for each frame with a number representing a\n * fraction of the animation's duration.  The function should return a number\n * between 0 and 1 representing the progress toward the destination state.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./coordinate.js\").Coordinate} center Center (in view projection coordinates).\n * @property {import(\"./proj/Projection.js\").default} projection Projection.\n * @property {number} resolution Resolution.\n * @property {import(\"./coordinate.js\").Coordinate} [nextCenter] The next center during an animation series.\n * @property {number} [nextResolution] The next resolution during an animation series.\n * @property {number} [nextRotation] The next rotation during an animation series.\n * @property {number} rotation Rotation.\n * @property {number} zoom Zoom.\n */\n\n/**\n * Like {@link import(\"./Map.js\").FrameState}, but just `viewState` and `extent`.\n * @typedef {Object} ViewStateLayerStateExtent\n * @property {State} viewState View state.\n * @property {import(\"./extent.js\").Extent} extent Extent (in user projection coordinates).\n * @property {Array<import(\"./layer/Layer.js\").State>} [layerStatesArray] Layer states.\n */\n\n/**\n * Default min zoom level for the map view.\n * @type {number}\n */\nconst DEFAULT_MIN_ZOOM = 0;\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:center'|'change:resolution'|'change:rotation'} ViewObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<ViewObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|ViewObjectEventTypes, Return>} ViewOnSignature\n */\n\n/**\n * @classdesc\n * A View object represents a simple 2D view of the map.\n *\n * This is the object to act upon to change the center, resolution,\n * and rotation of the map.\n *\n * A View has a `projection`. The projection determines the\n * coordinate system of the center, and its units determine the units of the\n * resolution (projection units per pixel). The default projection is\n * Web Mercator (EPSG:3857).\n *\n * ### The view states\n *\n * A View is determined by three states: `center`, `resolution`,\n * and `rotation`. Each state has a corresponding getter and setter, e.g.\n * `getCenter` and `setCenter` for the `center` state.\n *\n * The `zoom` state is actually not saved on the view: all computations\n * internally use the `resolution` state. Still, the `setZoom` and `getZoom`\n * methods are available, as well as `getResolutionForZoom` and\n * `getZoomForResolution` to switch from one system to the other.\n *\n * ### The constraints\n *\n * `setCenter`, `setResolution` and `setRotation` can be used to change the\n * states of the view, but any constraint defined in the constructor will\n * be applied along the way.\n *\n * A View object can have a *resolution constraint*, a *rotation constraint*\n * and a *center constraint*.\n *\n * The *resolution constraint* typically restricts min/max values and\n * snaps to specific resolutions. It is determined by the following\n * options: `resolutions`, `maxResolution`, `maxZoom` and `zoomFactor`.\n * If `resolutions` is set, the other three options are ignored. See\n * documentation for each option for more information. By default, the view\n * only has a min/max restriction and allow intermediary zoom levels when\n * pinch-zooming for example.\n *\n * The *rotation constraint* snaps to specific angles. It is determined\n * by the following options: `enableRotation` and `constrainRotation`.\n * By default rotation is allowed and its value is snapped to zero when approaching the\n * horizontal.\n *\n * The *center constraint* is determined by the `extent` option. By\n * default the view center is not constrained at all.\n *\n * ### Changing the view state\n *\n * It is important to note that `setZoom`, `setResolution`, `setCenter` and\n * `setRotation` are subject to the above mentioned constraints. As such, it\n * may sometimes not be possible to know in advance the resulting state of the\n * View. For example, calling `setResolution(10)` does not guarantee that\n * `getResolution()` will return `10`.\n *\n * A consequence of this is that, when applying a delta on the view state, one\n * should use `adjustCenter`, `adjustRotation`, `adjustZoom` and `adjustResolution`\n * rather than the corresponding setters. This will let view do its internal\n * computations. Besides, the `adjust*` methods also take an `anchor`\n * argument which allows specifying an origin for the transformation.\n *\n * ### Interacting with the view\n *\n * View constraints are usually only applied when the view is *at rest*, meaning that\n * no interaction or animation is ongoing. As such, if the user puts the view in a\n * state that is not equivalent to a constrained one (e.g. rotating the view when\n * the snap angle is 0), an animation will be triggered at the interaction end to\n * put back the view to a stable state;\n *\n * @api\n */\nclass View extends BaseObject {\n  /**\n   * @param {ViewOptions} [options] View options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ViewOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ViewOnSignature<void>}\n     */\n    this.un;\n\n    options = Object.assign({}, options);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.hints_ = [0, 0];\n\n    /**\n     * @private\n     * @type {Array<Array<Animation>>}\n     */\n    this.animations_ = [];\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.updateAnimationKey_;\n\n    /**\n     * @private\n     * @const\n     * @type {import(\"./proj/Projection.js\").default}\n     */\n    this.projection_ = createProjection(options.projection, 'EPSG:3857');\n\n    /**\n     * @private\n     * @type {import(\"./size.js\").Size}\n     */\n    this.viewportSize_ = [100, 100];\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.targetCenter_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetResolution_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.targetRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate}\n     */\n    this.nextCenter_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextResolution_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.nextRotation_;\n\n    /**\n     * @private\n     * @type {import(\"./coordinate.js\").Coordinate|undefined}\n     */\n    this.cancelAnchor_ = undefined;\n\n    if (options.projection) {\n      disableCoordinateWarning();\n    }\n    if (options.center) {\n      options.center = fromUserCoordinate(options.center, this.projection_);\n    }\n    if (options.extent) {\n      options.extent = fromUserExtent(options.extent, this.projection_);\n    }\n\n    this.applyOptions_(options);\n  }\n\n  /**\n   * Set up the view with the given options.\n   * @param {ViewOptions} options View options.\n   */\n  applyOptions_(options) {\n    const properties = Object.assign({}, options);\n    for (const key in ViewProperty) {\n      delete properties[key];\n    }\n    this.setProperties(properties, true);\n\n    const resolutionConstraintInfo = createResolutionConstraint(options);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxResolution_ = resolutionConstraintInfo.maxResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minResolution_ = resolutionConstraintInfo.minResolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.zoomFactor_ = resolutionConstraintInfo.zoomFactor;\n\n    /**\n     * @private\n     * @type {Array<number>|undefined}\n     */\n    this.resolutions_ = options.resolutions;\n\n    /**\n     * @type {Array<number>|undefined}\n     * @private\n     */\n    this.padding_ = options.padding;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minZoom_ = resolutionConstraintInfo.minZoom;\n\n    const centerConstraint = createCenterConstraint(options);\n    const resolutionConstraint = resolutionConstraintInfo.constraint;\n    const rotationConstraint = createRotationConstraint(options);\n\n    /**\n     * @private\n     * @type {Constraints}\n     */\n    this.constraints_ = {\n      center: centerConstraint,\n      resolution: resolutionConstraint,\n      rotation: rotationConstraint,\n    };\n\n    this.setRotation(options.rotation !== undefined ? options.rotation : 0);\n    this.setCenterInternal(\n      options.center !== undefined ? options.center : null,\n    );\n    if (options.resolution !== undefined) {\n      this.setResolution(options.resolution);\n    } else if (options.zoom !== undefined) {\n      this.setZoom(options.zoom);\n    }\n  }\n\n  /**\n   * Padding (in css pixels).\n   * If the map viewport is partially covered with other content (overlays) along\n   * its edges, this setting allows to shift the center of the viewport away from that\n   * content. The order of the values in the array is top, right, bottom, left.\n   * The default is no padding, which is equivalent to `[0, 0, 0, 0]`.\n   * @type {Array<number>|undefined}\n   * @api\n   */\n  get padding() {\n    return this.padding_;\n  }\n  set padding(padding) {\n    let oldPadding = this.padding_;\n    this.padding_ = padding;\n    const center = this.getCenterInternal();\n    if (center) {\n      const newPadding = padding || [0, 0, 0, 0];\n      oldPadding = oldPadding || [0, 0, 0, 0];\n      const resolution = this.getResolution();\n      const offsetX =\n        (resolution / 2) *\n        (newPadding[3] - oldPadding[3] + oldPadding[1] - newPadding[1]);\n      const offsetY =\n        (resolution / 2) *\n        (newPadding[0] - oldPadding[0] + oldPadding[2] - newPadding[2]);\n      this.setCenterInternal([center[0] + offsetX, center[1] - offsetY]);\n    }\n  }\n\n  /**\n   * Get an updated version of the view options used to construct the view.  The\n   * current resolution (or zoom), center, and rotation are applied to any stored\n   * options.  The provided options can be used to apply new min/max zoom or\n   * resolution limits.\n   * @param {ViewOptions} newOptions New options to be applied.\n   * @return {ViewOptions} New options updated with the current view state.\n   */\n  getUpdatedOptions_(newOptions) {\n    const options = this.getProperties();\n\n    // preserve resolution (or zoom)\n    if (options.resolution !== undefined) {\n      options.resolution = this.getResolution();\n    } else {\n      options.zoom = this.getZoom();\n    }\n\n    // preserve center\n    options.center = this.getCenterInternal();\n\n    // preserve rotation\n    options.rotation = this.getRotation();\n\n    return Object.assign({}, options, newOptions);\n  }\n\n  /**\n   * Animate the view.  The view's center, zoom (or resolution), and rotation\n   * can be animated for smooth transitions between view states.  For example,\n   * to animate the view to a new zoom level:\n   *\n   *     view.animate({zoom: view.getZoom() + 1});\n   *\n   * By default, the animation lasts one second and uses in-and-out easing.  You\n   * can customize this behavior by including `duration` (in milliseconds) and\n   * `easing` options (see {@link module:ol/easing}).\n   *\n   * To chain together multiple animations, call the method with multiple\n   * animation objects.  For example, to first zoom and then pan:\n   *\n   *     view.animate({zoom: 10}, {center: [0, 0]});\n   *\n   * If you provide a function as the last argument to the animate method, it\n   * will get called at the end of an animation series.  The callback will be\n   * called with `true` if the animation series completed on its own or `false`\n   * if it was cancelled.\n   *\n   * Animations are cancelled by user interactions (e.g. dragging the map) or by\n   * calling `view.setCenter()`, `view.setResolution()`, or `view.setRotation()`\n   * (or another method that calls one of these).\n   *\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation\n   *     options.  Multiple animations can be run in series by passing multiple\n   *     options objects.  To run multiple animations in parallel, call the method\n   *     multiple times.  An optional callback can be provided as a final\n   *     argument.  The callback will be called with a boolean indicating whether\n   *     the animation completed without being cancelled.\n   * @api\n   */\n  animate(var_args) {\n    if (this.isDef() && !this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n    const args = new Array(arguments.length);\n    for (let i = 0; i < args.length; ++i) {\n      let options = arguments[i];\n      if (options.center) {\n        options = Object.assign({}, options);\n        options.center = fromUserCoordinate(\n          options.center,\n          this.getProjection(),\n        );\n      }\n      if (options.anchor) {\n        options = Object.assign({}, options);\n        options.anchor = fromUserCoordinate(\n          options.anchor,\n          this.getProjection(),\n        );\n      }\n      args[i] = options;\n    }\n    this.animateInternal.apply(this, args);\n  }\n\n  /**\n   * @param {...(AnimationOptions|function(boolean): void)} var_args Animation options.\n   */\n  animateInternal(var_args) {\n    let animationCount = arguments.length;\n    let callback;\n    if (\n      animationCount > 1 &&\n      typeof arguments[animationCount - 1] === 'function'\n    ) {\n      callback = arguments[animationCount - 1];\n      --animationCount;\n    }\n\n    let i = 0;\n    for (; i < animationCount && !this.isDef(); ++i) {\n      // if view properties are not yet set, shortcut to the final state\n      const state = arguments[i];\n      if (state.center) {\n        this.setCenterInternal(state.center);\n      }\n      if (state.zoom !== undefined) {\n        this.setZoom(state.zoom);\n      } else if (state.resolution) {\n        this.setResolution(state.resolution);\n      }\n      if (state.rotation !== undefined) {\n        this.setRotation(state.rotation);\n      }\n    }\n    if (i === animationCount) {\n      if (callback) {\n        animationCallback(callback, true);\n      }\n      return;\n    }\n\n    let start = Date.now();\n    let center = this.targetCenter_.slice();\n    let resolution = this.targetResolution_;\n    let rotation = this.targetRotation_;\n    const series = [];\n    for (; i < animationCount; ++i) {\n      const options = /** @type {AnimationOptions} */ (arguments[i]);\n\n      const animation = {\n        start: start,\n        complete: false,\n        anchor: options.anchor,\n        duration: options.duration !== undefined ? options.duration : 1000,\n        easing: options.easing || inAndOut,\n        callback: callback,\n      };\n\n      if (options.center) {\n        animation.sourceCenter = center;\n        animation.targetCenter = options.center.slice();\n        center = animation.targetCenter;\n      }\n\n      if (options.zoom !== undefined) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = this.getResolutionForZoom(options.zoom);\n        resolution = animation.targetResolution;\n      } else if (options.resolution) {\n        animation.sourceResolution = resolution;\n        animation.targetResolution = options.resolution;\n        resolution = animation.targetResolution;\n      }\n\n      if (options.rotation !== undefined) {\n        animation.sourceRotation = rotation;\n        const delta =\n          modulo(options.rotation - rotation + Math.PI, 2 * Math.PI) - Math.PI;\n        animation.targetRotation = rotation + delta;\n        rotation = animation.targetRotation;\n      }\n\n      // check if animation is a no-op\n      if (isNoopAnimation(animation)) {\n        animation.complete = true;\n        // we still push it onto the series for callback handling\n      } else {\n        start += animation.duration;\n      }\n      series.push(animation);\n    }\n    this.animations_.push(series);\n    this.setHint(ViewHint.ANIMATING, 1);\n    this.updateAnimations_();\n  }\n\n  /**\n   * Determine if the view is being animated.\n   * @return {boolean} The view is being animated.\n   * @api\n   */\n  getAnimating() {\n    return this.hints_[ViewHint.ANIMATING] > 0;\n  }\n\n  /**\n   * Determine if the user is interacting with the view, such as panning or zooming.\n   * @return {boolean} The view is being interacted with.\n   * @api\n   */\n  getInteracting() {\n    return this.hints_[ViewHint.INTERACTING] > 0;\n  }\n\n  /**\n   * Cancel any ongoing animations.\n   * @api\n   */\n  cancelAnimations() {\n    this.setHint(ViewHint.ANIMATING, -this.hints_[ViewHint.ANIMATING]);\n    let anchor;\n    for (let i = 0, ii = this.animations_.length; i < ii; ++i) {\n      const series = this.animations_[i];\n      if (series[0].callback) {\n        animationCallback(series[0].callback, false);\n      }\n      if (!anchor) {\n        for (let j = 0, jj = series.length; j < jj; ++j) {\n          const animation = series[j];\n          if (!animation.complete) {\n            anchor = animation.anchor;\n            break;\n          }\n        }\n      }\n    }\n    this.animations_.length = 0;\n    this.cancelAnchor_ = anchor;\n    this.nextCenter_ = null;\n    this.nextResolution_ = NaN;\n    this.nextRotation_ = NaN;\n  }\n\n  /**\n   * Update all animations.\n   */\n  updateAnimations_() {\n    if (this.updateAnimationKey_ !== undefined) {\n      cancelAnimationFrame(this.updateAnimationKey_);\n      this.updateAnimationKey_ = undefined;\n    }\n    if (!this.getAnimating()) {\n      return;\n    }\n    const now = Date.now();\n    let more = false;\n    for (let i = this.animations_.length - 1; i >= 0; --i) {\n      const series = this.animations_[i];\n      let seriesComplete = true;\n      for (let j = 0, jj = series.length; j < jj; ++j) {\n        const animation = series[j];\n        if (animation.complete) {\n          continue;\n        }\n        const elapsed = now - animation.start;\n        let fraction =\n          animation.duration > 0 ? elapsed / animation.duration : 1;\n        if (fraction >= 1) {\n          animation.complete = true;\n          fraction = 1;\n        } else {\n          seriesComplete = false;\n        }\n        const progress = animation.easing(fraction);\n        if (animation.sourceCenter) {\n          const x0 = animation.sourceCenter[0];\n          const y0 = animation.sourceCenter[1];\n          const x1 = animation.targetCenter[0];\n          const y1 = animation.targetCenter[1];\n          this.nextCenter_ = animation.targetCenter;\n          const x = x0 + progress * (x1 - x0);\n          const y = y0 + progress * (y1 - y0);\n          this.targetCenter_ = [x, y];\n        }\n        if (animation.sourceResolution && animation.targetResolution) {\n          const resolution =\n            progress === 1\n              ? animation.targetResolution\n              : animation.sourceResolution +\n                progress *\n                  (animation.targetResolution - animation.sourceResolution);\n          if (animation.anchor) {\n            const size = this.getViewportSize_(this.getRotation());\n            const constrainedResolution = this.constraints_.resolution(\n              resolution,\n              0,\n              size,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterZoom(\n              constrainedResolution,\n              animation.anchor,\n            );\n          }\n          this.nextResolution_ = animation.targetResolution;\n          this.targetResolution_ = resolution;\n          this.applyTargetState_(true);\n        }\n        if (\n          animation.sourceRotation !== undefined &&\n          animation.targetRotation !== undefined\n        ) {\n          const rotation =\n            progress === 1\n              ? modulo(animation.targetRotation + Math.PI, 2 * Math.PI) -\n                Math.PI\n              : animation.sourceRotation +\n                progress *\n                  (animation.targetRotation - animation.sourceRotation);\n          if (animation.anchor) {\n            const constrainedRotation = this.constraints_.rotation(\n              rotation,\n              true,\n            );\n            this.targetCenter_ = this.calculateCenterRotate(\n              constrainedRotation,\n              animation.anchor,\n            );\n          }\n          this.nextRotation_ = animation.targetRotation;\n          this.targetRotation_ = rotation;\n        }\n        this.applyTargetState_(true);\n        more = true;\n        if (!animation.complete) {\n          break;\n        }\n      }\n      if (seriesComplete) {\n        this.animations_[i] = null;\n        this.setHint(ViewHint.ANIMATING, -1);\n        this.nextCenter_ = null;\n        this.nextResolution_ = NaN;\n        this.nextRotation_ = NaN;\n        const callback = series[0].callback;\n        if (callback) {\n          animationCallback(callback, true);\n        }\n      }\n    }\n    // prune completed series\n    this.animations_ = this.animations_.filter(Boolean);\n    if (more && this.updateAnimationKey_ === undefined) {\n      this.updateAnimationKey_ = requestAnimationFrame(\n        this.updateAnimations_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * @param {number} rotation Target rotation.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Rotation anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for rotation and anchor.\n   */\n  calculateCenterRotate(rotation, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    if (currentCenter !== undefined) {\n      center = [currentCenter[0] - anchor[0], currentCenter[1] - anchor[1]];\n      rotateCoordinate(center, rotation - this.getRotation());\n      addCoordinate(center, anchor);\n    }\n    return center;\n  }\n\n  /**\n   * @param {number} resolution Target resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} anchor Zoom anchor.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Center for resolution and anchor.\n   */\n  calculateCenterZoom(resolution, anchor) {\n    let center;\n    const currentCenter = this.getCenterInternal();\n    const currentResolution = this.getResolution();\n    if (currentCenter !== undefined && currentResolution !== undefined) {\n      const x =\n        anchor[0] -\n        (resolution * (anchor[0] - currentCenter[0])) / currentResolution;\n      const y =\n        anchor[1] -\n        (resolution * (anchor[1] - currentCenter[1])) / currentResolution;\n      center = [x, y];\n    }\n    return center;\n  }\n\n  /**\n   * Returns the current viewport size.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size or `[100, 100]` when no viewport is found.\n   */\n  getViewportSize_(rotation) {\n    const size = this.viewportSize_;\n    if (rotation) {\n      const w = size[0];\n      const h = size[1];\n      return [\n        Math.abs(w * Math.cos(rotation)) + Math.abs(h * Math.sin(rotation)),\n        Math.abs(w * Math.sin(rotation)) + Math.abs(h * Math.cos(rotation)),\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * Stores the viewport size on the view. The viewport size is not read every time from the DOM\n   * to avoid performance hit and layout reflow.\n   * This should be done on map size change.\n   * Note: the constraints are not resolved during an animation to avoid stopping it\n   * @param {import(\"./size.js\").Size} [size] Viewport size; if undefined, [100, 100] is assumed\n   */\n  setViewportSize(size) {\n    this.viewportSize_ = Array.isArray(size) ? size.slice() : [100, 100];\n    if (!this.getAnimating()) {\n      this.resolveConstraints(0);\n    }\n  }\n\n  /**\n   * Get the view center.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   * @observable\n   * @api\n   */\n  getCenter() {\n    const center = this.getCenterInternal();\n    if (!center) {\n      return center;\n    }\n    return toUserCoordinate(center, this.getProjection());\n  }\n\n  /**\n   * Get the view center without transforming to user projection.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The center of the view.\n   */\n  getCenterInternal() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(ViewProperty.CENTER)\n    );\n  }\n\n  /**\n   * @return {Constraints} Constraints.\n   */\n  getConstraints() {\n    return this.constraints_;\n  }\n\n  /**\n   * @return {boolean} Resolution constraint is set\n   */\n  getConstrainResolution() {\n    return this.get('constrainResolution');\n  }\n\n  /**\n   * @param {Array<number>} [hints] Destination array.\n   * @return {Array<number>} Hint.\n   */\n  getHints(hints) {\n    if (hints !== undefined) {\n      hints[0] = this.hints_[0];\n      hints[1] = this.hints_[1];\n      return hints;\n    }\n    return this.hints_.slice();\n  }\n\n  /**\n   * Calculate the extent for the current view state and the passed box size.\n   * @param {import(\"./size.js\").Size} [size] The pixel dimensions of the box\n   * into which the calculated extent should fit. Defaults to the size of the\n   * map the view is associated with.\n   * If no map or multiple maps are connected to the view, provide the desired\n   * box size (e.g. `map.getSize()`).\n   * @return {import(\"./extent.js\").Extent} Extent.\n   * @api\n   */\n  calculateExtent(size) {\n    const extent = this.calculateExtentInternal(size);\n    return toUserExtent(extent, this.getProjection());\n  }\n\n  /**\n   * @param {import(\"./size.js\").Size} [size] Box pixel size. If not provided,\n   * the map's last known viewport size will be used.\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  calculateExtentInternal(size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const center = /** @type {!import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    assert(center, 'The view center is not defined');\n    const resolution = /** @type {!number} */ (this.getResolution());\n    assert(resolution !== undefined, 'The view resolution is not defined');\n    const rotation = /** @type {!number} */ (this.getRotation());\n    assert(rotation !== undefined, 'The view rotation is not defined');\n\n    return getForViewAndSize(center, resolution, rotation, size);\n  }\n\n  /**\n   * Get the maximum resolution of the view.\n   * @return {number} The maximum resolution of the view.\n   * @api\n   */\n  getMaxResolution() {\n    return this.maxResolution_;\n  }\n\n  /**\n   * Get the minimum resolution of the view.\n   * @return {number} The minimum resolution of the view.\n   * @api\n   */\n  getMinResolution() {\n    return this.minResolution_;\n  }\n\n  /**\n   * Get the maximum zoom level for the view.\n   * @return {number} The maximum zoom level.\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.minResolution_)\n    );\n  }\n\n  /**\n   * Set a new maximum zoom level for the view.\n   * @param {number} zoom The maximum zoom level.\n   * @api\n   */\n  setMaxZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({maxZoom: zoom}));\n  }\n\n  /**\n   * Get the minimum zoom level for the view.\n   * @return {number} The minimum zoom level.\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (\n      this.getZoomForResolution(this.maxResolution_)\n    );\n  }\n\n  /**\n   * Set a new minimum zoom level for the view.\n   * @param {number} zoom The minimum zoom level.\n   * @api\n   */\n  setMinZoom(zoom) {\n    this.applyOptions_(this.getUpdatedOptions_({minZoom: zoom}));\n  }\n\n  /**\n   * Set whether the view should allow intermediary zoom levels.\n   * @param {boolean} enabled Whether the resolution is constrained.\n   * @api\n   */\n  setConstrainResolution(enabled) {\n    this.applyOptions_(this.getUpdatedOptions_({constrainResolution: enabled}));\n  }\n\n  /**\n   * Get the view projection.\n   * @return {import(\"./proj/Projection.js\").default} The projection of the view.\n   * @api\n   */\n  getProjection() {\n    return this.projection_;\n  }\n\n  /**\n   * Get the view resolution.\n   * @return {number|undefined} The resolution of the view.\n   * @observable\n   * @api\n   */\n  getResolution() {\n    return /** @type {number|undefined} */ (this.get(ViewProperty.RESOLUTION));\n  }\n\n  /**\n   * Get the resolutions for the view. This returns the array of resolutions\n   * passed to the constructor of the View, or undefined if none were given.\n   * @return {Array<number>|undefined} The resolutions of the view.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   * @api\n   */\n  getResolutionForExtent(extent, size) {\n    return this.getResolutionForExtentInternal(\n      fromUserExtent(extent, this.getProjection()),\n      size,\n    );\n  }\n\n  /**\n   * Get the resolution for a provided extent (in map units) and size (in pixels).\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {import(\"./size.js\").Size} [size] Box pixel size.\n   * @return {number} The resolution at which the provided extent will render at\n   *     the given size.\n   */\n  getResolutionForExtentInternal(extent, size) {\n    size = size || this.getViewportSizeMinusPadding_();\n    const xResolution = getWidth(extent) / size[0];\n    const yResolution = getHeight(extent) / size[1];\n    return Math.max(xResolution, yResolution);\n  }\n\n  /**\n   * Return a function that returns a value between 0 and 1 for a\n   * resolution. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Resolution for value function.\n   */\n  getResolutionForValueFunction(power) {\n    power = power || 2;\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / Math.log(power);\n    return (\n      /**\n       * @param {number} value Value.\n       * @return {number} Resolution.\n       */\n      function (value) {\n        const resolution = maxResolution / Math.pow(power, value * max);\n        return resolution;\n      }\n    );\n  }\n\n  /**\n   * Get the view rotation.\n   * @return {number} The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  getRotation() {\n    return /** @type {number} */ (this.get(ViewProperty.ROTATION));\n  }\n\n  /**\n   * Return a function that returns a resolution for a value between\n   * 0 and 1. Exponential scaling is assumed.\n   * @param {number} [power] Power.\n   * @return {function(number): number} Value for resolution function.\n   */\n  getValueForResolutionFunction(power) {\n    const logPower = Math.log(power || 2);\n    const maxResolution = this.getConstrainedResolution(this.maxResolution_);\n    const minResolution = this.minResolution_;\n    const max = Math.log(maxResolution / minResolution) / logPower;\n    return (\n      /**\n       * @param {number} resolution Resolution.\n       * @return {number} Value.\n       */\n      function (resolution) {\n        const value = Math.log(maxResolution / resolution) / logPower / max;\n        return value;\n      }\n    );\n  }\n\n  /**\n   * Returns the size of the viewport minus padding.\n   * @private\n   * @param {number} [rotation] Take into account the rotation of the viewport when giving the size\n   * @return {import(\"./size.js\").Size} Viewport size reduced by the padding.\n   */\n  getViewportSizeMinusPadding_(rotation) {\n    let size = this.getViewportSize_(rotation);\n    const padding = this.padding_;\n    if (padding) {\n      size = [\n        size[0] - padding[1] - padding[3],\n        size[1] - padding[0] - padding[2],\n      ];\n    }\n    return size;\n  }\n\n  /**\n   * @return {State} View state.\n   */\n  getState() {\n    const projection = this.getProjection();\n    const resolution = this.getResolution();\n    const rotation = this.getRotation();\n    let center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n      this.getCenterInternal()\n    );\n    const padding = this.padding_;\n    if (padding) {\n      const reducedSize = this.getViewportSizeMinusPadding_();\n      center = calculateCenterOn(\n        center,\n        this.getViewportSize_(),\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n    }\n    return {\n      center: center.slice(0),\n      projection: projection !== undefined ? projection : null,\n      resolution: resolution,\n      nextCenter: this.nextCenter_,\n      nextResolution: this.nextResolution_,\n      nextRotation: this.nextRotation_,\n      rotation: rotation,\n      zoom: this.getZoom(),\n    };\n  }\n\n  /**\n   * @return {ViewStateLayerStateExtent} Like `FrameState`, but just `viewState` and `extent`.\n   */\n  getViewStateAndExtent() {\n    return {\n      viewState: this.getState(),\n      extent: this.calculateExtent(),\n    };\n  }\n\n  /**\n   * Get the current zoom level. This method may return non-integer zoom levels\n   * if the view does not constrain the resolution, or if an interaction or\n   * animation is underway.\n   * @return {number|undefined} Zoom.\n   * @api\n   */\n  getZoom() {\n    let zoom;\n    const resolution = this.getResolution();\n    if (resolution !== undefined) {\n      zoom = this.getZoomForResolution(resolution);\n    }\n    return zoom;\n  }\n\n  /**\n   * Get the zoom level for a resolution.\n   * @param {number} resolution The resolution.\n   * @return {number|undefined} The zoom level for the provided resolution.\n   * @api\n   */\n  getZoomForResolution(resolution) {\n    let offset = this.minZoom_ || 0;\n    let max, zoomFactor;\n    if (this.resolutions_) {\n      const nearest = linearFindNearest(this.resolutions_, resolution, 1);\n      offset = nearest;\n      max = this.resolutions_[nearest];\n      if (nearest == this.resolutions_.length - 1) {\n        zoomFactor = 2;\n      } else {\n        zoomFactor = max / this.resolutions_[nearest + 1];\n      }\n    } else {\n      max = this.maxResolution_;\n      zoomFactor = this.zoomFactor_;\n    }\n    return offset + Math.log(max / resolution) / Math.log(zoomFactor);\n  }\n\n  /**\n   * Get the resolution for a zoom level.\n   * @param {number} zoom Zoom level.\n   * @return {number} The view resolution for the provided zoom level.\n   * @api\n   */\n  getResolutionForZoom(zoom) {\n    if (this.resolutions_?.length) {\n      if (this.resolutions_.length === 1) {\n        return this.resolutions_[0];\n      }\n      const baseLevel = clamp(\n        Math.floor(zoom),\n        0,\n        this.resolutions_.length - 2,\n      );\n      const zoomFactor =\n        this.resolutions_[baseLevel] / this.resolutions_[baseLevel + 1];\n      return (\n        this.resolutions_[baseLevel] /\n        Math.pow(zoomFactor, clamp(zoom - baseLevel, 0, 1))\n      );\n    }\n    return (\n      this.maxResolution_ / Math.pow(this.zoomFactor_, zoom - this.minZoom_)\n    );\n  }\n\n  /**\n   * Fit the given geometry or extent based on the given map size and border.\n   * The size is pixel dimensions of the box to fit the extent into.\n   * In most cases you will want to use the map size, that is `map.getSize()`.\n   * Takes care of the map angle.\n   * @param {import(\"./geom/SimpleGeometry.js\").default|import(\"./extent.js\").Extent} geometryOrExtent The geometry or\n   *     extent to fit the view to.\n   * @param {FitOptions} [options] Options.\n   * @api\n   */\n  fit(geometryOrExtent, options) {\n    /** @type {import(\"./geom/SimpleGeometry.js\").default} */\n    let geometry;\n    assert(\n      Array.isArray(geometryOrExtent) ||\n        typeof (/** @type {?} */ (geometryOrExtent).getSimplifiedGeometry) ===\n          'function',\n      'Invalid extent or geometry provided as `geometry`',\n    );\n    if (Array.isArray(geometryOrExtent)) {\n      assert(\n        !isEmpty(geometryOrExtent),\n        'Cannot fit empty extent provided as `geometry`',\n      );\n      const extent = fromUserExtent(geometryOrExtent, this.getProjection());\n      geometry = polygonFromExtent(extent);\n    } else if (geometryOrExtent.getType() === 'Circle') {\n      const extent = fromUserExtent(\n        geometryOrExtent.getExtent(),\n        this.getProjection(),\n      );\n      geometry = polygonFromExtent(extent);\n      geometry.rotate(this.getRotation(), getCenter(extent));\n    } else {\n      const userProjection = getUserProjection();\n      if (userProjection) {\n        geometry = /** @type {import(\"./geom/SimpleGeometry.js\").default} */ (\n          geometryOrExtent\n            .clone()\n            .transform(userProjection, this.getProjection())\n        );\n      } else {\n        geometry = geometryOrExtent;\n      }\n    }\n\n    this.fitInternal(geometry, options);\n  }\n\n  /**\n   * Calculate rotated extent\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @return {import(\"./extent\").Extent} The rotated extent for the geometry.\n   */\n  rotatedExtentForGeometry(geometry) {\n    const rotation = this.getRotation();\n    const cosAngle = Math.cos(rotation);\n    const sinAngle = Math.sin(-rotation);\n    const coords = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    let minRotX = +Infinity;\n    let minRotY = +Infinity;\n    let maxRotX = -Infinity;\n    let maxRotY = -Infinity;\n    for (let i = 0, ii = coords.length; i < ii; i += stride) {\n      const rotX = coords[i] * cosAngle - coords[i + 1] * sinAngle;\n      const rotY = coords[i] * sinAngle + coords[i + 1] * cosAngle;\n      minRotX = Math.min(minRotX, rotX);\n      minRotY = Math.min(minRotY, rotY);\n      maxRotX = Math.max(maxRotX, rotX);\n      maxRotY = Math.max(maxRotY, rotY);\n    }\n    return [minRotX, minRotY, maxRotX, maxRotY];\n  }\n\n  /**\n   * @param {import(\"./geom/SimpleGeometry.js\").default} geometry The geometry.\n   * @param {FitOptions} [options] Options.\n   */\n  fitInternal(geometry, options) {\n    options = options || {};\n    let size = options.size;\n    if (!size) {\n      size = this.getViewportSizeMinusPadding_();\n    }\n    const padding =\n      options.padding !== undefined ? options.padding : [0, 0, 0, 0];\n    const nearest = options.nearest !== undefined ? options.nearest : false;\n    let minResolution;\n    if (options.minResolution !== undefined) {\n      minResolution = options.minResolution;\n    } else if (options.maxZoom !== undefined) {\n      minResolution = this.getResolutionForZoom(options.maxZoom);\n    } else {\n      minResolution = 0;\n    }\n\n    const rotatedExtent = this.rotatedExtentForGeometry(geometry);\n\n    // calculate resolution\n    let resolution = this.getResolutionForExtentInternal(rotatedExtent, [\n      size[0] - padding[1] - padding[3],\n      size[1] - padding[0] - padding[2],\n    ]);\n    resolution = isNaN(resolution)\n      ? minResolution\n      : Math.max(resolution, minResolution);\n    resolution = this.getConstrainedResolution(resolution, nearest ? 0 : 1);\n\n    // calculate center\n    const rotation = this.getRotation();\n    const sinAngle = Math.sin(rotation);\n    const cosAngle = Math.cos(rotation);\n    const centerRot = getCenter(rotatedExtent);\n    centerRot[0] += ((padding[1] - padding[3]) / 2) * resolution;\n    centerRot[1] += ((padding[0] - padding[2]) / 2) * resolution;\n    const centerX = centerRot[0] * cosAngle - centerRot[1] * sinAngle;\n    const centerY = centerRot[1] * cosAngle + centerRot[0] * sinAngle;\n    const center = this.getConstrainedCenter([centerX, centerY], resolution);\n    const callback = options.callback ? options.callback : VOID;\n\n    if (options.duration !== undefined) {\n      this.animateInternal(\n        {\n          resolution: resolution,\n          center: center,\n          duration: options.duration,\n          easing: options.easing,\n        },\n        callback,\n      );\n    } else {\n      this.targetResolution_ = resolution;\n      this.targetCenter_ = center;\n      this.applyTargetState_(false, true);\n      animationCallback(callback, true);\n    }\n  }\n\n  /**\n   * Center on coordinate and view position.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   * @api\n   */\n  centerOn(coordinate, size, position) {\n    this.centerOnInternal(\n      fromUserCoordinate(coordinate, this.getProjection()),\n      size,\n      position,\n    );\n  }\n\n  /**\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"./size.js\").Size} size Box pixel size.\n   * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n   */\n  centerOnInternal(coordinate, size, position) {\n    this.setCenterInternal(\n      calculateCenterOn(\n        coordinate,\n        size,\n        position,\n        this.getResolution(),\n        this.getRotation(),\n      ),\n    );\n  }\n\n  /**\n   * Calculates the shift between map and viewport center.\n   * @param {import(\"./coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {import(\"./size.js\").Size} size Size.\n   * @return {Array<number>|undefined} Center shift.\n   */\n  calculateCenterShift(center, resolution, rotation, size) {\n    let centerShift;\n    const padding = this.padding_;\n    if (padding && center) {\n      const reducedSize = this.getViewportSizeMinusPadding_(-rotation);\n      const shiftedCenter = calculateCenterOn(\n        center,\n        size,\n        [reducedSize[0] / 2 + padding[3], reducedSize[1] / 2 + padding[0]],\n        resolution,\n        rotation,\n      );\n      centerShift = [\n        center[0] - shiftedCenter[0],\n        center[1] - shiftedCenter[1],\n      ];\n    }\n    return centerShift;\n  }\n\n  /**\n   * @return {boolean} Is defined.\n   */\n  isDef() {\n    return !!this.getCenterInternal() && this.getResolution() !== undefined;\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   * @api\n   */\n  adjustCenter(deltaCoordinates) {\n    const center = toUserCoordinate(this.targetCenter_, this.getProjection());\n    this.setCenter([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Adds relative coordinates to the center of the view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate} deltaCoordinates Relative value to add.\n   */\n  adjustCenterInternal(deltaCoordinates) {\n    const center = this.targetCenter_;\n    this.setCenterInternal([\n      center[0] + deltaCoordinates[0],\n      center[1] + deltaCoordinates[1],\n    ]);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustResolution(ratio, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.adjustResolutionInternal(ratio, anchor);\n  }\n\n  /**\n   * Multiply the view resolution by a ratio, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} ratio The ratio to apply on the view resolution.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  adjustResolutionInternal(ratio, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const size = this.getViewportSize_(this.getRotation());\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_ * ratio,\n      0,\n      size,\n      isMoving,\n    );\n\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterZoom(newResolution, anchor);\n    }\n\n    this.targetResolution_ *= ratio;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Adds a value to the view zoom level, optionally using an anchor. Any resolution\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom level.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  adjustZoom(delta, anchor) {\n    this.adjustResolution(Math.pow(this.zoomFactor_, -delta), anchor);\n  }\n\n  /**\n   * Adds a value to the view rotation, optionally using an anchor. Any rotation\n   * constraint will apply.\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   * @api\n   */\n  adjustRotation(delta, anchor) {\n    if (anchor) {\n      anchor = fromUserCoordinate(anchor, this.getProjection());\n    }\n    this.adjustRotationInternal(delta, anchor);\n  }\n\n  /**\n   * @param {number} delta Relative value to add to the zoom rotation, in radians.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The rotation center.\n   */\n  adjustRotationInternal(delta, anchor) {\n    const isMoving = this.getAnimating() || this.getInteracting();\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_ + delta,\n      isMoving,\n    );\n    if (anchor) {\n      this.targetCenter_ = this.calculateCenterRotate(newRotation, anchor);\n    }\n    this.targetRotation_ += delta;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the center of the current view. Any extent constraint will apply.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   * @observable\n   * @api\n   */\n  setCenter(center) {\n    this.setCenterInternal(\n      center ? fromUserCoordinate(center, this.getProjection()) : center,\n    );\n  }\n\n  /**\n   * Set the center using the view projection (not the user projection).\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} center The center of the view.\n   */\n  setCenterInternal(center) {\n    this.targetCenter_ = center;\n    this.applyTargetState_();\n  }\n\n  /**\n   * @param {import(\"./ViewHint.js\").default} hint Hint.\n   * @param {number} delta Delta.\n   * @return {number} New value.\n   */\n  setHint(hint, delta) {\n    this.hints_[hint] += delta;\n    this.changed();\n    return this.hints_[hint];\n  }\n\n  /**\n   * Set the resolution for this view. Any resolution constraint will apply.\n   * @param {number|undefined} resolution The resolution of the view.\n   * @observable\n   * @api\n   */\n  setResolution(resolution) {\n    this.targetResolution_ = resolution;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Set the rotation for this view. Any rotation constraint will apply.\n   * @param {number} rotation The rotation of the view in radians.\n   * @observable\n   * @api\n   */\n  setRotation(rotation) {\n    this.targetRotation_ = rotation;\n    this.applyTargetState_();\n  }\n\n  /**\n   * Zoom to a specific zoom level. Any resolution constrain will apply.\n   * @param {number} zoom Zoom level.\n   * @api\n   */\n  setZoom(zoom) {\n    this.setResolution(this.getResolutionForZoom(zoom));\n  }\n\n  /**\n   * Recompute rotation/resolution/center based on target values.\n   * Note: we have to compute rotation first, then resolution and center considering that\n   * parameters can influence one another in case a view extent constraint is present.\n   * @param {boolean} [doNotCancelAnims] Do not cancel animations.\n   * @param {boolean} [forceMoving] Apply constraints as if the view is moving.\n   * @private\n   */\n  applyTargetState_(doNotCancelAnims, forceMoving) {\n    const isMoving =\n      this.getAnimating() || this.getInteracting() || forceMoving;\n\n    // compute rotation\n    const newRotation = this.constraints_.rotation(\n      this.targetRotation_,\n      isMoving,\n    );\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      0,\n      size,\n      isMoving,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      isMoving,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (this.get(ViewProperty.ROTATION) !== newRotation) {\n      this.set(ViewProperty.ROTATION, newRotation);\n    }\n    if (this.get(ViewProperty.RESOLUTION) !== newResolution) {\n      this.set(ViewProperty.RESOLUTION, newResolution);\n      this.set('zoom', this.getZoom(), true);\n    }\n    if (\n      !newCenter ||\n      !this.get(ViewProperty.CENTER) ||\n      !equals(this.get(ViewProperty.CENTER), newCenter)\n    ) {\n      this.set(ViewProperty.CENTER, newCenter);\n    }\n\n    if (this.getAnimating() && !doNotCancelAnims) {\n      this.cancelAnimations();\n    }\n    this.cancelAnchor_ = undefined;\n  }\n\n  /**\n   * If any constraints need to be applied, an animation will be triggered.\n   * This is typically done on interaction end.\n   * Note: calling this with a duration of 0 will apply the constrained values straight away,\n   * without animation.\n   * @param {number} [duration] The animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  resolveConstraints(duration, resolutionDirection, anchor) {\n    duration = duration !== undefined ? duration : 200;\n    const direction = resolutionDirection || 0;\n\n    const newRotation = this.constraints_.rotation(this.targetRotation_);\n    const size = this.getViewportSize_(newRotation);\n    const newResolution = this.constraints_.resolution(\n      this.targetResolution_,\n      direction,\n      size,\n    );\n    const newCenter = this.constraints_.center(\n      this.targetCenter_,\n      newResolution,\n      size,\n      false,\n      this.calculateCenterShift(\n        this.targetCenter_,\n        newResolution,\n        newRotation,\n        size,\n      ),\n    );\n\n    if (duration === 0 && !this.cancelAnchor_) {\n      this.targetResolution_ = newResolution;\n      this.targetRotation_ = newRotation;\n      this.targetCenter_ = newCenter;\n      this.applyTargetState_();\n      return;\n    }\n\n    anchor = anchor || (duration === 0 ? this.cancelAnchor_ : undefined);\n    this.cancelAnchor_ = undefined;\n\n    if (\n      this.getResolution() !== newResolution ||\n      this.getRotation() !== newRotation ||\n      !this.getCenterInternal() ||\n      !equals(this.getCenterInternal(), newCenter)\n    ) {\n      if (this.getAnimating()) {\n        this.cancelAnimations();\n      }\n\n      this.animateInternal({\n        rotation: newRotation,\n        center: newCenter,\n        resolution: newResolution,\n        duration: duration,\n        easing: easeOut,\n        anchor: anchor,\n      });\n    }\n  }\n\n  /**\n   * Notify the View that an interaction has started.\n   * The view state will be resolved to a stable one if needed\n   * (depending on its constraints).\n   * @api\n   */\n  beginInteraction() {\n    this.resolveConstraints(0);\n\n    this.setHint(ViewHint.INTERACTING, 1);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   * @api\n   */\n  endInteraction(duration, resolutionDirection, anchor) {\n    anchor = anchor && fromUserCoordinate(anchor, this.getProjection());\n    this.endInteractionInternal(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Notify the View that an interaction has ended. The view state will be resolved\n   * to a stable one if needed (depending on its constraints).\n   * @param {number} [duration] Animation duration in ms.\n   * @param {number} [resolutionDirection] Which direction to zoom.\n   * @param {import(\"./coordinate.js\").Coordinate} [anchor] The origin of the transformation.\n   */\n  endInteractionInternal(duration, resolutionDirection, anchor) {\n    if (!this.getInteracting()) {\n      return;\n    }\n    this.setHint(ViewHint.INTERACTING, -1);\n    this.resolveConstraints(duration, resolutionDirection, anchor);\n  }\n\n  /**\n   * Get a valid position for the view center according to the current constraints.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} targetCenter Target center position.\n   * @param {number} [targetResolution] Target resolution. If not supplied, the current one will be used.\n   * This is useful to guess a valid center position at a different zoom level.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} Valid center position.\n   */\n  getConstrainedCenter(targetCenter, targetResolution) {\n    const size = this.getViewportSize_(this.getRotation());\n    return this.constraints_.center(\n      targetCenter,\n      targetResolution || this.getResolution(),\n      size,\n    );\n  }\n\n  /**\n   * Get a valid zoom level according to the current view constraints.\n   * @param {number|undefined} targetZoom Target zoom.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid zoom level.\n   */\n  getConstrainedZoom(targetZoom, direction) {\n    const targetRes = this.getResolutionForZoom(targetZoom);\n    return this.getZoomForResolution(\n      this.getConstrainedResolution(targetRes, direction),\n    );\n  }\n\n  /**\n   * Get a valid resolution according to the current view constraints.\n   * @param {number|undefined} targetResolution Target resolution.\n   * @param {number} [direction] Indicate which resolution should be used\n   * by a renderer if the view resolution does not match any resolution of the tile source.\n   * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n   * will be used. If -1, the nearest higher resolution will be used.\n   * @return {number|undefined} Valid resolution.\n   */\n  getConstrainedResolution(targetResolution, direction) {\n    direction = direction || 0;\n    const size = this.getViewportSize_(this.getRotation());\n\n    return this.constraints_.resolution(targetResolution, direction, size);\n  }\n}\n\n/**\n * @param {Function} callback Callback.\n * @param {*} returnValue Return value.\n */\nfunction animationCallback(callback, returnValue) {\n  setTimeout(function () {\n    callback(returnValue);\n  }, 0);\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./centerconstraint.js\").Type} The constraint.\n */\nexport function createCenterConstraint(options) {\n  if (options.extent !== undefined) {\n    const smooth =\n      options.smoothExtentConstraint !== undefined\n        ? options.smoothExtentConstraint\n        : true;\n    return createExtent(options.extent, options.constrainOnlyCenter, smooth);\n  }\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  if (options.multiWorld !== true && projection.isGlobal()) {\n    const extent = projection.getExtent().slice();\n    extent[0] = -Infinity;\n    extent[2] = Infinity;\n    return createExtent(extent, false, false);\n  }\n\n  return centerNone;\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {{constraint: import(\"./resolutionconstraint.js\").Type, maxResolution: number,\n *     minResolution: number, minZoom: number, zoomFactor: number}} The constraint.\n */\nexport function createResolutionConstraint(options) {\n  let resolutionConstraint;\n  let maxResolution;\n  let minResolution;\n\n  // TODO: move these to be ol constants\n  // see https://github.com/openlayers/openlayers/issues/2076\n  const defaultMaxZoom = 28;\n  const defaultZoomFactor = 2;\n\n  let minZoom =\n    options.minZoom !== undefined ? options.minZoom : DEFAULT_MIN_ZOOM;\n\n  let maxZoom =\n    options.maxZoom !== undefined ? options.maxZoom : defaultMaxZoom;\n\n  const zoomFactor =\n    options.zoomFactor !== undefined ? options.zoomFactor : defaultZoomFactor;\n\n  const multiWorld =\n    options.multiWorld !== undefined ? options.multiWorld : false;\n\n  const smooth =\n    options.smoothResolutionConstraint !== undefined\n      ? options.smoothResolutionConstraint\n      : true;\n\n  const showFullExtent =\n    options.showFullExtent !== undefined ? options.showFullExtent : false;\n\n  const projection = createProjection(options.projection, 'EPSG:3857');\n  const projExtent = projection.getExtent();\n  let constrainOnlyCenter = options.constrainOnlyCenter;\n  let extent = options.extent;\n  if (!multiWorld && !extent && projection.isGlobal()) {\n    constrainOnlyCenter = false;\n    extent = projExtent;\n  }\n\n  if (options.resolutions !== undefined) {\n    const resolutions = options.resolutions;\n    maxResolution = resolutions[minZoom];\n    minResolution =\n      resolutions[maxZoom] !== undefined\n        ? resolutions[maxZoom]\n        : resolutions[resolutions.length - 1];\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToResolutions(\n        resolutions,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  } else {\n    // calculate the default min and max resolution\n    const size = !projExtent\n      ? // use an extent that can fit the whole world if need be\n        (360 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit()\n      : Math.max(getWidth(projExtent), getHeight(projExtent));\n\n    const defaultMaxResolution =\n      size / DEFAULT_TILE_SIZE / Math.pow(defaultZoomFactor, DEFAULT_MIN_ZOOM);\n\n    const defaultMinResolution =\n      defaultMaxResolution /\n      Math.pow(defaultZoomFactor, defaultMaxZoom - DEFAULT_MIN_ZOOM);\n\n    // user provided maxResolution takes precedence\n    maxResolution = options.maxResolution;\n    if (maxResolution !== undefined) {\n      minZoom = 0;\n    } else {\n      maxResolution = defaultMaxResolution / Math.pow(zoomFactor, minZoom);\n    }\n\n    // user provided minResolution takes precedence\n    minResolution = options.minResolution;\n    if (minResolution === undefined) {\n      if (options.maxZoom !== undefined) {\n        if (options.maxResolution !== undefined) {\n          minResolution = maxResolution / Math.pow(zoomFactor, maxZoom);\n        } else {\n          minResolution = defaultMaxResolution / Math.pow(zoomFactor, maxZoom);\n        }\n      } else {\n        minResolution = defaultMinResolution;\n      }\n    }\n\n    // given discrete zoom levels, minResolution may be different than provided\n    maxZoom =\n      minZoom +\n      Math.floor(\n        Math.log(maxResolution / minResolution) / Math.log(zoomFactor),\n      );\n    minResolution = maxResolution / Math.pow(zoomFactor, maxZoom - minZoom);\n\n    if (options.constrainResolution) {\n      resolutionConstraint = createSnapToPower(\n        zoomFactor,\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    } else {\n      resolutionConstraint = createMinMaxResolution(\n        maxResolution,\n        minResolution,\n        smooth,\n        !constrainOnlyCenter && extent,\n        showFullExtent,\n      );\n    }\n  }\n  return {\n    constraint: resolutionConstraint,\n    maxResolution: maxResolution,\n    minResolution: minResolution,\n    minZoom: minZoom,\n    zoomFactor: zoomFactor,\n  };\n}\n\n/**\n * @param {ViewOptions} options View options.\n * @return {import(\"./rotationconstraint.js\").Type} Rotation constraint.\n */\nexport function createRotationConstraint(options) {\n  const enableRotation =\n    options.enableRotation !== undefined ? options.enableRotation : true;\n  if (enableRotation) {\n    const constrainRotation = options.constrainRotation;\n    if (constrainRotation === undefined || constrainRotation === true) {\n      return createSnapToZero();\n    }\n    if (constrainRotation === false) {\n      return rotationNone;\n    }\n    if (typeof constrainRotation === 'number') {\n      return createSnapToN(constrainRotation);\n    }\n    return rotationNone;\n  }\n  return disable;\n}\n\n/**\n * Determine if an animation involves no view change.\n * @param {Animation} animation The animation.\n * @return {boolean} The animation involves no view change.\n */\nexport function isNoopAnimation(animation) {\n  if (animation.sourceCenter && animation.targetCenter) {\n    if (!coordinatesEqual(animation.sourceCenter, animation.targetCenter)) {\n      return false;\n    }\n  }\n  if (animation.sourceResolution !== animation.targetResolution) {\n    return false;\n  }\n  if (animation.sourceRotation !== animation.targetRotation) {\n    return false;\n  }\n  return true;\n}\n\n/**\n * @param {import(\"./coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {import(\"./size.js\").Size} size Box pixel size.\n * @param {import(\"./pixel.js\").Pixel} position Position on the view to center on.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @return {import(\"./coordinate.js\").Coordinate} Shifted center.\n */\nfunction calculateCenterOn(coordinate, size, position, resolution, rotation) {\n  // calculate rotated position\n  const cosAngle = Math.cos(-rotation);\n  let sinAngle = Math.sin(-rotation);\n  let rotX = coordinate[0] * cosAngle - coordinate[1] * sinAngle;\n  let rotY = coordinate[1] * cosAngle + coordinate[0] * sinAngle;\n  rotX += (size[0] / 2 - position[0]) * resolution;\n  rotY += (position[1] - size[1] / 2) * resolution;\n\n  // go back to original angle\n  sinAngle = -sinAngle; // go back to original rotation\n  const centerX = rotX * cosAngle - rotY * sinAngle;\n  const centerY = rotY * cosAngle + rotX * sinAngle;\n\n  return [centerX, centerY];\n}\n\nexport default View;\n","/**\n * @module ol/tilegrid/common\n */\n\n/**\n * Default maximum zoom for default tile grids.\n * @type {number}\n */\nexport const DEFAULT_MAX_ZOOM = 42;\n\n/**\n * Default tile size.\n * @type {number}\n */\nexport const DEFAULT_TILE_SIZE = 256;\n","/**\n * @module ol/ViewHint\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  ANIMATING: 0,\n  INTERACTING: 1,\n};\n","/**\n * @module ol/css\n */\n\n/**\n * @typedef {Object} FontParameters\n * @property {string} style Style.\n * @property {string} variant Variant.\n * @property {string} weight Weight.\n * @property {string} size Size.\n * @property {string} lineHeight LineHeight.\n * @property {string} family Family.\n * @property {Array<string>} families Families.\n */\n\n/**\n * The CSS class for hidden feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_HIDDEN = 'ol-hidden';\n\n/**\n * The CSS class that we'll give the DOM elements to have them selectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_SELECTABLE = 'ol-selectable';\n\n/**\n * The CSS class that we'll give the DOM elements to have them unselectable.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSELECTABLE = 'ol-unselectable';\n\n/**\n * The CSS class for unsupported feature.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_UNSUPPORTED = 'ol-unsupported';\n\n/**\n * The CSS class for controls.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_CONTROL = 'ol-control';\n\n/**\n * The CSS class that we'll give the DOM elements that are collapsed, i.e.\n * to those elements which usually can be expanded.\n *\n * @const\n * @type {string}\n */\nexport const CLASS_COLLAPSED = 'ol-collapsed';\n\n/**\n * From https://stackoverflow.com/questions/10135697/regex-to-parse-any-css-font\n * @type {RegExp}\n */\nconst fontRegEx = new RegExp(\n  [\n    '^\\\\s*(?=(?:(?:[-a-z]+\\\\s*){0,2}(italic|oblique))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(small-caps))?)',\n    '(?=(?:(?:[-a-z]+\\\\s*){0,2}(bold(?:er)?|lighter|[1-9]00 ))?)',\n    '(?:(?:normal|\\\\1|\\\\2|\\\\3)\\\\s*){0,3}((?:xx?-)?',\n    '(?:small|large)|medium|smaller|larger|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx]))',\n    '(?:\\\\s*\\\\/\\\\s*(normal|[\\\\.\\\\d]+(?:\\\\%|in|[cem]m|ex|p[ctx])?))',\n    '?\\\\s*([-,\\\\\"\\\\\\'\\\\sa-z0-9]+?)\\\\s*$',\n  ].join(''),\n  'i',\n);\n/** @type {Array<'style'|'variant'|'weight'|'size'|'lineHeight'|'family'>} */\nconst fontRegExMatchIndex = [\n  'style',\n  'variant',\n  'weight',\n  'size',\n  'lineHeight',\n  'family',\n];\n\n/** @type {Object<string|number, number>} */\nexport const fontWeights = {\n  normal: 400,\n  bold: 700,\n};\n\n/**\n * Get the list of font families from a font spec.  Note that this doesn't work\n * for font families that have commas in them.\n * @param {string} fontSpec The CSS font property.\n * @return {FontParameters|null} The font parameters (or null if the input spec is invalid).\n */\nexport const getFontParameters = function (fontSpec) {\n  const match = fontSpec.match(fontRegEx);\n  if (!match) {\n    return null;\n  }\n  const style = /** @type {FontParameters} */ ({\n    lineHeight: 'normal',\n    size: '1.2em',\n    style: 'normal',\n    weight: '400',\n    variant: 'normal',\n  });\n  for (let i = 0, ii = fontRegExMatchIndex.length; i < ii; ++i) {\n    const value = match[i + 1];\n    if (value !== undefined) {\n      style[fontRegExMatchIndex[i]] =\n        typeof value === 'string' ? value.trim() : value;\n    }\n  }\n  if (isNaN(Number(style.weight)) && style.weight in fontWeights) {\n    style.weight = fontWeights[style.weight];\n  }\n  style.families = style.family\n    .split(/,\\s?/)\n    .map((f) => f.trim().replace(/^['\"]|['\"]$/g, ''));\n  return style;\n};\n","import {WORKER_OFFSCREEN_CANVAS} from './has.js';\n\n/**\n * @module ol/dom\n */\n\n//FIXME Move this function to the canvas module\n/**\n * Create an html canvas element and returns its 2d context.\n * @param {number} [width] Canvas width.\n * @param {number} [height] Canvas height.\n * @param {Array<HTMLCanvasElement>} [canvasPool] Canvas pool to take existing canvas from.\n * @param {CanvasRenderingContext2DSettings} [settings] CanvasRenderingContext2DSettings\n * @return {CanvasRenderingContext2D} The context.\n */\nexport function createCanvasContext2D(width, height, canvasPool, settings) {\n  /** @type {HTMLCanvasElement|OffscreenCanvas} */\n  let canvas;\n  if (canvasPool && canvasPool.length) {\n    canvas = /** @type {HTMLCanvasElement} */ (canvasPool.shift());\n  } else if (WORKER_OFFSCREEN_CANVAS) {\n    canvas = new OffscreenCanvas(width || 300, height || 300);\n  } else {\n    canvas = document.createElement('canvas');\n  }\n  if (width) {\n    canvas.width = width;\n  }\n  if (height) {\n    canvas.height = height;\n  }\n  //FIXME Allow OffscreenCanvasRenderingContext2D as return type\n  return /** @type {CanvasRenderingContext2D} */ (\n    canvas.getContext('2d', settings)\n  );\n}\n\n/** @type {CanvasRenderingContext2D} */\nlet sharedCanvasContext;\n\n/**\n * @return {CanvasRenderingContext2D} Shared canvas context.\n */\nexport function getSharedCanvasContext2D() {\n  if (!sharedCanvasContext) {\n    sharedCanvasContext = createCanvasContext2D(1, 1);\n  }\n  return sharedCanvasContext;\n}\n\n/**\n * Releases canvas memory to avoid exceeding memory limits in Safari.\n * See https://pqina.nl/blog/total-canvas-memory-use-exceeds-the-maximum-limit/\n * @param {CanvasRenderingContext2D} context Context.\n */\nexport function releaseCanvas(context) {\n  const canvas = context.canvas;\n  canvas.width = 1;\n  canvas.height = 1;\n  context.clearRect(0, 0, 1, 1);\n}\n\n/**\n * Get the current computed width for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerWidth(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The width.\n */\nexport function outerWidth(element) {\n  let width = element.offsetWidth;\n  const style = getComputedStyle(element);\n  width += parseInt(style.marginLeft, 10) + parseInt(style.marginRight, 10);\n\n  return width;\n}\n\n/**\n * Get the current computed height for the given element including margin,\n * padding and border.\n * Equivalent to jQuery's `$(el).outerHeight(true)`.\n * @param {!HTMLElement} element Element.\n * @return {number} The height.\n */\nexport function outerHeight(element) {\n  let height = element.offsetHeight;\n  const style = getComputedStyle(element);\n  height += parseInt(style.marginTop, 10) + parseInt(style.marginBottom, 10);\n\n  return height;\n}\n\n/**\n * @param {Node} newNode Node to replace old node\n * @param {Node} oldNode The node to be replaced\n */\nexport function replaceNode(newNode, oldNode) {\n  const parent = oldNode.parentNode;\n  if (parent) {\n    parent.replaceChild(newNode, oldNode);\n  }\n}\n\n/**\n * @param {Node} node The node to remove the children from.\n */\nexport function removeChildren(node) {\n  while (node.lastChild) {\n    node.lastChild.remove();\n  }\n}\n\n/**\n * Transform the children of a parent node so they match the\n * provided list of children.  This function aims to efficiently\n * remove, add, and reorder child nodes while maintaining a simple\n * implementation (it is not guaranteed to minimize DOM operations).\n * @param {Node} node The parent node whose children need reworking.\n * @param {Array<Node>} children The desired children.\n */\nexport function replaceChildren(node, children) {\n  const oldChildren = node.childNodes;\n\n  for (let i = 0; true; ++i) {\n    const oldChild = oldChildren[i];\n    const newChild = children[i];\n\n    // check if our work is done\n    if (!oldChild && !newChild) {\n      break;\n    }\n\n    // check if children match\n    if (oldChild === newChild) {\n      continue;\n    }\n\n    // check if a new child needs to be added\n    if (!oldChild) {\n      node.appendChild(newChild);\n      continue;\n    }\n\n    // check if an old child needs to be removed\n    if (!newChild) {\n      node.removeChild(oldChild);\n      --i;\n      continue;\n    }\n\n    // reorder\n    node.insertBefore(newChild, oldChild);\n  }\n}\n","/**\n * @module ol/control/Control\n */\nimport MapEventType from '../MapEventType.js';\nimport BaseObject from '../Object.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {VOID} from '../functions.js';\n\n/**\n * @typedef {Object} Options\n * @property {HTMLElement} [element] The element is the control's\n * container element. This only needs to be specified if you're developing\n * a custom control.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {HTMLElement|string} [target] Specify a target if you want\n * the control to be rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control is a visible widget with a DOM element in a fixed position on the\n * screen. They can involve user input (buttons), or be informational only;\n * the position is determined using CSS. By default these are placed in the\n * container with CSS class name `ol-overlaycontainer-stopevent`, but can use\n * any outside DOM element.\n *\n * This is the base class for controls. You can use it for simple custom\n * controls by creating the element with listeners, creating an instance:\n * ```js\n * const myControl = new Control({element: myElement});\n * ```\n * and then adding this to the map.\n *\n * The main advantage of having this as a control rather than a simple separate\n * DOM element is that preventing propagation is handled for you. Controls\n * will also be objects in a {@link module:ol/Collection~Collection}, so you can use their methods.\n *\n * You can also extend this base for your own control class. See\n * examples/custom-controls for an example of how to do this.\n *\n * @api\n */\nclass Control extends BaseObject {\n  /**\n   * @param {Options} options Control options.\n   */\n  constructor(options) {\n    super();\n\n    const element = options.element;\n    if (element && !options.target && !element.style.pointerEvents) {\n      element.style.pointerEvents = 'auto';\n    }\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = element ? element : null;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.target_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../events.js\").EventsKey>}\n     */\n    this.listenerKeys = [];\n\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.target) {\n      this.setTarget(options.target);\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.element?.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Get the map associated with this control.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Remove the control from its current map and attach it to the new map.\n   * Pass `null` to just remove the control from the current map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.element?.remove();\n    }\n    for (let i = 0, ii = this.listenerKeys.length; i < ii; ++i) {\n      unlistenByKey(this.listenerKeys[i]);\n    }\n    this.listenerKeys.length = 0;\n    this.map_ = map;\n    if (map) {\n      const target = this.target_ ?? map.getOverlayContainerStopEvent();\n      if (this.element) {\n        target.appendChild(this.element);\n      }\n      if (this.render !== VOID) {\n        this.listenerKeys.push(\n          listen(map, MapEventType.POSTRENDER, this.render, this),\n        );\n      }\n      map.render();\n    }\n  }\n\n  /**\n   * Renders the control.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @api\n   */\n  render(mapEvent) {}\n\n  /**\n   * This function is used to set a target element for the control. It has no\n   * effect if it is called after the control has been added to the map (i.e.\n   * after `setMap` is called on the control). If no `target` is set in the\n   * options passed to the control constructor and if `setTarget` is not called\n   * then the control is added to the map's overlay container.\n   * @param {HTMLElement|string} target Target.\n   * @api\n   */\n  setTarget(target) {\n    this.target_ =\n      typeof target === 'string' ? document.getElementById(target) : target;\n  }\n}\n\nexport default Control;\n","/**\n * @module ol/control/Attribution\n */\nimport {equals} from '../array.js';\nimport {CLASS_COLLAPSED, CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {removeChildren, replaceNode} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {toPromise} from '../functions.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-attribution'] CSS class name.\n * @property {HTMLElement|string} [target] Specify a target if you\n * want the control to be rendered outside of the map's\n * viewport.\n * @property {boolean} [collapsible] Specify if attributions can\n * be collapsed. If not specified, sources control this behavior with their\n * `attributionsCollapsible` setting.\n * @property {boolean} [collapsed=true] Specify if attributions should\n * be collapsed at startup.\n * @property {string} [tipLabel='Attributions'] Text label to use for the button tip.\n * @property {string|HTMLElement} [label='i'] Text label to use for the\n * collapsed attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [expandClassName=className + '-expand'] CSS class name for the\n * collapsed attributions button.\n * @property {string|HTMLElement} [collapseLabel='›'] Text label to use\n * for the expanded attributions button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [collapseClassName=className + '-collapse'] CSS class name for the\n * expanded attributions button.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when\n * the control should be re-rendered. This is called in a `requestAnimationFrame`\n * callback.\n * @property {string|Array<string>|undefined} [attributions] Optional attribution(s) that will always be\n * displayed regardless of the layers rendered.\n * **Caution:** Attributions are rendered dynamically using `innerHTML`, which can lead to potential\n * [**XSS (Cross-Site Scripting)**](https://en.wikipedia.org/wiki/Cross-site_scripting) vulnerabilities.\n * Use this feature only for trusted content\n * or ensure that the content is properly sanitized before inserting it.\n */\n\n/**\n * @classdesc\n * Control to show all the attributions associated with the layer sources\n * in the map. This control is one of the default controls included in maps.\n * By default it will show in the bottom right portion of the map, but this can\n * be changed by using a css selector for `.ol-attribution`.\n *\n * @api\n */\nclass Attribution extends Control {\n  /**\n   * @param {Options} [options] Attribution options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.ulElement_ = document.createElement('ul');\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsed_ =\n      options.collapsed !== undefined ? options.collapsed : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.userCollapsed_ = this.collapsed_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overrideCollapsible_ = options.collapsible !== undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.collapsible_ =\n      options.collapsible !== undefined ? options.collapsible : true;\n\n    if (!this.collapsible_) {\n      this.collapsed_ = false;\n    }\n\n    /**\n     * @private\n     * @type {string | Array<string> | undefined}\n     */\n    this.attributions_ = options.attributions;\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-attribution';\n\n    const tipLabel =\n      options.tipLabel !== undefined ? options.tipLabel : 'Attributions';\n\n    const expandClassName =\n      options.expandClassName !== undefined\n        ? options.expandClassName\n        : className + '-expand';\n\n    const collapseLabel =\n      options.collapseLabel !== undefined ? options.collapseLabel : '\\u203A';\n\n    const collapseClassName =\n      options.collapseClassName !== undefined\n        ? options.collapseClassName\n        : className + '-collapse';\n\n    if (typeof collapseLabel === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.collapseLabel_ = document.createElement('span');\n      this.collapseLabel_.textContent = collapseLabel;\n      this.collapseLabel_.className = collapseClassName;\n    } else {\n      this.collapseLabel_ = collapseLabel;\n    }\n\n    const label = options.label !== undefined ? options.label : 'i';\n\n    if (typeof label === 'string') {\n      /**\n       * @private\n       * @type {HTMLElement}\n       */\n      this.label_ = document.createElement('span');\n      this.label_.textContent = label;\n      this.label_.className = expandClassName;\n    } else {\n      this.label_ = label;\n    }\n\n    const activeLabel =\n      this.collapsible_ && !this.collapsed_ ? this.collapseLabel_ : this.label_;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.toggleButton_ = document.createElement('button');\n    this.toggleButton_.setAttribute('type', 'button');\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n    this.toggleButton_.title = tipLabel;\n    this.toggleButton_.appendChild(activeLabel);\n\n    this.toggleButton_.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className +\n      ' ' +\n      CLASS_UNSELECTABLE +\n      ' ' +\n      CLASS_CONTROL +\n      (this.collapsed_ && this.collapsible_ ? ' ' + CLASS_COLLAPSED : '') +\n      (this.collapsible_ ? '' : ' ol-uncollapsible');\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(this.toggleButton_);\n    element.appendChild(this.ulElement_);\n\n    /**\n     * A list of currently rendered resolutions.\n     * @type {Array<string>}\n     * @private\n     */\n    this.renderedAttributions_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * Collect a list of visible attributions and set the collapsible state.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {Array<string>} Attributions.\n   * @private\n   */\n  collectSourceAttributions_(frameState) {\n    const layers = this.getMap().getAllLayers();\n    const visibleAttributions = new Set(\n      layers.flatMap((layer) => layer.getAttributions(frameState)),\n    );\n    if (this.attributions_ !== undefined) {\n      Array.isArray(this.attributions_)\n        ? this.attributions_.forEach((item) => visibleAttributions.add(item))\n        : visibleAttributions.add(this.attributions_);\n    }\n\n    if (!this.overrideCollapsible_) {\n      const collapsible = !layers.some(\n        (layer) => layer.getSource()?.getAttributionsCollapsible() === false,\n      );\n      this.setCollapsible(collapsible);\n    }\n    return Array.from(visibleAttributions);\n  }\n\n  /**\n   * @private\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  async updateElement_(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    const attributions = await Promise.all(\n      this.collectSourceAttributions_(frameState).map((attribution) =>\n        toPromise(() => attribution),\n      ),\n    );\n\n    const visible = attributions.length > 0;\n    if (this.renderedVisible_ != visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.renderedVisible_ = visible;\n    }\n\n    if (equals(attributions, this.renderedAttributions_)) {\n      return;\n    }\n\n    removeChildren(this.ulElement_);\n\n    // append the attributions\n    for (let i = 0, ii = attributions.length; i < ii; ++i) {\n      const element = document.createElement('li');\n      element.innerHTML = attributions[i];\n      this.ulElement_.appendChild(element);\n    }\n\n    this.renderedAttributions_ = attributions;\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    this.handleToggle_();\n    this.userCollapsed_ = this.collapsed_;\n  }\n\n  /**\n   * @private\n   */\n  handleToggle_() {\n    this.element.classList.toggle(CLASS_COLLAPSED);\n    if (this.collapsed_) {\n      replaceNode(this.collapseLabel_, this.label_);\n    } else {\n      replaceNode(this.label_, this.collapseLabel_);\n    }\n    this.collapsed_ = !this.collapsed_;\n    this.toggleButton_.setAttribute('aria-expanded', String(!this.collapsed_));\n  }\n\n  /**\n   * Return `true` if the attribution is collapsible, `false` otherwise.\n   * @return {boolean} True if the widget is collapsible.\n   * @api\n   */\n  getCollapsible() {\n    return this.collapsible_;\n  }\n\n  /**\n   * Set whether the attribution should be collapsible.\n   * @param {boolean} collapsible True if the widget is collapsible.\n   * @api\n   */\n  setCollapsible(collapsible) {\n    if (this.collapsible_ === collapsible) {\n      return;\n    }\n    this.collapsible_ = collapsible;\n    this.element.classList.toggle('ol-uncollapsible');\n    if (this.userCollapsed_) {\n      this.handleToggle_();\n    }\n  }\n\n  /**\n   * Collapse or expand the attribution according to the passed parameter. Will\n   * not do anything if the attribution isn't collapsible or if the current\n   * collapsed state is already the one requested.\n   * @param {boolean} collapsed True if the widget is collapsed.\n   * @api\n   */\n  setCollapsed(collapsed) {\n    this.userCollapsed_ = collapsed;\n    if (!this.collapsible_ || this.collapsed_ === collapsed) {\n      return;\n    }\n    this.handleToggle_();\n  }\n\n  /**\n   * Return `true` when the attribution is currently collapsed or `false`\n   * otherwise.\n   * @return {boolean} True if the widget is collapsed.\n   * @api\n   */\n  getCollapsed() {\n    return this.collapsed_;\n  }\n\n  /**\n   * Update the attribution element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    this.updateElement_(mapEvent.frameState);\n  }\n}\n\nexport default Attribution;\n","/**\n * @module ol/control/Rotate\n */\nimport {CLASS_CONTROL, CLASS_HIDDEN, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-rotate'] CSS class name.\n * @property {string|HTMLElement} [label='⇧'] Text label to use for the rotate button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [tipLabel='Reset rotation'] Text label to use for the rotate tip.\n * @property {string} [compassClassName='ol-compass'] CSS class name for the compass.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {boolean} [autoHide=true] Hide the control when rotation is 0.\n * @property {function(import(\"../MapEvent.js\").default):void} [render] Function called when the control should\n * be re-rendered. This is called in a `requestAnimationFrame` callback.\n * @property {function():void} [resetNorth] Function called when the control is clicked.\n * This will override the default `resetNorth`.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A button control to reset rotation to 0.\n * To style this control use css selector `.ol-rotate`. A `.ol-hidden` css\n * selector is added to the button when the rotation is 0.\n *\n * @api\n */\nclass Rotate extends Control {\n  /**\n   * @param {Options} [options] Rotate options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      render: options.render,\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-rotate';\n\n    const label = options.label !== undefined ? options.label : '\\u21E7';\n\n    const compassClassName =\n      options.compassClassName !== undefined\n        ? options.compassClassName\n        : 'ol-compass';\n\n    /**\n     * @type {HTMLElement}\n     * @private\n     */\n    this.label_ = null;\n\n    if (typeof label === 'string') {\n      this.label_ = document.createElement('span');\n      this.label_.className = compassClassName;\n      this.label_.textContent = label;\n    } else {\n      this.label_ = label;\n      this.label_.classList.add(compassClassName);\n    }\n\n    const tipLabel = options.tipLabel ? options.tipLabel : 'Reset rotation';\n\n    const button = document.createElement('button');\n    button.className = className + '-reset';\n    button.setAttribute('type', 'button');\n    button.title = tipLabel;\n    button.appendChild(this.label_);\n\n    button.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(button);\n\n    /**\n     * @private\n     */\n    this.callResetNorth_ = options.resetNorth ? options.resetNorth : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.autoHide_ = options.autoHide !== undefined ? options.autoHide : true;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    if (this.autoHide_) {\n      this.element.classList.add(CLASS_HIDDEN);\n    }\n  }\n\n  /**\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(event) {\n    event.preventDefault();\n    if (this.callResetNorth_ !== undefined) {\n      this.callResetNorth_();\n    } else {\n      this.resetNorth_();\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetNorth_() {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const rotation = view.getRotation();\n    if (rotation !== undefined) {\n      if (this.duration_ > 0 && rotation % (2 * Math.PI) !== 0) {\n        view.animate({\n          rotation: 0,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setRotation(0);\n      }\n    }\n  }\n\n  /**\n   * Update the rotate control element.\n   * @param {import(\"../MapEvent.js\").default} mapEvent Map event.\n   * @override\n   */\n  render(mapEvent) {\n    const frameState = mapEvent.frameState;\n    if (!frameState) {\n      return;\n    }\n    const rotation = frameState.viewState.rotation;\n    if (rotation != this.rotation_) {\n      const transform = 'rotate(' + rotation + 'rad)';\n      if (this.autoHide_) {\n        const contains = this.element.classList.contains(CLASS_HIDDEN);\n        if (!contains && rotation === 0) {\n          this.element.classList.add(CLASS_HIDDEN);\n        } else if (contains && rotation !== 0) {\n          this.element.classList.remove(CLASS_HIDDEN);\n        }\n      }\n      this.label_.style.transform = transform;\n    }\n    this.rotation_ = rotation;\n  }\n}\n\nexport default Rotate;\n","/**\n * @module ol/control/Zoom\n */\nimport {CLASS_CONTROL, CLASS_UNSELECTABLE} from '../css.js';\nimport {easeOut} from '../easing.js';\nimport EventType from '../events/EventType.js';\nimport Control from './Control.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {string} [className='ol-zoom'] CSS class name.\n * @property {string} [zoomInClassName=className + '-in'] CSS class name for the zoom-in button.\n * @property {string} [zoomOutClassName=className + '-out'] CSS class name for the zoom-out button.\n * @property {string|HTMLElement} [zoomInLabel='+'] Text label to use for the zoom-in\n * button. Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string|HTMLElement} [zoomOutLabel='–'] Text label to use for the zoom-out button.\n * Instead of text, also an element (e.g. a `span` element) can be used.\n * @property {string} [zoomInTipLabel='Zoom in'] Text label to use for the button tip.\n * @property {string} [zoomOutTipLabel='Zoom out'] Text label to use for the button tip.\n * @property {number} [delta=1] The zoom delta applied on each click.\n * @property {HTMLElement|string} [target] Specify a target if you want the control to be\n * rendered outside of the map's viewport.\n */\n\n/**\n * @classdesc\n * A control with 2 buttons, one for zoom in and one for zoom out.\n * This control is one of the default controls of a map. To style this control\n * use css selectors `.ol-zoom-in` and `.ol-zoom-out`.\n *\n * @api\n */\nclass Zoom extends Control {\n  /**\n   * @param {Options} [options] Zoom options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      element: document.createElement('div'),\n      target: options.target,\n    });\n\n    const className =\n      options.className !== undefined ? options.className : 'ol-zoom';\n\n    const delta = options.delta !== undefined ? options.delta : 1;\n\n    const zoomInClassName =\n      options.zoomInClassName !== undefined\n        ? options.zoomInClassName\n        : className + '-in';\n\n    const zoomOutClassName =\n      options.zoomOutClassName !== undefined\n        ? options.zoomOutClassName\n        : className + '-out';\n\n    const zoomInLabel =\n      options.zoomInLabel !== undefined ? options.zoomInLabel : '+';\n    const zoomOutLabel =\n      options.zoomOutLabel !== undefined ? options.zoomOutLabel : '\\u2013';\n\n    const zoomInTipLabel =\n      options.zoomInTipLabel !== undefined ? options.zoomInTipLabel : 'Zoom in';\n    const zoomOutTipLabel =\n      options.zoomOutTipLabel !== undefined\n        ? options.zoomOutTipLabel\n        : 'Zoom out';\n\n    const inElement = document.createElement('button');\n    inElement.className = zoomInClassName;\n    inElement.setAttribute('type', 'button');\n    inElement.title = zoomInTipLabel;\n    inElement.appendChild(\n      typeof zoomInLabel === 'string'\n        ? document.createTextNode(zoomInLabel)\n        : zoomInLabel,\n    );\n\n    inElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, delta),\n      false,\n    );\n\n    const outElement = document.createElement('button');\n    outElement.className = zoomOutClassName;\n    outElement.setAttribute('type', 'button');\n    outElement.title = zoomOutTipLabel;\n    outElement.appendChild(\n      typeof zoomOutLabel === 'string'\n        ? document.createTextNode(zoomOutLabel)\n        : zoomOutLabel,\n    );\n\n    outElement.addEventListener(\n      EventType.CLICK,\n      this.handleClick_.bind(this, -delta),\n      false,\n    );\n\n    const cssClasses =\n      className + ' ' + CLASS_UNSELECTABLE + ' ' + CLASS_CONTROL;\n    const element = this.element;\n    element.className = cssClasses;\n    element.appendChild(inElement);\n    element.appendChild(outElement);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @param {MouseEvent} event The event to handle\n   * @private\n   */\n  handleClick_(delta, event) {\n    event.preventDefault();\n    this.zoomByDelta_(delta);\n  }\n\n  /**\n   * @param {number} delta Zoom delta.\n   * @private\n   */\n  zoomByDelta_(delta) {\n    const map = this.getMap();\n    const view = map.getView();\n    if (!view) {\n      // the map does not have a view, so we can't act\n      // upon it\n      return;\n    }\n    const currentZoom = view.getZoom();\n    if (currentZoom !== undefined) {\n      const newZoom = view.getConstrainedZoom(currentZoom + delta);\n      if (this.duration_ > 0) {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.animate({\n          zoom: newZoom,\n          duration: this.duration_,\n          easing: easeOut,\n        });\n      } else {\n        view.setZoom(newZoom);\n      }\n    }\n  }\n}\n\nexport default Zoom;\n","/**\n * @module ol/control/defaults\n */\nimport Collection from '../Collection.js';\nimport Attribution from './Attribution.js';\nimport Rotate from './Rotate.js';\nimport Zoom from './Zoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [attribution=true] Include\n * {@link module:ol/control/Attribution~Attribution}.\n * @property {import(\"./Attribution.js\").Options} [attributionOptions]\n * Options for {@link module:ol/control/Attribution~Attribution}.\n * @property {boolean} [rotate=true] Include\n * {@link module:ol/control/Rotate~Rotate}.\n * @property {import(\"./Rotate.js\").Options} [rotateOptions] Options\n * for {@link module:ol/control/Rotate~Rotate}.\n * @property {boolean} [zoom] Include {@link module:ol/control/Zoom~Zoom}.\n * @property {import(\"./Zoom.js\").Options} [zoomOptions] Options for\n * {@link module:ol/control/Zoom~Zoom}.\n */\n\n/**\n * Set of controls included in maps by default. Unless configured otherwise,\n * this returns a collection containing an instance of each of the following\n * controls:\n * {@link module:ol/control/Zoom~Zoom}\n * {@link module:ol/control/Rotate~Rotate}\n * {@link module:ol/control/Attribution~Attribution}\n *\n * @param {DefaultsOptions} [options] Options for the default controls.\n * @return {Collection<import(\"./Control.js\").default>} A collection of controls\n * to be used with the {@link module:ol/Map~Map} constructor's `controls` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Control.js\").default>} */\n  const controls = new Collection();\n\n  const zoomControl = options.zoom !== undefined ? options.zoom : true;\n  if (zoomControl) {\n    controls.push(new Zoom(options.zoomOptions));\n  }\n\n  const rotateControl = options.rotate !== undefined ? options.rotate : true;\n  if (rotateControl) {\n    controls.push(new Rotate(options.rotateOptions));\n  }\n\n  const attributionControl =\n    options.attribution !== undefined ? options.attribution : true;\n  if (attributionControl) {\n    controls.push(new Attribution(options.attributionOptions));\n  }\n\n  return controls;\n}\n","/**\n * @module ol/Kinetic\n */\n\n/**\n * @classdesc\n * Implementation of inertial deceleration for map movement.\n *\n * @api\n */\nclass Kinetic {\n  /**\n   * @param {number} decay Rate of decay (must be negative).\n   * @param {number} minVelocity Minimum velocity (pixels/millisecond).\n   * @param {number} delay Delay to consider to calculate the kinetic\n   *     initial values (milliseconds).\n   */\n  constructor(decay, minVelocity, delay) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.decay_ = decay;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.minVelocity_ = minVelocity;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delay_ = delay;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.points_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  begin() {\n    this.points_.length = 0;\n    this.angle_ = 0;\n    this.initialVelocity_ = 0;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   */\n  update(x, y) {\n    this.points_.push(x, y, Date.now());\n  }\n\n  /**\n   * @return {boolean} Whether we should do kinetic animation.\n   */\n  end() {\n    if (this.points_.length < 6) {\n      // at least 2 points are required (i.e. there must be at least 6 elements\n      // in the array)\n      return false;\n    }\n    const delay = Date.now() - this.delay_;\n    const lastIndex = this.points_.length - 3;\n    if (this.points_[lastIndex + 2] < delay) {\n      // the last tracked point is too old, which means that the user stopped\n      // panning before releasing the map\n      return false;\n    }\n\n    // get the first point which still falls into the delay time\n    let firstIndex = lastIndex - 3;\n    while (firstIndex > 0 && this.points_[firstIndex + 2] > delay) {\n      firstIndex -= 3;\n    }\n\n    const duration = this.points_[lastIndex + 2] - this.points_[firstIndex + 2];\n    // we don't want a duration of 0 (divide by zero)\n    // we also make sure the user panned for a duration of at least one frame\n    // (1/60s) to compute sane displacement values\n    if (duration < 1000 / 60) {\n      return false;\n    }\n\n    const dx = this.points_[lastIndex] - this.points_[firstIndex];\n    const dy = this.points_[lastIndex + 1] - this.points_[firstIndex + 1];\n    this.angle_ = Math.atan2(dy, dx);\n    this.initialVelocity_ = Math.sqrt(dx * dx + dy * dy) / duration;\n    return this.initialVelocity_ > this.minVelocity_;\n  }\n\n  /**\n   * @return {number} Total distance travelled (pixels).\n   */\n  getDistance() {\n    return (this.minVelocity_ - this.initialVelocity_) / this.decay_;\n  }\n\n  /**\n   * @return {number} Angle of the kinetic panning animation (radians).\n   */\n  getAngle() {\n    return this.angle_;\n  }\n}\n\nexport default Kinetic;\n","/**\n * @module ol/interaction/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  ACTIVE: 'active',\n};\n","/**\n * @module ol/interaction/Interaction\n */\nimport BaseObject from '../Object.js';\nimport {easeOut, linear} from '../easing.js';\nimport InteractionProperty from './Property.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active', Return>} InteractionOnSignature\n */\n\n/**\n * Object literal with config options for interactions.\n * @typedef {Object} InteractionOptions\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. If the function returns a falsy value, propagation of\n * the event to other interactions in the map's interactions chain will be\n * prevented (this includes functions with no explicit return). The interactions\n * are traversed in reverse order of the interactions collection of the map.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * User actions that change the state of the map. Some are similar to controls,\n * but are not associated with a DOM element.\n * For example, {@link module:ol/interaction/KeyboardZoom~KeyboardZoom} is\n * functionally the same as {@link module:ol/control/Zoom~Zoom}, but triggered\n * by a keyboard event not a button element event.\n * Although interactions do not have a DOM element, some of them do render\n * vectors and so are visible on the screen.\n * @api\n */\nclass Interaction extends BaseObject {\n  /**\n   * @param {InteractionOptions} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {InteractionOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {InteractionOnSignature<void>}\n     */\n    this.un;\n\n    if (options && options.handleEvent) {\n      this.handleEvent = options.handleEvent;\n    }\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    this.setActive(true);\n  }\n\n  /**\n   * Return whether the interaction is currently active.\n   * @return {boolean} `true` if the interaction is active, `false` otherwise.\n   * @observable\n   * @api\n   */\n  getActive() {\n    return /** @type {boolean} */ (this.get(InteractionProperty.ACTIVE));\n  }\n\n  /**\n   * Get the map associated with this interaction.\n   * @return {import(\"../Map.js\").default|null} Map.\n   * @api\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event}.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   */\n  handleEvent(mapBrowserEvent) {\n    return true;\n  }\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   */\n  setActive(active) {\n    this.set(InteractionProperty.ACTIVE, active);\n  }\n\n  /**\n   * Remove the interaction from its current map and attach it to the new map.\n   * Subclasses may set up event handlers to get notified about changes to\n   * the map here.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    this.map_ = map;\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {import(\"../coordinate.js\").Coordinate} delta Delta.\n * @param {number} [duration] Duration.\n */\nexport function pan(view, delta, duration) {\n  const currentCenter = view.getCenterInternal();\n  if (currentCenter) {\n    const center = [currentCenter[0] + delta[0], currentCenter[1] + delta[1]];\n    view.animateInternal({\n      duration: duration !== undefined ? duration : 250,\n      easing: linear,\n      center: view.getConstrainedCenter(center),\n    });\n  }\n}\n\n/**\n * @param {import(\"../View.js\").default} view View.\n * @param {number} delta Delta from previous zoom level.\n * @param {import(\"../coordinate.js\").Coordinate} [anchor] Anchor coordinate in the user projection.\n * @param {number} [duration] Duration.\n */\nexport function zoomByDelta(view, delta, anchor, duration) {\n  const currentZoom = view.getZoom();\n\n  if (currentZoom === undefined) {\n    return;\n  }\n\n  const newZoom = view.getConstrainedZoom(currentZoom + delta);\n  const newResolution = view.getResolutionForZoom(newZoom);\n\n  if (view.getAnimating()) {\n    view.cancelAnimations();\n  }\n  view.animate({\n    resolution: newResolution,\n    anchor: anchor,\n    duration: duration !== undefined ? duration : 250,\n    easing: easeOut,\n  });\n}\n\nexport default Interaction;\n","/**\n * @module ol/interaction/DoubleClickZoom\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [delta=1] The zoom delta applied on each double click.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom by double-clicking on the map.\n * @api\n */\nclass DoubleClickZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a\n   * doubleclick) and eventually zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == MapBrowserEventType.DBLCLICK) {\n      const browserEvent = /** @type {MouseEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const map = mapBrowserEvent.map;\n      const anchor = mapBrowserEvent.coordinate;\n      const delta = browserEvent.shiftKey ? -this.delta_ : this.delta_;\n      const view = map.getView();\n      zoomByDelta(view, delta, anchor, this.duration_);\n      browserEvent.preventDefault();\n      stopEvent = true;\n    }\n    return !stopEvent;\n  }\n}\n\nexport default DoubleClickZoom;\n","/**\n * @module ol/events/condition\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport {FALSE, TRUE} from '../functions.js';\nimport {MAC, WEBKIT} from '../has.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * `{boolean}`. If the condition is met, true should be returned.\n *\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default): boolean} Condition\n */\n\n/**\n * Creates a condition function that passes when all provided conditions pass.\n * @param {...Condition} var_args Conditions to check.\n * @return {Condition} Condition function.\n */\nexport function all(var_args) {\n  const conditions = arguments;\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @return {boolean} All conditions passed.\n   */\n  return function (event) {\n    let pass = true;\n    for (let i = 0, ii = conditions.length; i < ii; ++i) {\n      pass = pass && conditions[i](event);\n      if (!pass) {\n        break;\n      }\n    }\n    return pass;\n  };\n}\n\n/**\n * Return `true` if only the alt-key is pressed, `false` otherwise (e.g. when\n * additionally the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt key is pressed.\n * @api\n */\nexport const altKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the alt-key and shift-key is pressed, `false` otherwise\n * (e.g. when additionally the platform-modifier-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the alt and shift keys are pressed.\n * @api\n */\nexport const altShiftKeysOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the map has the focus. This condition requires a map target\n * element with a `tabindex` attribute, e.g. `<div id=\"map\" tabindex=\"1\">`.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map has the focus.\n * @api\n */\nexport const focus = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const activeElement = event.map.getOwnerDocument().activeElement;\n\n  return rootNode instanceof ShadowRoot\n    ? rootNode.host.contains(activeElement)\n    : targetElement.contains(activeElement);\n};\n\n/**\n * Return `true` if the map has the focus or no 'tabindex' attribute set.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} event Map browser event.\n * @return {boolean} The map container has the focus or no 'tabindex' attribute.\n */\nexport const focusWithTabindex = function (event) {\n  const targetElement = event.map.getTargetElement();\n  const rootNode = targetElement.getRootNode();\n  const tabIndexCandidate =\n    rootNode instanceof ShadowRoot ? rootNode.host : targetElement;\n\n  return tabIndexCandidate.hasAttribute('tabindex') ? focus(event) : true;\n};\n\n/**\n * Return always true.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True.\n * @api\n */\nexport const always = TRUE;\n\n/**\n * Return `true` if the event is a `click` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `click` event.\n * @api\n */\nexport const click = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.CLICK;\n};\n\n/**\n * Return `true` if the event has an \"action\"-producing mouse button.\n *\n * By definition, this includes left-click on windows/linux, and left-click\n * without the ctrl key on Macs.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} The result.\n */\nexport const mouseActionButton = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in originalEvent &&\n    originalEvent.button == 0 &&\n    !(WEBKIT && MAC && originalEvent.ctrlKey)\n  );\n};\n\n/**\n * Return always false.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} False.\n * @api\n */\nexport const never = FALSE;\n\n/**\n * Return `true` if the browser event is a `pointermove` event, `false`\n * otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the browser event is a `pointermove` event.\n * @api\n */\nexport const pointerMove = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == 'pointermove';\n};\n\n/**\n * Return `true` if the event is a map `singleclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `singleclick` event.\n * @api\n */\nexport const singleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.SINGLECLICK;\n};\n\n/**\n * Return `true` if the event is a map `dblclick` event, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event is a map `dblclick` event.\n * @api\n */\nexport const doubleClick = function (mapBrowserEvent) {\n  return mapBrowserEvent.type == MapBrowserEventType.DBLCLICK;\n};\n\n/**\n * Return `true` if no modifier key (alt-, shift- or platform-modifier-key) is\n * pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if there no modifier keys are pressed.\n * @api\n */\nexport const noModifierKeys = function (mapBrowserEvent) {\n  const originalEvent = /** @type {KeyboardEvent|MouseEvent|TouchEvent} */ (\n    mapBrowserEvent.originalEvent\n  );\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if only the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed, `false` otherwise (e.g. when additionally\n * the shift-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    (MAC ? originalEvent.metaKey : originalEvent.ctrlKey) &&\n    !originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the platform-modifier-key (the meta-key on Mac,\n * ctrl-key otherwise) is pressed.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the platform modifier key is pressed.\n * @api\n */\nexport const platformModifierKey = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return MAC ? originalEvent.metaKey : originalEvent.ctrlKey;\n};\n\n/**\n * Return `true` if only the shift-key is pressed, `false` otherwise (e.g. when\n * additionally the alt-key is pressed).\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if only the shift key is pressed.\n * @api\n */\nexport const shiftKeyOnly = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  return (\n    !originalEvent.altKey &&\n    !(originalEvent.metaKey || originalEvent.ctrlKey) &&\n    originalEvent.shiftKey\n  );\n};\n\n/**\n * Return `true` if the target element is not editable, i.e. not an `input`,\n * `select`, or `textarea` element and no `contenteditable` attribute is\n * set or inherited, `false` otherwise.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True only if the target element is not editable.\n * @api\n */\nexport const targetNotEditable = function (mapBrowserEvent) {\n  const originalEvent = mapBrowserEvent.originalEvent;\n  const tagName = /** @type {Element} */ (originalEvent.target).tagName;\n  return (\n    tagName !== 'INPUT' &&\n    tagName !== 'SELECT' &&\n    tagName !== 'TEXTAREA' &&\n    // `isContentEditable` is only available on `HTMLElement`, but it may also be a\n    // different type like `SVGElement`.\n    // @ts-ignore\n    !originalEvent.target.isContentEditable\n  );\n};\n\n/**\n * Return `true` if the event originates from a mouse device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a mouse device.\n * @api\n */\nexport const mouseOnly = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvent && pointerEvent.pointerType == 'mouse';\n};\n\n/**\n * Return `true` if the event originates from a touchable device.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a touchable device.\n * @api\n */\nexport const touchOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'touch';\n};\n\n/**\n * Return `true` if the event originates from a digital pen.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a digital pen.\n * @api\n */\nexport const penOnly = function (mapBrowserEvent) {\n  const pointerEvt = mapBrowserEvent.originalEvent;\n  // see https://www.w3.org/TR/pointerevents/#widl-PointerEvent-pointerType\n  return 'pointerId' in pointerEvt && pointerEvt.pointerType === 'pen';\n};\n\n/**\n * Return `true` if the event originates from a primary pointer in\n * contact with the surface or if the left mouse button is pressed.\n * See https://www.w3.org/TR/pointerevents/#button-states.\n *\n * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n * @return {boolean} True if the event originates from a primary pointer.\n * @api\n */\nexport const primaryAction = function (mapBrowserEvent) {\n  const pointerEvent = mapBrowserEvent.originalEvent;\n  return (\n    'pointerId' in pointerEvent &&\n    pointerEvent.isPrimary &&\n    pointerEvent.button === 0\n  );\n};\n","/**\n * @module ol/interaction/Pointer\n */\nimport MapBrowserEventType from '../MapBrowserEventType.js';\nimport Interaction from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleDownEvent]\n * Function handling \"down\" events. If the function returns `true` then a drag\n * sequence is started.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleDragEvent]\n * Function handling \"drag\" events. This function is called on \"move\" events\n * during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleEvent]\n * Method called by the map to notify the interaction that a browser event was\n * dispatched to the map. The function may return `false` to prevent the\n * propagation of the event to other interactions in the map's interactions\n * chain.\n * @property {function(import(\"../MapBrowserEvent.js\").default):void} [handleMoveEvent]\n * Function handling \"move\" events. This function is called on \"move\" events.\n * This functions is also called during a drag sequence, so during a drag\n * sequence both the `handleDragEvent` function and this function are called.\n * If `handleDownEvent` is defined and it returns true this function will not\n * be called during a drag sequence.\n * @property {function(import(\"../MapBrowserEvent.js\").default):boolean} [handleUpEvent]\n *  Function handling \"up\" events. If the function returns `false` then the\n * current drag sequence is stopped.\n * @property {function(boolean):boolean} [stopDown]\n * Should the down event be propagated to other interactions, or should be\n * stopped?\n */\n\n/**\n * @classdesc\n * Base class that calls user-defined functions on `down`, `move` and `up`\n * events. This class also manages \"drag sequences\".\n *\n * When the `handleDownEvent` user function returns `true` a drag sequence is\n * started. During a drag sequence the `handleDragEvent` user function is\n * called on `move` events. The drag sequence ends when the `handleUpEvent`\n * user function is called and returns `false`.\n * @api\n */\nclass PointerInteraction extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    if (options.handleDownEvent) {\n      this.handleDownEvent = options.handleDownEvent;\n    }\n\n    if (options.handleDragEvent) {\n      this.handleDragEvent = options.handleDragEvent;\n    }\n\n    if (options.handleMoveEvent) {\n      this.handleMoveEvent = options.handleMoveEvent;\n    }\n\n    if (options.handleUpEvent) {\n      this.handleUpEvent = options.handleUpEvent;\n    }\n\n    if (options.stopDown) {\n      this.stopDown = options.stopDown;\n    }\n\n    /**\n     * @type {boolean}\n     * @protected\n     */\n    this.handlingDownUpSequence = false;\n\n    /**\n     * @type {Array<PointerEvent>}\n     * @protected\n     */\n    this.targetPointers = [];\n  }\n\n  /**\n   * Returns the current number of pointers involved in the interaction,\n   * e.g. `2` when two fingers are used.\n   * @return {number} The number of pointers.\n   * @api\n   */\n  getPointerCount() {\n    return this.targetPointers.length;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleDownEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleDragEvent(mapBrowserEvent) {}\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} and may call into\n   * other functions, if event sequences like e.g. 'drag' or 'down-up' etc. are\n   * detected.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @api\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!mapBrowserEvent.originalEvent) {\n      return true;\n    }\n\n    let stopEvent = false;\n    this.updateTrackedPointers_(mapBrowserEvent);\n    if (this.handlingDownUpSequence) {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDRAG) {\n        this.handleDragEvent(mapBrowserEvent);\n        // prevent page scrolling during dragging\n        mapBrowserEvent.originalEvent.preventDefault();\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERUP) {\n        const handledUp = this.handleUpEvent(mapBrowserEvent);\n        this.handlingDownUpSequence =\n          handledUp && this.targetPointers.length > 0;\n      }\n    } else {\n      if (mapBrowserEvent.type == MapBrowserEventType.POINTERDOWN) {\n        const handled = this.handleDownEvent(mapBrowserEvent);\n        this.handlingDownUpSequence = handled;\n        stopEvent = this.stopDown(handled);\n      } else if (mapBrowserEvent.type == MapBrowserEventType.POINTERMOVE) {\n        this.handleMoveEvent(mapBrowserEvent);\n      }\n    }\n    return !stopEvent;\n  }\n\n  /**\n   * Handle pointer move events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @protected\n   */\n  handleMoveEvent(mapBrowserEvent) {}\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @protected\n   */\n  handleUpEvent(mapBrowserEvent) {\n    return false;\n  }\n\n  /**\n   * This function is used to determine if \"down\" events should be propagated\n   * to other interactions or should be stopped.\n   * @param {boolean} handled Was the event handled by the interaction?\n   * @return {boolean} Should the `down` event be stopped?\n   */\n  stopDown(handled) {\n    return handled;\n  }\n\n  /**\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @private\n   */\n  updateTrackedPointers_(mapBrowserEvent) {\n    if (mapBrowserEvent.activePointers) {\n      this.targetPointers = mapBrowserEvent.activePointers;\n    }\n  }\n}\n\n/**\n * @param {Array<PointerEvent>} pointerEvents List of events.\n * @return {{clientX: number, clientY: number}} Centroid pixel.\n */\nexport function centroid(pointerEvents) {\n  const length = pointerEvents.length;\n  let clientX = 0;\n  let clientY = 0;\n  for (let i = 0; i < length; i++) {\n    clientX += pointerEvents[i].clientX;\n    clientY += pointerEvents[i].clientY;\n  }\n  return {clientX: clientX / length, clientY: clientY / length};\n}\n\nexport default PointerInteraction;\n","/**\n * @module ol/interaction/DragPan\n */\nimport {\n  rotate as rotateCoordinate,\n  scale as scaleCoordinate,\n} from '../coordinate.js';\nimport {easeOut} from '../easing.js';\nimport {\n  all,\n  focusWithTabindex,\n  noModifierKeys,\n  primaryAction,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.noModifierKeys} and {@link module:ol/events/condition.primaryAction}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {import(\"../Kinetic.js\").default} [kinetic] Kinetic inertia to apply to the pan.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map by dragging the map.\n * @api\n */\nclass DragPan extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super({\n      stopDown: FALSE,\n    });\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../Kinetic.js\").default|undefined}\n     */\n    this.kinetic_ = options.kinetic;\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.lastCentroid = null;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.lastPointersCount_;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.panning_ = false;\n\n    const condition = options.condition\n      ? options.condition\n      : all(noModifierKeys, primaryAction);\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.noKinetic_ = false;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    if (!this.panning_) {\n      this.panning_ = true;\n      map.getView().beginInteraction();\n    }\n    const targetPointers = this.targetPointers;\n    const centroid = map.getEventPixel(centroidFromPointers(targetPointers));\n    if (targetPointers.length == this.lastPointersCount_) {\n      if (this.kinetic_) {\n        this.kinetic_.update(centroid[0], centroid[1]);\n      }\n      if (this.lastCentroid) {\n        const delta = [\n          this.lastCentroid[0] - centroid[0],\n          centroid[1] - this.lastCentroid[1],\n        ];\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        scaleCoordinate(delta, view.getResolution());\n        rotateCoordinate(delta, view.getRotation());\n        view.adjustCenterInternal(delta);\n      }\n    } else if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger down, tiny drag, second finger down\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = centroid;\n    this.lastPointersCount_ = targetPointers.length;\n    mapBrowserEvent.originalEvent.preventDefault();\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (this.targetPointers.length === 0) {\n      if (!this.noKinetic_ && this.kinetic_ && this.kinetic_.end()) {\n        const distance = this.kinetic_.getDistance();\n        const angle = this.kinetic_.getAngle();\n        const center = view.getCenterInternal();\n        const centerpx = map.getPixelFromCoordinateInternal(center);\n        const dest = map.getCoordinateFromPixelInternal([\n          centerpx[0] - distance * Math.cos(angle),\n          centerpx[1] - distance * Math.sin(angle),\n        ]);\n        view.animateInternal({\n          center: view.getConstrainedCenter(dest),\n          duration: 500,\n          easing: easeOut,\n        });\n      }\n      if (this.panning_) {\n        this.panning_ = false;\n        view.endInteraction();\n      }\n      return false;\n    }\n    if (this.kinetic_) {\n      // reset so we don't overestimate the kinetic energy after\n      // after one finger up, tiny drag, second finger up\n      this.kinetic_.begin();\n    }\n    this.lastCentroid = null;\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length > 0 && this.condition_(mapBrowserEvent)) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      this.lastCentroid = null;\n      // stop any current animation\n      if (view.getAnimating()) {\n        view.cancelAnimations();\n      }\n      if (this.kinetic_) {\n        this.kinetic_.begin();\n      }\n      // No kinetic as soon as more than one pointer on the screen is\n      // detected. This is to prevent nasty pans after pinch.\n      this.noKinetic_ = this.targetPointers.length > 1;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragPan;\n","/**\n * @module ol/interaction/DragRotate\n */\nimport {\n  altShiftKeysOnly,\n  mouseActionButton,\n  mouseOnly,\n} from '../events/condition.js';\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a\n * {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.altShiftKeysOnly}.\n * @property {number} [duration=250] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the alt and shift keys are held down.\n *\n * This interaction is only supported for mouse devices.\n * @api\n */\nclass DragRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      stopDown: FALSE,\n    });\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ? options.condition : altShiftKeysOnly;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n    const size = map.getSize();\n    const offset = mapBrowserEvent.pixel;\n    const theta = Math.atan2(size[1] / 2 - offset[1], offset[0] - size[0] / 2);\n    if (this.lastAngle_ !== undefined) {\n      const delta = theta - this.lastAngle_;\n      view.adjustRotationInternal(-delta);\n    }\n    this.lastAngle_ = theta;\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    view.endInteraction(this.duration_);\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (!mouseOnly(mapBrowserEvent)) {\n      return false;\n    }\n\n    if (\n      mouseActionButton(mapBrowserEvent) &&\n      this.condition_(mapBrowserEvent)\n    ) {\n      const map = mapBrowserEvent.map;\n      map.getView().beginInteraction();\n      this.lastAngle_ = undefined;\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default DragRotate;\n","/**\n * @module ol/render/Box\n */\n\nimport Disposable from '../Disposable.js';\nimport Polygon from '../geom/Polygon.js';\n\nclass RenderBox extends Disposable {\n  /**\n   * @param {string} className CSS class name.\n   */\n  constructor(className) {\n    super();\n\n    /**\n     * @type {import(\"../geom/Polygon.js\").default}\n     * @private\n     */\n    this.geometry_ = null;\n\n    /**\n     * @type {HTMLDivElement}\n     * @private\n     */\n    this.element_ = document.createElement('div');\n    this.element_.style.position = 'absolute';\n    this.element_.style.pointerEvents = 'auto';\n    this.element_.className = 'ol-box ' + className;\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default|null}\n     */\n    this.map_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../pixel.js\").Pixel}\n     */\n    this.endPixel_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.setMap(null);\n  }\n\n  /**\n   * @private\n   */\n  render_() {\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const px = 'px';\n    const style = this.element_.style;\n    style.left = Math.min(startPixel[0], endPixel[0]) + px;\n    style.top = Math.min(startPixel[1], endPixel[1]) + px;\n    style.width = Math.abs(endPixel[0] - startPixel[0]) + px;\n    style.height = Math.abs(endPixel[1] - startPixel[1]) + px;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMap(map) {\n    if (this.map_) {\n      this.map_.getOverlayContainer().removeChild(this.element_);\n      const style = this.element_.style;\n      style.left = 'inherit';\n      style.top = 'inherit';\n      style.width = 'inherit';\n      style.height = 'inherit';\n    }\n    this.map_ = map;\n    if (this.map_) {\n      this.map_.getOverlayContainer().appendChild(this.element_);\n    }\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} startPixel Start pixel.\n   * @param {import(\"../pixel.js\").Pixel} endPixel End pixel.\n   */\n  setPixels(startPixel, endPixel) {\n    this.startPixel_ = startPixel;\n    this.endPixel_ = endPixel;\n    this.createOrUpdateGeometry();\n    this.render_();\n  }\n\n  /**\n   * Creates or updates the cached geometry.\n   */\n  createOrUpdateGeometry() {\n    if (!this.map_) {\n      return;\n    }\n\n    const startPixel = this.startPixel_;\n    const endPixel = this.endPixel_;\n    const pixels = [\n      startPixel,\n      [startPixel[0], endPixel[1]],\n      endPixel,\n      [endPixel[0], startPixel[1]],\n    ];\n    const coordinates = pixels.map(\n      this.map_.getCoordinateFromPixelInternal,\n      this.map_,\n    );\n    // close the polygon\n    coordinates[4] = coordinates[0].slice();\n    if (!this.geometry_) {\n      this.geometry_ = new Polygon([coordinates]);\n    } else {\n      this.geometry_.setCoordinates([coordinates]);\n    }\n  }\n\n  /**\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n}\n\nexport default RenderBox;\n","/**\n * @module ol/interaction/DragBox\n */\n// FIXME draw drag box\nimport Event from '../events/Event.js';\nimport {mouseActionButton} from '../events/condition.js';\nimport RenderBox from '../render/Box.js';\nimport PointerInteraction from './Pointer.js';\n\n/**\n * A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s and returns a `{boolean}`. If the condition is met,\n * true should be returned.\n * @typedef {function(this: ?, import(\"../MapBrowserEvent.js\").default, import(\"../pixel.js\").Pixel, import(\"../pixel.js\").Pixel):boolean} EndCondition\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragbox'] CSS class name for styling the box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a boolean\n * to indicate whether that event should be handled.\n * Default is {@link ol/events/condition~mouseActionButton}.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the default\n * `boxEndCondition` function.\n * @property {EndCondition} [boxEndCondition] A function that takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and two\n * {@link module:ol/pixel~Pixel}s to indicate whether a `boxend` event should be fired.\n * Default is `true` if the area of the box is bigger than the `minArea` option.\n * @property {function(this:DragBox, import(\"../MapBrowserEvent.js\").default):void} [onBoxEnd] Code to execute just\n * before `boxend` is fired.\n */\n\n/**\n * @enum {string}\n */\nconst DragBoxEventType = {\n  /**\n   * Triggered upon drag box start.\n   * @event DragBoxEvent#boxstart\n   * @api\n   */\n  BOXSTART: 'boxstart',\n\n  /**\n   * Triggered on drag when box is active.\n   * @event DragBoxEvent#boxdrag\n   * @api\n   */\n  BOXDRAG: 'boxdrag',\n\n  /**\n   * Triggered upon drag box end.\n   * @event DragBoxEvent#boxend\n   * @api\n   */\n  BOXEND: 'boxend',\n\n  /**\n   * Triggered upon drag box canceled.\n   * @event DragBoxEvent#boxcancel\n   * @api\n   */\n  BOXCANCEL: 'boxcancel',\n};\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/interaction/DragBox~DragBox} instances are instances of\n * this type.\n */\nexport class DragBoxEvent extends Event {\n  /**\n   * @param {string} type The event type.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate The event coordinate.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Originating event.\n   */\n  constructor(type, coordinate, mapBrowserEvent) {\n    super(type);\n\n    /**\n     * The coordinate of the drag event.\n     * @const\n     * @type {import(\"../coordinate.js\").Coordinate}\n     * @api\n     */\n    this.coordinate = coordinate;\n\n    /**\n     * @const\n     * @type {import(\"../MapBrowserEvent.js\").default}\n     * @api\n     */\n    this.mapBrowserEvent = mapBrowserEvent;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types|\n *     'change:active', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<'boxcancel'|'boxdrag'|'boxend'|'boxstart', DragBoxEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     'change:active'|'boxcancel'|'boxdrag'|'boxend', Return>} DragBoxOnSignature\n */\n\n/**\n * @classdesc\n * Allows the user to draw a vector box by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when the shift or other key is held down. This is used, for example,\n * for zooming to a specific area of the map\n * (see {@link module:ol/interaction/DragZoom~DragZoom} and\n * {@link module:ol/interaction/DragRotateAndZoom~DragRotateAndZoom}).\n *\n * @fires DragBoxEvent\n * @api\n */\nclass DragBox extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {DragBoxOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {DragBoxOnSignature<void>}\n     */\n    this.un;\n\n    options = options ?? {};\n\n    /**\n     * @type {import(\"../render/Box.js\").default}\n     * @private\n     */\n    this.box_ = new RenderBox(options.className || 'ol-dragbox');\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.minArea_ = options.minArea ?? 64;\n\n    if (options.onBoxEnd) {\n      this.onBoxEnd = options.onBoxEnd;\n    }\n\n    /**\n     * @type {import(\"../pixel.js\").Pixel}\n     * @private\n     */\n    this.startPixel_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition ?? mouseActionButton;\n\n    /**\n     * @private\n     * @type {EndCondition}\n     */\n    this.boxEndCondition_ =\n      options.boxEndCondition ?? this.defaultBoxEndCondition;\n  }\n\n  /**\n   * The default condition for determining whether the boxend event\n   * should fire.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent The originating MapBrowserEvent\n   *     leading to the box end.\n   * @param {import(\"../pixel.js\").Pixel} startPixel The starting pixel of the box.\n   * @param {import(\"../pixel.js\").Pixel} endPixel The end pixel of the box.\n   * @return {boolean} Whether or not the boxend condition should be fired.\n   */\n  defaultBoxEndCondition(mapBrowserEvent, startPixel, endPixel) {\n    const width = endPixel[0] - startPixel[0];\n    const height = endPixel[1] - startPixel[1];\n    return width * width + height * height >= this.minArea_;\n  }\n\n  /**\n   * Returns geometry of last drawn box.\n   * @return {import(\"../geom/Polygon.js\").default} Geometry.\n   * @api\n   */\n  getGeometry() {\n    return this.box_.getGeometry();\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return;\n    }\n\n    this.box_.setPixels(this.startPixel_, mapBrowserEvent.pixel);\n\n    this.dispatchEvent(\n      new DragBoxEvent(\n        DragBoxEventType.BOXDRAG,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (!this.startPixel_) {\n      return false;\n    }\n\n    const completeBox = this.boxEndCondition_(\n      mapBrowserEvent,\n      this.startPixel_,\n      mapBrowserEvent.pixel,\n    );\n    if (completeBox) {\n      this.onBoxEnd(mapBrowserEvent);\n    }\n    this.dispatchEvent(\n      new DragBoxEvent(\n        completeBox ? DragBoxEventType.BOXEND : DragBoxEventType.BOXCANCEL,\n        mapBrowserEvent.coordinate,\n        mapBrowserEvent,\n      ),\n    );\n\n    this.box_.setMap(null);\n    this.startPixel_ = null;\n\n    return false;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.condition_(mapBrowserEvent)) {\n      this.startPixel_ = mapBrowserEvent.pixel;\n      this.box_.setMap(mapBrowserEvent.map);\n      this.box_.setPixels(this.startPixel_, this.startPixel_);\n      this.dispatchEvent(\n        new DragBoxEvent(\n          DragBoxEventType.BOXSTART,\n          mapBrowserEvent.coordinate,\n          mapBrowserEvent,\n        ),\n      );\n      return true;\n    }\n    return false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   */\n  onBoxEnd(event) {}\n\n  /**\n   * Activate or deactivate the interaction.\n   * @param {boolean} active Active.\n   * @observable\n   * @api\n   * @override\n   */\n  setActive(active) {\n    if (!active) {\n      this.box_.setMap(null);\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setActive(active);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @override\n   */\n  setMap(map) {\n    const oldMap = this.getMap();\n\n    if (oldMap) {\n      this.box_.setMap(null);\n\n      if (this.startPixel_) {\n        this.dispatchEvent(\n          new DragBoxEvent(DragBoxEventType.BOXCANCEL, this.startPixel_, null),\n        );\n        this.startPixel_ = null;\n      }\n    }\n\n    super.setMap(map);\n  }\n}\n\nexport default DragBox;\n","/**\n * @module ol/interaction/DragZoom\n */\nimport {easeOut} from '../easing.js';\nimport {shiftKeyOnly} from '../events/condition.js';\nimport DragBox from './DragBox.js';\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-dragzoom'] CSS class name for styling the\n * box.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled.\n * Default is {@link module:ol/events/condition.shiftKeyOnly}.\n * @property {number} [duration=200] Animation duration in milliseconds.\n * @property {boolean} [out=false] Use interaction for zooming out.\n * @property {number} [minArea=64] The minimum area of the box in pixel, this value is used by the parent default\n * `boxEndCondition` function.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by clicking and dragging on the map,\n * normally combined with a {@link module:ol/events/condition} that limits\n * it to when a key, shift by default, is held down.\n *\n * To change the style of the box, use CSS and the `.ol-dragzoom` selector, or\n * your custom one configured with `className`.\n * @api\n */\nclass DragZoom extends DragBox {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const condition = options.condition ? options.condition : shiftKeyOnly;\n\n    super({\n      condition: condition,\n      className: options.className || 'ol-dragzoom',\n      minArea: options.minArea,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 200;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.out_ = options.out !== undefined ? options.out : false;\n  }\n\n  /**\n   * Function to execute just before `onboxend` is fired\n   * @param {import(\"../MapBrowserEvent.js\").default} event Event.\n   * @override\n   */\n  onBoxEnd(event) {\n    const map = this.getMap();\n    const view = /** @type {!import(\"../View.js\").default} */ (map.getView());\n    let geometry = this.getGeometry();\n\n    if (this.out_) {\n      const rotatedExtent = view.rotatedExtentForGeometry(geometry);\n      const resolution = view.getResolutionForExtentInternal(rotatedExtent);\n      const factor = view.getResolution() / resolution;\n      geometry = geometry.clone();\n      geometry.scale(factor * factor);\n    }\n\n    view.fitInternal(geometry, {\n      duration: this.duration_,\n      easing: easeOut,\n    });\n  }\n}\n\nexport default DragZoom;\n","/**\n * @module ol/events/Key\n */\n\n/**\n * @enum {string}\n * @const\n */\nexport default {\n  LEFT: 'ArrowLeft',\n  UP: 'ArrowUp',\n  RIGHT: 'ArrowRight',\n  DOWN: 'ArrowDown',\n};\n","/**\n * @module ol/interaction/KeyboardPan\n */\nimport {rotate as rotateCoordinate} from '../coordinate.js';\nimport EventType from '../events/EventType.js';\nimport Key from '../events/Key.js';\nimport {noModifierKeys, targetNotEditable} from '../events/condition.js';\nimport Interaction, {pan} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.noModifierKeys} and\n * {@link module:ol/events/condition.targetNotEditable}.\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {number} [pixelDelta=128] The amount of pixels to pan on each key\n * press.\n */\n\n/**\n * @classdesc\n * Allows the user to pan the map using keyboard arrows.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}.\n * @api\n */\nclass KeyboardPan extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /**\n     * @private\n     * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Browser event.\n     * @return {boolean} Combined condition result.\n     */\n    this.defaultCondition_ = function (mapBrowserEvent) {\n      return (\n        noModifierKeys(mapBrowserEvent) && targetNotEditable(mapBrowserEvent)\n      );\n    };\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ =\n      options.condition !== undefined\n        ? options.condition\n        : this.defaultCondition_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelDelta_ =\n      options.pixelDelta !== undefined ? options.pixelDelta : 128;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides the direction to pan to (if an arrow key was\n   * pressed).\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (mapBrowserEvent.type == EventType.KEYDOWN) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (\n        this.condition_(mapBrowserEvent) &&\n        (key == Key.DOWN ||\n          key == Key.LEFT ||\n          key == Key.RIGHT ||\n          key == Key.UP)\n      ) {\n        const map = mapBrowserEvent.map;\n        const view = map.getView();\n        const mapUnitsDelta = view.getResolution() * this.pixelDelta_;\n        let deltaX = 0,\n          deltaY = 0;\n        if (key == Key.DOWN) {\n          deltaY = -mapUnitsDelta;\n        } else if (key == Key.LEFT) {\n          deltaX = -mapUnitsDelta;\n        } else if (key == Key.RIGHT) {\n          deltaX = mapUnitsDelta;\n        } else {\n          deltaY = mapUnitsDelta;\n        }\n        const delta = [deltaX, deltaY];\n        rotateCoordinate(delta, view.getRotation());\n        pan(view, delta, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardPan;\n","/**\n * @module ol/interaction/KeyboardZoom\n */\nimport EventType from '../events/EventType.js';\nimport {platformModifierKey, targetNotEditable} from '../events/condition.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=100] Animation duration in milliseconds.\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. The default condition is\n * that {@link module:ol/events/condition.targetNotEditable} is fulfilled and that\n * the platform modifier key isn't pressed\n * (!{@link module:ol/events/condition.platformModifierKey}).\n * @property {number} [delta=1] The zoom level delta on each key press.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map using keyboard + and -.\n * Note that, although this interaction is by default included in maps,\n * the keys can only be used when browser focus is on the element to which\n * the keyboard events are attached. By default, this is the map div,\n * though you can change this with the `keyboardEventTarget` in\n * {@link module:ol/Map~Map}. `document` never loses focus but, for any other\n * element, focus will have to be on, and returned to, this element if the keys\n * are to function.\n * See also {@link module:ol/interaction/KeyboardPan~KeyboardPan}.\n * @api\n */\nclass KeyboardZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.condition\n      ? options.condition\n      : function (mapBrowserEvent) {\n          return (\n            !platformModifierKey(mapBrowserEvent) &&\n            targetNotEditable(mapBrowserEvent)\n          );\n        };\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.delta_ = options.delta ? options.delta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 100;\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} if it was a\n   * `KeyEvent`, and decides whether to zoom in or out (depending on whether the\n   * key pressed was '+' or '-').\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    let stopEvent = false;\n    if (\n      mapBrowserEvent.type == EventType.KEYDOWN ||\n      mapBrowserEvent.type == EventType.KEYPRESS\n    ) {\n      const keyEvent = /** @type {KeyboardEvent} */ (\n        mapBrowserEvent.originalEvent\n      );\n      const key = keyEvent.key;\n      if (this.condition_(mapBrowserEvent) && (key === '+' || key === '-')) {\n        const map = mapBrowserEvent.map;\n        const delta = key === '+' ? this.delta_ : -this.delta_;\n        const view = map.getView();\n        zoomByDelta(view, delta, undefined, this.duration_);\n        keyEvent.preventDefault();\n        stopEvent = true;\n      }\n    }\n    return !stopEvent;\n  }\n}\n\nexport default KeyboardZoom;\n","/**\n * @module ol/interaction/MouseWheelZoom\n */\nimport EventType from '../events/EventType.js';\nimport {all, always, focusWithTabindex} from '../events/condition.js';\nimport {clamp} from '../math.js';\nimport Interaction, {zoomByDelta} from './Interaction.js';\n\n/**\n * @typedef {'trackpad' | 'wheel'} Mode\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../events/condition.js\").Condition} [condition] A function that\n * takes a {@link module:ol/MapBrowserEvent~MapBrowserEvent} and returns a\n * boolean to indicate whether that event should be handled. Default is\n * {@link module:ol/events/condition.always}.\n * @property {boolean} [onFocusOnly=false] When the map's target has a `tabindex` attribute set,\n * the interaction will only handle events when the map has the focus.\n * @property {number} [maxDelta=1] Maximum mouse wheel delta.\n * @property {number} [duration=250] Animation duration in milliseconds.\n * @property {number} [timeout=80] Mouse wheel timeout duration in milliseconds.\n * @property {boolean} [useAnchor=true] Enable zooming using the mouse's\n * location as the anchor. When set to `false`, zooming in and out will zoom to\n * the center of the screen instead of zooming on the mouse's location.\n * @property {boolean} [constrainResolution=false] If true, the mouse wheel zoom\n * event will always animate to the closest zoom level after an interaction;\n * false means intermediary zoom levels are allowed.\n */\n\n/**\n * Mutliplier for the DOM_DELTA_LINE delta value.\n * @type {number}\n */\nconst DELTA_LINE_MULTIPLIER = 40;\n\n/**\n * Mutliplier for the DOM_DELTA_PAGE delta value.\n * @type {number}\n */\nconst DELTA_PAGE_MULTIPLIER = 300;\n\n/**\n * @classdesc\n * Allows the user to zoom the map by scrolling the mouse wheel.\n * @api\n */\nclass MouseWheelZoom extends Interaction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super(\n      /** @type {import(\"./Interaction.js\").InteractionOptions} */ (options),\n    );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.totalDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastDelta_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = options.maxDelta !== undefined ? options.maxDelta : 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.timeout_ = options.timeout !== undefined ? options.timeout : 80;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.useAnchor_ =\n      options.useAnchor !== undefined ? options.useAnchor : true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.constrainResolution_ =\n      options.constrainResolution !== undefined\n        ? options.constrainResolution\n        : false;\n\n    const condition = options.condition ? options.condition : always;\n\n    /**\n     * @private\n     * @type {import(\"../events/condition.js\").Condition}\n     */\n    this.condition_ = options.onFocusOnly\n      ? all(focusWithTabindex, condition)\n      : condition;\n\n    /**\n     * @private\n     * @type {?import(\"../pixel.js\").Pixel}\n     */\n    this.lastAnchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.startTime_ = undefined;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.timeoutId_;\n\n    /**\n     * @private\n     * @type {Mode|undefined}\n     */\n    this.mode_ = undefined;\n\n    /**\n     * Trackpad events separated by this delay will be considered separate\n     * interactions.\n     * @private\n     * @type {number}\n     */\n    this.trackpadEventGap_ = 400;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.trackpadTimeoutId_;\n\n    /**\n     * The number of delta values per zoom level\n     * @private\n     * @type {number}\n     */\n    this.deltaPerZoom_ = 300;\n  }\n\n  /**\n   * @private\n   */\n  endInteraction_() {\n    this.trackpadTimeoutId_ = undefined;\n    const map = this.getMap();\n    if (!map) {\n      return;\n    }\n    const view = map.getView();\n    view.endInteraction(\n      undefined,\n      this.lastDelta_ ? (this.lastDelta_ > 0 ? 1 : -1) : 0,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n    );\n  }\n\n  /**\n   * Handles the {@link module:ol/MapBrowserEvent~MapBrowserEvent map browser event} (if it was a mousewheel-event) and eventually\n   * zooms the map.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Map browser event.\n   * @return {boolean} `false` to stop event propagation.\n   * @override\n   */\n  handleEvent(mapBrowserEvent) {\n    if (!this.condition_(mapBrowserEvent)) {\n      return true;\n    }\n    const type = mapBrowserEvent.type;\n    if (type !== EventType.WHEEL) {\n      return true;\n    }\n\n    const map = mapBrowserEvent.map;\n    const wheelEvent = /** @type {WheelEvent} */ (\n      mapBrowserEvent.originalEvent\n    );\n    wheelEvent.preventDefault();\n\n    if (this.useAnchor_) {\n      this.lastAnchor_ = mapBrowserEvent.pixel;\n    }\n\n    // Delta normalisation inspired by\n    // https://github.com/mapbox/mapbox-gl-js/blob/001c7b9/js/ui/handler/scroll_zoom.js\n    let delta = wheelEvent.deltaY;\n\n    switch (wheelEvent.deltaMode) {\n      case WheelEvent.DOM_DELTA_LINE:\n        delta *= DELTA_LINE_MULTIPLIER;\n        break;\n      case WheelEvent.DOM_DELTA_PAGE:\n        delta *= DELTA_PAGE_MULTIPLIER;\n        break;\n      default:\n      // pass\n    }\n\n    if (delta === 0) {\n      return false;\n    }\n    this.lastDelta_ = delta;\n\n    const now = Date.now();\n\n    if (this.startTime_ === undefined) {\n      this.startTime_ = now;\n    }\n\n    if (!this.mode_ || now - this.startTime_ > this.trackpadEventGap_) {\n      this.mode_ = Math.abs(delta) < 4 ? 'trackpad' : 'wheel';\n    }\n\n    const view = map.getView();\n    if (\n      this.mode_ === 'trackpad' &&\n      !(view.getConstrainResolution() || this.constrainResolution_)\n    ) {\n      if (this.trackpadTimeoutId_) {\n        clearTimeout(this.trackpadTimeoutId_);\n      } else {\n        if (view.getAnimating()) {\n          view.cancelAnimations();\n        }\n        view.beginInteraction();\n      }\n      this.trackpadTimeoutId_ = setTimeout(\n        this.endInteraction_.bind(this),\n        this.timeout_,\n      );\n      view.adjustZoom(\n        -delta / this.deltaPerZoom_,\n        this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      );\n      this.startTime_ = now;\n      return false;\n    }\n\n    this.totalDelta_ += delta;\n\n    const timeLeft = Math.max(this.timeout_ - (now - this.startTime_), 0);\n\n    clearTimeout(this.timeoutId_);\n    this.timeoutId_ = setTimeout(\n      this.handleWheelZoom_.bind(this, map),\n      timeLeft,\n    );\n\n    return false;\n  }\n\n  /**\n   * @private\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  handleWheelZoom_(map) {\n    const view = map.getView();\n    if (view.getAnimating()) {\n      view.cancelAnimations();\n    }\n    let delta =\n      -clamp(\n        this.totalDelta_,\n        -this.maxDelta_ * this.deltaPerZoom_,\n        this.maxDelta_ * this.deltaPerZoom_,\n      ) / this.deltaPerZoom_;\n    if (view.getConstrainResolution() || this.constrainResolution_) {\n      // view has a zoom constraint, zoom by 1\n      delta = delta ? (delta > 0 ? 1 : -1) : 0;\n    }\n    zoomByDelta(\n      view,\n      delta,\n      this.lastAnchor_ ? map.getCoordinateFromPixel(this.lastAnchor_) : null,\n      this.duration_,\n    );\n\n    this.mode_ = undefined;\n    this.totalDelta_ = 0;\n    this.lastAnchor_ = null;\n    this.startTime_ = undefined;\n    this.timeoutId_ = undefined;\n  }\n\n  /**\n   * Enable or disable using the mouse's location as an anchor when zooming\n   * @param {boolean} useAnchor true to zoom to the mouse's location, false\n   * to zoom to the center of the map\n   * @api\n   */\n  setMouseAnchor(useAnchor) {\n    this.useAnchor_ = useAnchor;\n    if (!useAnchor) {\n      this.lastAnchor_ = null;\n    }\n  }\n}\n\nexport default MouseWheelZoom;\n","/**\n * @module ol/interaction/PinchRotate\n */\nimport {FALSE} from '../functions.js';\nimport {disable} from '../rotationconstraint.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=250] The duration of the animation in\n * milliseconds.\n * @property {number} [threshold=0.3] Minimal angle in radians to start a rotation.\n */\n\n/**\n * @classdesc\n * Allows the user to rotate the map by twisting with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchRotate extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastAngle_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotating_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotationDelta_ = 0.0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.threshold_ = options.threshold !== undefined ? options.threshold : 0.3;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 250;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let rotationDelta = 0.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n\n    // angle between touches\n    const angle = Math.atan2(\n      touch1.clientY - touch0.clientY,\n      touch1.clientX - touch0.clientX,\n    );\n\n    if (this.lastAngle_ !== undefined) {\n      const delta = angle - this.lastAngle_;\n      this.rotationDelta_ += delta;\n      if (!this.rotating_ && Math.abs(this.rotationDelta_) > this.threshold_) {\n        this.rotating_ = true;\n      }\n      rotationDelta = delta;\n    }\n    this.lastAngle_ = angle;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n    if (view.getConstraints().rotation === disable) {\n      return;\n    }\n\n    // rotate anchor point.\n    // FIXME: should be the intersection point between the lines:\n    //     touch0,touch1 and previousTouch0,previousTouch1\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // rotate\n    if (this.rotating_) {\n      map.render();\n      view.adjustRotationInternal(rotationDelta, this.anchor_);\n    }\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      view.endInteraction(this.duration_);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastAngle_ = undefined;\n      this.rotating_ = false;\n      this.rotationDelta_ = 0.0;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchRotate;\n","/**\n * @module ol/interaction/PinchZoom\n */\nimport {FALSE} from '../functions.js';\nimport PointerInteraction, {\n  centroid as centroidFromPointers,\n} from './Pointer.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} [duration=400] Animation duration in milliseconds.\n */\n\n/**\n * @classdesc\n * Allows the user to zoom the map by pinching with two fingers\n * on a touch screen.\n * @api\n */\nclass PinchZoom extends PointerInteraction {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const pointerOptions = /** @type {import(\"./Pointer.js\").Options} */ (\n      options\n    );\n\n    if (!pointerOptions.stopDown) {\n      pointerOptions.stopDown = FALSE;\n    }\n\n    super(pointerOptions);\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate}\n     */\n    this.anchor_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.duration_ = options.duration !== undefined ? options.duration : 400;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lastDistance_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.lastScaleDelta_ = 1;\n  }\n\n  /**\n   * Handle pointer drag events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @override\n   */\n  handleDragEvent(mapBrowserEvent) {\n    let scaleDelta = 1.0;\n\n    const touch0 = this.targetPointers[0];\n    const touch1 = this.targetPointers[1];\n    const dx = touch0.clientX - touch1.clientX;\n    const dy = touch0.clientY - touch1.clientY;\n\n    // distance between touches\n    const distance = Math.sqrt(dx * dx + dy * dy);\n\n    if (this.lastDistance_ !== undefined) {\n      scaleDelta = this.lastDistance_ / distance;\n    }\n    this.lastDistance_ = distance;\n\n    const map = mapBrowserEvent.map;\n    const view = map.getView();\n\n    if (scaleDelta != 1.0) {\n      this.lastScaleDelta_ = scaleDelta;\n    }\n\n    // scale anchor point.\n    this.anchor_ = map.getCoordinateFromPixelInternal(\n      map.getEventPixel(centroidFromPointers(this.targetPointers)),\n    );\n\n    // scale, bypass the resolution constraint\n    map.render();\n    view.adjustResolutionInternal(scaleDelta, this.anchor_);\n  }\n\n  /**\n   * Handle pointer up events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleUpEvent(mapBrowserEvent) {\n    if (this.targetPointers.length < 2) {\n      const map = mapBrowserEvent.map;\n      const view = map.getView();\n      const direction = this.lastScaleDelta_ > 1 ? 1 : -1;\n      view.endInteraction(this.duration_, direction);\n      return false;\n    }\n    return true;\n  }\n\n  /**\n   * Handle pointer down events.\n   * @param {import(\"../MapBrowserEvent.js\").default} mapBrowserEvent Event.\n   * @return {boolean} If the event was consumed.\n   * @override\n   */\n  handleDownEvent(mapBrowserEvent) {\n    if (this.targetPointers.length >= 2) {\n      const map = mapBrowserEvent.map;\n      this.anchor_ = null;\n      this.lastDistance_ = undefined;\n      this.lastScaleDelta_ = 1;\n      if (!this.handlingDownUpSequence) {\n        map.getView().beginInteraction();\n      }\n      return true;\n    }\n    return false;\n  }\n}\n\nexport default PinchZoom;\n","/**\n * @module ol/layer/Property\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  OPACITY: 'opacity',\n  VISIBLE: 'visible',\n  EXTENT: 'extent',\n  Z_INDEX: 'zIndex',\n  MAX_RESOLUTION: 'maxResolution',\n  MIN_RESOLUTION: 'minResolution',\n  MAX_ZOOM: 'maxZoom',\n  MIN_ZOOM: 'minZoom',\n  SOURCE: 'source',\n  MAP: 'map',\n};\n","/**\n * @module ol/layer/Base\n */\nimport BaseObject from '../Object.js';\nimport {assert} from '../asserts.js';\nimport {clamp} from '../math.js';\nimport {abstract} from '../util.js';\nimport LayerProperty from './Property.js';\n\n/**\n * A css color, or a function called with a view resolution returning a css color.\n *\n * @typedef {string|function(number):string} BackgroundColor\n * @api\n */\n\n/**\n * @typedef {import(\"../ObjectEventType\").Types|'change:extent'|'change:maxResolution'|'change:maxZoom'|\n *    'change:minResolution'|'change:minZoom'|'change:opacity'|'change:visible'|'change:zIndex'} BaseLayerObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<BaseLayerObjectEventTypes, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|BaseLayerObjectEventTypes, Return>} BaseLayerOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number | undefined} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Note that with {@link module:ol/layer/Base~BaseLayer} and all its subclasses, any property set in\n * the options is set as a {@link module:ol/Object~BaseObject} property on the layer object, so\n * is observable, and has get/set accessors.\n *\n * @api\n */\nclass BaseLayer extends BaseObject {\n  /**\n   * @param {Options} options Layer options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {BackgroundColor|false}\n     * @private\n     */\n    this.background_ = options.background;\n\n    /**\n     * @type {Object<string, *>}\n     */\n    const properties = Object.assign({}, options);\n    if (typeof options.properties === 'object') {\n      delete properties.properties;\n      Object.assign(properties, options.properties);\n    }\n\n    properties[LayerProperty.OPACITY] =\n      options.opacity !== undefined ? options.opacity : 1;\n    assert(\n      typeof properties[LayerProperty.OPACITY] === 'number',\n      'Layer opacity must be a number',\n    );\n\n    properties[LayerProperty.VISIBLE] =\n      options.visible !== undefined ? options.visible : true;\n    properties[LayerProperty.Z_INDEX] = options.zIndex;\n    properties[LayerProperty.MAX_RESOLUTION] =\n      options.maxResolution !== undefined ? options.maxResolution : Infinity;\n    properties[LayerProperty.MIN_RESOLUTION] =\n      options.minResolution !== undefined ? options.minResolution : 0;\n    properties[LayerProperty.MIN_ZOOM] =\n      options.minZoom !== undefined ? options.minZoom : -Infinity;\n    properties[LayerProperty.MAX_ZOOM] =\n      options.maxZoom !== undefined ? options.maxZoom : Infinity;\n\n    /**\n     * @type {string}\n     * @private\n     */\n    this.className_ =\n      properties.className !== undefined ? properties.className : 'ol-layer';\n    delete properties.className;\n\n    this.setProperties(properties);\n\n    /**\n     * @type {import(\"./Layer.js\").State}\n     * @private\n     */\n    this.state_ = null;\n  }\n\n  /**\n   * Get the background for this layer.\n   * @return {BackgroundColor|false} Layer background.\n   */\n  getBackground() {\n    return this.background_;\n  }\n\n  /**\n   * @return {string} CSS class name.\n   */\n  getClassName() {\n    return this.className_;\n  }\n\n  /**\n   * This method is not meant to be called by layers or layer renderers because the state\n   * is incorrect if the layer is included in a layer group.\n   *\n   * @param {boolean} [managed] Layer is managed.\n   * @return {import(\"./Layer.js\").State} Layer state.\n   */\n  getLayerState(managed) {\n    /** @type {import(\"./Layer.js\").State} */\n    const state =\n      this.state_ ||\n      /** @type {?} */ ({\n        layer: this,\n        managed: managed === undefined ? true : managed,\n      });\n    const zIndex = this.getZIndex();\n    state.opacity = clamp(Math.round(this.getOpacity() * 100) / 100, 0, 1);\n    state.visible = this.getVisible();\n    state.extent = this.getExtent();\n    state.zIndex = zIndex === undefined && !state.managed ? Infinity : zIndex;\n    state.maxResolution = this.getMaxResolution();\n    state.minResolution = Math.max(this.getMinResolution(), 0);\n    state.minZoom = this.getMinZoom();\n    state.maxZoom = this.getMaxZoom();\n    this.state_ = state;\n\n    return state;\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be\n   *     modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   */\n  getLayersArray(array) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer\n   *     states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   */\n  getLayerStatesArray(states) {\n    return abstract();\n  }\n\n  /**\n   * Return the {@link module:ol/extent~Extent extent} of the layer or `undefined` if it\n   * will be visible regardless of extent.\n   * @return {import(\"../extent.js\").Extent|undefined} The layer extent.\n   * @observable\n   * @api\n   */\n  getExtent() {\n    return /** @type {import(\"../extent.js\").Extent|undefined} */ (\n      this.get(LayerProperty.EXTENT)\n    );\n  }\n\n  /**\n   * Return the maximum resolution of the layer. Returns Infinity if\n   * the layer has no maximum resolution set.\n   * @return {number} The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMaxResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum resolution of the layer. Returns 0 if\n   * the layer has no minimum resolution set.\n   * @return {number} The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  getMinResolution() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_RESOLUTION));\n  }\n\n  /**\n   * Return the minimum zoom level of the layer. Returns -Infinity if\n   * the layer has no minimum zoom set.\n   * @return {number} The minimum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMinZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MIN_ZOOM));\n  }\n\n  /**\n   * Return the maximum zoom level of the layer. Returns Infinity if\n   * the layer has no maximum zoom set.\n   * @return {number} The maximum zoom level of the layer.\n   * @observable\n   * @api\n   */\n  getMaxZoom() {\n    return /** @type {number} */ (this.get(LayerProperty.MAX_ZOOM));\n  }\n\n  /**\n   * Return the opacity of the layer (between 0 and 1).\n   * @return {number} The opacity of the layer.\n   * @observable\n   * @api\n   */\n  getOpacity() {\n    return /** @type {number} */ (this.get(LayerProperty.OPACITY));\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../source/Source.js\").State} Source state.\n   */\n  getSourceState() {\n    return abstract();\n  }\n\n  /**\n   * Return the value of this layer's `visible` property. To find out whether the layer\n   * is visible on a map, use `isVisible()` instead.\n   * @return {boolean} The value of the `visible` property of the layer.\n   * @observable\n   * @api\n   */\n  getVisible() {\n    return /** @type {boolean} */ (this.get(LayerProperty.VISIBLE));\n  }\n\n  /**\n   * Return the Z-index of the layer, which is used to order layers before\n   * rendering. Returns undefined if the layer is unmanaged.\n   * @return {number|undefined} The Z-index of the layer.\n   * @observable\n   * @api\n   */\n  getZIndex() {\n    return /** @type {number|undefined} */ (this.get(LayerProperty.Z_INDEX));\n  }\n\n  /**\n   * Sets the background color.\n   * @param {BackgroundColor} [background] Background color.\n   */\n  setBackground(background) {\n    this.background_ = background;\n    this.changed();\n  }\n\n  /**\n   * Set the extent at which the layer is visible.  If `undefined`, the layer\n   * will be visible at all extents.\n   * @param {import(\"../extent.js\").Extent|undefined} extent The extent of the layer.\n   * @observable\n   * @api\n   */\n  setExtent(extent) {\n    this.set(LayerProperty.EXTENT, extent);\n  }\n\n  /**\n   * Set the maximum resolution at which the layer is visible.\n   * @param {number} maxResolution The maximum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMaxResolution(maxResolution) {\n    this.set(LayerProperty.MAX_RESOLUTION, maxResolution);\n  }\n\n  /**\n   * Set the minimum resolution at which the layer is visible.\n   * @param {number} minResolution The minimum resolution of the layer.\n   * @observable\n   * @api\n   */\n  setMinResolution(minResolution) {\n    this.set(LayerProperty.MIN_RESOLUTION, minResolution);\n  }\n\n  /**\n   * Set the maximum zoom (exclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} maxZoom The maximum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMaxZoom(maxZoom) {\n    this.set(LayerProperty.MAX_ZOOM, maxZoom);\n  }\n\n  /**\n   * Set the minimum zoom (inclusive) at which the layer is visible.\n   * Note that the zoom levels for layer visibility are based on the\n   * view zoom level, which may be different from a tile source zoom level.\n   * @param {number} minZoom The minimum zoom of the layer.\n   * @observable\n   * @api\n   */\n  setMinZoom(minZoom) {\n    this.set(LayerProperty.MIN_ZOOM, minZoom);\n  }\n\n  /**\n   * Set the opacity of the layer, allowed values range from 0 to 1.\n   * @param {number} opacity The opacity of the layer.\n   * @observable\n   * @api\n   */\n  setOpacity(opacity) {\n    assert(typeof opacity === 'number', 'Layer opacity must be a number');\n    this.set(LayerProperty.OPACITY, opacity);\n  }\n\n  /**\n   * Set the visibility of the layer (`true` or `false`).\n   * @param {boolean} visible The visibility of the layer.\n   * @observable\n   * @api\n   */\n  setVisible(visible) {\n    this.set(LayerProperty.VISIBLE, visible);\n  }\n\n  /**\n   * Set Z-index of the layer, which is used to order layers before rendering.\n   * The default Z-index is 0.\n   * @param {number} zindex The z-index of the layer.\n   * @observable\n   * @api\n   */\n  setZIndex(zindex) {\n    this.set(LayerProperty.Z_INDEX, zindex);\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state_) {\n      this.state_.layer = null;\n      this.state_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default BaseLayer;\n","/**\n * @module ol/layer/Group\n */\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getIntersection} from '../extent.js';\nimport {clear} from '../obj.js';\nimport {getUid} from '../util.js';\nimport BaseLayer from './Base.js';\n\n/**\n * @typedef {'addlayer'|'removelayer'} GroupEventType\n */\n\n/**\n * @classdesc\n * A layer group triggers 'addlayer' and 'removelayer' events when layers are added to or removed from\n * the group or one of its child groups.  When a layer group is added to or removed from another layer group,\n * a single event will be triggered (instead of one per layer in the group added or removed).\n */\nexport class GroupEvent extends Event {\n  /**\n   * @param {GroupEventType} type The event type.\n   * @param {BaseLayer} layer The layer.\n   */\n  constructor(type, layer) {\n    super(type);\n\n    /**\n     * The added or removed layer.\n     * @type {BaseLayer}\n     * @api\n     */\n    this.layer = layer;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     'change:layers', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|'change:layers', Return>} GroupOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {Array<import(\"./Base.js\").default>|Collection<import(\"./Base.js\").default>} [layers] Child layers.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  LAYERS: 'layers',\n};\n\n/**\n * @classdesc\n * A {@link module:ol/Collection~Collection} of layers that are handled together.\n *\n * A generic `change` event is triggered when the group/Collection changes.\n *\n * @api\n */\nclass LayerGroup extends BaseLayer {\n  /**\n   * @param {Options} [options] Layer options.\n   */\n  constructor(options) {\n    options = options || {};\n    const baseOptions = /** @type {Options} */ (Object.assign({}, options));\n    delete baseOptions.layers;\n\n    let layers = options.layers;\n\n    super(baseOptions);\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {GroupOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {GroupOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.layersListenerKeys_ = [];\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.listenerKeys_ = {};\n\n    this.addChangeListener(Property.LAYERS, this.handleLayersChanged_);\n\n    if (layers) {\n      if (Array.isArray(layers)) {\n        layers = new Collection(layers.slice(), {unique: true});\n      } else {\n        assert(\n          typeof (/** @type {?} */ (layers).getArray) === 'function',\n          'Expected `layers` to be an array or a `Collection`',\n        );\n      }\n    } else {\n      layers = new Collection(undefined, {unique: true});\n    }\n\n    this.setLayers(layers);\n  }\n\n  /**\n   * @private\n   */\n  handleLayerChange_() {\n    this.changed();\n  }\n\n  /**\n   * @private\n   */\n  handleLayersChanged_() {\n    this.layersListenerKeys_.forEach(unlistenByKey);\n    this.layersListenerKeys_.length = 0;\n\n    const layers = this.getLayers();\n    this.layersListenerKeys_.push(\n      listen(layers, CollectionEventType.ADD, this.handleLayersAdd_, this),\n      listen(\n        layers,\n        CollectionEventType.REMOVE,\n        this.handleLayersRemove_,\n        this,\n      ),\n    );\n\n    for (const id in this.listenerKeys_) {\n      this.listenerKeys_[id].forEach(unlistenByKey);\n    }\n    clear(this.listenerKeys_);\n\n    const layersArray = layers.getArray();\n    for (let i = 0, ii = layersArray.length; i < ii; i++) {\n      const layer = layersArray[i];\n      this.registerLayerListeners_(layer);\n      this.dispatchEvent(new GroupEvent('addlayer', layer));\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {BaseLayer} layer The layer.\n   */\n  registerLayerListeners_(layer) {\n    const listenerKeys = [\n      listen(\n        layer,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleLayerChange_,\n        this,\n      ),\n      listen(layer, EventType.CHANGE, this.handleLayerChange_, this),\n    ];\n\n    if (layer instanceof LayerGroup) {\n      listenerKeys.push(\n        listen(layer, 'addlayer', this.handleLayerGroupAdd_, this),\n        listen(layer, 'removelayer', this.handleLayerGroupRemove_, this),\n      );\n    }\n\n    this.listenerKeys_[getUid(layer)] = listenerKeys;\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupAdd_(event) {\n    this.dispatchEvent(new GroupEvent('addlayer', event.layer));\n  }\n\n  /**\n   * @param {GroupEvent} event The layer group event.\n   */\n  handleLayerGroupRemove_(event) {\n    this.dispatchEvent(new GroupEvent('removelayer', event.layer));\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersAdd_(collectionEvent) {\n    const layer = collectionEvent.element;\n    this.registerLayerListeners_(layer);\n    this.dispatchEvent(new GroupEvent('addlayer', layer));\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../Collection.js\").CollectionEvent<import(\"./Base.js\").default>} collectionEvent CollectionEvent.\n   * @private\n   */\n  handleLayersRemove_(collectionEvent) {\n    const layer = collectionEvent.element;\n    const key = getUid(layer);\n    this.listenerKeys_[key].forEach(unlistenByKey);\n    delete this.listenerKeys_[key];\n    this.dispatchEvent(new GroupEvent('removelayer', layer));\n    this.changed();\n  }\n\n  /**\n   * Returns the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @return {!Collection<import(\"./Base.js\").default>} Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  getLayers() {\n    return /** @type {!Collection<import(\"./Base.js\").default>} */ (\n      this.get(Property.LAYERS)\n    );\n  }\n\n  /**\n   * Set the {@link module:ol/Collection~Collection collection} of {@link module:ol/layer/Layer~Layer layers}\n   * in this group.\n   * @param {!Collection<import(\"./Base.js\").default>} layers Collection of\n   *   {@link module:ol/layer/Base~BaseLayer layers} that are part of this group.\n   * @observable\n   * @api\n   */\n  setLayers(layers) {\n    const collection = this.getLayers();\n    if (collection) {\n      const currentLayers = collection.getArray();\n      for (let i = 0, ii = currentLayers.length; i < ii; ++i) {\n        this.dispatchEvent(new GroupEvent('removelayer', currentLayers[i]));\n      }\n    }\n\n    this.set(Property.LAYERS, layers);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array !== undefined ? array : [];\n    this.getLayers().forEach(function (layer) {\n      layer.getLayersArray(array);\n    });\n    return array;\n  }\n\n  /**\n   * Get the layer states list and use this groups z-index as the default\n   * for all layers in this and nested groups, if it is unset at this point.\n   * If dest is not provided and this group's z-index is undefined\n   * 0 is used a the default z-index.\n   * @param {Array<import(\"./Layer.js\").State>} [dest] Optional list\n   * of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(dest) {\n    const states = dest !== undefined ? dest : [];\n    const pos = states.length;\n\n    this.getLayers().forEach(function (layer) {\n      layer.getLayerStatesArray(states);\n    });\n\n    const ownLayerState = this.getLayerState();\n    let defaultZIndex = ownLayerState.zIndex;\n    if (!dest && ownLayerState.zIndex === undefined) {\n      defaultZIndex = 0;\n    }\n    for (let i = pos, ii = states.length; i < ii; i++) {\n      const layerState = states[i];\n      layerState.opacity *= ownLayerState.opacity;\n      layerState.visible = layerState.visible && ownLayerState.visible;\n      layerState.maxResolution = Math.min(\n        layerState.maxResolution,\n        ownLayerState.maxResolution,\n      );\n      layerState.minResolution = Math.max(\n        layerState.minResolution,\n        ownLayerState.minResolution,\n      );\n      layerState.minZoom = Math.max(layerState.minZoom, ownLayerState.minZoom);\n      layerState.maxZoom = Math.min(layerState.maxZoom, ownLayerState.maxZoom);\n      if (ownLayerState.extent !== undefined) {\n        if (layerState.extent !== undefined) {\n          layerState.extent = getIntersection(\n            layerState.extent,\n            ownLayerState.extent,\n          );\n        } else {\n          layerState.extent = ownLayerState.extent;\n        }\n      }\n      if (layerState.zIndex === undefined) {\n        layerState.zIndex = defaultZIndex;\n      }\n    }\n\n    return states;\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    return 'ready';\n  }\n}\n\nexport default LayerGroup;\n","/**\n * @module ol/render/EventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered before a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#prerender\n   * @api\n   */\n  PRERENDER: 'prerender',\n\n  /**\n   * Triggered after a layer is rendered.\n   * @event module:ol/render/Event~RenderEvent#postrender\n   * @api\n   */\n  POSTRENDER: 'postrender',\n\n  /**\n   * Triggered before layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#precompose\n   * @api\n   */\n  PRECOMPOSE: 'precompose',\n\n  /**\n   * Triggered after layers are composed.  When dispatched by the map, the event object will not have\n   * a `context` set.  When dispatched by a layer, the event object will have a `context` set.  Only\n   * WebGL layers currently dispatch this event.\n   * @event module:ol/render/Event~RenderEvent#postcompose\n   * @api\n   */\n  POSTCOMPOSE: 'postcompose',\n\n  /**\n   * Triggered when rendering is complete, i.e. all sources and tiles have\n   * finished loading for the current viewport, and all tiles are faded in.\n   * The event object will not have a `context` set.\n   * @event module:ol/render/Event~RenderEvent#rendercomplete\n   * @api\n   */\n  RENDERCOMPLETE: 'rendercomplete',\n};\n\n/**\n * @typedef {'postrender'|'precompose'|'postcompose'|'rendercomplete'} MapRenderEventTypes\n */\n\n/**\n * @typedef {'postrender'|'prerender'} LayerRenderEventTypes\n */\n","/**\n * @module ol/layer/Layer\n */\nimport View from '../View.js';\nimport {assert} from '../asserts.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {intersects} from '../extent.js';\nimport RenderEventType from '../render/EventType.js';\nimport BaseLayer from './Base.js';\nimport LayerProperty from './Property.js';\n\n/**\n * @typedef {function(import(\"../Map.js\").FrameState):HTMLElement} RenderFunction\n */\n\n/**\n * @typedef {'sourceready'|'change:source'} LayerEventType\n */\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     LayerEventType, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|LayerEventType|\n *     import(\"../render/EventType\").LayerRenderEventTypes, Return>} LayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {SourceType} [source] Source for this layer.  If not provided to the constructor,\n * the source can be set by calling {@link module:ol/layer/Layer~Layer#setSource layer.setSource(source)} after\n * construction.\n * @property {import(\"../Map.js\").default|null} [map] Map.\n * @property {RenderFunction} [render] Render function. Takes the frame state as input and is expected to return an\n * HTML element. Will overwrite the default rendering for the layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @typedef {Object} State\n * @property {import(\"./Layer.js\").default} layer Layer.\n * @property {number} opacity Opacity, the value is rounded to two digits to appear after the decimal point.\n * @property {boolean} visible Visible.\n * @property {boolean} managed Managed.\n * @property {import(\"../extent.js\").Extent} [extent] Extent.\n * @property {number} zIndex ZIndex.\n * @property {number} maxResolution Maximum resolution.\n * @property {number} minResolution Minimum resolution.\n * @property {number} minZoom Minimum zoom.\n * @property {number} maxZoom Maximum zoom.\n */\n\n/**\n * @classdesc\n * Base class from which all layer types are derived. This should only be instantiated\n * in the case where a custom layer is added to the map with a custom `render` function.\n * Such a function can be specified in the `options` object, and is expected to return an HTML element.\n *\n * A visual representation of raster or vector map data.\n * Layers group together those properties that pertain to how the data is to be\n * displayed, irrespective of the source of that data.\n *\n * Layers are usually added to a map with [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * Components like {@link module:ol/interaction/Draw~Draw} use unmanaged layers\n * internally. These unmanaged layers are associated with the map using\n * [layer.setMap()]{@link module:ol/layer/Layer~Layer#setMap} instead.\n *\n * A generic `change` event is fired when the state of the source changes.\n * A `sourceready` event is fired when the layer's source is ready.\n *\n * @fires import(\"../render/Event.js\").RenderEvent#prerender\n * @fires import(\"../render/Event.js\").RenderEvent#postrender\n * @fires import(\"../events/Event.js\").BaseEvent#sourceready\n *\n * @template {import(\"../source/Source.js\").default} [SourceType=import(\"../source/Source.js\").default]\n * @template {import(\"../renderer/Layer.js\").default} [RendererType=import(\"../renderer/Layer.js\").default]\n * @api\n */\nclass Layer extends BaseLayer {\n  /**\n   * @param {Options<SourceType>} options Layer options.\n   */\n  constructor(options) {\n    const baseOptions = Object.assign({}, options);\n    delete baseOptions.source;\n\n    super(baseOptions);\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {LayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {LayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapPrecomposeKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.mapRenderKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceChangeKey_ = null;\n\n    /**\n     * @private\n     * @type {RendererType}\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.sourceReady_ = false;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.rendered = false;\n\n    // Overwrite default render method with a custom one\n    if (options.render) {\n      this.render = options.render;\n    }\n\n    if (options.map) {\n      this.setMap(options.map);\n    }\n\n    this.addChangeListener(\n      LayerProperty.SOURCE,\n      this.handleSourcePropertyChange_,\n    );\n\n    const source = options.source\n      ? /** @type {SourceType} */ (options.source)\n      : null;\n    this.setSource(source);\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").default>} [array] Array of layers (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").default>} Array of layers.\n   * @override\n   */\n  getLayersArray(array) {\n    array = array ? array : [];\n    array.push(this);\n    return array;\n  }\n\n  /**\n   * @param {Array<import(\"./Layer.js\").State>} [states] Optional list of layer states (to be modified in place).\n   * @return {Array<import(\"./Layer.js\").State>} List of layer states.\n   * @override\n   */\n  getLayerStatesArray(states) {\n    states = states ? states : [];\n    states.push(this.getLayerState());\n    return states;\n  }\n\n  /**\n   * Get the layer source.\n   * @return {SourceType|null} The layer source (or `null` if not yet set).\n   * @observable\n   * @api\n   */\n  getSource() {\n    return /** @type {SourceType} */ (this.get(LayerProperty.SOURCE)) || null;\n  }\n\n  /**\n   * @return {SourceType|null} The source being rendered.\n   */\n  getRenderSource() {\n    return this.getSource();\n  }\n\n  /**\n   * @return {import(\"../source/Source.js\").State} Source state.\n   * @override\n   */\n  getSourceState() {\n    const source = this.getSource();\n    return !source ? 'undefined' : source.getState();\n  }\n\n  /**\n   * @private\n   */\n  handleSourceChange_() {\n    this.changed();\n    if (this.sourceReady_ || this.getSource().getState() !== 'ready') {\n      return;\n    }\n    this.sourceReady_ = true;\n    this.dispatchEvent('sourceready');\n  }\n\n  /**\n   * @private\n   */\n  handleSourcePropertyChange_() {\n    if (this.sourceChangeKey_) {\n      unlistenByKey(this.sourceChangeKey_);\n      this.sourceChangeKey_ = null;\n    }\n    this.sourceReady_ = false;\n    const source = this.getSource();\n    if (source) {\n      this.sourceChangeKey_ = listen(\n        source,\n        EventType.CHANGE,\n        this.handleSourceChange_,\n        this,\n      );\n      if (source.getState() === 'ready') {\n        this.sourceReady_ = true;\n        setTimeout(() => {\n          this.dispatchEvent('sourceready');\n        }, 0);\n      }\n    }\n    this.changed();\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    if (!this.renderer_) {\n      return Promise.resolve([]);\n    }\n    return this.renderer_.getFeatures(pixel);\n  }\n\n  /**\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    if (!this.renderer_ || !this.rendered) {\n      return null;\n    }\n    return this.renderer_.getData(pixel);\n  }\n\n  /**\n   * The layer is visible on the map view, i.e. within its min/max resolution or zoom and\n   * extent, not set to `visible: false`, and not inside a layer group that is set\n   * to `visible: false`.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {boolean} The layer is visible in the map view.\n   * @api\n   */\n  isVisible(view) {\n    let frameState;\n    const map = this.getMapInternal();\n    if (!view && map) {\n      view = map.getView();\n    }\n    if (view instanceof View) {\n      frameState = {\n        viewState: view.getState(),\n        extent: view.calculateExtent(),\n      };\n    } else {\n      frameState = view;\n    }\n    if (!frameState.layerStatesArray && map) {\n      frameState.layerStatesArray = map.getLayerGroup().getLayerStatesArray();\n    }\n    let layerState;\n    if (frameState.layerStatesArray) {\n      layerState = frameState.layerStatesArray.find(\n        (layerState) => layerState.layer === this,\n      );\n      if (!layerState) {\n        return false;\n      }\n    } else {\n      layerState = this.getLayerState();\n    }\n\n    const layerExtent = this.getExtent();\n\n    return (\n      inView(layerState, frameState.viewState) &&\n      (!layerExtent || intersects(layerExtent, frameState.extent))\n    );\n  }\n\n  /**\n   * Get the attributions of the source of this layer for the given view.\n   * @param {View|import(\"../View.js\").ViewStateLayerStateExtent} [view] View or {@link import(\"../Map.js\").FrameState}.\n   * Only required when the layer is not added to a map.\n   * @return {Array<string>} Attributions for this layer at the given view.\n   * @api\n   */\n  getAttributions(view) {\n    if (!this.isVisible(view)) {\n      return [];\n    }\n    const getAttributions = this.getSource()?.getAttributions();\n    if (!getAttributions) {\n      return [];\n    }\n    const frameState =\n      view instanceof View ? view.getViewStateAndExtent() : view;\n    let attributions = getAttributions(frameState);\n    if (!Array.isArray(attributions)) {\n      attributions = [attributions];\n    }\n    return attributions;\n  }\n\n  /**\n   * In charge to manage the rendering of the layer. One layer type is\n   * bounded with one layer renderer.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target which the renderer may (but need not) use\n   * for rendering its content.\n   * @return {HTMLElement|null} The rendered element.\n   */\n  render(frameState, target) {\n    const layerRenderer = this.getRenderer();\n\n    if (layerRenderer.prepareFrame(frameState)) {\n      this.rendered = true;\n      return layerRenderer.renderFrame(frameState, target);\n    }\n    return null;\n  }\n\n  /**\n   * Called when a layer is not visible during a map render.\n   */\n  unrender() {\n    this.rendered = false;\n  }\n\n  /** @return {string} Declutter */\n  getDeclutter() {\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   */\n  renderDeclutter(frameState, layerState) {}\n\n  /**\n   * When the renderer follows a layout -> render approach, do the final rendering here.\n   * @param {import('../Map.js').FrameState} frameState Frame state\n   */\n  renderDeferred(frameState) {\n    const layerRenderer = this.getRenderer();\n    if (!layerRenderer) {\n      return;\n    }\n    layerRenderer.renderDeferred(frameState);\n  }\n\n  /**\n   * For use inside the library only.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   */\n  setMapInternal(map) {\n    if (!map) {\n      this.unrender();\n    }\n    this.set(LayerProperty.MAP, map);\n  }\n\n  /**\n   * For use inside the library only.\n   * @return {import(\"../Map.js\").default|null} Map.\n   */\n  getMapInternal() {\n    return this.get(LayerProperty.MAP);\n  }\n\n  /**\n   * Sets the layer to be rendered on top of other layers on a map. The map will\n   * not manage this layer in its layers collection. This\n   * is useful for temporary layers. To remove an unmanaged layer from the map,\n   * use `#setMap(null)`.\n   *\n   * To add the layer to a map and have it managed by the map, use\n   * {@link module:ol/Map~Map#addLayer} instead.\n   * @param {import(\"../Map.js\").default|null} map Map.\n   * @api\n   */\n  setMap(map) {\n    if (this.mapPrecomposeKey_) {\n      unlistenByKey(this.mapPrecomposeKey_);\n      this.mapPrecomposeKey_ = null;\n    }\n    if (!map) {\n      this.changed();\n    }\n    if (this.mapRenderKey_) {\n      unlistenByKey(this.mapRenderKey_);\n      this.mapRenderKey_ = null;\n    }\n    if (map) {\n      this.mapPrecomposeKey_ = listen(\n        map,\n        RenderEventType.PRECOMPOSE,\n        this.handlePrecompose_,\n        this,\n      );\n      this.mapRenderKey_ = listen(this, EventType.CHANGE, map.render, map);\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../events/Event.js\").default} renderEvent Render event\n   * @private\n   */\n  handlePrecompose_(renderEvent) {\n    const layerStatesArray =\n      /** @type {import(\"../render/Event.js\").default} */ (renderEvent)\n        .frameState.layerStatesArray;\n    const layerState = this.getLayerState(false);\n    assert(\n      !layerStatesArray.some(\n        (arrayLayerState) => arrayLayerState.layer === layerState.layer,\n      ),\n      'A layer can only be added to the map once. Use either `layer.setMap()` or `map.addLayer()`, not both.',\n    );\n    layerStatesArray.push(layerState);\n  }\n\n  /**\n   * Set the layer source.\n   * @param {SourceType|null} source The layer source.\n   * @observable\n   * @api\n   */\n  setSource(source) {\n    this.set(LayerProperty.SOURCE, source);\n  }\n\n  /**\n   * Get the renderer for this layer.\n   * @return {RendererType|null} The layer renderer.\n   */\n  getRenderer() {\n    if (!this.renderer_) {\n      this.renderer_ = this.createRenderer();\n    }\n    return this.renderer_;\n  }\n\n  /**\n   * @return {boolean} The layer has a renderer.\n   */\n  hasRenderer() {\n    return !!this.renderer_;\n  }\n\n  /**\n   * Create a renderer for this layer.\n   * @return {RendererType} A layer renderer.\n   * @protected\n   */\n  createRenderer() {\n    return null;\n  }\n\n  /**\n   * This will clear the renderer so that a new one can be created next time it is needed\n   */\n  clearRenderer() {\n    if (this.renderer_) {\n      this.renderer_.dispose();\n      delete this.renderer_;\n    }\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.clearRenderer();\n    this.setSource(null);\n    super.disposeInternal();\n  }\n}\n\n/**\n * Return `true` if the layer is visible and if the provided view state\n * has resolution and zoom levels that are in range of the layer's min/max.\n * @param {State} layerState Layer state.\n * @param {import(\"../View.js\").State} viewState View state.\n * @return {boolean} The layer is visible at the given view state.\n */\nexport function inView(layerState, viewState) {\n  if (!layerState.visible) {\n    return false;\n  }\n  const resolution = viewState.resolution;\n  if (\n    resolution < layerState.minResolution ||\n    resolution >= layerState.maxResolution\n  ) {\n    return false;\n  }\n  const zoom = viewState.zoom;\n  return zoom > layerState.minZoom && zoom <= layerState.maxZoom;\n}\n\nexport default Layer;\n","\n/**\n * Rearranges items so that all items in the [left, k] are the smallest.\n * The k-th element will have the (k - left + 1)-th smallest value in [left, right].\n *\n * @template T\n * @param {T[]} arr the array to partially sort (in place)\n * @param {number} k middle index for partial sorting (as defined above)\n * @param {number} [left=0] left index of the range to sort\n * @param {number} [right=arr.length-1] right index\n * @param {(a: T, b: T) => number} [compare = (a, b) => a - b] compare function\n */\nexport default function quickselect(arr, k, left = 0, right = arr.length - 1, compare = defaultCompare) {\n\n    while (right > left) {\n        if (right - left > 600) {\n            const n = right - left + 1;\n            const m = k - left + 1;\n            const z = Math.log(n);\n            const s = 0.5 * Math.exp(2 * z / 3);\n            const sd = 0.5 * Math.sqrt(z * s * (n - s) / n) * (m - n / 2 < 0 ? -1 : 1);\n            const newLeft = Math.max(left, Math.floor(k - m * s / n + sd));\n            const newRight = Math.min(right, Math.floor(k + (n - m) * s / n + sd));\n            quickselect(arr, k, newLeft, newRight, compare);\n        }\n\n        const t = arr[k];\n        let i = left;\n        /** @type {number} */\n        let j = right;\n\n        swap(arr, left, k);\n        if (compare(arr[right], t) > 0) swap(arr, left, right);\n\n        while (i < j) {\n            swap(arr, i, j);\n            i++;\n            j--;\n            while (compare(arr[i], t) < 0) i++;\n            while (compare(arr[j], t) > 0) j--;\n        }\n\n        if (compare(arr[left], t) === 0) swap(arr, left, j);\n        else {\n            j++;\n            swap(arr, j, right);\n        }\n\n        if (j <= k) left = j + 1;\n        if (k <= j) right = j - 1;\n    }\n}\n\n/**\n * @template T\n * @param {T[]} arr\n * @param {number} i\n * @param {number} j\n */\nfunction swap(arr, i, j) {\n    const tmp = arr[i];\n    arr[i] = arr[j];\n    arr[j] = tmp;\n}\n\n/**\n * @template T\n * @param {T} a\n * @param {T} b\n * @returns {number}\n */\nfunction defaultCompare(a, b) {\n    return a < b ? -1 : a > b ? 1 : 0;\n}\n","import quickselect from 'quickselect';\n\nexport default class RBush {\n    constructor(maxEntries = 9) {\n        // max entries in a node is 9 by default; min node fill is 40% for best performance\n        this._maxEntries = Math.max(4, maxEntries);\n        this._minEntries = Math.max(2, Math.ceil(this._maxEntries * 0.4));\n        this.clear();\n    }\n\n    all() {\n        return this._all(this.data, []);\n    }\n\n    search(bbox) {\n        let node = this.data;\n        const result = [];\n\n        if (!intersects(bbox, node)) return result;\n\n        const toBBox = this.toBBox;\n        const nodesToSearch = [];\n\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf) result.push(child);\n                    else if (contains(bbox, childBBox)) this._all(child, result);\n                    else nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return result;\n    }\n\n    collides(bbox) {\n        let node = this.data;\n\n        if (!intersects(bbox, node)) return false;\n\n        const nodesToSearch = [];\n        while (node) {\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const childBBox = node.leaf ? this.toBBox(child) : child;\n\n                if (intersects(bbox, childBBox)) {\n                    if (node.leaf || contains(bbox, childBBox)) return true;\n                    nodesToSearch.push(child);\n                }\n            }\n            node = nodesToSearch.pop();\n        }\n\n        return false;\n    }\n\n    load(data) {\n        if (!(data && data.length)) return this;\n\n        if (data.length < this._minEntries) {\n            for (let i = 0; i < data.length; i++) {\n                this.insert(data[i]);\n            }\n            return this;\n        }\n\n        // recursively build the tree with the given data from scratch using OMT algorithm\n        let node = this._build(data.slice(), 0, data.length - 1, 0);\n\n        if (!this.data.children.length) {\n            // save as is if tree is empty\n            this.data = node;\n\n        } else if (this.data.height === node.height) {\n            // split root if trees have the same height\n            this._splitRoot(this.data, node);\n\n        } else {\n            if (this.data.height < node.height) {\n                // swap trees if inserted one is bigger\n                const tmpNode = this.data;\n                this.data = node;\n                node = tmpNode;\n            }\n\n            // insert the small tree into the large tree at appropriate level\n            this._insert(node, this.data.height - node.height - 1, true);\n        }\n\n        return this;\n    }\n\n    insert(item) {\n        if (item) this._insert(item, this.data.height - 1);\n        return this;\n    }\n\n    clear() {\n        this.data = createNode([]);\n        return this;\n    }\n\n    remove(item, equalsFn) {\n        if (!item) return this;\n\n        let node = this.data;\n        const bbox = this.toBBox(item);\n        const path = [];\n        const indexes = [];\n        let i, parent, goingUp;\n\n        // depth-first iterative tree traversal\n        while (node || path.length) {\n\n            if (!node) { // go up\n                node = path.pop();\n                parent = path[path.length - 1];\n                i = indexes.pop();\n                goingUp = true;\n            }\n\n            if (node.leaf) { // check current node\n                const index = findItem(item, node.children, equalsFn);\n\n                if (index !== -1) {\n                    // item found, remove the item and condense tree upwards\n                    node.children.splice(index, 1);\n                    path.push(node);\n                    this._condense(path);\n                    return this;\n                }\n            }\n\n            if (!goingUp && !node.leaf && contains(node, bbox)) { // go down\n                path.push(node);\n                indexes.push(i);\n                i = 0;\n                parent = node;\n                node = node.children[0];\n\n            } else if (parent) { // go right\n                i++;\n                node = parent.children[i];\n                goingUp = false;\n\n            } else node = null; // nothing found\n        }\n\n        return this;\n    }\n\n    toBBox(item) { return item; }\n\n    compareMinX(a, b) { return a.minX - b.minX; }\n    compareMinY(a, b) { return a.minY - b.minY; }\n\n    toJSON() { return this.data; }\n\n    fromJSON(data) {\n        this.data = data;\n        return this;\n    }\n\n    _all(node, result) {\n        const nodesToSearch = [];\n        while (node) {\n            if (node.leaf) result.push(...node.children);\n            else nodesToSearch.push(...node.children);\n\n            node = nodesToSearch.pop();\n        }\n        return result;\n    }\n\n    _build(items, left, right, height) {\n\n        const N = right - left + 1;\n        let M = this._maxEntries;\n        let node;\n\n        if (N <= M) {\n            // reached leaf level; return leaf\n            node = createNode(items.slice(left, right + 1));\n            calcBBox(node, this.toBBox);\n            return node;\n        }\n\n        if (!height) {\n            // target height of the bulk-loaded tree\n            height = Math.ceil(Math.log(N) / Math.log(M));\n\n            // target number of root entries to maximize storage utilization\n            M = Math.ceil(N / Math.pow(M, height - 1));\n        }\n\n        node = createNode([]);\n        node.leaf = false;\n        node.height = height;\n\n        // split the items into M mostly square tiles\n\n        const N2 = Math.ceil(N / M);\n        const N1 = N2 * Math.ceil(Math.sqrt(M));\n\n        multiSelect(items, left, right, N1, this.compareMinX);\n\n        for (let i = left; i <= right; i += N1) {\n\n            const right2 = Math.min(i + N1 - 1, right);\n\n            multiSelect(items, i, right2, N2, this.compareMinY);\n\n            for (let j = i; j <= right2; j += N2) {\n\n                const right3 = Math.min(j + N2 - 1, right2);\n\n                // pack each entry recursively\n                node.children.push(this._build(items, j, right3, height - 1));\n            }\n        }\n\n        calcBBox(node, this.toBBox);\n\n        return node;\n    }\n\n    _chooseSubtree(bbox, node, level, path) {\n        while (true) {\n            path.push(node);\n\n            if (node.leaf || path.length - 1 === level) break;\n\n            let minArea = Infinity;\n            let minEnlargement = Infinity;\n            let targetNode;\n\n            for (let i = 0; i < node.children.length; i++) {\n                const child = node.children[i];\n                const area = bboxArea(child);\n                const enlargement = enlargedArea(bbox, child) - area;\n\n                // choose entry with the least area enlargement\n                if (enlargement < minEnlargement) {\n                    minEnlargement = enlargement;\n                    minArea = area < minArea ? area : minArea;\n                    targetNode = child;\n\n                } else if (enlargement === minEnlargement) {\n                    // otherwise choose one with the smallest area\n                    if (area < minArea) {\n                        minArea = area;\n                        targetNode = child;\n                    }\n                }\n            }\n\n            node = targetNode || node.children[0];\n        }\n\n        return node;\n    }\n\n    _insert(item, level, isNode) {\n        const bbox = isNode ? item : this.toBBox(item);\n        const insertPath = [];\n\n        // find the best node for accommodating the item, saving all nodes along the path too\n        const node = this._chooseSubtree(bbox, this.data, level, insertPath);\n\n        // put the item into the node\n        node.children.push(item);\n        extend(node, bbox);\n\n        // split on node overflow; propagate upwards if necessary\n        while (level >= 0) {\n            if (insertPath[level].children.length > this._maxEntries) {\n                this._split(insertPath, level);\n                level--;\n            } else break;\n        }\n\n        // adjust bboxes along the insertion path\n        this._adjustParentBBoxes(bbox, insertPath, level);\n    }\n\n    // split overflowed node into two\n    _split(insertPath, level) {\n        const node = insertPath[level];\n        const M = node.children.length;\n        const m = this._minEntries;\n\n        this._chooseSplitAxis(node, m, M);\n\n        const splitIndex = this._chooseSplitIndex(node, m, M);\n\n        const newNode = createNode(node.children.splice(splitIndex, node.children.length - splitIndex));\n        newNode.height = node.height;\n        newNode.leaf = node.leaf;\n\n        calcBBox(node, this.toBBox);\n        calcBBox(newNode, this.toBBox);\n\n        if (level) insertPath[level - 1].children.push(newNode);\n        else this._splitRoot(node, newNode);\n    }\n\n    _splitRoot(node, newNode) {\n        // split root node\n        this.data = createNode([node, newNode]);\n        this.data.height = node.height + 1;\n        this.data.leaf = false;\n        calcBBox(this.data, this.toBBox);\n    }\n\n    _chooseSplitIndex(node, m, M) {\n        let index;\n        let minOverlap = Infinity;\n        let minArea = Infinity;\n\n        for (let i = m; i <= M - m; i++) {\n            const bbox1 = distBBox(node, 0, i, this.toBBox);\n            const bbox2 = distBBox(node, i, M, this.toBBox);\n\n            const overlap = intersectionArea(bbox1, bbox2);\n            const area = bboxArea(bbox1) + bboxArea(bbox2);\n\n            // choose distribution with minimum overlap\n            if (overlap < minOverlap) {\n                minOverlap = overlap;\n                index = i;\n\n                minArea = area < minArea ? area : minArea;\n\n            } else if (overlap === minOverlap) {\n                // otherwise choose distribution with minimum area\n                if (area < minArea) {\n                    minArea = area;\n                    index = i;\n                }\n            }\n        }\n\n        return index || M - m;\n    }\n\n    // sorts node children by the best axis for split\n    _chooseSplitAxis(node, m, M) {\n        const compareMinX = node.leaf ? this.compareMinX : compareNodeMinX;\n        const compareMinY = node.leaf ? this.compareMinY : compareNodeMinY;\n        const xMargin = this._allDistMargin(node, m, M, compareMinX);\n        const yMargin = this._allDistMargin(node, m, M, compareMinY);\n\n        // if total distributions margin value is minimal for x, sort by minX,\n        // otherwise it's already sorted by minY\n        if (xMargin < yMargin) node.children.sort(compareMinX);\n    }\n\n    // total margin of all possible split distributions where each node is at least m full\n    _allDistMargin(node, m, M, compare) {\n        node.children.sort(compare);\n\n        const toBBox = this.toBBox;\n        const leftBBox = distBBox(node, 0, m, toBBox);\n        const rightBBox = distBBox(node, M - m, M, toBBox);\n        let margin = bboxMargin(leftBBox) + bboxMargin(rightBBox);\n\n        for (let i = m; i < M - m; i++) {\n            const child = node.children[i];\n            extend(leftBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(leftBBox);\n        }\n\n        for (let i = M - m - 1; i >= m; i--) {\n            const child = node.children[i];\n            extend(rightBBox, node.leaf ? toBBox(child) : child);\n            margin += bboxMargin(rightBBox);\n        }\n\n        return margin;\n    }\n\n    _adjustParentBBoxes(bbox, path, level) {\n        // adjust bboxes along the given tree path\n        for (let i = level; i >= 0; i--) {\n            extend(path[i], bbox);\n        }\n    }\n\n    _condense(path) {\n        // go through the path, removing empty nodes and updating bboxes\n        for (let i = path.length - 1, siblings; i >= 0; i--) {\n            if (path[i].children.length === 0) {\n                if (i > 0) {\n                    siblings = path[i - 1].children;\n                    siblings.splice(siblings.indexOf(path[i]), 1);\n\n                } else this.clear();\n\n            } else calcBBox(path[i], this.toBBox);\n        }\n    }\n}\n\nfunction findItem(item, items, equalsFn) {\n    if (!equalsFn) return items.indexOf(item);\n\n    for (let i = 0; i < items.length; i++) {\n        if (equalsFn(item, items[i])) return i;\n    }\n    return -1;\n}\n\n// calculate node's bbox from bboxes of its children\nfunction calcBBox(node, toBBox) {\n    distBBox(node, 0, node.children.length, toBBox, node);\n}\n\n// min bounding rectangle of node children from k to p-1\nfunction distBBox(node, k, p, toBBox, destNode) {\n    if (!destNode) destNode = createNode(null);\n    destNode.minX = Infinity;\n    destNode.minY = Infinity;\n    destNode.maxX = -Infinity;\n    destNode.maxY = -Infinity;\n\n    for (let i = k; i < p; i++) {\n        const child = node.children[i];\n        extend(destNode, node.leaf ? toBBox(child) : child);\n    }\n\n    return destNode;\n}\n\nfunction extend(a, b) {\n    a.minX = Math.min(a.minX, b.minX);\n    a.minY = Math.min(a.minY, b.minY);\n    a.maxX = Math.max(a.maxX, b.maxX);\n    a.maxY = Math.max(a.maxY, b.maxY);\n    return a;\n}\n\nfunction compareNodeMinX(a, b) { return a.minX - b.minX; }\nfunction compareNodeMinY(a, b) { return a.minY - b.minY; }\n\nfunction bboxArea(a)   { return (a.maxX - a.minX) * (a.maxY - a.minY); }\nfunction bboxMargin(a) { return (a.maxX - a.minX) + (a.maxY - a.minY); }\n\nfunction enlargedArea(a, b) {\n    return (Math.max(b.maxX, a.maxX) - Math.min(b.minX, a.minX)) *\n           (Math.max(b.maxY, a.maxY) - Math.min(b.minY, a.minY));\n}\n\nfunction intersectionArea(a, b) {\n    const minX = Math.max(a.minX, b.minX);\n    const minY = Math.max(a.minY, b.minY);\n    const maxX = Math.min(a.maxX, b.maxX);\n    const maxY = Math.min(a.maxY, b.maxY);\n\n    return Math.max(0, maxX - minX) *\n           Math.max(0, maxY - minY);\n}\n\nfunction contains(a, b) {\n    return a.minX <= b.minX &&\n           a.minY <= b.minY &&\n           b.maxX <= a.maxX &&\n           b.maxY <= a.maxY;\n}\n\nfunction intersects(a, b) {\n    return b.minX <= a.maxX &&\n           b.minY <= a.maxY &&\n           b.maxX >= a.minX &&\n           b.maxY >= a.minY;\n}\n\nfunction createNode(children) {\n    return {\n        children,\n        height: 1,\n        leaf: true,\n        minX: Infinity,\n        minY: Infinity,\n        maxX: -Infinity,\n        maxY: -Infinity\n    };\n}\n\n// sort an array so that items come in groups of n unsorted items, with groups sorted between each other;\n// combines selection algorithm with binary divide & conquer approach\n\nfunction multiSelect(arr, left, right, n, compare) {\n    const stack = [left, right];\n\n    while (stack.length) {\n        right = stack.pop();\n        left = stack.pop();\n\n        if (right - left <= n) continue;\n\n        const mid = left + Math.ceil((right - left) / n / 2) * n;\n        quickselect(arr, mid, left, right, compare);\n\n        stack.push(left, mid, mid, right);\n    }\n}\n","/**\n * @module ol/color\n */\nimport {createCanvasContext2D} from './dom.js';\nimport {clamp, toFixed} from './math.js';\n\n/**\n * A color represented as a short array [red, green, blue, alpha].\n * red, green, and blue should be integers in the range 0..255 inclusive.\n * alpha should be a float in the range 0..1 inclusive. If no alpha value is\n * given then `1` will be used.\n * @typedef {Array<number>} Color\n * @api\n */\n\n/**\n * Color to indicate that no color should be rendered. This is meant to be used for per-reference\n * comparisons only.\n * @type {Color}\n */\nexport const NO_COLOR = [NaN, NaN, NaN, 0];\n\nlet colorParseContext;\n/**\n * @return {CanvasRenderingContext2D} The color parse context\n */\nfunction getColorParseContext() {\n  if (!colorParseContext) {\n    colorParseContext = createCanvasContext2D(1, 1, undefined, {\n      willReadFrequently: true,\n      desynchronized: true,\n    });\n  }\n  return colorParseContext;\n}\n\nconst rgbModernRegEx =\n  /^rgba?\\(\\s*(\\d+%?)\\s+(\\d+%?)\\s+(\\d+%?)(?:\\s*\\/\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyAbsoluteRegEx =\n  /^rgba?\\(\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst rgbLegacyPercentageRegEx =\n  /^rgba?\\(\\s*(\\d+%)\\s*,\\s*(\\d+%)\\s*,\\s*(\\d+%)(?:\\s*,\\s*(\\d+%|\\d*\\.\\d+|[01]))?\\s*\\)$/i;\nconst hexRegEx = /^#([\\da-f]{3,4}|[\\da-f]{6}|[\\da-f]{8})$/i;\n\n/**\n * @param {string} s Color component as number or percentage.\n * @param {number} divider Divider for percentage.\n * @return {number} Color component.\n */\nfunction toColorComponent(s, divider) {\n  return s.endsWith('%')\n    ? Number(s.substring(0, s.length - 1)) / divider\n    : Number(s);\n}\n\n/**\n * @param {string} color Color string.\n */\nfunction throwInvalidColor(color) {\n  throw new Error('failed to parse \"' + color + '\" as color');\n}\n\n/**\n * @param {string} color Color string.\n * @return {Color} RGBa color array.\n */\nfunction parseRgba(color) {\n  // Fast lane for rgb(a) colors\n  if (color.toLowerCase().startsWith('rgb')) {\n    const rgb =\n      color.match(rgbLegacyAbsoluteRegEx) ||\n      color.match(rgbModernRegEx) ||\n      color.match(rgbLegacyPercentageRegEx);\n    if (rgb) {\n      const alpha = rgb[4];\n      const rgbDivider = 100 / 255;\n      return [\n        clamp((toColorComponent(rgb[1], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[2], rgbDivider) + 0.5) | 0, 0, 255),\n        clamp((toColorComponent(rgb[3], rgbDivider) + 0.5) | 0, 0, 255),\n        alpha !== undefined ? clamp(toColorComponent(alpha, 100), 0, 1) : 1,\n      ];\n    }\n    throwInvalidColor(color);\n  }\n  // Fast lane for hex colors (also with alpha)\n  if (color.startsWith('#')) {\n    if (hexRegEx.test(color)) {\n      const hex = color.substring(1);\n      const step = hex.length <= 4 ? 1 : 2;\n      const colorFromHex = [0, 0, 0, 255];\n      for (let i = 0, ii = hex.length; i < ii; i += step) {\n        let colorComponent = parseInt(hex.substring(i, i + step), 16);\n        if (step === 1) {\n          colorComponent += colorComponent << 4;\n        }\n        colorFromHex[i / step] = colorComponent;\n      }\n      colorFromHex[3] = colorFromHex[3] / 255;\n      return colorFromHex;\n    }\n    throwInvalidColor(color);\n  }\n  // Use canvas color serialization to parse the color into hex or rgba\n  // See https://www.w3.org/TR/2021/SPSD-2dcontext-20210128/#serialization-of-a-color\n  const context = getColorParseContext();\n  context.fillStyle = '#abcdef';\n  let invalidCheckFillStyle = context.fillStyle;\n  context.fillStyle = color;\n  if (context.fillStyle === invalidCheckFillStyle) {\n    context.fillStyle = '#fedcba';\n    invalidCheckFillStyle = context.fillStyle;\n    context.fillStyle = color;\n    if (context.fillStyle === invalidCheckFillStyle) {\n      throwInvalidColor(color);\n    }\n  }\n  const colorString = context.fillStyle;\n  if (colorString.startsWith('#') || colorString.startsWith('rgba')) {\n    return parseRgba(colorString);\n  }\n  context.clearRect(0, 0, 1, 1);\n  context.fillRect(0, 0, 1, 1);\n  const colorFromImage = Array.from(context.getImageData(0, 0, 1, 1).data);\n  colorFromImage[3] = toFixed(colorFromImage[3] / 255, 3);\n  return colorFromImage;\n}\n\n/**\n * Return the color as an rgba string.\n * @param {Color|string} color Color.\n * @return {string} Rgba string.\n * @api\n */\nexport function asString(color) {\n  if (typeof color === 'string') {\n    return color;\n  }\n  return toString(color);\n}\n\n/**\n * @type {number}\n */\nconst MAX_CACHE_SIZE = 1024;\n\n/**\n * We maintain a small cache of parsed strings.  Whenever the cache grows too large,\n * we delete an arbitrary set of the entries.\n *\n * @type {Object<string, Color>}\n */\nconst cache = {};\n\n/**\n * @type {number}\n */\nlet cacheSize = 0;\n\n/**\n * @param {Color} color A color that may or may not have an alpha channel.\n * @return {Color} The input color with an alpha channel.  If the input color has\n * an alpha channel, the input color will be returned unchanged.  Otherwise, a new\n * array will be returned with the input color and an alpha channel of 1.\n */\nexport function withAlpha(color) {\n  if (color.length === 4) {\n    return color;\n  }\n  const output = color.slice();\n  output[3] = 1;\n  return output;\n}\n\n// The functions b1, b2, a1, a2, rgbaToLcha and lchaToRgba below are adapted from\n// https://stackoverflow.com/a/67219995/2389327\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b1(v) {\n  return v > 0.0031308 ? Math.pow(v, 1 / 2.4) * 269.025 - 14.025 : v * 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction b2(v) {\n  return v > 0.2068965 ? Math.pow(v, 3) : (v - 4 / 29) * (108 / 841);\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a1(v) {\n  return v > 10.314724 ? Math.pow((v + 14.025) / 269.025, 2.4) : v / 3294.6;\n}\n\n/**\n * @param {number} v Input value.\n * @return {number} Output value.\n */\nfunction a2(v) {\n  return v > 0.0088564 ? Math.pow(v, 1 / 3) : v / (108 / 841) + 4 / 29;\n}\n\n/**\n * @param {Color} color RGBA color.\n * @return {Color} LCHuv color with alpha.\n */\nexport function rgbaToLcha(color) {\n  const r = a1(color[0]);\n  const g = a1(color[1]);\n  const b = a1(color[2]);\n  const y = a2(r * 0.222488403 + g * 0.716873169 + b * 0.06060791);\n  const l = 500 * (a2(r * 0.452247074 + g * 0.399439023 + b * 0.148375274) - y);\n  const q = 200 * (y - a2(r * 0.016863605 + g * 0.117638439 + b * 0.865350722));\n  const h = Math.atan2(q, l) * (180 / Math.PI);\n  return [\n    116 * y - 16,\n    Math.sqrt(l * l + q * q),\n    h < 0 ? h + 360 : h,\n    color[3],\n  ];\n}\n\n/**\n * @param {Color} color LCHuv color with alpha.\n * @return {Color} RGBA color.\n */\nexport function lchaToRgba(color) {\n  const l = (color[0] + 16) / 116;\n  const c = color[1];\n  const h = (color[2] * Math.PI) / 180;\n  const y = b2(l);\n  const x = b2(l + (c / 500) * Math.cos(h));\n  const z = b2(l - (c / 200) * Math.sin(h));\n  const r = b1(x * 3.021973625 - y * 1.617392459 - z * 0.404875592);\n  const g = b1(x * -0.943766287 + y * 1.916279586 + z * 0.027607165);\n  const b = b1(x * 0.069407491 - y * 0.22898585 + z * 1.159737864);\n  return [\n    clamp((r + 0.5) | 0, 0, 255),\n    clamp((g + 0.5) | 0, 0, 255),\n    clamp((b + 0.5) | 0, 0, 255),\n    color[3],\n  ];\n}\n\n/**\n * @param {string} s String.\n * @return {Color} Color.\n */\nexport function fromString(s) {\n  if (s === 'none') {\n    return NO_COLOR;\n  }\n  if (cache.hasOwnProperty(s)) {\n    return cache[s];\n  }\n  if (cacheSize >= MAX_CACHE_SIZE) {\n    let i = 0;\n    for (const key in cache) {\n      if ((i++ & 3) === 0) {\n        delete cache[key];\n        --cacheSize;\n      }\n    }\n  }\n\n  const color = parseRgba(s);\n  if (color.length !== 4) {\n    throwInvalidColor(s);\n  }\n  for (const c of color) {\n    if (isNaN(c)) {\n      throwInvalidColor(s);\n    }\n  }\n  cache[s] = color;\n  ++cacheSize;\n  return color;\n}\n\n/**\n * Return the color as an array. This function maintains a cache of calculated\n * arrays which means the result should not be modified.\n * @param {Color|string} color Color.\n * @return {Color} Color.\n * @api\n */\nexport function asArray(color) {\n  if (Array.isArray(color)) {\n    return color;\n  }\n  return fromString(color);\n}\n\n/**\n * @param {Color} color Color.\n * @return {string} String.\n */\nexport function toString(color) {\n  let r = color[0];\n  if (r != (r | 0)) {\n    r = (r + 0.5) | 0;\n  }\n  let g = color[1];\n  if (g != (g | 0)) {\n    g = (g + 0.5) | 0;\n  }\n  let b = color[2];\n  if (b != (b | 0)) {\n    b = (b + 0.5) | 0;\n  }\n  const a = color[3] === undefined ? 1 : Math.round(color[3] * 1000) / 1000;\n  return 'rgba(' + r + ',' + g + ',' + b + ',' + a + ')';\n}\n\n/**\n * @param {string} s String.\n * @return {boolean} Whether the string is actually a valid color\n */\nexport function isStringColor(s) {\n  try {\n    fromString(s);\n    return true;\n  } catch {\n    return false;\n  }\n}\n","/**\n * @module ol/size\n */\n\n/**\n * An array of numbers representing a size: `[width, height]`.\n * @typedef {Array<number>} Size\n * @api\n */\n\n/**\n * Returns a buffered size.\n * @param {Size} size Size.\n * @param {number} num The amount by which to buffer.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The buffered size.\n */\nexport function buffer(size, num, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = size[0] + 2 * num;\n  dest[1] = size[1] + 2 * num;\n  return dest;\n}\n\n/**\n * Determines if a size has a positive area.\n * @param {Size} size The size to test.\n * @return {boolean} The size has a positive area.\n */\nexport function hasArea(size) {\n  return size[0] > 0 && size[1] > 0;\n}\n\n/**\n * Returns a size scaled by a ratio. The result will be an array of integers.\n * @param {Size} size Size.\n * @param {number} ratio Ratio.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} The scaled size.\n */\nexport function scale(size, ratio, dest) {\n  if (dest === undefined) {\n    dest = [0, 0];\n  }\n  dest[0] = (size[0] * ratio + 0.5) | 0;\n  dest[1] = (size[1] * ratio + 0.5) | 0;\n  return dest;\n}\n\n/**\n * Returns an `Size` array for the passed in number (meaning: square) or\n * `Size` array.\n * (meaning: non-square),\n * @param {number|Size} size Width and height.\n * @param {Size} [dest] Optional reusable size array.\n * @return {Size} Size.\n * @api\n */\nexport function toSize(size, dest) {\n  if (Array.isArray(size)) {\n    return size;\n  }\n  if (dest === undefined) {\n    dest = [size, size];\n  } else {\n    dest[0] = size;\n    dest[1] = size;\n  }\n  return dest;\n}\n","/**\n * @module ol/expr/expression\n */\nimport {ascending} from '../array.js';\nimport {fromString as colorFromString} from '../color.js';\nimport {toSize} from '../size.js';\n\n/**\n * @fileoverview This module includes types and functions for parsing array encoded expressions.\n * The result of parsing an encoded expression is one of the specific expression classes.\n * During parsing, information is added to the parsing context about the data accessed by the\n * expression.\n */\n\n/**\n * Base type used for literal style parameters; can be a number literal or the output of an operator,\n * which in turns takes {@link import(\"./expression.js\").ExpressionValue} arguments.\n *\n * See below for details on the available operators (with notes for those that are WebGL or Canvas only).\n *\n * Reading operators:\n *   * `['band', bandIndex, xOffset, yOffset]` For tile layers only. Fetches pixel values from band\n *     `bandIndex` of the source's data. The first `bandIndex` of the source data is `1`. Fetched values\n *     are in the 0..1 range. {@link import(\"../source/TileImage.js\").default} sources have 4 bands: red,\n *     green, blue and alpha. {@link import(\"../source/DataTile.js\").default} sources can have any number\n *     of bands, depending on the underlying data source and\n *     {@link import(\"../source/GeoTIFF.js\").Options configuration}. `xOffset` and `yOffset` are optional\n *     and allow specifying pixel offsets for x and y. This is used for sampling data from neighboring pixels (WebGL only).\n *   * `['get', attributeName]` fetches a feature property value, similar to `feature.get('attributeName')`.\n *   * `['get', attributeName, keyOrArrayIndex, ...]` (Canvas only) Access nested properties and array items of a\n *     feature property. The result is `undefined` when there is nothing at the specified key or index.\n *   * `['geometry-type']` returns a feature's geometry type as string, either: 'LineString', 'Point' or 'Polygon'\n *     `Multi*` values are returned as their singular equivalent\n *     `Circle` geometries are returned as 'Polygon'\n *     `GeometryCollection` geometries are returned as the type of the first geometry found in the collection (WebGL only).\n *   * `['resolution']` returns the current resolution\n *   * `['time']` The time in seconds since the creation of the layer (WebGL only).\n *   * `['var', 'varName']` fetches a value from the style variables; will throw an error if that variable is undefined\n *   * `['zoom']` The current zoom level (WebGL only).\n *   * `['line-metric']` returns the M component of the current point on a line (WebGL only); in case where the geometry layout of the line\n *      does not contain an M component (e.g. XY or XYZ), 0 is returned; 0 is also returned for geometries other than lines.\n *      Please note that the M component will be linearly interpolated between the two points composing a segment.\n *\n * Math operators:\n *   * `['*', value1, value2, ...]` multiplies the values (either numbers or colors)\n *   * `['/', value1, value2]` divides `value1` by `value2`\n *   * `['+', value1, value2, ...]` adds the values\n *   * `['-', value1, value2]` subtracts `value2` from `value1`\n *   * `['clamp', value, low, high]` clamps `value` between `low` and `high`\n *   * `['%', value1, value2]` returns the result of `value1 % value2` (modulo)\n *   * `['^', value1, value2]` returns the value of `value1` raised to the `value2` power\n *   * `['abs', value1]` returns the absolute value of `value1`\n *   * `['floor', value1]` returns the nearest integer less than or equal to `value1`\n *   * `['round', value1]` returns the nearest integer to `value1`\n *   * `['ceil', value1]` returns the nearest integer greater than or equal to `value1`\n *   * `['sin', value1]` returns the sine of `value1`\n *   * `['cos', value1]` returns the cosine of `value1`\n *   * `['atan', value1, value2]` returns `atan2(value1, value2)`. If `value2` is not provided, returns `atan(value1)`\n *   * `['sqrt', value1]` returns the square root of `value1`\n *\n * * Transform operators:\n *   * `['case', condition1, output1, ...conditionN, outputN, fallback]` selects the first output whose corresponding\n *     condition evaluates to `true`. If no match is found, returns the `fallback` value.\n *     All conditions should be `boolean`, output and fallback can be any kind.\n *   * `['match', input, match1, output1, ...matchN, outputN, fallback]` compares the `input` value against all\n *     provided `matchX` values, returning the output associated with the first valid match. If no match is found,\n *     returns the `fallback` value.\n *     `input` and `matchX` values must all be of the same type, and can be `number` or `string`. `outputX` and\n *     `fallback` values must be of the same type, and can be of any kind.\n *   * `['interpolate', interpolation, input, stop1, output1, ...stopN, outputN]` returns a value by interpolating between\n *     pairs of inputs and outputs; `interpolation` can either be `['linear']` or `['exponential', base]` where `base` is\n *     the rate of increase from stop A to stop B (i.e. power to which the interpolation ratio is raised); a value\n *     of 1 is equivalent to `['linear']`.\n *     `input` and `stopX` values must all be of type `number`. `outputX` values can be `number` or `color` values.\n *     Note: `input` will be clamped between `stop1` and `stopN`, meaning that all output values will be comprised\n *     between `output1` and `outputN`.\n *   * `['string', value1, value2, ...]` returns the first value in the list that evaluates to a string.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 'default value']]`\n *     (Canvas only).\n *   * `['number', value1, value2, ...]` returns the first value in the list that evaluates to a number.\n *     An example would be to provide a default value for get: `['string', ['get', 'propertyname'], 42]]`\n *     (Canvas only).\n *   * `['coalesce', value1, value2, ...]` returns the first value in the list which is not null or undefined.\n *     An example would be to provide a default value for get: `['coalesce', ['get','propertyname'], 'default value']]`\n *     (Canvas only).\n *\n * * Logical operators:\n *   * `['<', value1, value2]` returns `true` if `value1` is strictly lower than `value2`, or `false` otherwise.\n *   * `['<=', value1, value2]` returns `true` if `value1` is lower than or equals `value2`, or `false` otherwise.\n *   * `['>', value1, value2]` returns `true` if `value1` is strictly greater than `value2`, or `false` otherwise.\n *   * `['>=', value1, value2]` returns `true` if `value1` is greater than or equals `value2`, or `false` otherwise.\n *   * `['==', value1, value2]` returns `true` if `value1` equals `value2`, or `false` otherwise.\n *   * `['!=', value1, value2]` returns `true` if `value1` does not equal `value2`, or `false` otherwise.\n *   * `['!', value1]` returns `false` if `value1` is `true` or greater than `0`, or `true` otherwise.\n *   * `['all', value1, value2, ...]` returns `true` if all the inputs are `true`, `false` otherwise.\n *   * `['any', value1, value2, ...]` returns `true` if any of the inputs are `true`, `false` otherwise.\n *   * `['has', attributeName, keyOrArrayIndex, ...]` returns `true` if feature properties include the (nested) key `attributeName`,\n *     `false` otherwise.\n *     Note that for WebGL layers, the hardcoded value `-9999999` is used to distinguish when a property is not defined.\n *   * `['between', value1, value2, value3]` returns `true` if `value1` is contained between `value2` and `value3`\n *     (inclusively), or `false` otherwise.\n *   * `['in', needle, haystack]` returns `true` if `needle` is found in `haystack`, and\n *     `false` otherwise.\n *     This operator has the following limitations:\n *     * `haystack` has to be an array of numbers or strings (searching for a substring in a string is not supported yet)\n *     * Only literal arrays are supported as `haystack` for now; this means that `haystack` cannot be the result of an\n *     expression. If `haystack` is an array of strings, use the `literal` operator to disambiguate from an expression:\n *     `['literal', ['abc', 'def', 'ghi']]`\n *\n * * Conversion operators:\n *   * `['array', value1, ...valueN]` creates a numerical array from `number` values; please note that the amount of\n *     values can currently only be 2, 3 or 4 (WebGL only).\n *   * `['color', red, green, blue, alpha]` or `['color', shade, alpha]` creates a `color` value from `number` values;\n *     the `alpha` parameter is optional; if not specified, it will be set to 1 (WebGL only).\n *     Note: `red`, `green` and `blue` or `shade` components must be values between 0 and 255; `alpha` between 0 and 1.\n *   * `['palette', index, colors]` picks a `color` value from an array of colors using the given index; the `index`\n *     expression must evaluate to a number; the items in the `colors` array must be strings with hex colors\n *     (e.g. `'#86A136'`), colors using the rgba[a] functional notation (e.g. `'rgb(134, 161, 54)'` or `'rgba(134, 161, 54, 1)'`),\n *     named colors (e.g. `'red'`), or array literals with 3 ([r, g, b]) or 4 ([r, g, b, a]) values (with r, g, and b\n *     in the 0-255 range and a in the 0-1 range) (WebGL only).\n *   * `['to-string', value]` converts the input value to a string. If the input is a boolean, the result is \"true\" or \"false\".\n *     If the input is a number, it is converted to a string as specified by the \"NumberToString\" algorithm of the ECMAScript\n *     Language Specification. If the input is a color, it is converted to a string of the form \"rgba(r,g,b,a)\". (Canvas only)\n *\n * Values can either be literals or another operator, as they will be evaluated recursively.\n * Literal values can be of the following types:\n * * `boolean`\n * * `number`\n * * `number[]` (number arrays can only have a length of 2, 3 or 4)\n * * `string`\n * * {@link module:ol/color~Color}\n *\n * @typedef {Array<*>|import(\"../color.js\").Color|string|number|boolean} ExpressionValue\n * @api\n */\n\nlet numTypes = 0;\nexport const NoneType = 0;\nexport const BooleanType = 1 << numTypes++;\nexport const NumberType = 1 << numTypes++;\nexport const StringType = 1 << numTypes++;\nexport const ColorType = 1 << numTypes++;\nexport const NumberArrayType = 1 << numTypes++;\nexport const SizeType = 1 << numTypes++;\nexport const AnyType = Math.pow(2, numTypes) - 1;\n\nconst typeNames = {\n  [BooleanType]: 'boolean',\n  [NumberType]: 'number',\n  [StringType]: 'string',\n  [ColorType]: 'color',\n  [NumberArrayType]: 'number[]',\n  [SizeType]: 'size',\n};\n\nconst namedTypes = Object.keys(typeNames).map(Number).sort(ascending);\n\n/**\n * @param {number} type The type.\n * @return {boolean} The type is one of the specific types (not any or a union type).\n */\nfunction isSpecific(type) {\n  return type in typeNames;\n}\n\n/**\n * Get a string representation for a type.\n * @param {number} type The type.\n * @return {string} The type name.\n */\nexport function typeName(type) {\n  const names = [];\n  for (const namedType of namedTypes) {\n    if (includesType(type, namedType)) {\n      names.push(typeNames[namedType]);\n    }\n  }\n  if (names.length === 0) {\n    return 'untyped';\n  }\n  if (names.length < 3) {\n    return names.join(' or ');\n  }\n  return names.slice(0, -1).join(', ') + ', or ' + names[names.length - 1];\n}\n\n/**\n * @param {number} broad The broad type.\n * @param {number} specific The specific type.\n * @return {boolean} The broad type includes the specific type.\n */\nexport function includesType(broad, specific) {\n  return (broad & specific) === specific;\n}\n\n/**\n * @param {number} oneType One type.\n * @param {number} otherType Another type.\n * @return {boolean} The set of types overlap (share a common specific type)\n */\nexport function overlapsType(oneType, otherType) {\n  return !!(oneType & otherType);\n}\n\n/**\n * @param {number} type The type.\n * @param {number} expected The expected type.\n * @return {boolean} The given type is exactly the expected type.\n */\nexport function isType(type, expected) {\n  return type === expected;\n}\n\n/**\n * @typedef {boolean|number|string|Array<number>} LiteralValue\n */\n\nexport class LiteralExpression {\n  /**\n   * @param {number} type The value type.\n   * @param {LiteralValue} value The literal value.\n   */\n  constructor(type, value) {\n    if (!isSpecific(type)) {\n      throw new Error(\n        `literal expressions must have a specific type, got ${typeName(type)}`,\n      );\n    }\n    this.type = type;\n    this.value = value;\n  }\n}\n\nexport class CallExpression {\n  /**\n   * @param {number} type The return type.\n   * @param {string} operator The operator.\n   * @param {...Expression} args The arguments.\n   */\n  constructor(type, operator, ...args) {\n    this.type = type;\n    this.operator = operator;\n    this.args = args;\n  }\n}\n\n/**\n * @typedef {LiteralExpression|CallExpression} Expression\n */\n\n/**\n * @typedef {Object} ParsingContext\n * @property {Set<string>} variables Variables referenced with the 'var' operator.\n * @property {Set<string>} properties Properties referenced with the 'get' operator.\n * @property {boolean} featureId The style uses the feature id.\n * @property {boolean} geometryType The style uses the feature geometry type.\n * @property {boolean} mapState The style uses the map state (view state or time elapsed).\n */\n\n/**\n * @return {ParsingContext} A new parsing context.\n */\nexport function newParsingContext() {\n  return {\n    variables: new Set(),\n    properties: new Set(),\n    featureId: false,\n    geometryType: false,\n    mapState: false,\n  };\n}\n\n/**\n * @typedef {LiteralValue|Array} EncodedExpression\n */\n\n/**\n * @param {EncodedExpression} encoded The encoded expression.\n * @param {number} expectedType The expected type.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression result.\n */\nexport function parse(encoded, expectedType, context) {\n  switch (typeof encoded) {\n    case 'boolean': {\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded ? 'true' : 'false');\n      }\n      if (!includesType(expectedType, BooleanType)) {\n        throw new Error(\n          `got a boolean, but expected ${typeName(expectedType)}`,\n        );\n      }\n      return new LiteralExpression(BooleanType, encoded);\n    }\n    case 'number': {\n      if (isType(expectedType, SizeType)) {\n        return new LiteralExpression(SizeType, toSize(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (isType(expectedType, StringType)) {\n        return new LiteralExpression(StringType, encoded.toString());\n      }\n      if (!includesType(expectedType, NumberType)) {\n        throw new Error(`got a number, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(NumberType, encoded);\n    }\n    case 'string': {\n      if (isType(expectedType, ColorType)) {\n        return new LiteralExpression(ColorType, colorFromString(encoded));\n      }\n      if (isType(expectedType, BooleanType)) {\n        return new LiteralExpression(BooleanType, !!encoded);\n      }\n      if (!includesType(expectedType, StringType)) {\n        throw new Error(`got a string, but expected ${typeName(expectedType)}`);\n      }\n      return new LiteralExpression(StringType, encoded);\n    }\n    default: {\n      // pass\n    }\n  }\n\n  if (!Array.isArray(encoded)) {\n    throw new Error('expression must be an array or a primitive value');\n  }\n\n  if (encoded.length === 0) {\n    throw new Error('empty expression');\n  }\n\n  if (typeof encoded[0] === 'string') {\n    return parseCallExpression(encoded, expectedType, context);\n  }\n\n  for (const item of encoded) {\n    if (typeof item !== 'number') {\n      throw new Error('expected an array of numbers');\n    }\n  }\n\n  if (isType(expectedType, SizeType)) {\n    if (encoded.length !== 2) {\n      throw new Error(\n        `expected an array of two values for a size, got ${encoded.length}`,\n      );\n    }\n    return new LiteralExpression(SizeType, encoded);\n  }\n\n  if (isType(expectedType, ColorType)) {\n    if (encoded.length === 3) {\n      return new LiteralExpression(ColorType, [...encoded, 1]);\n    }\n    if (encoded.length === 4) {\n      return new LiteralExpression(ColorType, encoded);\n    }\n    throw new Error(\n      `expected an array of 3 or 4 values for a color, got ${encoded.length}`,\n    );\n  }\n\n  if (!includesType(expectedType, NumberArrayType)) {\n    throw new Error(\n      `got an array of numbers, but expected ${typeName(expectedType)}`,\n    );\n  }\n\n  return new LiteralExpression(NumberArrayType, encoded);\n}\n\n/**\n * @type {Object<string, string>}\n */\nexport const Ops = {\n  Get: 'get',\n  Var: 'var',\n  Concat: 'concat',\n  GeometryType: 'geometry-type',\n  LineMetric: 'line-metric',\n  Any: 'any',\n  All: 'all',\n  Not: '!',\n  Resolution: 'resolution',\n  Zoom: 'zoom',\n  Time: 'time',\n  Equal: '==',\n  NotEqual: '!=',\n  GreaterThan: '>',\n  GreaterThanOrEqualTo: '>=',\n  LessThan: '<',\n  LessThanOrEqualTo: '<=',\n  Multiply: '*',\n  Divide: '/',\n  Add: '+',\n  Subtract: '-',\n  Clamp: 'clamp',\n  Mod: '%',\n  Pow: '^',\n  Abs: 'abs',\n  Floor: 'floor',\n  Ceil: 'ceil',\n  Round: 'round',\n  Sin: 'sin',\n  Cos: 'cos',\n  Atan: 'atan',\n  Sqrt: 'sqrt',\n  Match: 'match',\n  Between: 'between',\n  Interpolate: 'interpolate',\n  Coalesce: 'coalesce',\n  Case: 'case',\n  In: 'in',\n  Number: 'number',\n  String: 'string',\n  Array: 'array',\n  Color: 'color',\n  Id: 'id',\n  Band: 'band',\n  Palette: 'palette',\n  ToString: 'to-string',\n  Has: 'has',\n};\n\n/**\n * @typedef {function(Array, number, ParsingContext):Expression} Parser\n *\n * Second argument is the expected type.\n */\n\n/**\n * @type {Object<string, Parser>}\n */\nconst parsers = {\n  [Ops.Get]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Var]: createCallExpressionParser(hasArgsCount(1, 1), withVarArgs),\n  [Ops.Has]: createCallExpressionParser(hasArgsCount(1, Infinity), withGetArgs),\n  [Ops.Id]: createCallExpressionParser(usesFeatureId, withNoArgs),\n  [Ops.Concat]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(StringType),\n  ),\n  [Ops.GeometryType]: createCallExpressionParser(usesGeometryType, withNoArgs),\n  [Ops.LineMetric]: createCallExpressionParser(withNoArgs),\n  [Ops.Resolution]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Zoom]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Time]: createCallExpressionParser(usesMapState, withNoArgs),\n  [Ops.Any]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.All]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Not]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType),\n  ),\n  [Ops.Equal]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.NotEqual]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.GreaterThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.GreaterThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThan]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.LessThanOrEqualTo]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Multiply]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Coalesce]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfReturnType,\n  ),\n  [Ops.Divide]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Add]: createCallExpressionParser(\n    hasArgsCount(2, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Subtract]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Clamp]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Mod]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Pow]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Abs]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Floor]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Ceil]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Round]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sin]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Cos]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Atan]: createCallExpressionParser(\n    hasArgsCount(1, 2),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Sqrt]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Match]: createCallExpressionParser(\n    hasArgsCount(4, Infinity),\n    hasEvenArgs,\n    withMatchArgs,\n  ),\n  [Ops.Between]: createCallExpressionParser(\n    hasArgsCount(3, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Interpolate]: createCallExpressionParser(\n    hasArgsCount(6, Infinity),\n    hasEvenArgs,\n    withInterpolateArgs,\n  ),\n  [Ops.Case]: createCallExpressionParser(\n    hasArgsCount(3, Infinity),\n    hasOddArgs,\n    withCaseArgs,\n  ),\n  [Ops.In]: createCallExpressionParser(hasArgsCount(2, 2), withInArgs),\n  [Ops.Number]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.String]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(AnyType),\n  ),\n  [Ops.Array]: createCallExpressionParser(\n    hasArgsCount(1, Infinity),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Color]: createCallExpressionParser(\n    hasArgsCount(1, 4),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Band]: createCallExpressionParser(\n    hasArgsCount(1, 3),\n    withArgsOfType(NumberType),\n  ),\n  [Ops.Palette]: createCallExpressionParser(\n    hasArgsCount(2, 2),\n    withPaletteArgs,\n  ),\n  [Ops.ToString]: createCallExpressionParser(\n    hasArgsCount(1, 1),\n    withArgsOfType(BooleanType | NumberType | StringType | ColorType),\n  ),\n};\n\n/**\n * @typedef {function(Array<EncodedExpression>, number, ParsingContext):Array<Expression>|void} ArgValidator\n *\n * An argument validator applies various checks to an encoded expression arguments and\n * returns the parsed arguments if any.  The second argument is the return type of the call expression.\n */\n\n/**\n * @type {ArgValidator}\n */\nfunction withGetArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n  const args = new Array(argsCount);\n  for (let i = 0; i < argsCount; ++i) {\n    const key = encoded[i + 1];\n    switch (typeof key) {\n      case 'number': {\n        args[i] = new LiteralExpression(NumberType, key);\n        break;\n      }\n      case 'string': {\n        args[i] = new LiteralExpression(StringType, key);\n        break;\n      }\n      default: {\n        throw new Error(\n          `expected a string key or numeric array index for a get operation, got ${key}`,\n        );\n      }\n    }\n    if (i === 0) {\n      context.properties.add(String(key));\n    }\n  }\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withVarArgs(encoded, returnType, context) {\n  const name = encoded[1];\n  if (typeof name !== 'string') {\n    throw new Error('expected a string argument for var operation');\n  }\n  context.variables.add(name);\n\n  return [new LiteralExpression(StringType, name)];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesFeatureId(encoded, returnType, context) {\n  context.featureId = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesGeometryType(encoded, returnType, context) {\n  context.geometryType = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction usesMapState(encoded, returnType, context) {\n  context.mapState = true;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withNoArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  if (encoded.length !== 1) {\n    throw new Error(`expected no arguments for ${operation} operation`);\n  }\n  return [];\n}\n\n/**\n * @param {number} minArgs The minimum number of arguments.\n * @param {number} maxArgs The maximum number of arguments.\n * @return {ArgValidator} The argument validator\n */\nfunction hasArgsCount(minArgs, maxArgs) {\n  return function (encoded, returnType, context) {\n    const operation = encoded[0];\n    const argCount = encoded.length - 1;\n    if (minArgs === maxArgs) {\n      if (argCount !== minArgs) {\n        const plural = minArgs === 1 ? '' : 's';\n        throw new Error(\n          `expected ${minArgs} argument${plural} for ${operation}, got ${argCount}`,\n        );\n      }\n    } else if (argCount < minArgs || argCount > maxArgs) {\n      const range =\n        maxArgs === Infinity\n          ? `${minArgs} or more`\n          : `${minArgs} to ${maxArgs}`;\n      throw new Error(\n        `expected ${range} arguments for ${operation}, got ${argCount}`,\n      );\n    }\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withArgsOfReturnType(encoded, returnType, context) {\n  const argCount = encoded.length - 1;\n  /**\n   * @type {Array<Expression>}\n   */\n  const args = new Array(argCount);\n  for (let i = 0; i < argCount; ++i) {\n    const expression = parse(encoded[i + 1], returnType, context);\n    args[i] = expression;\n  }\n  return args;\n}\n\n/**\n * @param {number} argType The argument type.\n * @return {ArgValidator} The argument validator\n */\nfunction withArgsOfType(argType) {\n  return function (encoded, returnType, context) {\n    const argCount = encoded.length - 1;\n    /**\n     * @type {Array<Expression>}\n     */\n    const args = new Array(argCount);\n    for (let i = 0; i < argCount; ++i) {\n      const expression = parse(encoded[i + 1], argType, context);\n      args[i] = expression;\n    }\n    return args;\n  };\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasOddArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 0) {\n    throw new Error(\n      `expected an odd number of arguments for ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction hasEvenArgs(encoded, returnType, context) {\n  const operation = encoded[0];\n  const argCount = encoded.length - 1;\n  if (argCount % 2 === 1) {\n    throw new Error(\n      `expected an even number of arguments for operation ${operation}, got ${argCount} instead`,\n    );\n  }\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withMatchArgs(encoded, returnType, context) {\n  const argsCount = encoded.length - 1;\n\n  const inputType = StringType | NumberType | BooleanType;\n\n  const input = parse(encoded[1], inputType, context);\n\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(argsCount - 2);\n  for (let i = 0; i < argsCount - 2; i += 2) {\n    try {\n      const match = parse(encoded[i + 2], input.type, context);\n      args[i] = match;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of match expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 3], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} of match expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [input, ...args, fallback];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInterpolateArgs(encoded, returnType, context) {\n  const interpolationType = encoded[1];\n  /**\n   * @type {number}\n   */\n  let base;\n  switch (interpolationType[0]) {\n    case 'linear':\n      base = 1;\n      break;\n    case 'exponential':\n      const b = interpolationType[1];\n      if (typeof b !== 'number' || b <= 0) {\n        throw new Error(\n          `expected a number base for exponential interpolation` +\n            `, got ${JSON.stringify(b)} instead`,\n        );\n      }\n      base = b;\n      break;\n    default:\n      throw new Error(\n        `invalid interpolation type: ${JSON.stringify(interpolationType)}`,\n      );\n  }\n\n  const interpolation = new LiteralExpression(NumberType, base);\n\n  let input;\n  try {\n    input = parse(encoded[2], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse argument 1 in interpolate expression: ${err.message}`,\n    );\n  }\n\n  const args = new Array(encoded.length - 3);\n  for (let i = 0; i < args.length; i += 2) {\n    try {\n      const stop = parse(encoded[i + 3], NumberType, context);\n      args[i] = stop;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 2} for interpolate expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 4], returnType, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 3} for interpolate expression: ${err.message}`,\n      );\n    }\n  }\n\n  return [interpolation, input, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withCaseArgs(encoded, returnType, context) {\n  const fallback = parse(encoded[encoded.length - 1], returnType, context);\n\n  const args = new Array(encoded.length - 1);\n  for (let i = 0; i < args.length - 1; i += 2) {\n    try {\n      const condition = parse(encoded[i + 1], BooleanType, context);\n      args[i] = condition;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i} of case expression: ${err.message}`,\n      );\n    }\n    try {\n      const output = parse(encoded[i + 2], fallback.type, context);\n      args[i + 1] = output;\n    } catch (err) {\n      throw new Error(\n        `failed to parse argument ${i + 1} of case expression: ${err.message}`,\n      );\n    }\n  }\n\n  args[args.length - 1] = fallback;\n  return args;\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withInArgs(encoded, returnType, context) {\n  let haystack = encoded[2];\n  if (!Array.isArray(haystack)) {\n    throw new Error(\n      `the second argument for the \"in\" operator must be an array`,\n    );\n  }\n  /**\n   * @type {number}\n   */\n  let needleType;\n  if (typeof haystack[0] === 'string') {\n    if (haystack[0] !== 'literal') {\n      throw new Error(\n        `for the \"in\" operator, a string array should be wrapped in a \"literal\" operator to disambiguate from expressions`,\n      );\n    }\n    if (!Array.isArray(haystack[1])) {\n      throw new Error(\n        `failed to parse \"in\" expression: the literal operator must be followed by an array`,\n      );\n    }\n    haystack = haystack[1];\n    needleType = StringType;\n  } else {\n    needleType = NumberType;\n  }\n\n  const args = new Array(haystack.length);\n  for (let i = 0; i < args.length; i++) {\n    try {\n      const arg = parse(haystack[i], needleType, context);\n      args[i] = arg;\n    } catch (err) {\n      throw new Error(\n        `failed to parse haystack item ${i} for \"in\" expression: ${err.message}`,\n      );\n    }\n  }\n\n  const needle = parse(encoded[1], needleType, context);\n  return [needle, ...args];\n}\n\n/**\n * @type {ArgValidator}\n */\nfunction withPaletteArgs(encoded, returnType, context) {\n  let index;\n  try {\n    index = parse(encoded[1], NumberType, context);\n  } catch (err) {\n    throw new Error(\n      `failed to parse first argument in palette expression: ${err.message}`,\n    );\n  }\n  const colors = encoded[2];\n  if (!Array.isArray(colors)) {\n    throw new Error('the second argument of palette must be an array');\n  }\n  const parsedColors = new Array(colors.length);\n  for (let i = 0; i < parsedColors.length; i++) {\n    let color;\n    try {\n      color = parse(colors[i], ColorType, context);\n    } catch (err) {\n      throw new Error(\n        `failed to parse color at index ${i} in palette expression: ${err.message}`,\n      );\n    }\n    if (!(color instanceof LiteralExpression)) {\n      throw new Error(\n        `the palette color at index ${i} must be a literal value`,\n      );\n    }\n    parsedColors[i] = color;\n  }\n  return [index, ...parsedColors];\n}\n\n/**\n * @param {Array<ArgValidator>} validators A chain of argument validators.  The last validator is expected\n * to return the parsed arguments.\n * @return {Parser} The parser.\n */\nfunction createCallExpressionParser(...validators) {\n  return function (encoded, returnType, context) {\n    const operator = encoded[0];\n\n    /**\n     * @type {Array<Expression>}\n     */\n    let args;\n    for (let i = 0; i < validators.length; i++) {\n      const parsed = validators[i](encoded, returnType, context);\n      if (i == validators.length - 1) {\n        if (!parsed) {\n          throw new Error(\n            'expected last argument validator to return the parsed args',\n          );\n        }\n        args = parsed;\n      }\n    }\n    return new CallExpression(returnType, operator, ...args);\n  };\n}\n\n/**\n * @param {Array} encoded The encoded expression.\n * @param {number} returnType The expected return type of the call expression.\n * @param {ParsingContext} context The parsing context.\n * @return {Expression} The parsed expression.\n */\nfunction parseCallExpression(encoded, returnType, context) {\n  const operator = encoded[0];\n\n  const parser = parsers[operator];\n  if (!parser) {\n    throw new Error(`unknown operator: ${operator}`);\n  }\n  return parser(encoded, returnType, context);\n}\n\n/**\n * Returns a simplified geometry type suited for the `geometry-type` operator\n * @param {import('../geom/Geometry.js').default|import('../render/Feature.js').default} geometry Geometry object\n * @return {'Point'|'LineString'|'Polygon'|''} Simplified geometry type; empty string of no geometry found\n */\nexport function computeGeometryType(geometry) {\n  if (!geometry) {\n    return '';\n  }\n  const type = geometry.getType();\n  switch (type) {\n    case 'Point':\n    case 'LineString':\n    case 'Polygon':\n      return type;\n    case 'MultiPoint':\n    case 'MultiLineString':\n    case 'MultiPolygon':\n      return /** @type {'Point'|'LineString'|'Polygon'} */ (type.substring(5));\n    case 'Circle':\n      return 'Polygon';\n    case 'GeometryCollection':\n      return computeGeometryType(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ).getGeometries()[0],\n      );\n    default:\n      return '';\n  }\n}\n","/**\n * @module ol/expr/cpu\n */\n\nimport {\n  fromString,\n  lchaToRgba,\n  rgbaToLcha,\n  toString,\n  withAlpha,\n} from '../color.js';\nimport {ColorType, LiteralExpression, Ops, parse} from './expression.js';\n\n/**\n * @fileoverview This module includes functions to build expressions for evaluation on the CPU.\n * Building is composed of two steps: parsing and compiling.  The parsing step takes an encoded\n * expression and returns an instance of one of the expression classes.  The compiling step takes\n * the expression instance and returns a function that can be evaluated in to return a literal\n * value.  The evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {Object} EvaluationContext\n * @property {Object} properties The values for properties used in 'get' expressions.\n * @property {Object} variables The values for variables used in 'var' expressions.\n * @property {number} resolution The map resolution.\n * @property {string|number|null} featureId The feature id.\n * @property {string} geometryType Geometry type of the current object.\n */\n\n/**\n * @return {EvaluationContext} A new evaluation context.\n */\nexport function newEvaluationContext() {\n  return {\n    variables: {},\n    properties: {},\n    resolution: NaN,\n    featureId: null,\n    geometryType: '',\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"./expression.js\").LiteralValue} ExpressionEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):boolean} BooleanEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):number} NumberEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):string} StringEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|string)} ColorLikeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} NumberArrayEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):Array<number>} CoordinateEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>)} SizeEvaluator\n */\n\n/**\n * @typedef {function(EvaluationContext):(Array<number>|number)} SizeLikeEvaluator\n */\n\n/**\n * @param {import('./expression.js').EncodedExpression} encoded The encoded expression.\n * @param {number} type The expected type.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The expression evaluator.\n */\nexport function buildExpression(encoded, type, context) {\n  const expression = parse(encoded, type, context);\n  return compileExpression(expression, context);\n}\n\n/**\n * @param {import(\"./expression.js\").Expression} expression The expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileExpression(expression, context) {\n  if (expression instanceof LiteralExpression) {\n    // convert colors to array if possible\n    if (expression.type === ColorType && typeof expression.value === 'string') {\n      const colorValue = fromString(expression.value);\n      return function () {\n        return colorValue;\n      };\n    }\n    return function () {\n      return expression.value;\n    };\n  }\n  const operator = expression.operator;\n  switch (operator) {\n    case Ops.Number:\n    case Ops.String:\n    case Ops.Coalesce: {\n      return compileAssertionExpression(expression, context);\n    }\n    case Ops.Get:\n    case Ops.Var:\n    case Ops.Has: {\n      return compileAccessorExpression(expression, context);\n    }\n    case Ops.Id: {\n      return (context) => context.featureId;\n    }\n    case Ops.GeometryType: {\n      return (context) => context.geometryType;\n    }\n    case Ops.Concat: {\n      const args = expression.args.map((e) => compileExpression(e, context));\n      return (context) =>\n        ''.concat(...args.map((arg) => arg(context).toString()));\n    }\n    case Ops.Resolution: {\n      return (context) => context.resolution;\n    }\n    case Ops.Any:\n    case Ops.All:\n    case Ops.Between:\n    case Ops.In:\n    case Ops.Not: {\n      return compileLogicalExpression(expression, context);\n    }\n    case Ops.Equal:\n    case Ops.NotEqual:\n    case Ops.LessThan:\n    case Ops.LessThanOrEqualTo:\n    case Ops.GreaterThan:\n    case Ops.GreaterThanOrEqualTo: {\n      return compileComparisonExpression(expression, context);\n    }\n    case Ops.Multiply:\n    case Ops.Divide:\n    case Ops.Add:\n    case Ops.Subtract:\n    case Ops.Clamp:\n    case Ops.Mod:\n    case Ops.Pow:\n    case Ops.Abs:\n    case Ops.Floor:\n    case Ops.Ceil:\n    case Ops.Round:\n    case Ops.Sin:\n    case Ops.Cos:\n    case Ops.Atan:\n    case Ops.Sqrt: {\n      return compileNumericExpression(expression, context);\n    }\n    case Ops.Case: {\n      return compileCaseExpression(expression, context);\n    }\n    case Ops.Match: {\n      return compileMatchExpression(expression, context);\n    }\n    case Ops.Interpolate: {\n      return compileInterpolateExpression(expression, context);\n    }\n    case Ops.ToString: {\n      return compileConvertExpression(expression, context);\n    }\n    default: {\n      throw new Error(`Unsupported operator ${operator}`);\n    }\n    // TODO: unimplemented\n    // Ops.Zoom\n    // Ops.Time\n    // Ops.Array\n    // Ops.Color\n    // Ops.Band\n    // Ops.Palette\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAssertionExpression(expression, context) {\n  const type = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (type) {\n    case Ops.Coalesce: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value !== 'undefined' && value !== null) {\n            return value;\n          }\n        }\n        throw new Error('Expected one of the values to be non-null');\n      };\n    }\n    case Ops.Number:\n    case Ops.String: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          const value = args[i](context);\n          if (typeof value === type) {\n            return value;\n          }\n        }\n        throw new Error(`Expected one of the values to be a ${type}`);\n      };\n    }\n    default: {\n      throw new Error(`Unsupported assertion operator ${type}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileAccessorExpression(expression, context) {\n  const nameExpression = /** @type {LiteralExpression} */ (expression.args[0]);\n  const name = /** @type {string} */ (nameExpression.value);\n  switch (expression.operator) {\n    case Ops.Get: {\n      return (context) => {\n        const args = expression.args;\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          value = value[key];\n        }\n        return value;\n      };\n    }\n    case Ops.Var: {\n      return (context) => context.variables[name];\n    }\n    case Ops.Has: {\n      return (context) => {\n        const args = expression.args;\n        if (!(name in context.properties)) {\n          return false;\n        }\n        let value = context.properties[name];\n        for (let i = 1, ii = args.length; i < ii; ++i) {\n          const keyExpression = /** @type {LiteralExpression} */ (args[i]);\n          const key = /** @type {string|number} */ (keyExpression.value);\n          if (!value || !Object.hasOwn(value, key)) {\n            return false;\n          }\n          value = value[key];\n        }\n        return true;\n      };\n    }\n    default: {\n      throw new Error(`Unsupported accessor operator ${expression.operator}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileComparisonExpression(expression, context) {\n  const op = expression.operator;\n  const left = compileExpression(expression.args[0], context);\n  const right = compileExpression(expression.args[1], context);\n  switch (op) {\n    case Ops.Equal: {\n      return (context) => left(context) === right(context);\n    }\n    case Ops.NotEqual: {\n      return (context) => left(context) !== right(context);\n    }\n    case Ops.LessThan: {\n      return (context) => left(context) < right(context);\n    }\n    case Ops.LessThanOrEqualTo: {\n      return (context) => left(context) <= right(context);\n    }\n    case Ops.GreaterThan: {\n      return (context) => left(context) > right(context);\n    }\n    case Ops.GreaterThanOrEqualTo: {\n      return (context) => left(context) >= right(context);\n    }\n    default: {\n      throw new Error(`Unsupported comparison operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {BooleanEvaluator} The evaluator function.\n */\nfunction compileLogicalExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Any: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.All: {\n      return (context) => {\n        for (let i = 0; i < length; ++i) {\n          if (!args[i](context)) {\n            return false;\n          }\n        }\n        return true;\n      };\n    }\n    case Ops.Between: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        const max = args[2](context);\n        return value >= min && value <= max;\n      };\n    }\n    case Ops.In: {\n      return (context) => {\n        const value = args[0](context);\n        for (let i = 1; i < length; ++i) {\n          if (value === args[i](context)) {\n            return true;\n          }\n        }\n        return false;\n      };\n    }\n    case Ops.Not: {\n      return (context) => !args[0](context);\n    }\n    default: {\n      throw new Error(`Unsupported logical operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {NumberEvaluator} The evaluator function.\n */\nfunction compileNumericExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.Multiply: {\n      return (context) => {\n        let value = 1;\n        for (let i = 0; i < length; ++i) {\n          value *= args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Divide: {\n      return (context) => args[0](context) / args[1](context);\n    }\n    case Ops.Add: {\n      return (context) => {\n        let value = 0;\n        for (let i = 0; i < length; ++i) {\n          value += args[i](context);\n        }\n        return value;\n      };\n    }\n    case Ops.Subtract: {\n      return (context) => args[0](context) - args[1](context);\n    }\n    case Ops.Clamp: {\n      return (context) => {\n        const value = args[0](context);\n        const min = args[1](context);\n        if (value < min) {\n          return min;\n        }\n        const max = args[2](context);\n        if (value > max) {\n          return max;\n        }\n        return value;\n      };\n    }\n    case Ops.Mod: {\n      return (context) => args[0](context) % args[1](context);\n    }\n    case Ops.Pow: {\n      return (context) => Math.pow(args[0](context), args[1](context));\n    }\n    case Ops.Abs: {\n      return (context) => Math.abs(args[0](context));\n    }\n    case Ops.Floor: {\n      return (context) => Math.floor(args[0](context));\n    }\n    case Ops.Ceil: {\n      return (context) => Math.ceil(args[0](context));\n    }\n    case Ops.Round: {\n      return (context) => Math.round(args[0](context));\n    }\n    case Ops.Sin: {\n      return (context) => Math.sin(args[0](context));\n    }\n    case Ops.Cos: {\n      return (context) => Math.cos(args[0](context));\n    }\n    case Ops.Atan: {\n      if (length === 2) {\n        return (context) => Math.atan2(args[0](context), args[1](context));\n      }\n      return (context) => Math.atan(args[0](context));\n    }\n    case Ops.Sqrt: {\n      return (context) => Math.sqrt(args[0](context));\n    }\n    default: {\n      throw new Error(`Unsupported numeric operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileCaseExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    for (let i = 0; i < length - 1; i += 2) {\n      const condition = args[i](context);\n      if (condition) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileMatchExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const value = args[0](context);\n    for (let i = 1; i < length - 1; i += 2) {\n      if (value === args[i](context)) {\n        return args[i + 1](context);\n      }\n    }\n    return args[length - 1](context);\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileInterpolateExpression(expression, context) {\n  const length = expression.args.length;\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  return (context) => {\n    const base = args[0](context);\n    const value = args[1](context);\n\n    let previousInput;\n    let previousOutput;\n    for (let i = 2; i < length; i += 2) {\n      const input = args[i](context);\n      let output = args[i + 1](context);\n      const isColor = Array.isArray(output);\n      if (isColor) {\n        output = withAlpha(output);\n      }\n      if (input >= value) {\n        if (i === 2) {\n          return output;\n        }\n        if (isColor) {\n          return interpolateColor(\n            base,\n            value,\n            previousInput,\n            previousOutput,\n            input,\n            output,\n          );\n        }\n        return interpolateNumber(\n          base,\n          value,\n          previousInput,\n          previousOutput,\n          input,\n          output,\n        );\n      }\n      previousInput = input;\n      previousOutput = output;\n    }\n    return previousOutput;\n  };\n}\n\n/**\n * @param {import('./expression.js').CallExpression} expression The call expression.\n * @param {import('./expression.js').ParsingContext} context The parsing context.\n * @return {ExpressionEvaluator} The evaluator function.\n */\nfunction compileConvertExpression(expression, context) {\n  const op = expression.operator;\n  const length = expression.args.length;\n\n  const args = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    args[i] = compileExpression(expression.args[i], context);\n  }\n  switch (op) {\n    case Ops.ToString: {\n      return (context) => {\n        const value = args[0](context);\n        if (expression.args[0].type === ColorType) {\n          return toString(value);\n        }\n        return value.toString();\n      };\n    }\n    default: {\n      throw new Error(`Unsupported convert operator ${op}`);\n    }\n  }\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {number} output1 The first output value.\n * @param {number} input2 The second input value.\n * @param {number} output2 The second output value.\n * @return {number} The interpolated value.\n */\nfunction interpolateNumber(base, value, input1, output1, input2, output2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return output1;\n  }\n  const along = value - input1;\n  const factor =\n    base === 1\n      ? along / delta\n      : (Math.pow(base, along) - 1) / (Math.pow(base, delta) - 1);\n  return output1 + factor * (output2 - output1);\n}\n\n/**\n * @param {number} base The base.\n * @param {number} value The value.\n * @param {number} input1 The first input value.\n * @param {import('../color.js').Color} rgba1 The first output value.\n * @param {number} input2 The second input value.\n * @param {import('../color.js').Color} rgba2 The second output value.\n * @return {import('../color.js').Color} The interpolated color.\n */\nfunction interpolateColor(base, value, input1, rgba1, input2, rgba2) {\n  const delta = input2 - input1;\n  if (delta === 0) {\n    return rgba1;\n  }\n  const lcha1 = rgbaToLcha(rgba1);\n  const lcha2 = rgbaToLcha(rgba2);\n  let deltaHue = lcha2[2] - lcha1[2];\n  if (deltaHue > 180) {\n    deltaHue -= 360;\n  } else if (deltaHue < -180) {\n    deltaHue += 360;\n  }\n\n  const lcha = [\n    interpolateNumber(base, value, input1, lcha1[0], input2, lcha2[0]),\n    interpolateNumber(base, value, input1, lcha1[1], input2, lcha2[1]),\n    lcha1[2] + interpolateNumber(base, value, input1, 0, input2, deltaHue),\n    interpolateNumber(base, value, input1, rgba1[3], input2, rgba2[3]),\n  ];\n  return lchaToRgba(lcha);\n}\n","/**\n * @module ol/Image\n */\nimport ImageState from './ImageState.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {listenOnce, unlistenByKey} from './events.js';\nimport {toPromise} from './functions.js';\nimport {CREATE_IMAGE_BITMAP, IMAGE_DECODE} from './has.js';\n\n/**\n * A function that takes an {@link module:ol/Image~ImageWrapper} for the image and a\n * `{string}` for the src as arguments. It is supposed to make it so the\n * underlying image {@link module:ol/Image~ImageWrapper#getImage} is assigned the\n * content specified by the src. If not specified, the default is\n *\n *     function(image, src) {\n *       image.getImage().src = src;\n *     }\n *\n * Providing a custom `imageLoadFunction` can be useful to load images with\n * post requests or - in general - through XHR requests, where the src of the\n * image element would be set to a data URI when the content is loaded.\n *\n * @typedef {function(import(\"./Image.js\").default, string): void} LoadFunction\n * @api\n */\n\n/**\n * @typedef {Object} ImageObject\n * @property {import(\"./extent.js\").Extent} [extent] Extent, if different from the requested one.\n * @property {import(\"./resolution.js\").ResolutionLike} [resolution] Resolution, if different from the requested one.\n * When x and y resolution are different, use the array type (`[xResolution, yResolution]`).\n * @property {number} [pixelRatio] Pixel ratio, if different from the requested one.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * For images that cover any extent and resolution (static images), the loader function should not accept\n * any arguments. The function returns an {@link import(\"./DataTile.js\").ImageLike image}, an\n * {@link import(\"./Image.js\").ImageObject image object}, or a promise for the same.\n * For loaders that generate images, the promise should not resolve until the image is loaded.\n * If the returned image does not match the extent, resolution or pixel ratio passed to the loader,\n * it has to return an {@link import(\"./Image.js\").ImageObject image object} with the `image` and the\n * correct `extent`, `resolution` and `pixelRatio`.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): import(\"./DataTile.js\").ImageLike|ImageObject|Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} Loader\n * @api\n */\n\n/**\n * Loader function used for image sources. Receives extent, resolution and pixel ratio as arguments.\n * The function returns a promise for an  {@link import(\"./Image.js\").ImageObject image object}.\n *\n * @typedef {function(import(\"./extent.js\").Extent, number, number, (function(HTMLImageElement, string): void)=): Promise<import(\"./DataTile.js\").ImageLike|ImageObject>} ImageObjectPromiseLoader\n */\n\nclass ImageWrapper extends EventTarget {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number|Array<number>|undefined} resolution Resolution. If provided as array, x and y\n   * resolution will be assumed.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"./ImageState.js\").default|Loader} stateOrLoader State.\n   */\n  constructor(extent, resolution, pixelRatio, stateOrLoader) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.extent = extent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number|Array<number>|undefined}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @protected\n     * @type {import(\"./ImageState.js\").default}\n     */\n    this.state =\n      typeof stateOrLoader === 'function' ? ImageState.IDLE : stateOrLoader;\n\n    /**\n     * @private\n     * @type {import('./DataTile.js').ImageLike|null}\n     */\n    this.image_ = null;\n\n    /**\n     * @protected\n     * @type {Loader|null}\n     */\n    this.loader = typeof stateOrLoader === 'function' ? stateOrLoader : null;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @return {import(\"./extent.js\").Extent} Extent.\n   */\n  getExtent() {\n    return this.extent;\n  }\n\n  /**\n   * @return {import('./DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * @return {number} PixelRatio.\n   */\n  getPixelRatio() {\n    return this.pixelRatio_;\n  }\n\n  /**\n   * @return {number|Array<number>} Resolution.\n   */\n  getResolution() {\n    return /** @type {number} */ (this.resolution);\n  }\n\n  /**\n   * @return {import(\"./ImageState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      if (this.loader) {\n        this.state = ImageState.LOADING;\n        this.changed();\n        const resolution = this.getResolution();\n        const requestResolution = Array.isArray(resolution)\n          ? resolution[0]\n          : resolution;\n        toPromise(() =>\n          this.loader(\n            this.getExtent(),\n            requestResolution,\n            this.getPixelRatio(),\n          ),\n        )\n          .then((image) => {\n            if ('image' in image) {\n              this.image_ = image.image;\n            }\n            if ('extent' in image) {\n              this.extent = image.extent;\n            }\n            if ('resolution' in image) {\n              this.resolution = image.resolution;\n            }\n            if ('pixelRatio' in image) {\n              this.pixelRatio_ = image.pixelRatio;\n            }\n            if (\n              image instanceof HTMLImageElement ||\n              (CREATE_IMAGE_BITMAP && image instanceof ImageBitmap) ||\n              image instanceof HTMLCanvasElement ||\n              image instanceof HTMLVideoElement\n            ) {\n              this.image_ = image;\n            }\n            this.state = ImageState.LOADED;\n          })\n          .catch((error) => {\n            this.state = ImageState.ERROR;\n            console.error(error); // eslint-disable-line no-console\n          })\n          .finally(() => this.changed());\n      }\n    }\n  }\n\n  /**\n   * @param {import('./DataTile.js').ImageLike} image The image.\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * @param {number|Array<number>} resolution Resolution.\n   */\n  setResolution(resolution) {\n    this.resolution = resolution;\n  }\n}\n\n/**\n * @param {import('./DataTile.js').ImageLike} image Image element.\n * @param {function():any} loadHandler Load callback function.\n * @param {function():any} errorHandler Error callback function.\n * @return {function():void} Callback to stop listening.\n */\nexport function listenImage(image, loadHandler, errorHandler) {\n  const img = /** @type {HTMLImageElement} */ (image);\n  let listening = true;\n  let decoding = false;\n  let loaded = false;\n\n  const listenerKeys = [\n    listenOnce(img, EventType.LOAD, function () {\n      loaded = true;\n      if (!decoding) {\n        loadHandler();\n      }\n    }),\n  ];\n\n  if (img.src && IMAGE_DECODE) {\n    decoding = true;\n    img\n      .decode()\n      .then(function () {\n        if (listening) {\n          loadHandler();\n        }\n      })\n      .catch(function (error) {\n        if (listening) {\n          if (loaded) {\n            loadHandler();\n          } else {\n            errorHandler();\n          }\n        }\n      });\n  } else {\n    listenerKeys.push(listenOnce(img, EventType.ERROR, errorHandler));\n  }\n\n  return function unlisten() {\n    listening = false;\n    listenerKeys.forEach(unlistenByKey);\n  };\n}\n\n/**\n * Loads an image.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n * @api\n */\nexport function load(image, src) {\n  return new Promise((resolve, reject) => {\n    function handleLoad() {\n      unlisten();\n      resolve(image);\n    }\n    function handleError() {\n      unlisten();\n      reject(new Error('Image load error'));\n    }\n    function unlisten() {\n      image.removeEventListener('load', handleLoad);\n      image.removeEventListener('error', handleError);\n    }\n    image.addEventListener('load', handleLoad);\n    image.addEventListener('error', handleError);\n    if (src) {\n      image.src = src;\n    }\n  });\n}\n\n/**\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<HTMLImageElement>} Promise resolving to an `HTMLImageElement`.\n */\nexport function decodeFallback(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE\n    ? new Promise((resolve, reject) =>\n        image\n          .decode()\n          .then(() => resolve(image))\n          .catch((e) =>\n            image.complete && image.width ? resolve(image) : reject(e),\n          ),\n      )\n    : load(image);\n}\n\n/**\n * Loads an image and decodes it to an `ImageBitmap` if `createImageBitmap()` is supported. Returns\n * the loaded image otherwise.\n * @param {HTMLImageElement} image Image, not yet loaded.\n * @param {string} [src] `src` attribute of the image. Optional, not required if already present.\n * @return {Promise<ImageBitmap|HTMLImageElement>} Promise resolving to an `ImageBitmap` or an\n * `HTMLImageElement` if `createImageBitmap()` is not supported.\n * @api\n */\nexport function decode(image, src) {\n  if (src) {\n    image.src = src;\n  }\n  return image.src && IMAGE_DECODE && CREATE_IMAGE_BITMAP\n    ? image\n        .decode()\n        .then(() => createImageBitmap(image))\n        .catch((e) => {\n          if (image.complete && image.width) {\n            return image;\n          }\n          throw e;\n        })\n    : decodeFallback(image);\n}\n\nexport default ImageWrapper;\n","/**\n * @module ol/ImageState\n */\n\n/**\n * @enum {number}\n */\nexport default {\n  IDLE: 0,\n  LOADING: 1,\n  LOADED: 2,\n  ERROR: 3,\n  EMPTY: 4,\n};\n","/**\n * @module ol/style/IconImageCache\n */\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getSharedCanvasContext2D} from '../dom.js';\n\n/**\n * @classdesc\n * Singleton class. Available through {@link module:ol/style/IconImageCache.shared}.\n */\nclass IconImageCache {\n  constructor() {\n    /**\n     * @type {!Object<string, import(\"./IconImage.js\").default>}\n     * @private\n     */\n    this.cache_ = {};\n\n    /**\n     * @type {!Object<string, CanvasPattern>}\n     * @private\n     */\n    this.patternCache_ = {};\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.cacheSize_ = 0;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxCacheSize_ = 1024;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    this.cache_ = {};\n    this.patternCache_ = {};\n    this.cacheSize_ = 0;\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.cacheSize_ > this.maxCacheSize_;\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  expire() {\n    if (this.canExpireCache()) {\n      let i = 0;\n      for (const key in this.cache_) {\n        const iconImage = this.cache_[key];\n        if ((i++ & 3) === 0 && !iconImage.hasListener()) {\n          delete this.cache_[key];\n          delete this.patternCache_[key];\n          --this.cacheSize_;\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {import(\"./IconImage.js\").default} Icon image.\n   */\n  get(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.cache_ ? this.cache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @return {CanvasPattern} Icon image.\n   */\n  getPattern(src, crossOrigin, color) {\n    const key = getCacheKey(src, crossOrigin, color);\n    return key in this.patternCache_ ? this.patternCache_[key] : null;\n  }\n\n  /**\n   * @param {string} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   * @param {import(\"./IconImage.js\").default|null} iconImage Icon image.\n   * @param {boolean} [pattern] Also cache a `'repeat'` pattern with this `iconImage`.\n   */\n  set(src, crossOrigin, color, iconImage, pattern) {\n    const key = getCacheKey(src, crossOrigin, color);\n    const update = key in this.cache_;\n    this.cache_[key] = iconImage;\n    if (pattern) {\n      if (iconImage.getImageState() === ImageState.IDLE) {\n        iconImage.load();\n      }\n      if (iconImage.getImageState() === ImageState.LOADING) {\n        iconImage.ready().then(() => {\n          this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n            iconImage.getImage(1),\n            'repeat',\n          );\n        });\n      } else {\n        this.patternCache_[key] = getSharedCanvasContext2D().createPattern(\n          iconImage.getImage(1),\n          'repeat',\n        );\n      }\n    }\n    if (!update) {\n      ++this.cacheSize_;\n    }\n  }\n\n  /**\n   * Set the cache size of the icon cache. Default is `1024`. Change this value when\n   * your map uses more than 1024 different icon images and you are not caching icon\n   * styles on the application level.\n   * @param {number} maxCacheSize Cache max size.\n   * @api\n   */\n  setSize(maxCacheSize) {\n    this.maxCacheSize_ = maxCacheSize;\n    this.expire();\n  }\n}\n\n/**\n * @param {string} src Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @return {string} Cache key.\n */\nexport function getCacheKey(src, crossOrigin, color) {\n  const colorString = color ? asArray(color) : 'null';\n  return crossOrigin + ':' + src + ':' + colorString;\n}\n\nexport default IconImageCache;\n\n/**\n * The {@link module:ol/style/IconImageCache~IconImageCache} for\n * {@link module:ol/style/Icon~Icon} images.\n * @api\n */\nexport const shared = new IconImageCache();\n","/**\n * @module ol/style/IconImage\n */\n\nimport {decodeFallback} from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {asString} from '../color.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport EventTarget from '../events/Target.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet taintedTestContext = null;\n\nclass IconImage extends EventTarget {\n  /**\n   * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n   * @param {string|undefined} src Src.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n   * @param {import(\"../color.js\").Color|string|null} color Color.\n   */\n  constructor(image, src, crossOrigin, imageState, color) {\n    super();\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null}\n     */\n    this.image_ = image;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * @private\n     * @type {Object<number, HTMLCanvasElement>}\n     */\n    this.canvas_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|string|null}\n     */\n    this.color_ = color;\n\n    /**\n     * @private\n     * @type {import(\"../ImageState.js\").default}\n     */\n    this.imageState_ = imageState === undefined ? ImageState.IDLE : imageState;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size|null}\n     */\n    this.size_ =\n      image && image.width && image.height ? [image.width, image.height] : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.src_ = src;\n\n    /**\n     * @private\n     */\n    this.tainted_;\n\n    /**\n     * @private\n     * @type {Promise<void>|null}\n     */\n    this.ready_ = null;\n  }\n\n  /**\n   * @private\n   */\n  initializeImage_() {\n    this.image_ = new Image();\n    if (this.crossOrigin_ !== null) {\n      this.image_.crossOrigin = this.crossOrigin_;\n    }\n  }\n\n  /**\n   * @private\n   * @return {boolean} The image canvas is tainted.\n   */\n  isTainted_() {\n    if (this.tainted_ === undefined && this.imageState_ === ImageState.LOADED) {\n      if (!taintedTestContext) {\n        taintedTestContext = createCanvasContext2D(1, 1, undefined, {\n          willReadFrequently: true,\n        });\n      }\n      taintedTestContext.drawImage(this.image_, 0, 0);\n      try {\n        taintedTestContext.getImageData(0, 0, 1, 1);\n        this.tainted_ = false;\n      } catch {\n        taintedTestContext = null;\n        this.tainted_ = true;\n      }\n    }\n    return this.tainted_ === true;\n  }\n\n  /**\n   * @private\n   */\n  dispatchChangeEvent_() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * @private\n   */\n  handleImageError_() {\n    this.imageState_ = ImageState.ERROR;\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @private\n   */\n  handleImageLoad_() {\n    this.imageState_ = ImageState.LOADED;\n    this.size_ = [this.image_.width, this.image_.height];\n    this.dispatchChangeEvent_();\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element or image bitmap.\n   */\n  getImage(pixelRatio) {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? this.canvas_[pixelRatio] : this.image_;\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Image or Canvas element.\n   */\n  getPixelRatio(pixelRatio) {\n    this.replaceColor_(pixelRatio);\n    return this.canvas_[pixelRatio] ? pixelRatio : 1;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   */\n  getHitDetectionImage() {\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n    if (!this.hitDetectionImage_) {\n      if (this.isTainted_()) {\n        const width = this.size_[0];\n        const height = this.size_[1];\n        const context = createCanvasContext2D(width, height);\n        context.fillRect(0, 0, width, height);\n        this.hitDetectionImage_ = context.canvas;\n      } else {\n        this.hitDetectionImage_ = this.image_;\n      }\n    }\n    return this.hitDetectionImage_;\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {string|undefined} Image src.\n   */\n  getSrc() {\n    return this.src_;\n  }\n\n  /**\n   * Load not yet loaded URI.\n   */\n  load() {\n    if (this.imageState_ !== ImageState.IDLE) {\n      return;\n    }\n    if (!this.image_) {\n      this.initializeImage_();\n    }\n\n    this.imageState_ = ImageState.LOADING;\n    try {\n      if (this.src_ !== undefined) {\n        /** @type {HTMLImageElement} */ (this.image_).src = this.src_;\n      }\n    } catch {\n      this.handleImageError_();\n    }\n    if (this.image_ instanceof HTMLImageElement) {\n      decodeFallback(this.image_, this.src_)\n        .then((image) => {\n          this.image_ = image;\n          this.handleImageLoad_();\n        })\n        .catch(this.handleImageError_.bind(this));\n    }\n  }\n\n  /**\n   * @param {number} pixelRatio Pixel ratio.\n   * @private\n   */\n  replaceColor_(pixelRatio) {\n    if (\n      !this.color_ ||\n      this.canvas_[pixelRatio] ||\n      this.imageState_ !== ImageState.LOADED\n    ) {\n      return;\n    }\n\n    const image = this.image_;\n    const ctx = createCanvasContext2D(\n      Math.ceil(image.width * pixelRatio),\n      Math.ceil(image.height * pixelRatio),\n    );\n    const canvas = ctx.canvas;\n\n    ctx.scale(pixelRatio, pixelRatio);\n    ctx.drawImage(image, 0, 0);\n\n    ctx.globalCompositeOperation = 'multiply';\n    ctx.fillStyle = asString(this.color_);\n    ctx.fillRect(0, 0, canvas.width / pixelRatio, canvas.height / pixelRatio);\n\n    ctx.globalCompositeOperation = 'destination-in';\n    ctx.drawImage(image, 0, 0);\n\n    this.canvas_[pixelRatio] = canvas;\n  }\n\n  /**\n   * @return {Promise<void>} Promise that resolves when the image is loaded.\n   */\n  ready() {\n    if (!this.ready_) {\n      this.ready_ = new Promise((resolve) => {\n        if (\n          this.imageState_ === ImageState.LOADED ||\n          this.imageState_ === ImageState.ERROR\n        ) {\n          resolve();\n        } else {\n          const onChange = () => {\n            if (\n              this.imageState_ === ImageState.LOADED ||\n              this.imageState_ === ImageState.ERROR\n            ) {\n              this.removeEventListener(EventType.CHANGE, onChange);\n              resolve();\n            }\n          };\n          this.addEventListener(EventType.CHANGE, onChange);\n        }\n      });\n    }\n    return this.ready_;\n  }\n}\n\n/**\n * @param {HTMLImageElement|HTMLCanvasElement|ImageBitmap|null} image Image.\n * @param {string|undefined} cacheKey Src.\n * @param {?string} crossOrigin Cross origin.\n * @param {import(\"../ImageState.js\").default|undefined} imageState Image state.\n * @param {import(\"../color.js\").Color|string|null} color Color.\n * @param {boolean} [pattern] Also cache a `repeat` pattern with the icon image.\n * @return {IconImage} Icon image.\n */\nexport function get(image, cacheKey, crossOrigin, imageState, color, pattern) {\n  let iconImage =\n    cacheKey === undefined\n      ? undefined\n      : iconImageCache.get(cacheKey, crossOrigin, color);\n  if (!iconImage) {\n    iconImage = new IconImage(\n      image,\n      image && 'src' in image ? image.src || undefined : cacheKey,\n      crossOrigin,\n      imageState,\n      color,\n    );\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  if (\n    pattern &&\n    iconImage &&\n    !iconImageCache.getPattern(cacheKey, crossOrigin, color)\n  ) {\n    iconImageCache.set(cacheKey, crossOrigin, color, iconImage, pattern);\n  }\n  return iconImage;\n}\n\nexport default IconImage;\n","/**\n * @module ol/colorlike\n */\nimport ImageState from './ImageState.js';\nimport {toString} from './color.js';\nimport {createCanvasContext2D} from './dom.js';\nimport {get as getIconImage} from './style/IconImage.js';\nimport {shared as iconCache} from './style/IconImageCache.js';\n\n/**\n * @typedef {Object} PatternDescriptor\n * @property {string} src Pattern image URL\n * @property {import(\"./color.js\").Color|string} [color] Color to tint the pattern with.\n * @property {import(\"./size.js\").Size} [size] Size of the desired slice from the pattern image.\n * Use this together with `offset` when the pattern image is a sprite sheet.\n * @property {import(\"./size.js\").Size} [offset] Offset of the desired slice from the pattern image.\n * Use this together with `size` when the pattern image is a sprite sheet.\n */\n\n/**\n * A type accepted by CanvasRenderingContext2D.fillStyle\n * or CanvasRenderingContext2D.strokeStyle.\n * Represents a color, [CanvasPattern](https://developer.mozilla.org/en-US/docs/Web/API/CanvasPattern),\n * or [CanvasGradient](https://developer.mozilla.org/en-US/docs/Web/API/CanvasGradient). The origin for\n * patterns and gradients as fill style is an increment of 512 css pixels from map coordinate\n * `[0, 0]`. For seamless repeat patterns, width and height of the pattern image\n * must be a factor of two (2, 4, 8, ..., 512).\n *\n * @typedef {string|CanvasPattern|CanvasGradient} ColorLike\n * @api\n */\n\n/**\n * @param {import(\"./color.js\").Color|ColorLike|PatternDescriptor|null} color Color.\n * @return {ColorLike|null} The color as an {@link ol/colorlike~ColorLike}.\n * @api\n */\nexport function asColorLike(color) {\n  if (!color) {\n    return null;\n  }\n  if (Array.isArray(color)) {\n    return toString(color);\n  }\n  if (typeof color === 'object' && 'src' in color) {\n    return asCanvasPattern(color);\n  }\n  return color;\n}\n\n/**\n * @param {PatternDescriptor} pattern Pattern descriptor.\n * @return {CanvasPattern|null} Canvas pattern or null if the pattern referenced in the\n * PatternDescriptor was not found in the icon image cache.\n */\nfunction asCanvasPattern(pattern) {\n  if (!pattern.offset || !pattern.size) {\n    return iconCache.getPattern(pattern.src, 'anonymous', pattern.color);\n  }\n\n  const cacheKey = pattern.src + ':' + pattern.offset;\n\n  const canvasPattern = iconCache.getPattern(\n    cacheKey,\n    undefined,\n    pattern.color,\n  );\n  if (canvasPattern) {\n    return canvasPattern;\n  }\n\n  const iconImage = iconCache.get(pattern.src, 'anonymous', null);\n  if (iconImage.getImageState() !== ImageState.LOADED) {\n    return null;\n  }\n  const patternCanvasContext = createCanvasContext2D(\n    pattern.size[0],\n    pattern.size[1],\n  );\n  patternCanvasContext.drawImage(\n    iconImage.getImage(1),\n    pattern.offset[0],\n    pattern.offset[1],\n    pattern.size[0],\n    pattern.size[1],\n    0,\n    0,\n    pattern.size[0],\n    pattern.size[1],\n  );\n  getIconImage(\n    patternCanvasContext.canvas,\n    cacheKey,\n    undefined,\n    ImageState.LOADED,\n    pattern.color,\n    true,\n  );\n  return iconCache.getPattern(cacheKey, undefined, pattern.color);\n}\n","/**\n * @module ol/render/canvas\n */\nimport BaseObject from '../Object.js';\nimport {fontWeights, getFontParameters} from '../css.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {WORKER_OFFSCREEN_CANVAS} from '../has.js';\nimport {clear} from '../obj.js';\n\n/**\n * @typedef {'Circle' | 'Image' | 'LineString' | 'Polygon' | 'Text' | 'Default'} BuilderType\n */\n\n/**\n * @typedef {Object} FillState\n * @property {import(\"../colorlike.js\").ColorLike} fillStyle FillStyle.\n */\n\n/**\n * @typedef Label\n * @property {number} width Width.\n * @property {number} height Height.\n * @property {Array<string|number>} contextInstructions ContextInstructions.\n */\n\n/**\n * @typedef {Object} FillStrokeState\n * @property {import(\"../colorlike.js\").ColorLike} [currentFillStyle] Current FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [currentStrokeStyle] Current StrokeStyle.\n * @property {CanvasLineCap} [currentLineCap] Current LineCap.\n * @property {Array<number>} currentLineDash Current LineDash.\n * @property {number} [currentLineDashOffset] Current LineDashOffset.\n * @property {CanvasLineJoin} [currentLineJoin] Current LineJoin.\n * @property {number} [currentLineWidth] Current LineWidth.\n * @property {number} [currentMiterLimit] Current MiterLimit.\n * @property {number} [lastStroke] Last stroke.\n * @property {import(\"../colorlike.js\").ColorLike} [fillStyle] FillStyle.\n * @property {import(\"../colorlike.js\").ColorLike} [strokeStyle] StrokeStyle.\n * @property {CanvasLineCap} [lineCap] LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} [lineDashOffset] LineDashOffset.\n * @property {CanvasLineJoin} [lineJoin] LineJoin.\n * @property {number} [lineWidth] LineWidth.\n * @property {number} [miterLimit] MiterLimit.\n * @property {number} [fillPatternScale] Fill pattern scale.\n */\n\n/**\n * @typedef {Object} StrokeState\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} lineWidth LineWidth.\n * @property {number} miterLimit MiterLimit.\n * @property {import(\"../colorlike.js\").ColorLike} strokeStyle StrokeStyle.\n */\n\n/**\n * @typedef {Object} TextState\n * @property {string} font Font.\n * @property {CanvasTextAlign} [textAlign] TextAlign.\n * @property {number} [repeat] Repeat.\n * @property {import(\"../style/Text.js\").TextJustify} [justify] Justify.\n * @property {CanvasTextBaseline} textBaseline TextBaseline.\n * @property {import(\"../style/Text.js\").TextPlacement} [placement] Placement.\n * @property {number} [maxAngle] MaxAngle.\n * @property {boolean} [overflow] Overflow.\n * @property {import(\"../style/Fill.js\").default} [backgroundFill] BackgroundFill.\n * @property {import(\"../style/Stroke.js\").default} [backgroundStroke] BackgroundStroke.\n * @property {import(\"../size.js\").Size} [scale] Scale.\n * @property {Array<number>} [padding] Padding.\n */\n\n/**\n * @typedef {Object} SerializableInstructions\n * @property {Array<*>} instructions The rendering instructions.\n * @property {Array<*>} hitDetectionInstructions The rendering hit detection instructions.\n * @property {Array<number>} coordinates The array of all coordinates.\n * @property {!Object<string, TextState>} [textStates] The text states (decluttering).\n * @property {!Object<string, FillState>} [fillStates] The fill states (decluttering).\n * @property {!Object<string, StrokeState>} [strokeStates] The stroke states (decluttering).\n */\n\n/**\n * @typedef {Object<number, import(\"./canvas/Executor.js\").ReplayImageOrLabelArgs>} DeclutterImageWithText\n */\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFont = '10px sans-serif';\n\n/**\n * @const\n * @type {string}\n */\nexport const defaultFillStyle = '#000';\n\n/**\n * @const\n * @type {CanvasLineCap}\n */\nexport const defaultLineCap = 'round';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultLineDash = [];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineDashOffset = 0;\n\n/**\n * @const\n * @type {CanvasLineJoin}\n */\nexport const defaultLineJoin = 'round';\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultMiterLimit = 10;\n\n/**\n * @const\n * @type {import(\"../colorlike.js\").ColorLike}\n */\nexport const defaultStrokeStyle = '#000';\n\n/**\n * @const\n * @type {CanvasTextAlign}\n */\nexport const defaultTextAlign = 'center';\n\n/**\n * @const\n * @type {CanvasTextBaseline}\n */\nexport const defaultTextBaseline = 'middle';\n\n/**\n * @const\n * @type {Array<number>}\n */\nexport const defaultPadding = [0, 0, 0, 0];\n\n/**\n * @const\n * @type {number}\n */\nexport const defaultLineWidth = 1;\n\n/**\n * @type {BaseObject}\n */\nexport const checkedFonts = new BaseObject();\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet measureContext = null;\n\n/**\n * @type {string}\n */\nlet measureFont;\n\n/**\n * @type {!Object<string, number>}\n */\nexport const textHeights = {};\n\nconst genericFontFamilies = new Set([\n  'serif',\n  'sans-serif',\n  'monospace',\n  'cursive',\n  'fantasy',\n  'system-ui',\n  'ui-serif',\n  'ui-sans-serif',\n  'ui-monospace',\n  'ui-rounded',\n  'emoji',\n  'math',\n  'fangsong',\n]);\n\n/**\n * @param {string} style Css font-style\n * @param {string} weight Css font-weight\n * @param {string} family Css font-family\n * @return {string} Font key.\n */\nfunction getFontKey(style, weight, family) {\n  return `${style} ${weight} 16px \"${family}\"`;\n}\n\n/**\n * Clears the label cache when a font becomes available.\n * @param {string} fontSpec CSS font spec.\n */\nexport const registerFont = (function () {\n  const retries = 100;\n  let timeout, fontFaceSet;\n\n  /**\n   * @param {string} fontSpec Css font spec\n   * @return {Promise<boolean>} Font with style and weight is available\n   */\n  async function isAvailable(fontSpec) {\n    await fontFaceSet.ready;\n    const fontFaces = await fontFaceSet.load(fontSpec);\n    if (fontFaces.length === 0) {\n      return false;\n    }\n    const font = getFontParameters(fontSpec);\n    const checkFamily = font.families[0].toLowerCase();\n    const checkWeight = font.weight;\n    return fontFaces.some(\n      /**\n       * @param {import('../css.js').FontParameters} f Font.\n       * @return {boolean} Font matches.\n       */\n      (f) => {\n        const family = f.family.replace(/^['\"]|['\"]$/g, '').toLowerCase();\n        const weight = fontWeights[f.weight] || f.weight;\n        return (\n          family === checkFamily &&\n          f.style === font.style &&\n          weight == checkWeight\n        );\n      },\n    );\n  }\n\n  async function check() {\n    await fontFaceSet.ready;\n    let done = true;\n    const checkedFontsProperties = checkedFonts.getProperties();\n    const fonts = Object.keys(checkedFontsProperties).filter(\n      (key) => checkedFontsProperties[key] < retries,\n    );\n    for (let i = fonts.length - 1; i >= 0; --i) {\n      const font = fonts[i];\n      let currentRetries = checkedFontsProperties[font];\n      if (currentRetries < retries) {\n        if (await isAvailable(font)) {\n          clear(textHeights);\n          checkedFonts.set(font, retries);\n        } else {\n          currentRetries += 10;\n          checkedFonts.set(font, currentRetries, true);\n          if (currentRetries < retries) {\n            done = false;\n          }\n        }\n      }\n    }\n    timeout = undefined;\n    if (!done) {\n      timeout = setTimeout(check, 100);\n    }\n  }\n\n  return async function (fontSpec) {\n    if (!fontFaceSet) {\n      fontFaceSet = WORKER_OFFSCREEN_CANVAS ? self.fonts : document.fonts;\n    }\n    const font = getFontParameters(fontSpec);\n    if (!font) {\n      return;\n    }\n    const families = font.families;\n    let needCheck = false;\n    for (const family of families) {\n      if (genericFontFamilies.has(family)) {\n        continue;\n      }\n      const key = getFontKey(font.style, font.weight, family);\n      if (checkedFonts.get(key) !== undefined) {\n        continue;\n      }\n      checkedFonts.set(key, 0, true);\n      needCheck = true;\n    }\n    if (needCheck) {\n      clearTimeout(timeout);\n      timeout = setTimeout(check, 100);\n    }\n  };\n})();\n\n/**\n * @param {string} font Font to use for measuring.\n * @return {import(\"../size.js\").Size} Measurement.\n */\nexport const measureTextHeight = (function () {\n  /**\n   * @type {HTMLDivElement}\n   */\n  let measureElement;\n  return function (fontSpec) {\n    let height = textHeights[fontSpec];\n    if (height == undefined) {\n      if (WORKER_OFFSCREEN_CANVAS) {\n        const font = getFontParameters(fontSpec);\n        const metrics = measureText(fontSpec, 'Žg');\n        const lineHeight = isNaN(Number(font.lineHeight))\n          ? 1.2\n          : Number(font.lineHeight);\n        height =\n          lineHeight *\n          (metrics.actualBoundingBoxAscent + metrics.actualBoundingBoxDescent);\n      } else {\n        if (!measureElement) {\n          measureElement = document.createElement('div');\n          measureElement.innerHTML = 'M';\n          measureElement.style.minHeight = '0';\n          measureElement.style.maxHeight = 'none';\n          measureElement.style.height = 'auto';\n          measureElement.style.padding = '0';\n          measureElement.style.border = 'none';\n          measureElement.style.position = 'absolute';\n          measureElement.style.display = 'block';\n          measureElement.style.left = '-99999px';\n        }\n        measureElement.style.font = fontSpec;\n        document.body.appendChild(measureElement);\n        height = measureElement.offsetHeight;\n        document.body.removeChild(measureElement);\n      }\n      textHeights[fontSpec] = height;\n    }\n    return height;\n  };\n})();\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {TextMetrics} Text metrics.\n */\nfunction measureText(font, text) {\n  if (!measureContext) {\n    measureContext = createCanvasContext2D(1, 1);\n  }\n  if (font != measureFont) {\n    measureContext.font = font;\n    measureFont = measureContext.font;\n  }\n  return measureContext.measureText(text);\n}\n\n/**\n * @param {string} font Font.\n * @param {string} text Text.\n * @return {number} Width.\n */\nexport function measureTextWidth(font, text) {\n  return measureText(font, text).width;\n}\n\n/**\n * Measure text width using a cache.\n * @param {string} font The font.\n * @param {string} text The text to measure.\n * @param {Object<string, number>} cache A lookup of cached widths by text.\n * @return {number} The text width.\n */\nexport function measureAndCacheTextWidth(font, text, cache) {\n  if (text in cache) {\n    return cache[text];\n  }\n  const width = text\n    .split('\\n')\n    .reduce((prev, curr) => Math.max(prev, measureTextWidth(font, curr)), 0);\n  cache[text] = width;\n  return width;\n}\n\n/**\n * @param {TextState} baseStyle Base style.\n * @param {Array<string>} chunks Text chunks to measure.\n * @return {{width: number, height: number, widths: Array<number>, heights: Array<number>, lineWidths: Array<number>}}} Text metrics.\n */\nexport function getTextDimensions(baseStyle, chunks) {\n  const widths = [];\n  const heights = [];\n  const lineWidths = [];\n  let width = 0;\n  let lineWidth = 0;\n  let height = 0;\n  let lineHeight = 0;\n  for (let i = 0, ii = chunks.length; i <= ii; i += 2) {\n    const text = chunks[i];\n    if (text === '\\n' || i === ii) {\n      width = Math.max(width, lineWidth);\n      lineWidths.push(lineWidth);\n      lineWidth = 0;\n      height += lineHeight;\n      lineHeight = 0;\n      continue;\n    }\n    const font = chunks[i + 1] || baseStyle.font;\n    const currentWidth = measureTextWidth(font, text);\n    widths.push(currentWidth);\n    lineWidth += currentWidth;\n    const currentHeight = measureTextHeight(font);\n    heights.push(currentHeight);\n    lineHeight = Math.max(lineHeight, currentHeight);\n  }\n  return {width, height, widths, heights, lineWidths};\n}\n\n/**\n * @param {CanvasRenderingContext2D} context Context.\n * @param {number} rotation Rotation.\n * @param {number} offsetX X offset.\n * @param {number} offsetY Y offset.\n */\nexport function rotateAtOffset(context, rotation, offsetX, offsetY) {\n  if (rotation !== 0) {\n    context.translate(offsetX, offsetY);\n    context.rotate(rotation);\n    context.translate(-offsetX, -offsetY);\n  }\n}\n\n/**\n * @param {CanvasRenderingContext2D|import(\"../render/canvas/ZIndexContext.js\").ZIndexContextProxy} context Context.\n * @param {import(\"../transform.js\").Transform|null} transform Transform.\n * @param {number} opacity Opacity.\n * @param {Label|HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} labelOrImage Label.\n * @param {number} originX Origin X.\n * @param {number} originY Origin Y.\n * @param {number} w Width.\n * @param {number} h Height.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {import(\"../size.js\").Size} scale Scale.\n */\nexport function drawImageOrLabel(\n  context,\n  transform,\n  opacity,\n  labelOrImage,\n  originX,\n  originY,\n  w,\n  h,\n  x,\n  y,\n  scale,\n) {\n  context.save();\n\n  if (opacity !== 1) {\n    if (context.globalAlpha === undefined) {\n      context.globalAlpha = (context) => (context.globalAlpha *= opacity);\n    } else {\n      context.globalAlpha *= opacity;\n    }\n  }\n  if (transform) {\n    context.transform.apply(context, transform);\n  }\n\n  if (/** @type {*} */ (labelOrImage).contextInstructions) {\n    // label\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    executeLabelInstructions(/** @type {Label} */ (labelOrImage), context);\n  } else if (scale[0] < 0 || scale[1] < 0) {\n    // flipped image\n    context.translate(x, y);\n    context.scale(scale[0], scale[1]);\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      0,\n      0,\n      w,\n      h,\n    );\n  } else {\n    // if image not flipped translate and scale can be avoided\n    context.drawImage(\n      /** @type {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} */ (\n        labelOrImage\n      ),\n      originX,\n      originY,\n      w,\n      h,\n      x,\n      y,\n      w * scale[0],\n      h * scale[1],\n    );\n  }\n\n  context.restore();\n}\n\n/**\n * @param {Label} label Label.\n * @param {CanvasRenderingContext2D} context Context.\n */\nfunction executeLabelInstructions(label, context) {\n  const contextInstructions = label.contextInstructions;\n  for (let i = 0, ii = contextInstructions.length; i < ii; i += 2) {\n    if (Array.isArray(contextInstructions[i + 1])) {\n      context[contextInstructions[i]].apply(\n        context,\n        contextInstructions[i + 1],\n      );\n    } else {\n      context[contextInstructions[i]] = contextInstructions[i + 1];\n    }\n  }\n}\n","/**\n * @module ol/style/Image\n */\nimport {toSize} from '../size.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} Options\n * @property {number} opacity Opacity.\n * @property {boolean} rotateWithView If the image should get rotated with the view.\n * @property {number} rotation Rotation.\n * @property {number|import(\"../size.js\").Size} scale Scale.\n * @property {Array<number>} displacement Displacement.\n * @property {import('../style/Style.js').DeclutterMode} declutterMode Declutter mode: `declutter`, `obstacle`, `none`.\n */\n\n/**\n * @classdesc\n * A base class used for creating subclasses and not instantiated in\n * apps. Base class for {@link module:ol/style/Icon~Icon}, {@link module:ol/style/Circle~CircleStyle} and\n * {@link module:ol/style/RegularShape~RegularShape}.\n * @abstract\n * @api\n */\nclass ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = options.opacity;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale);\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.displacement_ = options.displacement;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {ImageStyle} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new ImageStyle({\n      opacity: this.getOpacity(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the symbolizer opacity.\n   * @return {number} Opacity.\n   * @api\n   */\n  getOpacity() {\n    return this.opacity_;\n  }\n\n  /**\n   * Determine whether the symbolizer rotates with the map.\n   * @return {boolean} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Get the symoblizer rotation.\n   * @return {number} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the symbolizer scale.\n   * @return {number|import(\"../size.js\").Size} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the displacement of the shape\n   * @return {Array<number>} Shape's center displacement\n   * @api\n   */\n  getDisplacement() {\n    return this.displacement_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @abstract\n   * @return {Array<number>} Anchor.\n   */\n  getAnchor() {\n    return abstract();\n  }\n\n  /**\n   * Get the image element for the symbolizer.\n   * @abstract\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getImage(pixelRatio) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import('../DataTile.js').ImageLike} Image element.\n   */\n  getHitDetectionImage() {\n    return abstract();\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   */\n  getPixelRatio(pixelRatio) {\n    return 1;\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../ImageState.js\").default} Image state.\n   */\n  getImageState() {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @return {import(\"../size.js\").Size} Image size.\n   */\n  getImageSize() {\n    return abstract();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @abstract\n   * @return {Array<number>} Origin.\n   */\n  getOrigin() {\n    return abstract();\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @abstract\n   * @return {import(\"../size.js\").Size} Size.\n   */\n  getSize() {\n    return abstract();\n  }\n\n  /**\n   * Set the displacement.\n   *\n   * @param {Array<number>} displacement Displacement.\n   * @api\n   */\n  setDisplacement(displacement) {\n    this.displacement_ = displacement;\n  }\n\n  /**\n   * Set the opacity.\n   *\n   * @param {number} opacity Opacity.\n   * @api\n   */\n  setOpacity(opacity) {\n    this.opacity_ = opacity;\n  }\n\n  /**\n   * Set whether to rotate the style with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale);\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  listenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @abstract\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   */\n  unlistenImageChange(listener) {\n    abstract();\n  }\n\n  /**\n   * @return {Promise<void>} `false` or Promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return Promise.resolve();\n  }\n}\n\nexport default ImageStyle;\n","/**\n * @module ol/style/RegularShape\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {asColorLike} from '../colorlike.js';\nimport {createCanvasContext2D} from '../dom.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../render/canvas.js';\nimport IconImage from './IconImage.js';\nimport {shared as iconImageCache} from './IconImageCache.js';\nimport ImageStyle from './Image.js';\n\n/**\n * Specify radius for regular polygons, or both radius and radius2 for stars.\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} points Number of points for stars and regular polygons. In case of a polygon, the number of points\n * is the number of sides.\n * @property {number} radius Radius of a regular polygon.\n * @property {number} [radius2] Second radius to make a star instead of a regular polygon.\n * @property {number} [angle=0] Shape's angle in radians. A value of 0 will have one of the shape's points facing up.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the shape in pixels.\n * Positive values will shift the shape right and up.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. Unless two dimensional scaling is required a better\n * result may be obtained with appropriate settings for `radius` and `radius2`.\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @typedef {Object} RenderOptions\n * @property {import(\"../colorlike.js\").ColorLike|undefined} strokeStyle StrokeStyle.\n * @property {number} strokeWidth StrokeWidth.\n * @property {number} size Size.\n * @property {CanvasLineCap} lineCap LineCap.\n * @property {Array<number>|null} lineDash LineDash.\n * @property {number} lineDashOffset LineDashOffset.\n * @property {CanvasLineJoin} lineJoin LineJoin.\n * @property {number} miterLimit MiterLimit.\n */\n\n/**\n * @classdesc\n * Set regular shape style for vector features. The resulting shape will be\n * a regular polygon when `radius` is provided, or a star when both `radius` and\n * `radius2` are provided.\n * @api\n */\nclass RegularShape extends ImageStyle {\n  /**\n   * @param {Options} options Options.\n   */\n  constructor(options) {\n    super({\n      opacity: 1,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      scale: options.scale !== undefined ? options.scale : 1,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement|null}\n     */\n    this.hitDetectionCanvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.points_ = options.points;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.radius = options.radius;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.radius2_ = options.radius2;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.angle_ = options.angle !== undefined ? options.angle : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_;\n\n    /**\n     * @private\n     * @type {RenderOptions}\n     */\n    this.renderOptions_;\n\n    /**\n     * @private\n     */\n    this.imageState_ =\n      this.fill_ && this.fill_.loading()\n        ? ImageState.LOADING\n        : ImageState.LOADED;\n    if (this.imageState_ === ImageState.LOADING) {\n      this.ready().then(() => (this.imageState_ = ImageState.LOADED));\n    }\n    this.render();\n  }\n\n  /**\n   * Clones the style.\n   * @return {RegularShape} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new RegularShape({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      points: this.getPoints(),\n      radius: this.getRadius(),\n      radius2: this.getRadius2(),\n      angle: this.getAngle(),\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    const size = this.size_;\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      size[0] / 2 - displacement[0] / scale[0],\n      size[1] / 2 + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Get the angle used in generating the shape.\n   * @return {number} Shape's rotation in radians.\n   * @api\n   */\n  getAngle() {\n    return this.angle_;\n  }\n\n  /**\n   * Get the fill style for the shape.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n    this.render();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    if (!this.hitDetectionCanvas_) {\n      this.hitDetectionCanvas_ = this.createHitDetectionCanvas_(\n        this.renderOptions_,\n      );\n    }\n    return this.hitDetectionCanvas_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLCanvasElement} Image or Canvas element.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    const fillKey = this.fill_?.getKey();\n    const cacheKey =\n      `${pixelRatio},${this.angle_},${this.radius},${this.radius2_},${this.points_},${fillKey}` +\n      Object.values(this.renderOptions_).join(',');\n    let image = /** @type {HTMLCanvasElement} */ (\n      iconImageCache.get(cacheKey, null, null)?.getImage(1)\n    );\n    if (!image) {\n      const renderOptions = this.renderOptions_;\n      const size = Math.ceil(renderOptions.size * pixelRatio);\n      const context = createCanvasContext2D(size, size);\n      this.draw_(renderOptions, context, pixelRatio);\n\n      image = context.canvas;\n      iconImageCache.set(\n        cacheKey,\n        null,\n        null,\n        new IconImage(image, undefined, null, ImageState.LOADED, null),\n      );\n    }\n    return image;\n  }\n\n  /**\n   * Get the image pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Pixel ratio.\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return pixelRatio;\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.size_;\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.imageState_;\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    return this.origin_;\n  }\n\n  /**\n   * Get the number of points for generating the shape.\n   * @return {number} Number of points for stars and regular polygons.\n   * @api\n   */\n  getPoints() {\n    return this.points_;\n  }\n\n  /**\n   * Get the (primary) radius for the shape.\n   * @return {number} Radius.\n   * @api\n   */\n  getRadius() {\n    return this.radius;\n  }\n\n  /**\n   * Get the secondary radius for the shape.\n   * @return {number|undefined} Radius2.\n   * @api\n   */\n  getRadius2() {\n    return this.radius2_;\n  }\n\n  /**\n   * Get the size of the symbolizer (in pixels).\n   * @return {import(\"../size.js\").Size} Size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return this.size_;\n  }\n\n  /**\n   * Get the stroke style for the shape.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n    this.render();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {}\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {}\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {}\n\n  /**\n   * Calculate additional canvas size needed for the miter.\n   * @param {string} lineJoin Line join\n   * @param {number} strokeWidth Stroke width\n   * @param {number} miterLimit Miter limit\n   * @return {number} Additional canvas size needed\n   * @private\n   */\n  calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit) {\n    if (\n      strokeWidth === 0 ||\n      this.points_ === Infinity ||\n      (lineJoin !== 'bevel' && lineJoin !== 'miter')\n    ) {\n      return strokeWidth;\n    }\n    // m  | ^\n    // i  | |\\                  .\n    // t >|  #\\\n    // e  | |\\ \\              .\n    // r      \\s\\\n    //      |  \\t\\          .                 .\n    //          \\r\\                      .   .\n    //      |    \\o\\      .          .  . . .\n    //          e \\k\\            .  .    . .\n    //      |      \\e\\  .    .  .       . .\n    //       d      \\ \\  .  .          . .\n    //      | _ _a_ _\\#  .            . .\n    //   r1          / `             . .\n    //      |                       . .\n    //       b     /               . .\n    //      |                     . .\n    //           / r2            . .\n    //      |                        .   .\n    //         /                           .   .\n    //      |α                                   .   .\n    //       /                                         .   .\n    //      ° center\n    let r1 = this.radius;\n    let r2 = this.radius2_ === undefined ? r1 : this.radius2_;\n    if (r1 < r2) {\n      const tmp = r1;\n      r1 = r2;\n      r2 = tmp;\n    }\n    const points =\n      this.radius2_ === undefined ? this.points_ : this.points_ * 2;\n    const alpha = (2 * Math.PI) / points;\n    const a = r2 * Math.sin(alpha);\n    const b = Math.sqrt(r2 * r2 - a * a);\n    const d = r1 - b;\n    const e = Math.sqrt(a * a + d * d);\n    const miterRatio = e / a;\n    if (lineJoin === 'miter' && miterRatio <= miterLimit) {\n      return miterRatio * strokeWidth;\n    }\n    // Calculate the distance from center to the stroke corner where\n    // it was cut short because of the miter limit.\n    //              l\n    //        ----+---- <= distance from center to here is maxr\n    //       /####|k ##\\\n    //      /#####^#####\\\n    //     /#### /+\\# s #\\\n    //    /### h/+++\\# t #\\\n    //   /### t/+++++\\# r #\\\n    //  /### a/+++++++\\# o #\\\n    // /### p/++ fill +\\# k #\\\n    ///#### /+++++^+++++\\# e #\\\n    //#####/+++++/+\\+++++\\#####\\\n    const k = strokeWidth / 2 / miterRatio;\n    const l = (strokeWidth / 2) * (d / e);\n    const maxr = Math.sqrt((r1 + k) * (r1 + k) + l * l);\n    const bevelAdd = maxr - r1;\n    if (this.radius2_ === undefined || lineJoin === 'bevel') {\n      return bevelAdd * 2;\n    }\n    // If outer miter is over the miter limit the inner miter may reach through the\n    // center and be longer than the bevel, same calculation as above but swap r1 / r2.\n    const aa = r1 * Math.sin(alpha);\n    const bb = Math.sqrt(r1 * r1 - aa * aa);\n    const dd = r2 - bb;\n    const ee = Math.sqrt(aa * aa + dd * dd);\n    const innerMiterRatio = ee / aa;\n    if (innerMiterRatio <= miterLimit) {\n      const innerLength = (innerMiterRatio * strokeWidth) / 2 - r2 - r1;\n      return 2 * Math.max(bevelAdd, innerLength);\n    }\n    return bevelAdd * 2;\n  }\n\n  /**\n   * @return {RenderOptions}  The render options\n   * @protected\n   */\n  createRenderOptions() {\n    let lineCap = defaultLineCap;\n    let lineJoin = defaultLineJoin;\n    let miterLimit = 0;\n    let lineDash = null;\n    let lineDashOffset = 0;\n    let strokeStyle;\n    let strokeWidth = 0;\n\n    if (this.stroke_) {\n      strokeStyle = asColorLike(this.stroke_.getColor() ?? defaultStrokeStyle);\n      strokeWidth = this.stroke_.getWidth() ?? defaultLineWidth;\n      lineDash = this.stroke_.getLineDash();\n      lineDashOffset = this.stroke_.getLineDashOffset() ?? 0;\n      lineJoin = this.stroke_.getLineJoin() ?? defaultLineJoin;\n      lineCap = this.stroke_.getLineCap() ?? defaultLineCap;\n      miterLimit = this.stroke_.getMiterLimit() ?? defaultMiterLimit;\n    }\n\n    const add = this.calculateLineJoinSize_(lineJoin, strokeWidth, miterLimit);\n    const maxRadius = Math.max(this.radius, this.radius2_ || 0);\n    const size = Math.ceil(2 * maxRadius + add);\n\n    return {\n      strokeStyle: strokeStyle,\n      strokeWidth: strokeWidth,\n      size: size,\n      lineCap: lineCap,\n      lineDash: lineDash,\n      lineDashOffset: lineDashOffset,\n      lineJoin: lineJoin,\n      miterLimit: miterLimit,\n    };\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.renderOptions_ = this.createRenderOptions();\n    const size = this.renderOptions_.size;\n    this.hitDetectionCanvas_ = null;\n    this.size_ = [size, size];\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The rendering context.\n   * @param {number} pixelRatio The pixel ratio.\n   */\n  draw_(renderOptions, context, pixelRatio) {\n    context.scale(pixelRatio, pixelRatio);\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n      if (color === null) {\n        color = defaultFillStyle;\n      }\n      context.fillStyle = asColorLike(color);\n      context.fill();\n    }\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineCap = renderOptions.lineCap;\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @return {HTMLCanvasElement} Canvas containing the icon\n   */\n  createHitDetectionCanvas_(renderOptions) {\n    let context;\n    if (this.fill_) {\n      let color = this.fill_.getColor();\n\n      // determine if fill is transparent (or pattern or gradient)\n      let opacity = 0;\n      if (typeof color === 'string') {\n        color = asArray(color);\n      }\n      if (color === null) {\n        opacity = 1;\n      } else if (Array.isArray(color)) {\n        opacity = color.length === 4 ? color[3] : 1;\n      }\n      if (opacity === 0) {\n        // if a transparent fill style is set, create an extra hit-detection image\n        // with a default fill style\n        context = createCanvasContext2D(renderOptions.size, renderOptions.size);\n        this.drawHitDetectionCanvas_(renderOptions, context);\n      }\n    }\n    return context ? context.canvas : this.getImage(1);\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context The context to draw in.\n   */\n  createPath_(context) {\n    let points = this.points_;\n    const radius = this.radius;\n    if (points === Infinity) {\n      context.arc(0, 0, radius, 0, 2 * Math.PI);\n    } else {\n      const radius2 = this.radius2_ === undefined ? radius : this.radius2_;\n      if (this.radius2_ !== undefined) {\n        points *= 2;\n      }\n      const startAngle = this.angle_ - Math.PI / 2;\n      const step = (2 * Math.PI) / points;\n      for (let i = 0; i < points; i++) {\n        const angle0 = startAngle + i * step;\n        const radiusC = i % 2 === 0 ? radius : radius2;\n        context.lineTo(radiusC * Math.cos(angle0), radiusC * Math.sin(angle0));\n      }\n      context.closePath();\n    }\n  }\n\n  /**\n   * @private\n   * @param {RenderOptions} renderOptions Render options.\n   * @param {CanvasRenderingContext2D} context The context.\n   */\n  drawHitDetectionCanvas_(renderOptions, context) {\n    // set origin to canvas center\n    context.translate(renderOptions.size / 2, renderOptions.size / 2);\n\n    this.createPath_(context);\n\n    context.fillStyle = defaultFillStyle;\n    context.fill();\n    if (renderOptions.strokeStyle) {\n      context.strokeStyle = renderOptions.strokeStyle;\n      context.lineWidth = renderOptions.strokeWidth;\n      if (renderOptions.lineDash) {\n        context.setLineDash(renderOptions.lineDash);\n        context.lineDashOffset = renderOptions.lineDashOffset;\n      }\n      context.lineJoin = renderOptions.lineJoin;\n      context.miterLimit = renderOptions.miterLimit;\n      context.stroke();\n    }\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.fill_ ? this.fill_.ready() : Promise.resolve();\n  }\n}\n\nexport default RegularShape;\n","/**\n * @module ol/style/Circle\n */\n\nimport RegularShape from './RegularShape.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {number} radius Circle radius.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {Array<number>} [displacement=[0,0]] displacement\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale. A two dimensional scale will produce an ellipse.\n * Unless two dimensional scaling is required a better result may be obtained with an appropriate setting for `radius`.\n * @property {number} [rotation=0] Rotation in radians\n * (positive rotation clockwise, meaningful only when used in conjunction with a two dimensional scale).\n * @property {boolean} [rotateWithView=false] Whether to rotate the shape with the view\n * (meaningful only when used in conjunction with a two dimensional scale).\n * @property {import('./Style.js').DeclutterMode} [declutterMode] Declutter mode\n */\n\n/**\n * @classdesc\n * Set circle style for vector features.\n * @api\n */\nclass CircleStyle extends RegularShape {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {radius: 5};\n\n    super({\n      points: Infinity,\n      fill: options.fill,\n      radius: options.radius,\n      stroke: options.stroke,\n      scale: options.scale !== undefined ? options.scale : 1,\n      rotation: options.rotation !== undefined ? options.rotation : 0,\n      rotateWithView:\n        options.rotateWithView !== undefined ? options.rotateWithView : false,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      declutterMode: options.declutterMode,\n    });\n  }\n\n  /**\n   * Clones the style.\n   * @return {CircleStyle} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    const scale = this.getScale();\n    const style = new CircleStyle({\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      radius: this.getRadius(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n    style.setOpacity(this.getOpacity());\n    return style;\n  }\n\n  /**\n   * Set the circle radius.\n   *\n   * @param {number} radius Circle radius.\n   * @api\n   */\n  setRadius(radius) {\n    this.radius = radius;\n    this.render();\n  }\n}\n\nexport default CircleStyle;\n","/**\n * @module ol/style/Fill\n */\n\nimport ImageState from '../ImageState.js';\nimport {asArray} from '../color.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} [color=null] A color,\n * gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats. For polygon fills (not for {@link import(\"./RegularShape.js\").default} fills),\n * a pattern can also be provided as {@link module:ol/colorlike~PatternDescriptor}.\n * Default null; if null, the Canvas/renderer default black will be used.\n */\n\n/**\n * @classdesc\n * Set fill style for vector features.\n * @api\n */\nclass Fill {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default|null}\n     */\n    this.patternImage_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null}\n     */\n    this.color_ = null;\n    if (options.color !== undefined) {\n      this.setColor(options.color);\n    }\n  }\n\n  /**\n   * Clones the style. The color is not cloned if it is a {@link module:ol/colorlike~ColorLike}.\n   * @return {Fill} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Fill({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n    });\n  }\n\n  /**\n   * Get the fill color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike|import('../colorlike.js').PatternDescriptor|null} color Color.\n   * @api\n   */\n  setColor(color) {\n    if (color !== null && typeof color === 'object' && 'src' in color) {\n      const patternImage = getIconImage(\n        null,\n        color.src,\n        'anonymous',\n        undefined,\n        color.offset ? null : color.color ? color.color : null,\n        !(color.offset && color.size),\n      );\n      patternImage.ready().then(() => {\n        this.patternImage_ = null;\n      });\n      if (patternImage.getImageState() === ImageState.IDLE) {\n        patternImage.load();\n      }\n      if (patternImage.getImageState() === ImageState.LOADING) {\n        this.patternImage_ = patternImage;\n      }\n    }\n    this.color_ = color;\n  }\n\n  /**\n   * @return {string} Key of the fill for cache lookup.\n   */\n  getKey() {\n    const fill = this.getColor();\n    if (!fill) {\n      return '';\n    }\n    return fill instanceof CanvasPattern || fill instanceof CanvasGradient\n      ? getUid(fill)\n      : typeof fill === 'object' && 'src' in fill\n        ? fill.src + ':' + fill.offset\n        : asArray(fill).toString();\n  }\n\n  /**\n   * @return {boolean} The fill style is loading an image pattern.\n   */\n  loading() {\n    return !!this.patternImage_;\n  }\n\n  /**\n   * @return {Promise<void>} `false` or a promise that resolves when the style is ready to use.\n   */\n  ready() {\n    return this.patternImage_ ? this.patternImage_.ready() : Promise.resolve();\n  }\n}\n\nexport default Fill;\n","/**\n * @module ol/style/Icon\n */\nimport ImageState from '../ImageState.js';\nimport {assert} from '../asserts.js';\nimport {asArray} from '../color.js';\nimport EventType from '../events/EventType.js';\nimport {getUid} from '../util.js';\nimport {get as getIconImage} from './IconImage.js';\nimport ImageStyle from './Image.js';\n\n/**\n * @typedef {'fraction' | 'pixels'} IconAnchorUnits\n * Anchor unit can be either a fraction of the icon size or in pixels.\n */\n\n/**\n * @typedef {'bottom-left' | 'bottom-right' | 'top-left' | 'top-right'} IconOrigin\n * Icon origin. One of 'bottom-left', 'bottom-right', 'top-left', 'top-right'.\n */\n\n/**\n * @typedef {Object} Options\n * @property {Array<number>} [anchor=[0.5, 0.5]] Anchor. Default value is the icon center.\n * @property {IconOrigin} [anchorOrigin='top-left'] Origin of the anchor: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {IconAnchorUnits} [anchorXUnits='fraction'] Units in which the anchor x value is\n * specified. A value of `'fraction'` indicates the x value is a fraction of the icon. A value of `'pixels'` indicates\n * the x value in pixels.\n * @property {IconAnchorUnits} [anchorYUnits='fraction'] Units in which the anchor y value is\n * specified. A value of `'fraction'` indicates the y value is a fraction of the icon. A value of `'pixels'` indicates\n * the y value in pixels.\n * @property {import(\"../color.js\").Color|string} [color] Color to tint the icon. If not specified,\n * the icon will be left as is.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images. Note that you must provide a\n * `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {HTMLImageElement|HTMLCanvasElement|ImageBitmap} [img] Image object for the icon.\n * @property {Array<number>} [displacement=[0, 0]] Displacement of the icon in pixels.\n * Positive values will shift the icon right and up.\n * @property {number} [opacity=1] Opacity of the icon.\n * @property {number} [width] The width of the icon in pixels. This can't be used together with `scale`.\n * @property {number} [height] The height of the icon in pixels. This can't be used together with `scale`.\n * @property {number|import(\"../size.js\").Size} [scale=1] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the icon with the view.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {Array<number>} [offset=[0, 0]] Offset which, together with `size` and `offsetOrigin`, defines the\n * sub-rectangle to use from the original (sprite) image.\n * @property {IconOrigin} [offsetOrigin='top-left'] Origin of the offset: `bottom-left`, `bottom-right`,\n * `top-left` or `top-right`.\n * @property {import(\"../size.js\").Size} [size] Icon size in pixels. Used together with `offset` to define the\n * sub-rectangle to use from the original (sprite) image.\n * @property {string} [src] Image source URI.\n * @property {import(\"./Style.js\").DeclutterMode} [declutterMode] Declutter mode.\n */\n\n/**\n * @param {number} width The width.\n * @param {number} height The height.\n * @param {number|undefined} wantedWidth The wanted width.\n * @param {number|undefined} wantedHeight The wanted height.\n * @return {number|Array<number>} The scale.\n */\nfunction calculateScale(width, height, wantedWidth, wantedHeight) {\n  if (wantedWidth !== undefined && wantedHeight !== undefined) {\n    return [wantedWidth / width, wantedHeight / height];\n  }\n  if (wantedWidth !== undefined) {\n    return wantedWidth / width;\n  }\n  if (wantedHeight !== undefined) {\n    return wantedHeight / height;\n  }\n  return 1;\n}\n\n/**\n * @classdesc\n * Set icon style for vector features.\n * @api\n */\nclass Icon extends ImageStyle {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @type {number}\n     */\n    const opacity = options.opacity !== undefined ? options.opacity : 1;\n\n    /**\n     * @type {number}\n     */\n    const rotation = options.rotation !== undefined ? options.rotation : 0;\n\n    /**\n     * @type {number|import(\"../size.js\").Size}\n     */\n    const scale = options.scale !== undefined ? options.scale : 1;\n\n    /**\n     * @type {boolean}\n     */\n    const rotateWithView =\n      options.rotateWithView !== undefined ? options.rotateWithView : false;\n\n    super({\n      opacity: opacity,\n      rotation: rotation,\n      scale: scale,\n      displacement:\n        options.displacement !== undefined ? options.displacement : [0, 0],\n      rotateWithView: rotateWithView,\n      declutterMode: options.declutterMode,\n    });\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.anchor_ = options.anchor !== undefined ? options.anchor : [0.5, 0.5];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.normalizedAnchor_ = null;\n\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.anchorOrigin_ =\n      options.anchorOrigin !== undefined ? options.anchorOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorXUnits_ =\n      options.anchorXUnits !== undefined ? options.anchorXUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {IconAnchorUnits}\n     */\n    this.anchorYUnits_ =\n      options.anchorYUnits !== undefined ? options.anchorYUnits : 'fraction';\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    const image = options.img !== undefined ? options.img : null;\n\n    let cacheKey = options.src;\n\n    assert(\n      !(cacheKey !== undefined && image),\n      '`image` and `src` cannot be provided at the same time',\n    );\n\n    if ((cacheKey === undefined || cacheKey.length === 0) && image) {\n      cacheKey = /** @type {HTMLImageElement} */ (image).src || getUid(image);\n    }\n    assert(\n      cacheKey !== undefined && cacheKey.length > 0,\n      'A defined and non-empty `src` or `image` must be provided',\n    );\n\n    assert(\n      !(\n        (options.width !== undefined || options.height !== undefined) &&\n        options.scale !== undefined\n      ),\n      '`width` or `height` cannot be provided together with `scale`',\n    );\n\n    let imageState;\n    if (options.src !== undefined) {\n      imageState = ImageState.IDLE;\n    } else if (image !== undefined) {\n      if ('complete' in image) {\n        if (image.complete) {\n          imageState = image.src ? ImageState.LOADED : ImageState.IDLE;\n        } else {\n          imageState = ImageState.LOADING;\n        }\n      } else {\n        imageState = ImageState.LOADED;\n      }\n    }\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color}\n     */\n    this.color_ = options.color !== undefined ? asArray(options.color) : null;\n\n    /**\n     * @private\n     * @type {import(\"./IconImage.js\").default}\n     */\n    this.iconImage_ = getIconImage(\n      image,\n      /** @type {string} */ (cacheKey),\n      this.crossOrigin_,\n      imageState,\n      this.color_,\n    );\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.offset_ = options.offset !== undefined ? options.offset : [0, 0];\n    /**\n     * @private\n     * @type {IconOrigin}\n     */\n    this.offsetOrigin_ =\n      options.offsetOrigin !== undefined ? options.offsetOrigin : 'top-left';\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.origin_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.size_ = options.size !== undefined ? options.size : null;\n\n    /**\n     * @private\n     */\n    this.initialOptions_;\n\n    /**\n     * Calculate the scale if width or height were given.\n     */\n    if (options.width !== undefined || options.height !== undefined) {\n      let width, height;\n      if (options.size) {\n        [width, height] = options.size;\n      } else {\n        const image = this.getImage(1);\n        if (image.width && image.height) {\n          width = image.width;\n          height = image.height;\n        } else if (image instanceof HTMLImageElement) {\n          this.initialOptions_ = options;\n          const onload = () => {\n            this.unlistenImageChange(onload);\n            if (!this.initialOptions_) {\n              return;\n            }\n            const imageSize = this.iconImage_.getSize();\n            this.setScale(\n              calculateScale(\n                imageSize[0],\n                imageSize[1],\n                options.width,\n                options.height,\n              ),\n            );\n          };\n          this.listenImageChange(onload);\n          return;\n        }\n      }\n      if (width !== undefined) {\n        this.setScale(\n          calculateScale(width, height, options.width, options.height),\n        );\n      }\n    }\n  }\n\n  /**\n   * Clones the style. The underlying Image/HTMLCanvasElement is not cloned.\n   * @return {Icon} The cloned style.\n   * @api\n   * @override\n   */\n  clone() {\n    let scale, width, height;\n    if (this.initialOptions_) {\n      width = this.initialOptions_.width;\n      height = this.initialOptions_.height;\n    } else {\n      scale = this.getScale();\n      scale = Array.isArray(scale) ? scale.slice() : scale;\n    }\n    return new Icon({\n      anchor: this.anchor_.slice(),\n      anchorOrigin: this.anchorOrigin_,\n      anchorXUnits: this.anchorXUnits_,\n      anchorYUnits: this.anchorYUnits_,\n      color:\n        this.color_ && this.color_.slice\n          ? this.color_.slice()\n          : this.color_ || undefined,\n      crossOrigin: this.crossOrigin_,\n      offset: this.offset_.slice(),\n      offsetOrigin: this.offsetOrigin_,\n      opacity: this.getOpacity(),\n      rotateWithView: this.getRotateWithView(),\n      rotation: this.getRotation(),\n      scale,\n      width,\n      height,\n      size: this.size_ !== null ? this.size_.slice() : undefined,\n      src: this.getSrc(),\n      displacement: this.getDisplacement().slice(),\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the anchor point in pixels. The anchor determines the center point for the\n   * symbolizer.\n   * @return {Array<number>} Anchor.\n   * @api\n   * @override\n   */\n  getAnchor() {\n    let anchor = this.normalizedAnchor_;\n    if (!anchor) {\n      anchor = this.anchor_;\n      const size = this.getSize();\n      if (\n        this.anchorXUnits_ == 'fraction' ||\n        this.anchorYUnits_ == 'fraction'\n      ) {\n        if (!size) {\n          return null;\n        }\n        anchor = this.anchor_.slice();\n        if (this.anchorXUnits_ == 'fraction') {\n          anchor[0] *= size[0];\n        }\n        if (this.anchorYUnits_ == 'fraction') {\n          anchor[1] *= size[1];\n        }\n      }\n\n      if (this.anchorOrigin_ != 'top-left') {\n        if (!size) {\n          return null;\n        }\n        if (anchor === this.anchor_) {\n          anchor = this.anchor_.slice();\n        }\n        if (\n          this.anchorOrigin_ == 'top-right' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[0] = -anchor[0] + size[0];\n        }\n        if (\n          this.anchorOrigin_ == 'bottom-left' ||\n          this.anchorOrigin_ == 'bottom-right'\n        ) {\n          anchor[1] = -anchor[1] + size[1];\n        }\n      }\n      this.normalizedAnchor_ = anchor;\n    }\n    const displacement = this.getDisplacement();\n    const scale = this.getScaleArray();\n    // anchor is scaled by renderer but displacement should not be scaled\n    // so divide by scale here\n    return [\n      anchor[0] - displacement[0] / scale[0],\n      anchor[1] + displacement[1] / scale[1],\n    ];\n  }\n\n  /**\n   * Set the anchor point. The anchor determines the center point for the\n   * symbolizer.\n   *\n   * @param {Array<number>} anchor Anchor.\n   * @api\n   */\n  setAnchor(anchor) {\n    this.anchor_ = anchor;\n    this.normalizedAnchor_ = null;\n  }\n\n  /**\n   * Get the icon color.\n   * @return {import(\"../color.js\").Color} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the image icon.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image or Canvas element. If the Icon\n   * style was configured with `src` or with a not let loaded `img`, an `ImageBitmap` will be returned.\n   * @api\n   * @override\n   */\n  getImage(pixelRatio) {\n    return this.iconImage_.getImage(pixelRatio);\n  }\n\n  /**\n   * Get the pixel ratio.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} The pixel ratio of the image.\n   * @api\n   * @override\n   */\n  getPixelRatio(pixelRatio) {\n    return this.iconImage_.getPixelRatio(pixelRatio);\n  }\n\n  /**\n   * @return {import(\"../size.js\").Size} Image size.\n   * @override\n   */\n  getImageSize() {\n    return this.iconImage_.getSize();\n  }\n\n  /**\n   * @return {import(\"../ImageState.js\").default} Image state.\n   * @override\n   */\n  getImageState() {\n    return this.iconImage_.getImageState();\n  }\n\n  /**\n   * @return {HTMLImageElement|HTMLCanvasElement|ImageBitmap} Image element.\n   * @override\n   */\n  getHitDetectionImage() {\n    return this.iconImage_.getHitDetectionImage();\n  }\n\n  /**\n   * Get the origin of the symbolizer.\n   * @return {Array<number>} Origin.\n   * @api\n   * @override\n   */\n  getOrigin() {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    let offset = this.offset_;\n\n    if (this.offsetOrigin_ != 'top-left') {\n      const size = this.getSize();\n      const iconImageSize = this.iconImage_.getSize();\n      if (!size || !iconImageSize) {\n        return null;\n      }\n      offset = offset.slice();\n      if (\n        this.offsetOrigin_ == 'top-right' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[0] = iconImageSize[0] - size[0] - offset[0];\n      }\n      if (\n        this.offsetOrigin_ == 'bottom-left' ||\n        this.offsetOrigin_ == 'bottom-right'\n      ) {\n        offset[1] = iconImageSize[1] - size[1] - offset[1];\n      }\n    }\n    this.origin_ = offset;\n    return this.origin_;\n  }\n\n  /**\n   * Get the image URL.\n   * @return {string|undefined} Image src.\n   * @api\n   */\n  getSrc() {\n    return this.iconImage_.getSrc();\n  }\n\n  /**\n   * Get the size of the icon (in pixels).\n   * @return {import(\"../size.js\").Size} Image size.\n   * @api\n   * @override\n   */\n  getSize() {\n    return !this.size_ ? this.iconImage_.getSize() : this.size_;\n  }\n\n  /**\n   * Get the width of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon width (in pixels).\n   * @api\n   */\n  getWidth() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[0] * scale[0];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[0] * scale[0];\n    }\n    return undefined;\n  }\n\n  /**\n   * Get the height of the icon (in pixels). Will return undefined when the icon image is not yet loaded.\n   * @return {number} Icon height (in pixels).\n   * @api\n   */\n  getHeight() {\n    const scale = this.getScaleArray();\n    if (this.size_) {\n      return this.size_[1] * scale[1];\n    }\n    if (this.iconImage_.getImageState() == ImageState.LOADED) {\n      return this.iconImage_.getSize()[1] * scale[1];\n    }\n    return undefined;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size} scale Scale.\n   * @api\n   * @override\n   */\n  setScale(scale) {\n    delete this.initialOptions_;\n    super.setScale(scale);\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  listenImageChange(listener) {\n    this.iconImage_.addEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * When rendering a feature with an icon style, the vector renderer will\n   * automatically call this method. However, you might want to call this\n   * method yourself for preloading or other purposes.\n   * @api\n   * @override\n   */\n  load() {\n    this.iconImage_.load();\n  }\n\n  /**\n   * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n   * @override\n   */\n  unlistenImageChange(listener) {\n    this.iconImage_.removeEventListener(EventType.CHANGE, listener);\n  }\n\n  /**\n   * @override\n   */\n  ready() {\n    return this.iconImage_.ready();\n  }\n}\n\nexport default Icon;\n","/**\n * @module ol/style/Stroke\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} [color] A color, gradient or pattern.\n * See {@link module:ol/color~Color} and {@link module:ol/colorlike~ColorLike} for possible formats.\n * Default null; if null, the Canvas/renderer default black will be used.\n * @property {CanvasLineCap} [lineCap='round'] Line cap style: `butt`, `round`, or `square`.\n * @property {CanvasLineJoin} [lineJoin='round'] Line join style: `bevel`, `round`, or `miter`.\n * @property {Array<number>} [lineDash] Line dash pattern. Default is `null` (no dash).\n * @property {number} [lineDashOffset=0] Line dash offset.\n * @property {number} [miterLimit=10] Miter limit.\n * @property {number} [width] Width.\n */\n\n/**\n * @classdesc\n * Set stroke style for vector features.\n * Note that the defaults given are the Canvas defaults, which will be used if\n * option is not defined. The `get` functions return whatever was entered in\n * the options; they will not return the default.\n * @api\n */\nclass Stroke {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike}\n     */\n    this.color_ = options.color !== undefined ? options.color : null;\n\n    /**\n     * @private\n     * @type {CanvasLineCap|undefined}\n     */\n    this.lineCap_ = options.lineCap;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.lineDash_ = options.lineDash !== undefined ? options.lineDash : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.lineDashOffset_ = options.lineDashOffset;\n\n    /**\n     * @private\n     * @type {CanvasLineJoin|undefined}\n     */\n    this.lineJoin_ = options.lineJoin;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.miterLimit_ = options.miterLimit;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = options.width;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Stroke} The cloned style.\n   * @api\n   */\n  clone() {\n    const color = this.getColor();\n    return new Stroke({\n      color: Array.isArray(color) ? color.slice() : color || undefined,\n      lineCap: this.getLineCap(),\n      lineDash: this.getLineDash() ? this.getLineDash().slice() : undefined,\n      lineDashOffset: this.getLineDashOffset(),\n      lineJoin: this.getLineJoin(),\n      miterLimit: this.getMiterLimit(),\n      width: this.getWidth(),\n    });\n  }\n\n  /**\n   * Get the stroke color.\n   * @return {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} Color.\n   * @api\n   */\n  getColor() {\n    return this.color_;\n  }\n\n  /**\n   * Get the line cap type for the stroke.\n   * @return {CanvasLineCap|undefined} Line cap.\n   * @api\n   */\n  getLineCap() {\n    return this.lineCap_;\n  }\n\n  /**\n   * Get the line dash style for the stroke.\n   * @return {Array<number>|null} Line dash.\n   * @api\n   */\n  getLineDash() {\n    return this.lineDash_;\n  }\n\n  /**\n   * Get the line dash offset for the stroke.\n   * @return {number|undefined} Line dash offset.\n   * @api\n   */\n  getLineDashOffset() {\n    return this.lineDashOffset_;\n  }\n\n  /**\n   * Get the line join type for the stroke.\n   * @return {CanvasLineJoin|undefined} Line join.\n   * @api\n   */\n  getLineJoin() {\n    return this.lineJoin_;\n  }\n\n  /**\n   * Get the miter limit for the stroke.\n   * @return {number|undefined} Miter limit.\n   * @api\n   */\n  getMiterLimit() {\n    return this.miterLimit_;\n  }\n\n  /**\n   * Get the stroke width.\n   * @return {number|undefined} Width.\n   * @api\n   */\n  getWidth() {\n    return this.width_;\n  }\n\n  /**\n   * Set the color.\n   *\n   * @param {import(\"../color.js\").Color|import(\"../colorlike.js\").ColorLike} color Color.\n   * @api\n   */\n  setColor(color) {\n    this.color_ = color;\n  }\n\n  /**\n   * Set the line cap.\n   *\n   * @param {CanvasLineCap|undefined} lineCap Line cap.\n   * @api\n   */\n  setLineCap(lineCap) {\n    this.lineCap_ = lineCap;\n  }\n\n  /**\n   * Set the line dash.\n   *\n   * @param {Array<number>|null} lineDash Line dash.\n   * @api\n   */\n  setLineDash(lineDash) {\n    this.lineDash_ = lineDash;\n  }\n\n  /**\n   * Set the line dash offset.\n   *\n   * @param {number|undefined} lineDashOffset Line dash offset.\n   * @api\n   */\n  setLineDashOffset(lineDashOffset) {\n    this.lineDashOffset_ = lineDashOffset;\n  }\n\n  /**\n   * Set the line join.\n   *\n   * @param {CanvasLineJoin|undefined} lineJoin Line join.\n   * @api\n   */\n  setLineJoin(lineJoin) {\n    this.lineJoin_ = lineJoin;\n  }\n\n  /**\n   * Set the miter limit.\n   *\n   * @param {number|undefined} miterLimit Miter limit.\n   * @api\n   */\n  setMiterLimit(miterLimit) {\n    this.miterLimit_ = miterLimit;\n  }\n\n  /**\n   * Set the width.\n   *\n   * @param {number|undefined} width Width.\n   * @api\n   */\n  setWidth(width) {\n    this.width_ = width;\n  }\n}\n\nexport default Stroke;\n","/**\n * @module ol/style/Style\n */\n\nimport {assert} from '../asserts.js';\nimport CircleStyle from './Circle.js';\nimport Fill from './Fill.js';\nimport Stroke from './Stroke.js';\n\n/**\n * Defines how symbols and text are decluttered on layers ith `declutter` set to `true`\n * **declutter**: Overlapping symbols and text are decluttered.\n * **obstacle**: Symbols and text are rendered, but serve as obstacle for subsequent attempts\n *   to place a symbol or text at the same location.\n * **none**: No decluttering is done.\n *\n * @typedef {\"declutter\"|\"obstacle\"|\"none\"} DeclutterMode\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} and a `{number}`\n * representing the view's resolution. The function should return a\n * {@link module:ol/style/Style~Style} or an array of them. This way e.g. a\n * vector layer can be styled. If the function returns `undefined`, the\n * feature will not be rendered.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike, number):(Style|Array<Style>|void)} StyleFunction\n */\n\n/**\n * A {@link Style}, an array of {@link Style}, or a {@link StyleFunction}.\n * @typedef {Style|Array<Style>|StyleFunction} StyleLike\n */\n\n/**\n * A function that takes a {@link module:ol/Feature~Feature} as argument and returns an\n * {@link module:ol/geom/Geometry~Geometry} that will be rendered and styled for the feature.\n *\n * @typedef {function(import(\"../Feature.js\").FeatureLike):\n *     (import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined)} GeometryFunction\n */\n\n/**\n * Custom renderer function. Takes two arguments:\n *\n * 1. The pixel coordinates of the geometry in GeoJSON notation.\n * 2. The {@link module:ol/render~State} of the layer renderer.\n *\n * @typedef {function((import(\"../coordinate.js\").Coordinate|Array<import(\"../coordinate.js\").Coordinate>|Array<Array<import(\"../coordinate.js\").Coordinate>>|Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>),import(\"../render.js\").State): void} RenderFunction\n */\n\n/**\n * @typedef {Object} Options\n * @property {string|import(\"../geom/Geometry.js\").default|GeometryFunction} [geometry] Feature property or geometry\n * or function returning a geometry to render for this style.\n * @property {import(\"./Fill.js\").default} [fill] Fill style.\n * @property {import(\"./Image.js\").default} [image] Image style.\n * @property {RenderFunction} [renderer] Custom renderer. When configured, `fill`, `stroke` and `image` will be\n * ignored, and the provided function will be called with each render frame for each geometry.\n * @property {RenderFunction} [hitDetectionRenderer] Custom renderer for hit detection. If provided will be used\n * in hit detection rendering.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Text.js\").default} [text] Text style.\n * @property {number} [zIndex] Z index.\n */\n\n/**\n * @classdesc\n * Container for vector feature rendering styles. Any changes made to the style\n * or its children through `set*()` methods will not take effect until the\n * feature or layer that uses the style is re-rendered.\n *\n * ## Feature styles\n *\n * If no style is defined, the following default style is used:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const fill = new Fill({\n *    color: 'rgba(255,255,255,0.4)',\n *  });\n *  const stroke = new Stroke({\n *    color: '#3399CC',\n *    width: 1.25,\n *  });\n *  const styles = [\n *    new Style({\n *      image: new Circle({\n *        fill: fill,\n *        stroke: stroke,\n *        radius: 5,\n *      }),\n *      fill: fill,\n *      stroke: stroke,\n *    }),\n *  ];\n * ```\n *\n * A separate editing style has the following defaults:\n * ```js\n *  import {Circle, Fill, Stroke, Style} from 'ol/style.js';\n *\n *  const styles = {};\n *  const white = [255, 255, 255, 1];\n *  const blue = [0, 153, 255, 1];\n *  const width = 3;\n *  styles['Polygon'] = [\n *    new Style({\n *      fill: new Fill({\n *        color: [255, 255, 255, 0.5],\n *      }),\n *    }),\n *  ];\n *  styles['MultiPolygon'] =\n *      styles['Polygon'];\n *  styles['LineString'] = [\n *    new Style({\n *      stroke: new Stroke({\n *        color: white,\n *        width: width + 2,\n *      }),\n *    }),\n *    new Style({\n *      stroke: new Stroke({\n *        color: blue,\n *        width: width,\n *      }),\n *    }),\n *  ];\n *  styles['MultiLineString'] = styles['LineString'];\n *\n *  styles['Circle'] = styles['Polygon'].concat(\n *    styles['LineString']\n *  );\n *\n *  styles['Point'] = [\n *    new Style({\n *      image: new Circle({\n *        radius: width * 2,\n *        fill: new Fill({\n *          color: blue,\n *        }),\n *        stroke: new Stroke({\n *          color: white,\n *          width: width / 2,\n *        }),\n *      }),\n *      zIndex: Infinity,\n *    }),\n *  ];\n *  styles['MultiPoint'] =\n *      styles['Point'];\n *  styles['GeometryCollection'] =\n *      styles['Polygon'].concat(\n *          styles['LineString'],\n *          styles['Point']\n *      );\n * ```\n *\n * @api\n */\nclass Style {\n  /**\n   * @param {Options} [options] Style options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n     */\n    this.geometry_ = null;\n\n    /**\n     * @private\n     * @type {!GeometryFunction}\n     */\n    this.geometryFunction_ = defaultGeometryFunction;\n\n    if (options.geometry !== undefined) {\n      this.setGeometry(options.geometry);\n    }\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ = options.fill !== undefined ? options.fill : null;\n\n    /**\n     * @private\n     * @type {import(\"./Image.js\").default|null}\n     */\n    this.image_ = options.image !== undefined ? options.image : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.renderer_ = options.renderer !== undefined ? options.renderer : null;\n\n    /**\n     * @private\n     * @type {RenderFunction|null}\n     */\n    this.hitDetectionRenderer_ =\n      options.hitDetectionRenderer !== undefined\n        ? options.hitDetectionRenderer\n        : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {import(\"./Text.js\").default|null}\n     */\n    this.text_ = options.text !== undefined ? options.text : null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zIndex_ = options.zIndex;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Style} The cloned style.\n   * @api\n   */\n  clone() {\n    let geometry = this.getGeometry();\n    if (geometry && typeof geometry === 'object') {\n      geometry = /** @type {import(\"../geom/Geometry.js\").default} */ (\n        geometry\n      ).clone();\n    }\n    return new Style({\n      geometry: geometry ?? undefined,\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      image: this.getImage() ? this.getImage().clone() : undefined,\n      renderer: this.getRenderer() ?? undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      text: this.getText() ? this.getText().clone() : undefined,\n      zIndex: this.getZIndex(),\n    });\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setRenderer} or the `renderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Sets a custom renderer function for this style. When set, `fill`, `stroke`\n   * and `image` options of the style will be ignored.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setRenderer(renderer) {\n    this.renderer_ = renderer;\n  }\n\n  /**\n   * Sets a custom renderer function for this style used\n   * in hit detection.\n   * @param {RenderFunction|null} renderer Custom renderer function.\n   * @api\n   */\n  setHitDetectionRenderer(renderer) {\n    this.hitDetectionRenderer_ = renderer;\n  }\n\n  /**\n   * Get the custom renderer function that was configured with\n   * {@link #setHitDetectionRenderer} or the `hitDetectionRenderer` constructor option.\n   * @return {RenderFunction|null} Custom renderer function.\n   * @api\n   */\n  getHitDetectionRenderer() {\n    return this.hitDetectionRenderer_;\n  }\n\n  /**\n   * Get the geometry to be rendered.\n   * @return {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null}\n   * Feature property or geometry or function that returns the geometry that will\n   * be rendered with this style.\n   * @api\n   */\n  getGeometry() {\n    return this.geometry_;\n  }\n\n  /**\n   * Get the function used to generate a geometry for rendering.\n   * @return {!GeometryFunction} Function that is called with a feature\n   * and returns the geometry to render instead of the feature's geometry.\n   * @api\n   */\n  getGeometryFunction() {\n    return this.geometryFunction_;\n  }\n\n  /**\n   * Get the fill style.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Set the fill style.\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Get the image style.\n   * @return {import(\"./Image.js\").default|null} Image style.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Set the image style.\n   * @param {import(\"./Image.js\").default} image Image style.\n   * @api\n   */\n  setImage(image) {\n    this.image_ = image;\n  }\n\n  /**\n   * Get the stroke style.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Set the stroke style.\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Get the text style.\n   * @return {import(\"./Text.js\").default|null} Text style.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Set the text style.\n   * @param {import(\"./Text.js\").default} text Text style.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Get the z-index for the style.\n   * @return {number|undefined} ZIndex.\n   * @api\n   */\n  getZIndex() {\n    return this.zIndex_;\n  }\n\n  /**\n   * Set a geometry that is rendered instead of the feature's geometry.\n   *\n   * @param {string|import(\"../geom/Geometry.js\").default|GeometryFunction|null} geometry\n   *     Feature property or geometry or function returning a geometry to render\n   *     for this style.\n   * @api\n   */\n  setGeometry(geometry) {\n    if (typeof geometry === 'function') {\n      this.geometryFunction_ = geometry;\n    } else if (typeof geometry === 'string') {\n      this.geometryFunction_ = function (feature) {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (\n          feature.get(geometry)\n        );\n      };\n    } else if (!geometry) {\n      this.geometryFunction_ = defaultGeometryFunction;\n    } else if (geometry !== undefined) {\n      this.geometryFunction_ = function () {\n        return /** @type {import(\"../geom/Geometry.js\").default} */ (geometry);\n      };\n    }\n    this.geometry_ = geometry;\n  }\n\n  /**\n   * Set the z-index.\n   *\n   * @param {number|undefined} zIndex ZIndex.\n   * @api\n   */\n  setZIndex(zIndex) {\n    this.zIndex_ = zIndex;\n  }\n}\n\n/**\n * Convert the provided object into a style function.  Functions passed through\n * unchanged.  Arrays of Style or single style objects wrapped in a\n * new style function.\n * @param {StyleFunction|Array<Style>|Style} obj\n *     A style function, a single style, or an array of styles.\n * @return {StyleFunction} A style function.\n */\nexport function toFunction(obj) {\n  let styleFunction;\n\n  if (typeof obj === 'function') {\n    styleFunction = obj;\n  } else {\n    /**\n     * @type {Array<Style>}\n     */\n    let styles;\n    if (Array.isArray(obj)) {\n      styles = obj;\n    } else {\n      assert(\n        typeof (/** @type {?} */ (obj).getZIndex) === 'function',\n        'Expected an `Style` or an array of `Style`',\n      );\n      const style = /** @type {Style} */ (obj);\n      styles = [style];\n    }\n    styleFunction = function () {\n      return styles;\n    };\n  }\n  return styleFunction;\n}\n\n/**\n * @type {Array<Style>|null}\n */\nlet defaultStyles = null;\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} resolution Resolution.\n * @return {Array<Style>} Style.\n */\nexport function createDefaultStyle(feature, resolution) {\n  // We don't use an immediately-invoked function\n  // and a closure so we don't get an error at script evaluation time in\n  // browsers that do not support Canvas. (import(\"./Circle.js\").CircleStyle does\n  // canvas.getContext('2d') at construction time, which will cause an.error\n  // in such browsers.)\n  if (!defaultStyles) {\n    const fill = new Fill({\n      color: 'rgba(255,255,255,0.4)',\n    });\n    const stroke = new Stroke({\n      color: '#3399CC',\n      width: 1.25,\n    });\n    defaultStyles = [\n      new Style({\n        image: new CircleStyle({\n          fill: fill,\n          stroke: stroke,\n          radius: 5,\n        }),\n        fill: fill,\n        stroke: stroke,\n      }),\n    ];\n  }\n  return defaultStyles;\n}\n\n/**\n * Default styles for editing features.\n * @return {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} Styles\n */\nexport function createEditingStyle() {\n  /** @type {Object<import(\"../geom/Geometry.js\").Type, Array<Style>>} */\n  const styles = {};\n  const white = [255, 255, 255, 1];\n  const blue = [0, 153, 255, 1];\n  const width = 3;\n  styles['Polygon'] = [\n    new Style({\n      fill: new Fill({\n        color: [255, 255, 255, 0.5],\n      }),\n    }),\n  ];\n  styles['MultiPolygon'] = styles['Polygon'];\n\n  styles['LineString'] = [\n    new Style({\n      stroke: new Stroke({\n        color: white,\n        width: width + 2,\n      }),\n    }),\n    new Style({\n      stroke: new Stroke({\n        color: blue,\n        width: width,\n      }),\n    }),\n  ];\n  styles['MultiLineString'] = styles['LineString'];\n\n  styles['Circle'] = styles['Polygon'].concat(styles['LineString']);\n\n  styles['Point'] = [\n    new Style({\n      image: new CircleStyle({\n        radius: width * 2,\n        fill: new Fill({\n          color: blue,\n        }),\n        stroke: new Stroke({\n          color: white,\n          width: width / 2,\n        }),\n      }),\n      zIndex: Infinity,\n    }),\n  ];\n  styles['MultiPoint'] = styles['Point'];\n\n  styles['GeometryCollection'] = styles['Polygon'].concat(\n    styles['LineString'],\n    styles['Point'],\n  );\n\n  return styles;\n}\n\n/**\n * Function that is called with a feature and returns its default geometry.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature to get the geometry for.\n * @return {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default|undefined} Geometry to render.\n */\nfunction defaultGeometryFunction(feature) {\n  return feature.getGeometry();\n}\n\nexport default Style;\n","/**\n * @module ol/style/Text\n */\nimport {toSize} from '../size.js';\nimport Fill from './Fill.js';\n\n/**\n * @typedef {'point' | 'line'} TextPlacement\n * Default text placement is `'point'`. Note that\n * `'line'` requires the underlying geometry to be a {@link module:ol/geom/LineString~LineString},\n * {@link module:ol/geom/Polygon~Polygon}, {@link module:ol/geom/MultiLineString~MultiLineString} or\n * {@link module:ol/geom/MultiPolygon~MultiPolygon}.\n */\n\n/**\n * @typedef {'left' | 'center' | 'right'} TextJustify\n */\n\n/**\n * The default fill color to use if no fill was set at construction time; a\n * blackish `#333`.\n *\n * @const {string}\n */\nconst DEFAULT_FILL_COLOR = '#333';\n\n/**\n * @typedef {Object} Options\n * @property {string} [font] Font style as CSS `font` value, see:\n * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/font. Default is `'10px sans-serif'`\n * @property {number} [maxAngle=Math.PI/4] When `placement` is set to `'line'`, allow a maximum angle between adjacent characters.\n * The expected value is in radians, and the default is 45° (`Math.PI / 4`).\n * @property {number} [offsetX=0] Horizontal text offset in pixels. A positive will shift the text right.\n * @property {number} [offsetY=0] Vertical text offset in pixels. A positive will shift the text down.\n * @property {boolean} [overflow=false] For polygon labels or when `placement` is set to `'line'`, allow text to exceed\n * the width of the polygon at the label position or the length of the path that it follows.\n * @property {TextPlacement} [placement='point'] Text placement.\n * @property {number} [repeat] Repeat interval. When set, the text will be repeated at this interval, which specifies\n * the distance between two text anchors in pixels. Only available when `placement` is set to `'line'`. Overrides 'textAlign'.\n * @property {number|import(\"../size.js\").Size} [scale] Scale.\n * @property {boolean} [rotateWithView=false] Whether to rotate the text with the view.\n * @property {boolean} [keepUpright=true] Whether the text can be rotated 180° to prevent being rendered upside down.\n * @property {number} [rotation=0] Rotation in radians (positive rotation clockwise).\n * @property {string|Array<string>} [text] Text content or rich text content. For plain text provide a string, which can\n * contain line breaks (`\\n`). For rich text provide an array of text/font tuples. A tuple consists of the text to\n * render and the font to use (or `''` to use the text style's font). A line break has to be a separate tuple (i.e. `'\\n', ''`).\n * **Example:** `['foo', 'bold 10px sans-serif', ' bar', 'italic 10px sans-serif', ' baz', '']` will yield \"**foo** *bar* baz\".\n * **Note:** Rich text is not supported for `placement: 'line'` or the immediate rendering API.\n * @property {CanvasTextAlign} [textAlign] Text alignment. Possible values: `'left'`, `'right'`, `'center'`, `'end'` or `'start'`.\n * Default is `'center'` for `placement: 'point'`. For `placement: 'line'`, the default is to let the renderer choose a\n * placement where `maxAngle` is not exceeded.\n * @property {TextJustify} [justify] Text justification within the text box.\n * If not set, text is justified towards the `textAlign` anchor.\n * Otherwise, use options `'left'`, `'center'`, or `'right'` to justify the text within the text box.\n * **Note:** `justify` is ignored for immediate rendering and also for `placement: 'line'`.\n * @property {CanvasTextBaseline} [textBaseline='middle'] Text base line. Possible values: `'bottom'`, `'top'`, `'middle'`, `'alphabetic'`,\n * `'hanging'`, `'ideographic'`.\n * @property {import(\"./Fill.js\").default|null} [fill] Fill style. If none is provided, we'll use a dark fill-style (#333). Specify `null` for no fill.\n * @property {import(\"./Stroke.js\").default} [stroke] Stroke style.\n * @property {import(\"./Fill.js\").default} [backgroundFill] Fill style for the text background when `placement` is\n * `'point'`. Default is no fill.\n * @property {import(\"./Stroke.js\").default} [backgroundStroke] Stroke style for the text background  when `placement`\n * is `'point'`. Default is no stroke.\n * @property {Array<number>} [padding=[0, 0, 0, 0]] Padding in pixels around the text for decluttering and background. The order of\n * values in the array is `[top, right, bottom, left]`.\n * @property {import('../style/Style.js').DeclutterMode} [declutterMode] Declutter mode: `declutter`, `obstacle`, `none`\n */\n\n/**\n * @classdesc\n * Set text style for vector features.\n * @api\n */\nclass Text {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.font_ = options.font;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = options.rotation;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = options.rotateWithView;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.keepUpright_ = options.keepUpright;\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size|undefined}\n     */\n    this.scale_ = options.scale;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.scaleArray_ = toSize(options.scale !== undefined ? options.scale : 1);\n\n    /**\n     * @private\n     * @type {string|Array<string>|undefined}\n     */\n    this.text_ = options.text;\n\n    /**\n     * @private\n     * @type {CanvasTextAlign|undefined}\n     */\n    this.textAlign_ = options.textAlign;\n\n    /**\n     * @private\n     * @type {TextJustify|undefined}\n     */\n    this.justify_ = options.justify;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.repeat_ = options.repeat;\n\n    /**\n     * @private\n     * @type {CanvasTextBaseline|undefined}\n     */\n    this.textBaseline_ = options.textBaseline;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.fill_ =\n      options.fill !== undefined\n        ? options.fill\n        : new Fill({color: DEFAULT_FILL_COLOR});\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxAngle_ =\n      options.maxAngle !== undefined ? options.maxAngle : Math.PI / 4;\n\n    /**\n     * @private\n     * @type {TextPlacement}\n     */\n    this.placement_ =\n      options.placement !== undefined ? options.placement : 'point';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overflow_ = !!options.overflow;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.stroke_ = options.stroke !== undefined ? options.stroke : null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetX_ = options.offsetX !== undefined ? options.offsetX : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offsetY_ = options.offsetY !== undefined ? options.offsetY : 0;\n\n    /**\n     * @private\n     * @type {import(\"./Fill.js\").default|null}\n     */\n    this.backgroundFill_ = options.backgroundFill\n      ? options.backgroundFill\n      : null;\n\n    /**\n     * @private\n     * @type {import(\"./Stroke.js\").default|null}\n     */\n    this.backgroundStroke_ = options.backgroundStroke\n      ? options.backgroundStroke\n      : null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.padding_ = options.padding === undefined ? null : options.padding;\n\n    /**\n     * @private\n     * @type {import('../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = options.declutterMode;\n  }\n\n  /**\n   * Clones the style.\n   * @return {Text} The cloned style.\n   * @api\n   */\n  clone() {\n    const scale = this.getScale();\n    return new Text({\n      font: this.getFont(),\n      placement: this.getPlacement(),\n      repeat: this.getRepeat(),\n      maxAngle: this.getMaxAngle(),\n      overflow: this.getOverflow(),\n      rotation: this.getRotation(),\n      rotateWithView: this.getRotateWithView(),\n      keepUpright: this.getKeepUpright(),\n      scale: Array.isArray(scale) ? scale.slice() : scale,\n      text: this.getText(),\n      textAlign: this.getTextAlign(),\n      justify: this.getJustify(),\n      textBaseline: this.getTextBaseline(),\n      fill: this.getFill() ? this.getFill().clone() : undefined,\n      stroke: this.getStroke() ? this.getStroke().clone() : undefined,\n      offsetX: this.getOffsetX(),\n      offsetY: this.getOffsetY(),\n      backgroundFill: this.getBackgroundFill()\n        ? this.getBackgroundFill().clone()\n        : undefined,\n      backgroundStroke: this.getBackgroundStroke()\n        ? this.getBackgroundStroke().clone()\n        : undefined,\n      padding: this.getPadding() || undefined,\n      declutterMode: this.getDeclutterMode(),\n    });\n  }\n\n  /**\n   * Get the `overflow` configuration.\n   * @return {boolean} Let text overflow the length of the path they follow.\n   * @api\n   */\n  getOverflow() {\n    return this.overflow_;\n  }\n\n  /**\n   * Get the font name.\n   * @return {string|undefined} Font.\n   * @api\n   */\n  getFont() {\n    return this.font_;\n  }\n\n  /**\n   * Get the maximum angle between adjacent characters.\n   * @return {number} Angle in radians.\n   * @api\n   */\n  getMaxAngle() {\n    return this.maxAngle_;\n  }\n\n  /**\n   * Get the label placement.\n   * @return {TextPlacement} Text placement.\n   * @api\n   */\n  getPlacement() {\n    return this.placement_;\n  }\n\n  /**\n   * Get the repeat interval of the text.\n   * @return {number|undefined} Repeat interval in pixels.\n   * @api\n   */\n  getRepeat() {\n    return this.repeat_;\n  }\n\n  /**\n   * Get the x-offset for the text.\n   * @return {number} Horizontal text offset.\n   * @api\n   */\n  getOffsetX() {\n    return this.offsetX_;\n  }\n\n  /**\n   * Get the y-offset for the text.\n   * @return {number} Vertical text offset.\n   * @api\n   */\n  getOffsetY() {\n    return this.offsetY_;\n  }\n\n  /**\n   * Get the fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getFill() {\n    return this.fill_;\n  }\n\n  /**\n   * Determine whether the text rotates with the map.\n   * @return {boolean|undefined} Rotate with map.\n   * @api\n   */\n  getRotateWithView() {\n    return this.rotateWithView_;\n  }\n\n  /**\n   * Determine whether the text can be rendered upside down.\n   * @return {boolean|undefined} Keep text upright.\n   * @api\n   */\n  getKeepUpright() {\n    return this.keepUpright_;\n  }\n\n  /**\n   * Get the text rotation.\n   * @return {number|undefined} Rotation.\n   * @api\n   */\n  getRotation() {\n    return this.rotation_;\n  }\n\n  /**\n   * Get the text scale.\n   * @return {number|import(\"../size.js\").Size|undefined} Scale.\n   * @api\n   */\n  getScale() {\n    return this.scale_;\n  }\n\n  /**\n   * Get the symbolizer scale array.\n   * @return {import(\"../size.js\").Size} Scale array.\n   */\n  getScaleArray() {\n    return this.scaleArray_;\n  }\n\n  /**\n   * Get the stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getStroke() {\n    return this.stroke_;\n  }\n\n  /**\n   * Get the text to be rendered.\n   * @return {string|Array<string>|undefined} Text.\n   * @api\n   */\n  getText() {\n    return this.text_;\n  }\n\n  /**\n   * Get the text alignment.\n   * @return {CanvasTextAlign|undefined} Text align.\n   * @api\n   */\n  getTextAlign() {\n    return this.textAlign_;\n  }\n\n  /**\n   * Get the justification.\n   * @return {TextJustify|undefined} Justification.\n   * @api\n   */\n  getJustify() {\n    return this.justify_;\n  }\n\n  /**\n   * Get the text baseline.\n   * @return {CanvasTextBaseline|undefined} Text baseline.\n   * @api\n   */\n  getTextBaseline() {\n    return this.textBaseline_;\n  }\n\n  /**\n   * Get the background fill style for the text.\n   * @return {import(\"./Fill.js\").default|null} Fill style.\n   * @api\n   */\n  getBackgroundFill() {\n    return this.backgroundFill_;\n  }\n\n  /**\n   * Get the background stroke style for the text.\n   * @return {import(\"./Stroke.js\").default|null} Stroke style.\n   * @api\n   */\n  getBackgroundStroke() {\n    return this.backgroundStroke_;\n  }\n\n  /**\n   * Get the padding for the text.\n   * @return {Array<number>|null} Padding.\n   * @api\n   */\n  getPadding() {\n    return this.padding_;\n  }\n\n  /**\n   * Get the declutter mode of the shape\n   * @return {import(\"./Style.js\").DeclutterMode} Shape's declutter mode\n   * @api\n   */\n  getDeclutterMode() {\n    return this.declutterMode_;\n  }\n\n  /**\n   * Set the `overflow` property.\n   *\n   * @param {boolean} overflow Let text overflow the path that it follows.\n   * @api\n   */\n  setOverflow(overflow) {\n    this.overflow_ = overflow;\n  }\n\n  /**\n   * Set the font.\n   *\n   * @param {string|undefined} font Font.\n   * @api\n   */\n  setFont(font) {\n    this.font_ = font;\n  }\n\n  /**\n   * Set the maximum angle between adjacent characters.\n   *\n   * @param {number} maxAngle Angle in radians.\n   * @api\n   */\n  setMaxAngle(maxAngle) {\n    this.maxAngle_ = maxAngle;\n  }\n\n  /**\n   * Set the x offset.\n   *\n   * @param {number} offsetX Horizontal text offset.\n   * @api\n   */\n  setOffsetX(offsetX) {\n    this.offsetX_ = offsetX;\n  }\n\n  /**\n   * Set the y offset.\n   *\n   * @param {number} offsetY Vertical text offset.\n   * @api\n   */\n  setOffsetY(offsetY) {\n    this.offsetY_ = offsetY;\n  }\n\n  /**\n   * Set the text placement.\n   *\n   * @param {TextPlacement} placement Placement.\n   * @api\n   */\n  setPlacement(placement) {\n    this.placement_ = placement;\n  }\n\n  /**\n   * Set the repeat interval of the text.\n   * @param {number|undefined} [repeat] Repeat interval in pixels.\n   * @api\n   */\n  setRepeat(repeat) {\n    this.repeat_ = repeat;\n  }\n\n  /**\n   * Set whether to rotate the text with the view.\n   *\n   * @param {boolean} rotateWithView Rotate with map.\n   * @api\n   */\n  setRotateWithView(rotateWithView) {\n    this.rotateWithView_ = rotateWithView;\n  }\n\n  /**\n   * Set whether the text can be rendered upside down.\n   *\n   * @param {boolean} keepUpright Keep text upright.\n   * @api\n   */\n  setKeepUpright(keepUpright) {\n    this.keepUpright_ = keepUpright;\n  }\n\n  /**\n   * Set the fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setFill(fill) {\n    this.fill_ = fill;\n  }\n\n  /**\n   * Set the rotation.\n   *\n   * @param {number|undefined} rotation Rotation.\n   * @api\n   */\n  setRotation(rotation) {\n    this.rotation_ = rotation;\n  }\n\n  /**\n   * Set the scale.\n   *\n   * @param {number|import(\"../size.js\").Size|undefined} scale Scale.\n   * @api\n   */\n  setScale(scale) {\n    this.scale_ = scale;\n    this.scaleArray_ = toSize(scale !== undefined ? scale : 1);\n  }\n\n  /**\n   * Set the stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setStroke(stroke) {\n    this.stroke_ = stroke;\n  }\n\n  /**\n   * Set the text.\n   *\n   * @param {string|Array<string>|undefined} text Text.\n   * @api\n   */\n  setText(text) {\n    this.text_ = text;\n  }\n\n  /**\n   * Set the text alignment.\n   *\n   * @param {CanvasTextAlign|undefined} textAlign Text align.\n   * @api\n   */\n  setTextAlign(textAlign) {\n    this.textAlign_ = textAlign;\n  }\n\n  /**\n   * Set the justification.\n   *\n   * @param {TextJustify|undefined} justify Justification.\n   * @api\n   */\n  setJustify(justify) {\n    this.justify_ = justify;\n  }\n\n  /**\n   * Set the text baseline.\n   *\n   * @param {CanvasTextBaseline|undefined} textBaseline Text baseline.\n   * @api\n   */\n  setTextBaseline(textBaseline) {\n    this.textBaseline_ = textBaseline;\n  }\n\n  /**\n   * Set the background fill.\n   *\n   * @param {import(\"./Fill.js\").default|null} fill Fill style.\n   * @api\n   */\n  setBackgroundFill(fill) {\n    this.backgroundFill_ = fill;\n  }\n\n  /**\n   * Set the background stroke.\n   *\n   * @param {import(\"./Stroke.js\").default|null} stroke Stroke style.\n   * @api\n   */\n  setBackgroundStroke(stroke) {\n    this.backgroundStroke_ = stroke;\n  }\n\n  /**\n   * Set the padding (`[top, right, bottom, left]`).\n   *\n   * @param {Array<number>|null} padding Padding.\n   * @api\n   */\n  setPadding(padding) {\n    this.padding_ = padding;\n  }\n}\n\nexport default Text;\n","/**\n * @module ol/render/canvas/style\n */\n\nimport {NO_COLOR} from '../../color.js';\nimport {buildExpression, newEvaluationContext} from '../../expr/cpu.js';\nimport {\n  BooleanType,\n  ColorType,\n  NumberArrayType,\n  NumberType,\n  StringType,\n  computeGeometryType,\n  newParsingContext,\n} from '../../expr/expression.js';\nimport {isEmpty} from '../../obj.js';\nimport {toSize} from '../../size.js';\nimport Circle from '../../style/Circle.js';\nimport Fill from '../../style/Fill.js';\nimport Icon from '../../style/Icon.js';\nimport RegularShape from '../../style/RegularShape.js';\nimport Stroke from '../../style/Stroke.js';\nimport Style from '../../style/Style.js';\nimport Text from '../../style/Text.js';\n\n/**\n * @fileoverview This module includes functions to build styles for the canvas renderer.  Building\n * is composed of two steps: parsing and compiling.  The parsing step takes an encoded expression\n * and returns an instance of one of the expression classes.  The compiling step takes the\n * expression instance and returns a function that can be evaluated to return a literal value.  The\n * evaluator function should do as little allocation and work as possible.\n */\n\n/**\n * @typedef {import(\"../../style/flat.js\").FlatStyle} FlatStyle\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").EncodedExpression} EncodedExpression\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").ParsingContext} ParsingContext\n */\n\n/**\n * @typedef {import(\"../../expr/expression.js\").CallExpression} CallExpression\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").EvaluationContext} EvaluationContext\n */\n\n/**\n * @typedef {import(\"../../expr/cpu.js\").ExpressionEvaluator} ExpressionEvaluator\n */\n\n/**\n * @param {EvaluationContext} context The evaluation context.\n * @return {boolean} Always true.\n */\nfunction always(context) {\n  return true;\n}\n\n/**\n * This function adapts a rule evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function rulesToStyleFunction(rules) {\n  const parsingContext = newParsingContext();\n  const evaluator = buildRuleSet(rules, parsingContext);\n  const evaluationContext = newEvaluationContext();\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    if (parsingContext.geometryType) {\n      evaluationContext.geometryType = computeGeometryType(\n        feature.getGeometry(),\n      );\n    }\n    return evaluator(evaluationContext);\n  };\n}\n\n/**\n * This function adapts a style evaluator to the existing style function interface.\n * After we have deprecated the style function, we can use the compiled rules directly\n * and pass a more complete evaluation context (variables, zoom, time, etc.).\n *\n * @param {Array<import('../../style/flat.js').FlatStyle>} flatStyles The flat styles.\n * @return {import('../../style/Style.js').StyleFunction} A style function.\n */\nexport function flatStylesToStyleFunction(flatStyles) {\n  const parsingContext = newParsingContext();\n  const length = flatStyles.length;\n\n  /**\n   * @type {Array<StyleEvaluator>}\n   */\n  const evaluators = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    evaluators[i] = buildStyle(flatStyles[i], parsingContext);\n  }\n  const evaluationContext = newEvaluationContext();\n\n  /**\n   * @type {Array<Style>}\n   */\n  const styles = new Array(length);\n\n  return function (feature, resolution) {\n    evaluationContext.properties = feature.getPropertiesInternal();\n    evaluationContext.resolution = resolution;\n    if (parsingContext.featureId) {\n      const id = feature.getId();\n      if (id !== undefined) {\n        evaluationContext.featureId = id;\n      } else {\n        evaluationContext.featureId = null;\n      }\n    }\n    let nonNullCount = 0;\n    for (let i = 0; i < length; ++i) {\n      const style = evaluators[i](evaluationContext);\n      if (style) {\n        styles[nonNullCount] = style;\n        nonNullCount += 1;\n      }\n    }\n    styles.length = nonNullCount;\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Array<Style>} RuleSetEvaluator\n */\n\n/**\n * @typedef {Object} CompiledRule\n * @property {ExpressionEvaluator} filter The compiled filter evaluator.\n * @property {Array<StyleEvaluator>} styles The list of compiled style evaluators.\n */\n\n/**\n * @param {Array<import('../../style/flat.js').Rule>} rules The rules.\n * @param {ParsingContext} context The parsing context.\n * @return {RuleSetEvaluator} The evaluator function.\n */\nexport function buildRuleSet(rules, context) {\n  const length = rules.length;\n\n  /**\n   * @type {Array<CompiledRule>}\n   */\n  const compiledRules = new Array(length);\n\n  for (let i = 0; i < length; ++i) {\n    const rule = rules[i];\n    const filter =\n      'filter' in rule\n        ? buildExpression(rule.filter, BooleanType, context)\n        : always;\n\n    /**\n     * @type {Array<StyleEvaluator>}\n     */\n    let styles;\n    if (Array.isArray(rule.style)) {\n      const styleLength = rule.style.length;\n      styles = new Array(styleLength);\n      for (let j = 0; j < styleLength; ++j) {\n        styles[j] = buildStyle(rule.style[j], context);\n      }\n    } else {\n      styles = [buildStyle(rule.style, context)];\n    }\n\n    compiledRules[i] = {filter, styles};\n  }\n\n  return function (context) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = [];\n\n    let someMatched = false;\n    for (let i = 0; i < length; ++i) {\n      const filterEvaluator = compiledRules[i].filter;\n      if (!filterEvaluator(context)) {\n        continue;\n      }\n      if (rules[i].else && someMatched) {\n        continue;\n      }\n      someMatched = true;\n      for (const styleEvaluator of compiledRules[i].styles) {\n        const style = styleEvaluator(context);\n        if (!style) {\n          continue;\n        }\n        styles.push(style);\n      }\n    }\n\n    return styles;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Style|null} StyleEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle A flat style literal.\n * @param {ParsingContext} context The parsing context.\n * @return {StyleEvaluator} A function that evaluates to a style.  The style returned by\n * this function will be reused between invocations.\n */\nexport function buildStyle(flatStyle, context) {\n  const evaluateFill = buildFill(flatStyle, '', context);\n  const evaluateStroke = buildStroke(flatStyle, '', context);\n  const evaluateText = buildText(flatStyle, context);\n  const evaluateImage = buildImage(flatStyle, context);\n  const evaluateZIndex = numberEvaluator(flatStyle, 'z-index', context);\n\n  if (\n    !evaluateFill &&\n    !evaluateStroke &&\n    !evaluateText &&\n    !evaluateImage &&\n    !isEmpty(flatStyle)\n  ) {\n    // assume this is a user error\n    // would be nice to check the properties and suggest \"did you mean...\"\n    throw new Error(\n      'No fill, stroke, point, or text symbolizer properties in style: ' +\n        JSON.stringify(flatStyle),\n    );\n  }\n\n  const style = new Style();\n  return function (context) {\n    let empty = true;\n    if (evaluateFill) {\n      const fill = evaluateFill(context);\n      if (fill) {\n        empty = false;\n      }\n      style.setFill(fill);\n    }\n    if (evaluateStroke) {\n      const stroke = evaluateStroke(context);\n      if (stroke) {\n        empty = false;\n      }\n      style.setStroke(stroke);\n    }\n    if (evaluateText) {\n      const text = evaluateText(context);\n      if (text) {\n        empty = false;\n      }\n      style.setText(text);\n    }\n    if (evaluateImage) {\n      const image = evaluateImage(context);\n      if (image) {\n        empty = false;\n      }\n      style.setImage(image);\n    }\n    if (evaluateZIndex) {\n      style.setZIndex(evaluateZIndex(context));\n    }\n    if (empty) {\n      return null;\n    }\n    return style;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Fill|null} FillEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {FillEvaluator?} A function that evaluates to a fill.\n */\nfunction buildFill(flatStyle, prefix, context) {\n  let evaluateColor;\n  if (prefix + 'fill-pattern-src' in flatStyle) {\n    evaluateColor = patternEvaluator(flatStyle, prefix + 'fill-', context);\n  } else {\n    if (flatStyle[prefix + 'fill-color'] === 'none') {\n      // avoids hit detection\n      return (context) => null;\n    }\n\n    evaluateColor = colorLikeEvaluator(\n      flatStyle,\n      prefix + 'fill-color',\n      context,\n    );\n  }\n  if (!evaluateColor) {\n    return null;\n  }\n\n  const fill = new Fill();\n  return function (context) {\n    const color = evaluateColor(context);\n    if (color === NO_COLOR) {\n      return null;\n    }\n    fill.setColor(color);\n    return fill;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Stroke|null} StrokeEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} prefix The property prefix.\n * @param {ParsingContext} context The parsing context.\n * @return {StrokeEvaluator?} A function the evaluates to a stroke.\n */\nfunction buildStroke(flatStyle, prefix, context) {\n  const evaluateWidth = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-width',\n    context,\n  );\n\n  const evaluateColor = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'stroke-color',\n    context,\n  );\n\n  if (!evaluateWidth && !evaluateColor) {\n    return null;\n  }\n\n  const evaluateLineCap = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-cap',\n    context,\n  );\n\n  const evaluateLineJoin = stringEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-join',\n    context,\n  );\n\n  const evaluateLineDash = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash',\n    context,\n  );\n\n  const evaluateLineDashOffset = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-line-dash-offset',\n    context,\n  );\n\n  const evaluateMiterLimit = numberEvaluator(\n    flatStyle,\n    prefix + 'stroke-miter-limit',\n    context,\n  );\n\n  const stroke = new Stroke();\n  return function (context) {\n    if (evaluateColor) {\n      const color = evaluateColor(context);\n      if (color === NO_COLOR) {\n        return null;\n      }\n      stroke.setColor(color);\n    }\n\n    if (evaluateWidth) {\n      stroke.setWidth(evaluateWidth(context));\n    }\n\n    if (evaluateLineCap) {\n      const lineCap = evaluateLineCap(context);\n      if (lineCap !== 'butt' && lineCap !== 'round' && lineCap !== 'square') {\n        throw new Error('Expected butt, round, or square line cap');\n      }\n      stroke.setLineCap(lineCap);\n    }\n\n    if (evaluateLineJoin) {\n      const lineJoin = evaluateLineJoin(context);\n      if (\n        lineJoin !== 'bevel' &&\n        lineJoin !== 'round' &&\n        lineJoin !== 'miter'\n      ) {\n        throw new Error('Expected bevel, round, or miter line join');\n      }\n      stroke.setLineJoin(lineJoin);\n    }\n\n    if (evaluateLineDash) {\n      stroke.setLineDash(evaluateLineDash(context));\n    }\n\n    if (evaluateLineDashOffset) {\n      stroke.setLineDashOffset(evaluateLineDashOffset(context));\n    }\n\n    if (evaluateMiterLimit) {\n      stroke.setMiterLimit(evaluateMiterLimit(context));\n    }\n\n    return stroke;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):Text} TextEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {TextEvaluator?} A function that evaluates to a text symbolizer.\n */\nfunction buildText(flatStyle, context) {\n  const prefix = 'text-';\n\n  // Currently, an Array<string> may be used for rich text support.  This doesn't\n  // work with our expression syntax where arrays of strings are interpreted as\n  // call expressions.  To support rich text, we could add a 'strings' operator\n  // where all the following arguments would be string values.\n  const evaluateValue = stringEvaluator(flatStyle, prefix + 'value', context);\n  if (!evaluateValue) {\n    return null;\n  }\n\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n\n  const evaluateBackgroundFill = buildFill(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n\n  const evaluateBackgroundStroke = buildStroke(\n    flatStyle,\n    prefix + 'background-',\n    context,\n  );\n\n  const evaluateFont = stringEvaluator(flatStyle, prefix + 'font', context);\n\n  const evaluateMaxAngle = numberEvaluator(\n    flatStyle,\n    prefix + 'max-angle',\n    context,\n  );\n\n  const evaluateOffsetX = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-x',\n    context,\n  );\n\n  const evaluateOffsetY = numberEvaluator(\n    flatStyle,\n    prefix + 'offset-y',\n    context,\n  );\n\n  const evaluateOverflow = booleanEvaluator(\n    flatStyle,\n    prefix + 'overflow',\n    context,\n  );\n\n  const evaluatePlacement = stringEvaluator(\n    flatStyle,\n    prefix + 'placement',\n    context,\n  );\n\n  const evaluateRepeat = numberEvaluator(flatStyle, prefix + 'repeat', context);\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateAlign = stringEvaluator(flatStyle, prefix + 'align', context);\n\n  const evaluateJustify = stringEvaluator(\n    flatStyle,\n    prefix + 'justify',\n    context,\n  );\n\n  const evaluateBaseline = stringEvaluator(\n    flatStyle,\n    prefix + 'baseline',\n    context,\n  );\n\n  const evaluateKeepUpright = booleanEvaluator(\n    flatStyle,\n    prefix + 'keep-upright',\n    context,\n  );\n\n  const evaluatePadding = numberArrayEvaluator(\n    flatStyle,\n    prefix + 'padding',\n    context,\n  );\n\n  // The following properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const text = new Text({declutterMode});\n\n  return function (context) {\n    text.setText(evaluateValue(context));\n\n    if (evaluateFill) {\n      text.setFill(evaluateFill(context));\n    }\n\n    if (evaluateBackgroundFill) {\n      text.setBackgroundFill(evaluateBackgroundFill(context));\n    }\n\n    if (evaluateStroke) {\n      text.setStroke(evaluateStroke(context));\n    }\n\n    if (evaluateBackgroundStroke) {\n      text.setBackgroundStroke(evaluateBackgroundStroke(context));\n    }\n\n    if (evaluateFont) {\n      text.setFont(evaluateFont(context));\n    }\n\n    if (evaluateMaxAngle) {\n      text.setMaxAngle(evaluateMaxAngle(context));\n    }\n\n    if (evaluateOffsetX) {\n      text.setOffsetX(evaluateOffsetX(context));\n    }\n\n    if (evaluateOffsetY) {\n      text.setOffsetY(evaluateOffsetY(context));\n    }\n\n    if (evaluateOverflow) {\n      text.setOverflow(evaluateOverflow(context));\n    }\n\n    if (evaluatePlacement) {\n      const placement = evaluatePlacement(context);\n      if (placement !== 'point' && placement !== 'line') {\n        throw new Error('Expected point or line for text-placement');\n      }\n      text.setPlacement(placement);\n    }\n\n    if (evaluateRepeat) {\n      text.setRepeat(evaluateRepeat(context));\n    }\n\n    if (evaluateScale) {\n      text.setScale(evaluateScale(context));\n    }\n\n    if (evaluateRotateWithView) {\n      text.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateRotation) {\n      text.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateAlign) {\n      const textAlign = evaluateAlign(context);\n      if (\n        textAlign !== 'left' &&\n        textAlign !== 'center' &&\n        textAlign !== 'right' &&\n        textAlign !== 'end' &&\n        textAlign !== 'start'\n      ) {\n        throw new Error(\n          'Expected left, right, center, start, or end for text-align',\n        );\n      }\n      text.setTextAlign(textAlign);\n    }\n\n    if (evaluateJustify) {\n      const justify = evaluateJustify(context);\n      if (justify !== 'left' && justify !== 'right' && justify !== 'center') {\n        throw new Error('Expected left, right, or center for text-justify');\n      }\n      text.setJustify(justify);\n    }\n\n    if (evaluateBaseline) {\n      const textBaseline = evaluateBaseline(context);\n      if (\n        textBaseline !== 'bottom' &&\n        textBaseline !== 'top' &&\n        textBaseline !== 'middle' &&\n        textBaseline !== 'alphabetic' &&\n        textBaseline !== 'hanging'\n      ) {\n        throw new Error(\n          'Expected bottom, top, middle, alphabetic, or hanging for text-baseline',\n        );\n      }\n      text.setTextBaseline(textBaseline);\n    }\n\n    if (evaluatePadding) {\n      text.setPadding(evaluatePadding(context));\n    }\n\n    if (evaluateKeepUpright) {\n      text.setKeepUpright(evaluateKeepUpright(context));\n    }\n\n    return text;\n  };\n}\n\n/**\n * @typedef {function(EvaluationContext):import(\"../../style/Image.js\").default} ImageEvaluator\n */\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator?} A function that evaluates to an image symbolizer.\n */\nfunction buildImage(flatStyle, context) {\n  if ('icon-src' in flatStyle) {\n    return buildIcon(flatStyle, context);\n  }\n\n  if ('shape-points' in flatStyle) {\n    return buildShape(flatStyle, context);\n  }\n\n  if ('circle-radius' in flatStyle) {\n    return buildCircle(flatStyle, context);\n  }\n\n  return null;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an image symbolizer.\n */\nfunction buildIcon(flatStyle, context) {\n  const prefix = 'icon-';\n\n  // required property\n  const srcName = prefix + 'src';\n  const src = requireString(flatStyle[srcName], srcName);\n\n  // settable properties\n  const evaluateAnchor = coordinateEvaluator(\n    flatStyle,\n    prefix + 'anchor',\n    context,\n  );\n\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n\n  const evaluateOpacity = numberEvaluator(\n    flatStyle,\n    prefix + 'opacity',\n    context,\n  );\n\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining symbolizer properties are not currently settable\n  const anchorOrigin = optionalIconOrigin(flatStyle, prefix + 'anchor-origin');\n  const anchorXUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-x-units',\n  );\n  const anchorYUnits = optionalIconAnchorUnits(\n    flatStyle,\n    prefix + 'anchor-y-units',\n  );\n  const color = optionalColorLike(flatStyle, prefix + 'color');\n  const crossOrigin = optionalString(flatStyle, prefix + 'cross-origin');\n  const offset = optionalNumberArray(flatStyle, prefix + 'offset');\n  const offsetOrigin = optionalIconOrigin(flatStyle, prefix + 'offset-origin');\n  const width = optionalNumber(flatStyle, prefix + 'width');\n  const height = optionalNumber(flatStyle, prefix + 'height');\n  const size = optionalSize(flatStyle, prefix + 'size');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const icon = new Icon({\n    src,\n    anchorOrigin,\n    anchorXUnits,\n    anchorYUnits,\n    color,\n    crossOrigin,\n    offset,\n    offsetOrigin,\n    height,\n    width,\n    size,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateOpacity) {\n      icon.setOpacity(evaluateOpacity(context));\n    }\n\n    if (evaluateDisplacement) {\n      icon.setDisplacement(evaluateDisplacement(context));\n    }\n\n    if (evaluateRotation) {\n      icon.setRotation(evaluateRotation(context));\n    }\n\n    if (evaluateRotateWithView) {\n      icon.setRotateWithView(evaluateRotateWithView(context));\n    }\n\n    if (evaluateScale) {\n      icon.setScale(evaluateScale(context));\n    }\n\n    if (evaluateAnchor) {\n      icon.setAnchor(evaluateAnchor(context));\n    }\n    return icon;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to an icon symbolizer.\n */\nfunction buildShape(flatStyle, context) {\n  const prefix = 'shape-';\n\n  // required property\n  const pointsName = prefix + 'points';\n  const radiusName = prefix + 'radius';\n  const points = requireNumber(flatStyle[pointsName], pointsName);\n  const radius = requireNumber(flatStyle[radiusName], radiusName);\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const radius2 = optionalNumber(flatStyle, prefix + 'radius2');\n  const angle = optionalNumber(flatStyle, prefix + 'angle');\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const shape = new RegularShape({\n    points,\n    radius,\n    radius2,\n    angle,\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateFill) {\n      shape.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      shape.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      shape.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      shape.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      shape.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      shape.setScale(evaluateScale(context));\n    }\n\n    return shape;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {ParsingContext} context The parsing context.\n * @return {ImageEvaluator} A function that evaluates to a circle symbolizer.\n */\nfunction buildCircle(flatStyle, context) {\n  const prefix = 'circle-';\n\n  // settable properties\n  const evaluateFill = buildFill(flatStyle, prefix, context);\n  const evaluateStroke = buildStroke(flatStyle, prefix, context);\n  const evaluateRadius = numberEvaluator(flatStyle, prefix + 'radius', context);\n  const evaluateScale = sizeLikeEvaluator(flatStyle, prefix + 'scale', context);\n  const evaluateDisplacement = coordinateEvaluator(\n    flatStyle,\n    prefix + 'displacement',\n    context,\n  );\n  const evaluateRotation = numberEvaluator(\n    flatStyle,\n    prefix + 'rotation',\n    context,\n  );\n  const evaluateRotateWithView = booleanEvaluator(\n    flatStyle,\n    prefix + 'rotate-with-view',\n    context,\n  );\n\n  // the remaining properties are not currently settable\n  const declutterMode = optionalDeclutterMode(\n    flatStyle,\n    prefix + 'declutter-mode',\n  );\n\n  const circle = new Circle({\n    radius: 5, // this is arbitrary, but required - the evaluated radius is used below\n    declutterMode,\n  });\n\n  return function (context) {\n    if (evaluateRadius) {\n      circle.setRadius(evaluateRadius(context));\n    }\n    if (evaluateFill) {\n      circle.setFill(evaluateFill(context));\n    }\n    if (evaluateStroke) {\n      circle.setStroke(evaluateStroke(context));\n    }\n    if (evaluateDisplacement) {\n      circle.setDisplacement(evaluateDisplacement(context));\n    }\n    if (evaluateRotation) {\n      circle.setRotation(evaluateRotation(context));\n    }\n    if (evaluateRotateWithView) {\n      circle.setRotateWithView(evaluateRotateWithView(context));\n    }\n    if (evaluateScale) {\n      circle.setScale(evaluateScale(context));\n    }\n\n    return circle;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberEvaluator|undefined} The expression evaluator or undefined.\n */\nfunction numberEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return undefined;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberType, context);\n  return function (context) {\n    return requireNumber(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').StringEvaluator?} The expression evaluator.\n */\nfunction stringEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], StringType, context);\n  return function (context) {\n    return requireString(evaluator(context), name);\n  };\n}\n\nfunction patternEvaluator(flatStyle, prefix, context) {\n  const srcEvaluator = stringEvaluator(\n    flatStyle,\n    prefix + 'pattern-src',\n    context,\n  );\n  const offsetEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-offset',\n    context,\n  );\n  const patternSizeEvaluator = sizeEvaluator(\n    flatStyle,\n    prefix + 'pattern-size',\n    context,\n  );\n  const colorEvaluator = colorLikeEvaluator(\n    flatStyle,\n    prefix + 'color',\n    context,\n  );\n  return function (context) {\n    return {\n      src: srcEvaluator(context),\n      offset: offsetEvaluator && offsetEvaluator(context),\n      size: patternSizeEvaluator && patternSizeEvaluator(context),\n      color: colorEvaluator && colorEvaluator(context),\n    };\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').BooleanEvaluator?} The expression evaluator.\n */\nfunction booleanEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], BooleanType, context);\n  return function (context) {\n    const value = evaluator(context);\n    if (typeof value !== 'boolean') {\n      throw new Error(`Expected a boolean for ${name}`);\n    }\n    return value;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').ColorLikeEvaluator?} The expression evaluator.\n */\nfunction colorLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], ColorType, context);\n  return function (context) {\n    return requireColorLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').NumberArrayEvaluator?} The expression evaluator.\n */\nfunction numberArrayEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireNumberArray(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').CoordinateEvaluator?} The expression evaluator.\n */\nfunction coordinateEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    const array = requireNumberArray(evaluator(context), name);\n    if (array.length !== 2) {\n      throw new Error(`Expected two numbers for ${name}`);\n    }\n    return array;\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeEvaluator?} The expression evaluator.\n */\nfunction sizeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(flatStyle[name], NumberArrayType, context);\n  return function (context) {\n    return requireSize(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} name The property name.\n * @param {ParsingContext} context The parsing context.\n * @return {import('../../expr/cpu.js').SizeLikeEvaluator?} The expression evaluator.\n */\nfunction sizeLikeEvaluator(flatStyle, name, context) {\n  if (!(name in flatStyle)) {\n    return null;\n  }\n  const evaluator = buildExpression(\n    flatStyle[name],\n    NumberArrayType | NumberType,\n    context,\n  );\n  return function (context) {\n    return requireSizeLike(evaluator(context), name);\n  };\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {number|undefined} A number or undefined.\n */\nfunction optionalNumber(flatStyle, property) {\n  const value = flatStyle[property];\n  if (value === undefined) {\n    return undefined;\n  }\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../size.js\").Size|undefined} A size or undefined.\n */\nfunction optionalSize(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded === 'number') {\n    return toSize(encoded);\n  }\n  if (!Array.isArray(encoded)) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  if (\n    encoded.length !== 2 ||\n    typeof encoded[0] !== 'number' ||\n    typeof encoded[1] !== 'number'\n  ) {\n    throw new Error(`Expected a number or size array for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|undefined} A string or undefined.\n */\nfunction optionalString(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconOrigin|undefined} An icon origin or undefined.\n */\nfunction optionalIconOrigin(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (\n    encoded !== 'bottom-left' &&\n    encoded !== 'bottom-right' &&\n    encoded !== 'top-left' &&\n    encoded !== 'top-right'\n  ) {\n    throw new Error(\n      `Expected bottom-left, bottom-right, top-left, or top-right for ${property}`,\n    );\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import(\"../../style/Icon.js\").IconAnchorUnits|undefined} Icon anchor units or undefined.\n */\nfunction optionalIconAnchorUnits(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (encoded !== 'pixels' && encoded !== 'fraction') {\n    throw new Error(`Expected pixels or fraction for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {Array<number>|undefined} An array of numbers or undefined.\n */\nfunction optionalNumberArray(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireNumberArray(encoded, property);\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {import('../../style/Style.js').DeclutterMode} Icon declutter mode.\n */\nfunction optionalDeclutterMode(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  if (typeof encoded !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  if (encoded !== 'declutter' && encoded !== 'obstacle' && encoded !== 'none') {\n    throw new Error(`Expected declutter, obstacle, or none for ${property}`);\n  }\n  return encoded;\n}\n\n/**\n * @param {FlatStyle} flatStyle The flat style.\n * @param {string} property The symbolizer property.\n * @return {string|Array<number>|undefined} A string or an array of color values or undefined.\n */\nfunction optionalColorLike(flatStyle, property) {\n  const encoded = flatStyle[property];\n  if (encoded === undefined) {\n    return undefined;\n  }\n  return requireColorLike(encoded, property);\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} An array of numbers.\n */\nfunction requireNumberArray(value, property) {\n  if (!Array.isArray(value)) {\n    throw new Error(`Expected an array for ${property}`);\n  }\n  const length = value.length;\n  for (let i = 0; i < length; ++i) {\n    if (typeof value[i] !== 'number') {\n      throw new Error(`Expected an array of numbers for ${property}`);\n    }\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {string} A string.\n */\nfunction requireString(value, property) {\n  if (typeof value !== 'string') {\n    throw new Error(`Expected a string for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number} A number.\n */\nfunction requireNumber(value, property) {\n  if (typeof value !== 'number') {\n    throw new Error(`Expected a number for ${property}`);\n  }\n  return value;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>|string} A color.\n */\nfunction requireColorLike(value, property) {\n  if (typeof value === 'string') {\n    return value;\n  }\n  const array = requireNumberArray(value, property);\n  const length = array.length;\n  if (length < 3 || length > 4) {\n    throw new Error(`Expected a color with 3 or 4 values for ${property}`);\n  }\n  return array;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {Array<number>} A number or an array of two numbers.\n */\nfunction requireSize(value, property) {\n  const size = requireNumberArray(value, property);\n  if (size.length !== 2) {\n    throw new Error(`Expected an array of two numbers for ${property}`);\n  }\n  return size;\n}\n\n/**\n * @param {any} value The value.\n * @param {string} property The property.\n * @return {number|Array<number>} A number or an array of two numbers.\n */\nfunction requireSizeLike(value, property) {\n  if (typeof value === 'number') {\n    return value;\n  }\n  return requireSize(value, property);\n}\n","/**\n * @module ol/layer/BaseVector\n */\nimport RBush from 'rbush';\nimport {\n  flatStylesToStyleFunction,\n  rulesToStyleFunction,\n} from '../render/canvas/style.js';\nimport Style, {\n  createDefaultStyle,\n  toFunction as toStyleFunction,\n} from '../style/Style.js';\nimport Layer from './Layer.js';\n\n/***\n * @template T\n * @typedef {T extends import(\"../source/Vector.js\").default<infer U extends import(\"../Feature.js\").FeatureLike> ? U : never} ExtractedFeatureType\n */\n\n/**\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @enum {string}\n * @private\n */\nconst Property = {\n  RENDER_ORDER: 'renderOrder',\n};\n\n/**\n * @classdesc\n * Vector data that is rendered client-side.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import('../Feature').FeatureLike} FeatureType\n * @template {import(\"../source/Vector.js\").default<FeatureType>|import(\"../source/VectorTile.js\").default<FeatureType>} VectorSourceType<FeatureType>\n * @extends {Layer<VectorSourceType, RendererType>}\n * @template {import(\"../renderer/canvas/VectorLayer.js\").default|import(\"../renderer/canvas/VectorTileLayer.js\").default|import(\"../renderer/canvas/VectorImageLayer.js\").default|import(\"../renderer/webgl/VectorLayer.js\").default|import(\"../renderer/webgl/PointsLayer.js\").default} RendererType\n * @api\n */\nclass BaseVectorLayer extends Layer {\n  /**\n   * @param {Options<FeatureType, VectorSourceType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    delete baseOptions.style;\n    delete baseOptions.renderBuffer;\n    delete baseOptions.updateWhileAnimating;\n    delete baseOptions.updateWhileInteracting;\n    super(baseOptions);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.declutter_ = options.declutter ? String(options.declutter) : undefined;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.renderBuffer_ =\n      options.renderBuffer !== undefined ? options.renderBuffer : 100;\n\n    /**\n     * User provided style.\n     * @type {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike}\n     * @private\n     */\n    this.style_ = null;\n\n    /**\n     * Style function for use within the library.\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     * @private\n     */\n    this.styleFunction_ = undefined;\n\n    this.setStyle(options.style);\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileAnimating_ =\n      options.updateWhileAnimating !== undefined\n        ? options.updateWhileAnimating\n        : false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.updateWhileInteracting_ =\n      options.updateWhileInteracting !== undefined\n        ? options.updateWhileInteracting\n        : false;\n  }\n\n  /**\n   * @return {string} Declutter group.\n   * @override\n   */\n  getDeclutter() {\n    return this.declutter_;\n  }\n\n  /**\n   * Get the topmost feature that intersects the given pixel on the viewport. Returns a promise\n   * that resolves with an array of features. The array will either contain the topmost feature\n   * when a hit was detected, or it will be empty.\n   *\n   * The hit detection algorithm used for this method is optimized for performance, but is less\n   * accurate than the one used in [map.getFeaturesAtPixel()]{@link import(\"../Map.js\").default#getFeaturesAtPixel}.\n   * Text is not considered, and icons are only represented by their bounding box instead of the exact\n   * image.\n   *\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with an array of features.\n   * @api\n   * @override\n   */\n  getFeatures(pixel) {\n    return super.getFeatures(pixel);\n  }\n\n  /**\n   * @return {number|undefined} Render buffer.\n   */\n  getRenderBuffer() {\n    return this.renderBuffer_;\n  }\n\n  /**\n   * @return {import(\"../render.js\").OrderFunction|null|undefined} Render order.\n   */\n  getRenderOrder() {\n    return /** @type {import(\"../render.js\").OrderFunction|null|undefined} */ (\n      this.get(Property.RENDER_ORDER)\n    );\n  }\n\n  /**\n   * Get the style for features.  This returns whatever was passed to the `style`\n   * option at construction or to the `setStyle` method.\n   * @return {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null|undefined} Layer style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Get the style function.\n   * @return {import(\"../style/Style.js\").StyleFunction|undefined} Layer style function.\n   * @api\n   */\n  getStyleFunction() {\n    return this.styleFunction_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     animating.\n   */\n  getUpdateWhileAnimating() {\n    return this.updateWhileAnimating_;\n  }\n\n  /**\n   * @return {boolean} Whether the rendered layer should be updated while\n   *     interacting.\n   */\n  getUpdateWhileInteracting() {\n    return this.updateWhileInteracting_;\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../layer/Layer.js\").State} layerState Layer state.\n   * @override\n   */\n  renderDeclutter(frameState, layerState) {\n    const declutterGroup = this.getDeclutter();\n    if (declutterGroup in frameState.declutter === false) {\n      frameState.declutter[declutterGroup] = new RBush(9);\n    }\n    this.getRenderer().renderDeclutter(frameState, layerState);\n  }\n\n  /**\n   * @param {import(\"../render.js\").OrderFunction|null|undefined} renderOrder\n   *     Render order.\n   */\n  setRenderOrder(renderOrder) {\n    this.set(Property.RENDER_ORDER, renderOrder);\n  }\n\n  /**\n   * Set the style for features.  This can be a single style object, an array\n   * of styles, or a function that takes a feature and resolution and returns\n   * an array of styles. If set to `null`, the layer has no style (a `null` style),\n   * so only features that have their own styles will be rendered in the layer. Call\n   * `setStyle()` without arguments to reset to the default style. See\n   * [the ol/style/Style module]{@link module:ol/style/Style~Style} for information on the default style.\n   *\n   * If your layer has a static style, you can use [flat style]{@link module:ol/style/flat~FlatStyle} object\n   * literals instead of using the `Style` and symbolizer constructors (`Fill`, `Stroke`, etc.):\n   * ```js\n   * vectorLayer.setStyle({\n   *   \"fill-color\": \"yellow\",\n   *   \"stroke-color\": \"black\",\n   *   \"stroke-width\": 4\n   * })\n   * ```\n   *\n   * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n   * @api\n   */\n  setStyle(style) {\n    this.style_ = style === undefined ? createDefaultStyle : style;\n    const styleLike = toStyleLike(style);\n    this.styleFunction_ =\n      style === null ? undefined : toStyleFunction(styleLike);\n    this.changed();\n  }\n\n  /**\n   * @param {boolean|string|number} declutter Declutter images and text.\n   * @api\n   */\n  setDeclutter(declutter) {\n    this.declutter_ = declutter ? String(declutter) : undefined;\n    this.changed();\n  }\n}\n\n/**\n * Coerce the allowed style types into a shorter list of types.  Flat styles, arrays of flat\n * styles, and arrays of rules are converted into style functions.\n *\n * @param {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style.\n * @return {import(\"../style/Style.js\").StyleLike|null} The style.\n */\nfunction toStyleLike(style) {\n  if (style === undefined) {\n    return createDefaultStyle;\n  }\n  if (!style) {\n    return null;\n  }\n  if (typeof style === 'function') {\n    return style;\n  }\n  if (style instanceof Style) {\n    return style;\n  }\n  if (!Array.isArray(style)) {\n    return flatStylesToStyleFunction([style]);\n  }\n  if (style.length === 0) {\n    return [];\n  }\n\n  const length = style.length;\n  const first = style[0];\n\n  if (first instanceof Style) {\n    /**\n     * @type {Array<Style>}\n     */\n    const styles = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!(candidate instanceof Style)) {\n        throw new Error('Expected a list of style instances');\n      }\n      styles[i] = candidate;\n    }\n    return styles;\n  }\n\n  if ('style' in first) {\n    /**\n     * @type {Array<import(\"../style/flat.js\").Rule>}\n     */\n    const rules = new Array(length);\n    for (let i = 0; i < length; ++i) {\n      const candidate = style[i];\n      if (!('style' in candidate)) {\n        throw new Error('Expected a list of rules with a style property');\n      }\n      rules[i] = candidate;\n    }\n    return rulesToStyleFunction(rules);\n  }\n\n  const flatStyles =\n    /** @type {Array<import(\"../style/flat.js\").FlatStyle>} */ (style);\n  return flatStylesToStyleFunction(flatStyles);\n}\n\nexport default BaseVectorLayer;\n","/**\n * @module ol/render/Event\n */\n\nimport Event from '../events/Event.js';\n\nclass RenderEvent extends Event {\n  /**\n   * @param {import(\"./EventType.js\").default} type Type.\n   * @param {import(\"../transform.js\").Transform} [inversePixelTransform] Transform for\n   *     CSS pixels to rendered pixels.\n   * @param {import(\"../Map.js\").FrameState} [frameState] Frame state.\n   * @param {?(CanvasRenderingContext2D|WebGLRenderingContext)} [context] Context.\n   */\n  constructor(type, inversePixelTransform, frameState, context) {\n    super(type);\n\n    /**\n     * Transform from CSS pixels (relative to the top-left corner of the map viewport)\n     * to rendered pixels on this event's `context`. Only available when a Canvas renderer is used, null otherwise.\n     * @type {import(\"../transform.js\").Transform|undefined}\n     * @api\n     */\n    this.inversePixelTransform = inversePixelTransform;\n\n    /**\n     * An object representing the current render frame state.\n     * @type {import(\"../Map.js\").FrameState|undefined}\n     * @api\n     */\n    this.frameState = frameState;\n\n    /**\n     * Canvas context. Not available when the event is dispatched by the map. For Canvas 2D layers,\n     * the context will be the 2D rendering context.  For WebGL layers, the context will be the WebGL\n     * context.\n     * @type {CanvasRenderingContext2D|WebGLRenderingContext|undefined}\n     * @api\n     */\n    this.context = context;\n  }\n}\n\nexport default RenderEvent;\n","/**\n * @module ol/renderer/Map\n */\nimport Disposable from '../Disposable.js';\nimport {wrapX} from '../coordinate.js';\nimport {getWidth} from '../extent.js';\nimport {TRUE} from '../functions.js';\nimport {inView} from '../layer/Layer.js';\nimport {shared as iconImageCache} from '../style/IconImageCache.js';\nimport {compose as composeTransform, makeInverse} from '../transform.js';\nimport {abstract} from '../util.js';\n\n/**\n * @template T\n * @typedef HitMatch\n * @property {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @property {import(\"../layer/Layer.js\").default} layer Layer.\n * @property {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @property {number} distanceSq Squared distance.\n * @property {import(\"./vector.js\").FeatureCallback<T>} callback Callback.\n */\n\n/**\n * @abstract\n */\nclass MapRenderer extends Disposable {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../Map.js\").default}\n     */\n    this.map_ = map;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  dispatchRenderEvent(type, frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @protected\n   */\n  calculateMatrices2D(frameState) {\n    const viewState = frameState.viewState;\n    const coordinateToPixelTransform = frameState.coordinateToPixelTransform;\n    const pixelToCoordinateTransform = frameState.pixelToCoordinateTransform;\n\n    composeTransform(\n      coordinateToPixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / viewState.resolution,\n      -1 / viewState.resolution,\n      -viewState.rotation,\n      -viewState.center[0],\n      -viewState.center[1],\n    );\n\n    makeInverse(pixelToCoordinateTransform, coordinateToPixelTransform);\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {S} thisArg Value to use as `this` when executing `callback`.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg2 Value to use as `this` when executing `layerFilter`.\n   * @return {T|undefined} Callback result.\n   * @template S,T,U\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    callback,\n    thisArg,\n    layerFilter,\n    thisArg2,\n  ) {\n    let result;\n    const viewState = frameState.viewState;\n\n    /**\n     * @param {boolean} managed Managed layer.\n     * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../layer/Layer.js\").default} layer Layer.\n     * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n     * @return {T|undefined} Callback result.\n     */\n    function forEachFeatureAtCoordinate(managed, feature, layer, geometry) {\n      return callback.call(thisArg, feature, managed ? layer : null, geometry);\n    }\n\n    const projection = viewState.projection;\n\n    const translatedCoordinate = wrapX(coordinate.slice(), projection);\n    const offsets = [[0, 0]];\n    if (projection.canWrapX() && checkWrapped) {\n      const projectionExtent = projection.getExtent();\n      const worldWidth = getWidth(projectionExtent);\n      offsets.push([-worldWidth, 0], [worldWidth, 0]);\n    }\n\n    const layerStates = frameState.layerStatesArray;\n    const numLayers = layerStates.length;\n\n    const matches = /** @type {Array<HitMatch<T>>} */ ([]);\n    const tmpCoord = [];\n    for (let i = 0; i < offsets.length; i++) {\n      for (let j = numLayers - 1; j >= 0; --j) {\n        const layerState = layerStates[j];\n        const layer = layerState.layer;\n        if (\n          layer.hasRenderer() &&\n          inView(layerState, viewState) &&\n          layerFilter.call(thisArg2, layer)\n        ) {\n          const layerRenderer = layer.getRenderer();\n          const source = layer.getSource();\n          if (layerRenderer && source) {\n            const coordinates = source.getWrapX()\n              ? translatedCoordinate\n              : coordinate;\n            const callback = forEachFeatureAtCoordinate.bind(\n              null,\n              layerState.managed,\n            );\n            tmpCoord[0] = coordinates[0] + offsets[i][0];\n            tmpCoord[1] = coordinates[1] + offsets[i][1];\n            result = layerRenderer.forEachFeatureAtCoordinate(\n              tmpCoord,\n              frameState,\n              hitTolerance,\n              callback,\n              matches,\n            );\n          }\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    if (matches.length === 0) {\n      return undefined;\n    }\n    const order = 1 / matches.length;\n    matches.forEach((m, i) => (m.distanceSq += i * order));\n    matches.sort((a, b) => a.distanceSq - b.distanceSq);\n    matches.some((m) => {\n      return (result = m.callback(m.feature, m.layer, m.geometry));\n    });\n    return result;\n  }\n\n  /**\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState FrameState.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {boolean} checkWrapped Check for wrapped geometries.\n   * @param {function(this: U, import(\"../layer/Layer.js\").default): boolean} layerFilter Layer filter\n   *     function, only layers which are visible and for which this function\n   *     returns `true` will be tested for features.  By default, all visible\n   *     layers will be tested.\n   * @param {U} thisArg Value to use as `this` when executing `layerFilter`.\n   * @return {boolean} Is there a feature at the given coordinate?\n   * @template U\n   */\n  hasFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    checkWrapped,\n    layerFilter,\n    thisArg,\n  ) {\n    const hasFeature = this.forEachFeatureAtCoordinate(\n      coordinate,\n      frameState,\n      hitTolerance,\n      checkWrapped,\n      TRUE,\n      this,\n      layerFilter,\n      thisArg,\n    );\n\n    return hasFeature !== undefined;\n  }\n\n  /**\n   * @return {import(\"../Map.js\").default} Map.\n   */\n  getMap() {\n    return this.map_;\n  }\n\n  /**\n   * Render.\n   * @abstract\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderFrame(frameState) {\n    abstract();\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  scheduleExpireIconCache(frameState) {\n    if (iconImageCache.canExpireCache()) {\n      frameState.postRenderFunctions.push(expireIconCache);\n    }\n  }\n}\n\n/**\n * @param {import(\"../Map.js\").default} map Map.\n * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n */\nfunction expireIconCache(map, frameState) {\n  iconImageCache.expire();\n}\n\nexport default MapRenderer;\n","/**\n * @module ol/renderer/Composite\n */\nimport ObjectEventType from '../ObjectEventType.js';\nimport {CLASS_UNSELECTABLE} from '../css.js';\nimport {replaceChildren} from '../dom.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport BaseVectorLayer from '../layer/BaseVector.js';\nimport {inView} from '../layer/Layer.js';\nimport RenderEvent from '../render/Event.js';\nimport RenderEventType from '../render/EventType.js';\nimport {checkedFonts} from '../render/canvas.js';\nimport MapRenderer from './Map.js';\n\n/**\n * @classdesc\n * Canvas map renderer.\n * @api\n */\nclass CompositeMapRenderer extends MapRenderer {\n  /**\n   * @param {import(\"../Map.js\").default} map Map.\n   */\n  constructor(map) {\n    super(map);\n\n    /**\n     * @private\n     * @type {import(\"../events.js\").EventsKey}\n     */\n    this.fontChangeListenerKey_ = listen(\n      checkedFonts,\n      ObjectEventType.PROPERTYCHANGE,\n      map.redrawText,\n      map,\n    );\n\n    /**\n     * @private\n     * @type {HTMLDivElement}\n     */\n    this.element_ = document.createElement('div');\n    const style = this.element_.style;\n    style.position = 'absolute';\n    style.width = '100%';\n    style.height = '100%';\n    style.zIndex = '0';\n\n    this.element_.className = CLASS_UNSELECTABLE + ' ol-layers';\n\n    const container = map.getViewport();\n    container.insertBefore(this.element_, container.firstChild || null);\n\n    /**\n     * @private\n     * @type {Array<HTMLElement>}\n     */\n    this.children_ = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedVisible_ = true;\n  }\n\n  /**\n   * @param {import(\"../render/EventType.js\").default} type Event type.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  dispatchRenderEvent(type, frameState) {\n    const map = this.getMap();\n    if (map.hasListener(type)) {\n      const event = new RenderEvent(type, undefined, frameState);\n      map.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    unlistenByKey(this.fontChangeListenerKey_);\n    this.element_.remove();\n    super.disposeInternal();\n  }\n\n  /**\n   * Render.\n   * @param {?import(\"../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderFrame(frameState) {\n    if (!frameState) {\n      if (this.renderedVisible_) {\n        this.element_.style.display = 'none';\n        this.renderedVisible_ = false;\n      }\n      return;\n    }\n\n    this.calculateMatrices2D(frameState);\n    this.dispatchRenderEvent(RenderEventType.PRECOMPOSE, frameState);\n\n    const layerStatesArray = frameState.layerStatesArray.sort(\n      (a, b) => a.zIndex - b.zIndex,\n    );\n    const declutter = layerStatesArray.some(\n      (layerState) =>\n        layerState.layer instanceof BaseVectorLayer &&\n        layerState.layer.getDeclutter(),\n    );\n    if (declutter) {\n      // Some layers need decluttering, turn on deferred rendering hint\n      frameState.declutter = {};\n    }\n    const viewState = frameState.viewState;\n\n    this.children_.length = 0;\n\n    const renderedLayerStates = [];\n    let previousElement = null;\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const layerState = layerStatesArray[i];\n      frameState.layerIndex = i;\n\n      const layer = layerState.layer;\n      const sourceState = layer.getSourceState();\n      if (\n        !inView(layerState, viewState) ||\n        (sourceState != 'ready' && sourceState != 'undefined')\n      ) {\n        layer.unrender();\n        continue;\n      }\n\n      const element = layer.render(frameState, previousElement);\n      if (!element) {\n        continue;\n      }\n      if (element !== previousElement) {\n        this.children_.push(element);\n        previousElement = element;\n      }\n\n      renderedLayerStates.push(layerState);\n    }\n\n    this.declutter(frameState, renderedLayerStates);\n\n    replaceChildren(this.element_, this.children_);\n\n    this.dispatchRenderEvent(RenderEventType.POSTCOMPOSE, frameState);\n\n    if (!this.renderedVisible_) {\n      this.element_.style.display = '';\n      this.renderedVisible_ = true;\n    }\n\n    this.scheduleExpireIconCache(frameState);\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {Array<import('../layer/Layer.js').State>} layerStates Layers.\n   */\n  declutter(frameState, layerStates) {\n    if (!frameState.declutter) {\n      return;\n    }\n    for (let i = layerStates.length - 1; i >= 0; --i) {\n      const layerState = layerStates[i];\n      const layer = layerState.layer;\n      if (layer.getDeclutter()) {\n        layer.renderDeclutter(frameState, layerState);\n      }\n    }\n    layerStates.forEach((layerState) =>\n      layerState.layer.renderDeferred(frameState),\n    );\n  }\n}\n\nexport default CompositeMapRenderer;\n","/**\n * @module ol/Map\n */\nimport Collection from './Collection.js';\nimport CollectionEventType from './CollectionEventType.js';\nimport MapBrowserEvent from './MapBrowserEvent.js';\nimport MapBrowserEventHandler from './MapBrowserEventHandler.js';\nimport MapBrowserEventType from './MapBrowserEventType.js';\nimport MapEvent from './MapEvent.js';\nimport MapEventType from './MapEventType.js';\nimport MapProperty from './MapProperty.js';\nimport BaseObject from './Object.js';\nimport ObjectEventType from './ObjectEventType.js';\nimport TileQueue, {getTilePriority} from './TileQueue.js';\nimport View from './View.js';\nimport ViewHint from './ViewHint.js';\nimport {equals} from './array.js';\nimport {assert} from './asserts.js';\nimport {warn} from './console.js';\nimport {defaults as defaultControls} from './control/defaults.js';\nimport EventType from './events/EventType.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {\n  clone,\n  createOrUpdateEmpty,\n  equals as equalsExtent,\n  getForViewAndSize,\n  isEmpty,\n} from './extent.js';\nimport {TRUE} from './functions.js';\nimport {DEVICE_PIXEL_RATIO, PASSIVE_EVENT_LISTENERS} from './has.js';\nimport {defaults as defaultInteractions} from './interaction/defaults.js';\nimport LayerGroup, {GroupEvent} from './layer/Group.js';\nimport Layer from './layer/Layer.js';\nimport PointerEventType from './pointer/EventType.js';\nimport {fromUserCoordinate, toUserCoordinate} from './proj.js';\nimport RenderEventType from './render/EventType.js';\nimport CompositeMapRenderer from './renderer/Composite.js';\nimport {hasArea} from './size.js';\nimport {\n  apply as applyTransform,\n  create as createTransform,\n} from './transform.js';\nimport {getUid} from './util.js';\n\n/**\n * State of the current frame. Only `pixelRatio`, `time` and `viewState` should\n * be used in applications.\n * @typedef {Object} FrameState\n * @property {number} pixelRatio The pixel ratio of the frame.\n * @property {number} time The time when rendering of the frame was requested.\n * @property {import(\"./View.js\").State} viewState The state of the current view.\n * @property {boolean} animate Animate.\n * @property {import(\"./transform.js\").Transform} coordinateToPixelTransform CoordinateToPixelTransform.\n * @property {Object<string, import(\"rbush\").default<import('./render/canvas/Executor.js').DeclutterEntry>>|null} declutter\n * Declutter trees by declutter group.\n * When null, no decluttering is needed because no layers have decluttering enabled.\n * @property {null|import(\"./extent.js\").Extent} extent Extent (in view projection coordinates).\n * @property {import(\"./extent.js\").Extent} [nextExtent] Next extent during an animation series.\n * @property {number} index Index.\n * @property {Array<import(\"./layer/Layer.js\").State>} layerStatesArray LayerStatesArray.\n * @property {number} layerIndex LayerIndex.\n * @property {import(\"./transform.js\").Transform} pixelToCoordinateTransform PixelToCoordinateTransform.\n * @property {Array<PostRenderFunction>} postRenderFunctions PostRenderFunctions.\n * @property {import(\"./size.js\").Size} size Size.\n * @property {TileQueue} tileQueue TileQueue.\n * @property {!Object<string, Object<string, boolean>>} usedTiles UsedTiles.\n * @property {Array<number>} viewHints ViewHints.\n * @property {!Object<string, Object<string, boolean>>} wantedTiles WantedTiles.\n * @property {string} mapId The id of the map.\n * @property {Object<string, boolean>} renderTargets Identifiers of previously rendered elements.\n */\n\n/**\n * @typedef {function(Map, FrameState): any} PostRenderFunction\n */\n\n/**\n * @typedef {Object} AtPixelOptions\n * @property {undefined|function(import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>): boolean} [layerFilter] Layer filter\n * function. The filter function will receive one argument, the\n * {@link module:ol/layer/Layer~Layer layer-candidate} and it should return a boolean value.\n * Only layers which are visible and for which this function returns `true`\n * will be tested for features. By default, all visible layers will be tested.\n * @property {number} [hitTolerance=0] Hit-detection tolerance in css pixels. Pixels\n * inside the radius around the given position will be checked for features.\n * @property {boolean} [checkWrapped=true] Check-Wrapped Will check for wrapped geometries inside the range of\n *   +/- 1 world width. Works only if a projection is used that can be wrapped.\n */\n\n/**\n * @typedef {Object} MapOptionsInternal\n * @property {Collection<import(\"./control/Control.js\").default>} [controls] Controls.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>} [interactions] Interactions.\n * @property {HTMLElement|Document} keyboardEventTarget KeyboardEventTarget.\n * @property {Collection<import(\"./Overlay.js\").default>} overlays Overlays.\n * @property {Object<string, *>} values Values.\n */\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:layergroup'|'change:size'|'change:target'|'change:view'} MapObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *    import(\"./Observable\").OnSignature<MapObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapBrowserEventType\").Types, import(\"./MapBrowserEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./MapEventType\").Types, import(\"./MapEvent\").default, Return> &\n *    import(\"./Observable\").OnSignature<import(\"./render/EventType\").MapRenderEventTypes, import(\"./render/Event\").default, Return> &\n *    import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|MapObjectEventTypes|\n *      import(\"./MapBrowserEventType\").Types|import(\"./MapEventType\").Types|\n *      import(\"./render/EventType\").MapRenderEventTypes, Return>} MapEventHandler\n */\n\n/**\n * Object literal with config options for the map.\n * @typedef {Object} MapOptions\n * @property {Collection<import(\"./control/Control.js\").default>|Array<import(\"./control/Control.js\").default>} [controls]\n * Controls initially added to the map. If not specified,\n * {@link module:ol/control/defaults.defaults} is used.\n * @property {number} [pixelRatio=window.devicePixelRatio] The ratio between\n * physical pixels and device-independent pixels (dips) on the device.\n * @property {Collection<import(\"./interaction/Interaction.js\").default>|Array<import(\"./interaction/Interaction.js\").default>} [interactions]\n * Interactions that are initially added to the map. If not specified,\n * {@link module:ol/interaction/defaults.defaults} is used.\n * @property {HTMLElement|Document|string} [keyboardEventTarget] The element to\n * listen to keyboard events on. This determines when the `KeyboardPan` and\n * `KeyboardZoom` interactions trigger. For example, if this option is set to\n * `document` the keyboard interactions will always trigger. If this option is\n * not specified, the element the library listens to keyboard events on is the\n * map target (i.e. the user-provided div for the map). If this is not\n * `document`, the target element needs to be focused for key events to be\n * emitted, requiring that the target element has a `tabindex` attribute.\n * @property {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>|LayerGroup} [layers]\n * Layers. If this is not defined, a map with no layers will be rendered. Note\n * that layers are rendered in the order supplied, so if you want, for example,\n * a vector layer to appear on top of a tile layer, it must come after the tile\n * layer.\n * @property {number} [maxTilesLoading=16] Maximum number tiles to load\n * simultaneously.\n * @property {number} [moveTolerance=1] The minimum distance in pixels the\n * cursor must move to be detected as a map move event instead of a click.\n * Increasing this value can make it easier to click on the map.\n * @property {Collection<import(\"./Overlay.js\").default>|Array<import(\"./Overlay.js\").default>} [overlays]\n * Overlays initially added to the map. By default, no overlays are added.\n * @property {HTMLElement|string} [target] The container for the map, either the\n * element itself or the `id` of the element. If not specified at construction\n * time, {@link module:ol/Map~Map#setTarget} must be called for the map to be\n * rendered. If passed by element, the container can be in a secondary document.\n * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n *  `tabindex` atribute must be set on the custom element's host element.\n * **Note:** CSS `transform` support for the target element is limited to `scale`.\n * @property {View|Promise<import(\"./View.js\").ViewOptions>} [view] The map's view.  No layer sources will be\n * fetched unless this is specified at construction time or through\n * {@link module:ol/Map~Map#setView}.\n */\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n */\nfunction removeLayerMapProperty(layer) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(null);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    layer.getLayers().forEach(removeLayerMapProperty);\n  }\n}\n\n/**\n * @param {import(\"./layer/Base.js\").default} layer Layer.\n * @param {Map} map Map.\n */\nfunction setLayerMapProperty(layer, map) {\n  if (layer instanceof Layer) {\n    layer.setMapInternal(map);\n    return;\n  }\n  if (layer instanceof LayerGroup) {\n    const layers = layer.getLayers().getArray();\n    for (let i = 0, ii = layers.length; i < ii; ++i) {\n      setLayerMapProperty(layers[i], map);\n    }\n  }\n}\n\n/**\n * @classdesc\n * The map is the core component of OpenLayers. For a map to render, a view,\n * one or more layers, and a target container are needed:\n *\n *     import Map from 'ol/Map.js';\n *     import View from 'ol/View.js';\n *     import TileLayer from 'ol/layer/Tile.js';\n *     import OSM from 'ol/source/OSM.js';\n *\n *     const map = new Map({\n *       view: new View({\n *         center: [0, 0],\n *         zoom: 1,\n *       }),\n *       layers: [\n *         new TileLayer({\n *           source: new OSM(),\n *         }),\n *       ],\n *       target: 'map',\n *     });\n *\n * The above snippet creates a map using a {@link module:ol/layer/Tile~TileLayer} to\n * display {@link module:ol/source/OSM~OSM} OSM data and render it to a DOM\n * element with the id `map`.\n *\n * The constructor places a viewport container (with CSS class name\n * `ol-viewport`) in the target element (see `getViewport()`), and then two\n * further elements within the viewport: one with CSS class name\n * `ol-overlaycontainer-stopevent` for controls and some overlays, and one with\n * CSS class name `ol-overlaycontainer` for other overlays (see the `stopEvent`\n * option of {@link module:ol/Overlay~Overlay} for the difference). The map\n * itself is placed in a further element within the viewport.\n *\n * Layers are stored as a {@link module:ol/Collection~Collection} in\n * layerGroups. A top-level group is provided by the library. This is what is\n * accessed by `getLayerGroup` and `setLayerGroup`. Layers entered in the\n * options are added to this group, and `addLayer` and `removeLayer` change the\n * layer collection in the group. `getLayers` is a convenience function for\n * `getLayerGroup().getLayers()`. Note that {@link module:ol/layer/Group~LayerGroup}\n * is a subclass of {@link module:ol/layer/Base~BaseLayer}, so layers entered in the\n * options or added with `addLayer` can be groups, which can contain further\n * groups, and so on.\n *\n * @fires import(\"./MapBrowserEvent.js\").MapBrowserEvent\n * @fires import(\"./MapEvent.js\").MapEvent\n * @fires import(\"./render/Event.js\").default#precompose\n * @fires import(\"./render/Event.js\").default#postcompose\n * @fires import(\"./render/Event.js\").default#rendercomplete\n * @api\n */\nclass Map extends BaseObject {\n  /**\n   * @param {MapOptions} [options] Map options.\n   */\n  constructor(options) {\n    super();\n\n    options = options || {};\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {MapEventHandler<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {MapEventHandler<void>}\n     */\n    this.un;\n\n    const optionsInternal = createOptionsInternal(options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderComplete_ = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.loaded_ = true;\n\n    /** @private */\n    this.boundHandleBrowserEvent_ = this.handleBrowserEvent.bind(this);\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.maxTilesLoading_ =\n      options.maxTilesLoading !== undefined ? options.maxTilesLoading : 16;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ =\n      options.pixelRatio !== undefined\n        ? options.pixelRatio\n        : DEVICE_PIXEL_RATIO;\n\n    /**\n     * @private\n     * @type {ReturnType<typeof setTimeout>}\n     */\n    this.postRenderTimeoutHandle_;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.animationDelayKey_;\n\n    /**\n     * @private\n     */\n    this.animationDelay_ = this.animationDelay_.bind(this);\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.coordinateToPixelTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {import(\"./transform.js\").Transform}\n     */\n    this.pixelToCoordinateTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.frameIndex_ = 0;\n\n    /**\n     * @private\n     * @type {?FrameState}\n     */\n    this.frameState_ = null;\n\n    /**\n     * The extent at the previous 'moveend' event.\n     * @private\n     * @type {import(\"./extent.js\").Extent}\n     */\n    this.previousExtent_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewPropertyListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.viewChangeListenerKey_ = null;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.layerGroupPropertyListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.viewport_ = document.createElement('div');\n    this.viewport_.className =\n      'ol-viewport' + ('ontouchstart' in window ? ' ol-touch' : '');\n    this.viewport_.style.position = 'relative';\n    this.viewport_.style.overflow = 'hidden';\n    this.viewport_.style.width = '100%';\n    this.viewport_.style.height = '100%';\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainer_ = document.createElement('div');\n    this.overlayContainer_.style.position = 'absolute';\n    this.overlayContainer_.style.zIndex = '0';\n    this.overlayContainer_.style.width = '100%';\n    this.overlayContainer_.style.height = '100%';\n    this.overlayContainer_.style.pointerEvents = 'none';\n    this.overlayContainer_.className = 'ol-overlaycontainer';\n    this.viewport_.appendChild(this.overlayContainer_);\n\n    /**\n     * @private\n     * @type {!HTMLElement}\n     */\n    this.overlayContainerStopEvent_ = document.createElement('div');\n    this.overlayContainerStopEvent_.style.position = 'absolute';\n    this.overlayContainerStopEvent_.style.zIndex = '0';\n    this.overlayContainerStopEvent_.style.width = '100%';\n    this.overlayContainerStopEvent_.style.height = '100%';\n    this.overlayContainerStopEvent_.style.pointerEvents = 'none';\n    this.overlayContainerStopEvent_.className = 'ol-overlaycontainer-stopevent';\n    this.viewport_.appendChild(this.overlayContainerStopEvent_);\n\n    /**\n     * @private\n     * @type {MapBrowserEventHandler}\n     */\n    this.mapBrowserEventHandler_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.moveTolerance_ = options.moveTolerance;\n\n    /**\n     * @private\n     * @type {HTMLElement|Document}\n     */\n    this.keyboardEventTarget_ = optionsInternal.keyboardEventTarget;\n\n    /**\n     * @private\n     * @type {?Array<import(\"./events.js\").EventsKey>}\n     */\n    this.targetChangeHandlerKeys_ = null;\n\n    /**\n     * @private\n     * @type {HTMLElement|null}\n     */\n    this.targetElement_ = null;\n\n    /**\n     * @private\n     * @type {ResizeObserver}\n     */\n    this.resizeObserver_ = new ResizeObserver(() => this.updateSize());\n\n    /**\n     * @type {Collection<import(\"./control/Control.js\").default>}\n     * @protected\n     */\n    this.controls = optionsInternal.controls || defaultControls();\n\n    /**\n     * @type {Collection<import(\"./interaction/Interaction.js\").default>}\n     * @protected\n     */\n    this.interactions =\n      optionsInternal.interactions ||\n      defaultInteractions({\n        onFocusOnly: true,\n      });\n\n    /**\n     * @type {Collection<import(\"./Overlay.js\").default>}\n     * @private\n     */\n    this.overlays_ = optionsInternal.overlays;\n\n    /**\n     * A lookup of overlays by id.\n     * @private\n     * @type {Object<string, import(\"./Overlay.js\").default>}\n     */\n    this.overlayIdIndex_ = {};\n\n    /**\n     * @type {import(\"./renderer/Map.js\").default|null}\n     * @private\n     */\n    this.renderer_ = null;\n\n    /**\n     * @private\n     * @type {!Array<PostRenderFunction>}\n     */\n    this.postRenderFunctions_ = [];\n\n    /**\n     * @private\n     * @type {TileQueue}\n     */\n    this.tileQueue_ = new TileQueue(\n      this.getTilePriority.bind(this),\n      this.handleTileChange_.bind(this),\n    );\n\n    this.addChangeListener(\n      MapProperty.LAYERGROUP,\n      this.handleLayerGroupChanged_,\n    );\n    this.addChangeListener(MapProperty.VIEW, this.handleViewChanged_);\n    this.addChangeListener(MapProperty.SIZE, this.handleSizeChanged_);\n    this.addChangeListener(MapProperty.TARGET, this.handleTargetChanged_);\n\n    // setProperties will trigger the rendering of the map if the map\n    // is \"defined\" already.\n    this.setProperties(optionsInternal.values);\n\n    const map = this;\n    if (options.view && !(options.view instanceof View)) {\n      options.view.then(function (viewOptions) {\n        map.setView(new View(viewOptions));\n      });\n    }\n\n    this.controls.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.controls.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./control/Control.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(this);\n      },\n    );\n\n    this.interactions.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./interaction/Interaction.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        event.element.setMap(null);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        this.addOverlayInternal_(event.element);\n      },\n    );\n\n    this.overlays_.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"./Collection.js\").CollectionEvent<import(\"./Overlay.js\").default>} event CollectionEvent.\n       */\n      (event) => {\n        const id = event.element.getId();\n        if (id !== undefined) {\n          delete this.overlayIdIndex_[id.toString()];\n        }\n        event.element.setMap(null);\n      },\n    );\n\n    this.controls.forEach(\n      /**\n       * @param {import(\"./control/Control.js\").default} control Control.\n       */\n      (control) => {\n        control.setMap(this);\n      },\n    );\n\n    this.interactions.forEach(\n      /**\n       * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction.\n       */\n      (interaction) => {\n        interaction.setMap(this);\n      },\n    );\n\n    this.overlays_.forEach(this.addOverlayInternal_.bind(this));\n  }\n\n  /**\n   * Add the given control to the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @api\n   */\n  addControl(control) {\n    this.getControls().push(control);\n  }\n\n  /**\n   * Add the given interaction to the map. If you want to add an interaction\n   * at another point of the collection use `getInteractions()` and the methods\n   * available on {@link module:ol/Collection~Collection}. This can be used to\n   * stop the event propagation from the handleEvent function. The interactions\n   * get to handle the events in the reverse order of this collection.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to add.\n   * @api\n   */\n  addInteraction(interaction) {\n    this.getInteractions().push(interaction);\n  }\n\n  /**\n   * Adds the given layer to the top of this map. If you want to add a layer\n   * elsewhere in the stack, use `getLayers()` and the methods available on\n   * {@link module:ol/Collection~Collection}.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @api\n   */\n  addLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    layers.push(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer add event.\n   * @private\n   */\n  handleLayerAdd_(event) {\n    setLayerMapProperty(event.layer, this);\n  }\n\n  /**\n   * Add the given overlay to the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @api\n   */\n  addOverlay(overlay) {\n    this.getOverlays().push(overlay);\n  }\n\n  /**\n   * This deals with map's overlay collection changes.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @private\n   */\n  addOverlayInternal_(overlay) {\n    const id = overlay.getId();\n    if (id !== undefined) {\n      this.overlayIdIndex_[id.toString()] = overlay;\n    }\n    overlay.setMap(this);\n  }\n\n  /**\n   *\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.controls.clear();\n    this.interactions.clear();\n    this.overlays_.clear();\n    this.resizeObserver_.disconnect();\n    this.setTarget(null);\n    super.disposeInternal();\n  }\n\n  /**\n   * Detect features that intersect a pixel on the viewport, and execute a\n   * callback with each intersecting feature. Layers included in the detection can\n   * be configured through the `layerFilter` option in `options`.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {function(import(\"./Feature.js\").FeatureLike, import(\"./layer/Layer.js\").default<import(\"./source/Source\").default>, import(\"./geom/SimpleGeometry.js\").default): T} callback Feature callback. The callback will be\n   *     called with two arguments. The first argument is one\n   *     {@link module:ol/Feature~Feature feature} or\n   *     {@link module:ol/render/Feature~RenderFeature render feature} at the pixel, the second is\n   *     the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n   *     unmanaged layers. To stop detection, callback functions can return a\n   *     truthy value.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {T|undefined} Callback result, i.e. the return value of last\n   * callback execution, or the first truthy callback return value.\n   * @template T\n   * @api\n   */\n  forEachFeatureAtPixel(pixel, callback, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.forEachFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      callback,\n      null,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Get all features that intersect a pixel on the viewport.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {Array<import(\"./Feature.js\").FeatureLike>} The detected features or\n   * an empty array if none were found.\n   * @api\n   */\n  getFeaturesAtPixel(pixel, options) {\n    const features = [];\n    this.forEachFeatureAtPixel(\n      pixel,\n      function (feature) {\n        features.push(feature);\n      },\n      options,\n    );\n    return features;\n  }\n\n  /**\n   * Get all layers from all layer groups.\n   * @return {Array<import(\"./layer/Layer.js\").default>} Layers.\n   * @api\n   */\n  getAllLayers() {\n    const layers = [];\n    function addLayersFrom(layerGroup) {\n      layerGroup.forEach(function (layer) {\n        if (layer instanceof LayerGroup) {\n          addLayersFrom(layer.getLayers());\n        } else {\n          layers.push(layer);\n        }\n      });\n    }\n    addLayersFrom(this.getLayers());\n    return layers;\n  }\n\n  /**\n   * Detect if features intersect a pixel on the viewport. Layers included in the\n   * detection can be configured through the `layerFilter` option.\n   * For polygons without a fill, only the stroke will be used for hit detection.\n   * Polygons must have a fill style applied to ensure that pixels inside a polygon are detected.\n   * The fill can be transparent.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel.\n   * @param {AtPixelOptions} [options] Optional options.\n   * @return {boolean} Is there a feature at the given pixel?\n   * @api\n   */\n  hasFeatureAtPixel(pixel, options) {\n    if (!this.frameState_ || !this.renderer_) {\n      return false;\n    }\n    const coordinate = this.getCoordinateFromPixelInternal(pixel);\n    options = options !== undefined ? options : {};\n    const layerFilter =\n      options.layerFilter !== undefined ? options.layerFilter : TRUE;\n    const hitTolerance =\n      options.hitTolerance !== undefined ? options.hitTolerance : 0;\n    const checkWrapped = options.checkWrapped !== false;\n    return this.renderer_.hasFeatureAtCoordinate(\n      coordinate,\n      this.frameState_,\n      hitTolerance,\n      checkWrapped,\n      layerFilter,\n      null,\n    );\n  }\n\n  /**\n   * Returns the coordinate in user projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   * @api\n   */\n  getEventCoordinate(event) {\n    return this.getCoordinateFromPixel(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the coordinate in view projection for a browser event.\n   * @param {MouseEvent} event Event.\n   * @return {import(\"./coordinate.js\").Coordinate} Coordinate.\n   */\n  getEventCoordinateInternal(event) {\n    return this.getCoordinateFromPixelInternal(this.getEventPixel(event));\n  }\n\n  /**\n   * Returns the map pixel position for a browser event relative to the viewport.\n   * @param {UIEvent|{clientX: number, clientY: number}} event Event.\n   * @return {import(\"./pixel.js\").Pixel} Pixel.\n   * @api\n   */\n  getEventPixel(event) {\n    const viewport = this.viewport_;\n    const viewportPosition = viewport.getBoundingClientRect();\n    const viewportSize = this.getSize();\n    const scaleX = viewportPosition.width / viewportSize[0];\n    const scaleY = viewportPosition.height / viewportSize[1];\n    const eventPosition =\n      //FIXME Are we really calling this with a TouchEvent anywhere?\n      'changedTouches' in event\n        ? /** @type {TouchEvent} */ (event).changedTouches[0]\n        : /** @type {MouseEvent} */ (event);\n\n    return [\n      (eventPosition.clientX - viewportPosition.left) / scaleX,\n      (eventPosition.clientY - viewportPosition.top) / scaleY,\n    ];\n  }\n\n  /**\n   * Get the target in which this map is rendered.\n   * Note that this returns what is entered as an option or in setTarget:\n   * if that was an element, it returns an element; if a string, it returns that.\n   * @return {HTMLElement|string|undefined} The Element or id of the Element that the\n   *     map is rendered in.\n   * @observable\n   * @api\n   */\n  getTarget() {\n    return /** @type {HTMLElement|string|undefined} */ (\n      this.get(MapProperty.TARGET)\n    );\n  }\n\n  /**\n   * Get the DOM element into which this map is rendered. In contrast to\n   * `getTarget` this method always return an `Element`, or `null` if the\n   * map has no target.\n   * @return {HTMLElement} The element that the map is rendered in.\n   * @api\n   */\n  getTargetElement() {\n    return this.targetElement_;\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * user projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   * @api\n   */\n  getCoordinateFromPixel(pixel) {\n    return toUserCoordinate(\n      this.getCoordinateFromPixelInternal(pixel),\n      this.getView().getProjection(),\n    );\n  }\n\n  /**\n   * Get the coordinate for a given pixel.  This returns a coordinate in the\n   * map view projection.\n   * @param {import(\"./pixel.js\").Pixel} pixel Pixel position in the map viewport.\n   * @return {import(\"./coordinate.js\").Coordinate} The coordinate for the pixel position.\n   */\n  getCoordinateFromPixelInternal(pixel) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(frameState.pixelToCoordinateTransform, pixel.slice());\n  }\n\n  /**\n   * Get the map controls. Modifying this collection changes the controls\n   * associated with the map.\n   * @return {Collection<import(\"./control/Control.js\").default>} Controls.\n   * @api\n   */\n  getControls() {\n    return this.controls;\n  }\n\n  /**\n   * Get the map overlays. Modifying this collection changes the overlays\n   * associated with the map.\n   * @return {Collection<import(\"./Overlay.js\").default>} Overlays.\n   * @api\n   */\n  getOverlays() {\n    return this.overlays_;\n  }\n\n  /**\n   * Get an overlay by its identifier (the value returned by overlay.getId()).\n   * Note that the index treats string and numeric identifiers as the same. So\n   * `map.getOverlayById(2)` will return an overlay with id `'2'` or `2`.\n   * @param {string|number} id Overlay identifier.\n   * @return {import(\"./Overlay.js\").default|null} Overlay.\n   * @api\n   */\n  getOverlayById(id) {\n    const overlay = this.overlayIdIndex_[id.toString()];\n    return overlay !== undefined ? overlay : null;\n  }\n\n  /**\n   * Get the map interactions. Modifying this collection changes the interactions\n   * associated with the map.\n   *\n   * Interactions are used for e.g. pan, zoom and rotate.\n   * @return {Collection<import(\"./interaction/Interaction.js\").default>} Interactions.\n   * @api\n   */\n  getInteractions() {\n    return this.interactions;\n  }\n\n  /**\n   * Get the layergroup associated with this map.\n   * @return {LayerGroup} A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  getLayerGroup() {\n    return /** @type {LayerGroup} */ (this.get(MapProperty.LAYERGROUP));\n  }\n\n  /**\n   * Clear any existing layers and add layers to the map.\n   * @param {Array<import(\"./layer/Base.js\").default>|Collection<import(\"./layer/Base.js\").default>} layers The layers to be added to the map.\n   * @api\n   */\n  setLayers(layers) {\n    const group = this.getLayerGroup();\n    if (layers instanceof Collection) {\n      group.setLayers(layers);\n      return;\n    }\n\n    const collection = group.getLayers();\n    collection.clear();\n    collection.extend(layers);\n  }\n\n  /**\n   * Get the collection of layers associated with this map.\n   * @return {!Collection<import(\"./layer/Base.js\").default>} Layers.\n   * @api\n   */\n  getLayers() {\n    const layers = this.getLayerGroup().getLayers();\n    return layers;\n  }\n\n  /**\n   * @return {boolean} Layers have sources that are still loading.\n   */\n  getLoadingOrNotReady() {\n    const layerStatesArray = this.getLayerGroup().getLayerStatesArray();\n    for (let i = 0, ii = layerStatesArray.length; i < ii; ++i) {\n      const state = layerStatesArray[i];\n      if (!state.visible) {\n        continue;\n      }\n      const renderer = state.layer.getRenderer();\n      if (renderer && !renderer.ready) {\n        return true;\n      }\n      const source = state.layer.getSource();\n      if (source && source.loading) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the user\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   * @api\n   */\n  getPixelFromCoordinate(coordinate) {\n    const viewCoordinate = fromUserCoordinate(\n      coordinate,\n      this.getView().getProjection(),\n    );\n    return this.getPixelFromCoordinateInternal(viewCoordinate);\n  }\n\n  /**\n   * Get the pixel for a coordinate.  This takes a coordinate in the map view\n   * projection and returns the corresponding pixel.\n   * @param {import(\"./coordinate.js\").Coordinate} coordinate A map coordinate.\n   * @return {import(\"./pixel.js\").Pixel} A pixel position in the map viewport.\n   */\n  getPixelFromCoordinateInternal(coordinate) {\n    const frameState = this.frameState_;\n    if (!frameState) {\n      return null;\n    }\n    return applyTransform(\n      frameState.coordinateToPixelTransform,\n      coordinate.slice(0, 2),\n    );\n  }\n\n  /**\n   * Get the map renderer.\n   * @return {import(\"./renderer/Map.js\").default|null} Renderer\n   */\n  getRenderer() {\n    return this.renderer_;\n  }\n\n  /**\n   * Get the size of this map.\n   * @return {import(\"./size.js\").Size|undefined} The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  getSize() {\n    return /** @type {import(\"./size.js\").Size|undefined} */ (\n      this.get(MapProperty.SIZE)\n    );\n  }\n\n  /**\n   * Get the view associated with this map. A view manages properties such as\n   * center and resolution.\n   * @return {View} The view that controls this map.\n   * @observable\n   * @api\n   */\n  getView() {\n    return /** @type {View} */ (this.get(MapProperty.VIEW));\n  }\n\n  /**\n   * Get the element that serves as the map viewport.\n   * @return {HTMLElement} Viewport.\n   * @api\n   */\n  getViewport() {\n    return this.viewport_;\n  }\n\n  /**\n   * Get the element that serves as the container for overlays.  Elements added to\n   * this container will let mousedown and touchstart events through to the map,\n   * so clicks and gestures on an overlay will trigger {@link module:ol/MapBrowserEvent~MapBrowserEvent}\n   * events.\n   * @return {!HTMLElement} The map's overlay container.\n   */\n  getOverlayContainer() {\n    return this.overlayContainer_;\n  }\n\n  /**\n   * Get the element that serves as a container for overlays that don't allow\n   * event propagation. Elements added to this container won't let mousedown and\n   * touchstart events through to the map, so clicks and gestures on an overlay\n   * don't trigger any {@link module:ol/MapBrowserEvent~MapBrowserEvent}.\n   * @return {!HTMLElement} The map's overlay container that stops events.\n   */\n  getOverlayContainerStopEvent() {\n    return this.overlayContainerStopEvent_;\n  }\n\n  /**\n   * @return {!Document} The document where the map is displayed.\n   */\n  getOwnerDocument() {\n    const targetElement = this.getTargetElement();\n    return targetElement ? targetElement.ownerDocument : document;\n  }\n\n  /**\n   * @param {import(\"./Tile.js\").default} tile Tile.\n   * @param {string} tileSourceKey Tile source key.\n   * @param {import(\"./coordinate.js\").Coordinate} tileCenter Tile center.\n   * @param {number} tileResolution Tile resolution.\n   * @return {number} Tile priority.\n   */\n  getTilePriority(tile, tileSourceKey, tileCenter, tileResolution) {\n    return getTilePriority(\n      this.frameState_,\n      tile,\n      tileSourceKey,\n      tileCenter,\n      tileResolution,\n    );\n  }\n\n  /**\n   * @param {PointerEvent|KeyboardEvent|WheelEvent} browserEvent Browser event.\n   * @param {string} [type] Type.\n   */\n  handleBrowserEvent(browserEvent, type) {\n    type = type || browserEvent.type;\n    const mapBrowserEvent = new MapBrowserEvent(type, this, browserEvent);\n    this.handleMapBrowserEvent(mapBrowserEvent);\n  }\n\n  /**\n   * @param {MapBrowserEvent} mapBrowserEvent The event to handle.\n   */\n  handleMapBrowserEvent(mapBrowserEvent) {\n    if (!this.frameState_) {\n      // With no view defined, we cannot translate pixels into geographical\n      // coordinates so interactions cannot be used.\n      return;\n    }\n    const originalEvent = mapBrowserEvent.originalEvent;\n    const eventType = originalEvent.type;\n    if (\n      eventType === PointerEventType.POINTERDOWN ||\n      eventType === EventType.WHEEL ||\n      eventType === EventType.KEYDOWN\n    ) {\n      const doc = this.getOwnerDocument();\n      const rootNode = this.viewport_.getRootNode\n        ? this.viewport_.getRootNode()\n        : doc;\n      const target = /** @type {Node} */ (originalEvent.target);\n\n      const currentDoc =\n        rootNode instanceof ShadowRoot\n          ? rootNode.host === target\n            ? rootNode.host.ownerDocument\n            : rootNode\n          : rootNode === doc\n            ? doc.documentElement\n            : rootNode;\n      if (\n        // Abort if the target is a child of the container for elements whose events are not meant\n        // to be handled by map interactions.\n        this.overlayContainerStopEvent_.contains(target) ||\n        // Abort if the event target is a child of the container that is no longer in the page.\n        // It's possible for the target to no longer be in the page if it has been removed in an\n        // event listener, this might happen in a Control that recreates it's content based on\n        // user interaction either manually or via a render in something like https://reactjs.org/\n        !currentDoc.contains(target)\n      ) {\n        return;\n      }\n    }\n    mapBrowserEvent.frameState = this.frameState_;\n    if (this.dispatchEvent(mapBrowserEvent) !== false) {\n      const interactionsArray = this.getInteractions().getArray().slice();\n      for (let i = interactionsArray.length - 1; i >= 0; i--) {\n        const interaction = interactionsArray[i];\n        if (\n          interaction.getMap() !== this ||\n          !interaction.getActive() ||\n          !this.getTargetElement()\n        ) {\n          continue;\n        }\n        const cont = interaction.handleEvent(mapBrowserEvent);\n        if (!cont || mapBrowserEvent.propagationStopped) {\n          break;\n        }\n      }\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handlePostRender() {\n    const frameState = this.frameState_;\n\n    // Manage the tile queue\n    // Image loads are expensive and a limited resource, so try to use them\n    // efficiently:\n    // * When the view is static we allow a large number of parallel tile loads\n    //   to complete the frame as quickly as possible.\n    // * When animating or interacting, image loads can cause janks, so we reduce\n    //   the maximum number of loads per frame and limit the number of parallel\n    //   tile loads to remain reactive to view changes and to reduce the chance of\n    //   loading tiles that will quickly disappear from view.\n    const tileQueue = this.tileQueue_;\n    if (!tileQueue.isEmpty()) {\n      let maxTotalLoading = this.maxTilesLoading_;\n      let maxNewLoads = maxTotalLoading;\n      if (frameState) {\n        const hints = frameState.viewHints;\n        if (hints[ViewHint.ANIMATING] || hints[ViewHint.INTERACTING]) {\n          const lowOnFrameBudget = Date.now() - frameState.time > 8;\n          maxTotalLoading = lowOnFrameBudget ? 0 : 8;\n          maxNewLoads = lowOnFrameBudget ? 0 : 2;\n        }\n      }\n      if (tileQueue.getTilesLoading() < maxTotalLoading) {\n        tileQueue.reprioritize(); // FIXME only call if view has changed\n        tileQueue.loadMoreTiles(maxTotalLoading, maxNewLoads);\n      }\n    }\n\n    if (frameState && this.renderer_ && !frameState.animate) {\n      if (this.renderComplete_) {\n        if (this.hasListener(RenderEventType.RENDERCOMPLETE)) {\n          this.renderer_.dispatchRenderEvent(\n            RenderEventType.RENDERCOMPLETE,\n            frameState,\n          );\n        }\n        if (this.loaded_ === false) {\n          this.loaded_ = true;\n          this.dispatchEvent(\n            new MapEvent(MapEventType.LOADEND, this, frameState),\n          );\n        }\n      } else if (this.loaded_ === true) {\n        this.loaded_ = false;\n        this.dispatchEvent(\n          new MapEvent(MapEventType.LOADSTART, this, frameState),\n        );\n      }\n    }\n\n    const postRenderFunctions = this.postRenderFunctions_;\n    if (frameState) {\n      for (let i = 0, ii = postRenderFunctions.length; i < ii; ++i) {\n        postRenderFunctions[i](this, frameState);\n      }\n    }\n    postRenderFunctions.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  handleSizeChanged_() {\n    if (this.getView() && !this.getView().getAnimating()) {\n      this.getView().resolveConstraints(0);\n    }\n\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleTargetChanged_() {\n    if (this.mapBrowserEventHandler_) {\n      for (let i = 0, ii = this.targetChangeHandlerKeys_.length; i < ii; ++i) {\n        unlistenByKey(this.targetChangeHandlerKeys_[i]);\n      }\n      this.targetChangeHandlerKeys_ = null;\n      this.viewport_.removeEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n      );\n      this.viewport_.removeEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n      );\n      this.mapBrowserEventHandler_.dispose();\n      this.mapBrowserEventHandler_ = null;\n      this.viewport_.remove();\n    }\n\n    if (this.targetElement_) {\n      this.resizeObserver_.unobserve(this.targetElement_);\n      const rootNode = this.targetElement_.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.unobserve(rootNode.host);\n      }\n      this.setSize(undefined);\n    }\n\n    // target may be undefined, null, a string or an Element.\n    // If it's a string we convert it to an Element before proceeding.\n    // If it's not now an Element we remove the viewport from the DOM.\n    // If it's an Element we append the viewport element to it.\n\n    const target = this.getTarget();\n    const targetElement =\n      typeof target === 'string' ? document.getElementById(target) : target;\n    this.targetElement_ = targetElement;\n    if (!targetElement) {\n      if (this.renderer_) {\n        clearTimeout(this.postRenderTimeoutHandle_);\n        this.postRenderTimeoutHandle_ = undefined;\n        this.postRenderFunctions_.length = 0;\n        this.renderer_.dispose();\n        this.renderer_ = null;\n      }\n      if (this.animationDelayKey_) {\n        cancelAnimationFrame(this.animationDelayKey_);\n        this.animationDelayKey_ = undefined;\n      }\n    } else {\n      targetElement.appendChild(this.viewport_);\n      if (!this.renderer_) {\n        this.renderer_ = new CompositeMapRenderer(this);\n      }\n\n      this.mapBrowserEventHandler_ = new MapBrowserEventHandler(\n        this,\n        this.moveTolerance_,\n      );\n      for (const key in MapBrowserEventType) {\n        this.mapBrowserEventHandler_.addEventListener(\n          MapBrowserEventType[key],\n          this.handleMapBrowserEvent.bind(this),\n        );\n      }\n      this.viewport_.addEventListener(\n        EventType.CONTEXTMENU,\n        this.boundHandleBrowserEvent_,\n        false,\n      );\n      this.viewport_.addEventListener(\n        EventType.WHEEL,\n        this.boundHandleBrowserEvent_,\n        PASSIVE_EVENT_LISTENERS ? {passive: false} : false,\n      );\n\n      let keyboardEventTarget;\n      if (!this.keyboardEventTarget_) {\n        // check if map target is in shadowDOM, if yes use host element as target\n        const targetRoot = targetElement.getRootNode();\n        const targetCandidate =\n          targetRoot instanceof ShadowRoot ? targetRoot.host : targetElement;\n        keyboardEventTarget = targetCandidate;\n      } else {\n        keyboardEventTarget = this.keyboardEventTarget_;\n      }\n\n      this.targetChangeHandlerKeys_ = [\n        listen(\n          keyboardEventTarget,\n          EventType.KEYDOWN,\n          this.handleBrowserEvent,\n          this,\n        ),\n        listen(\n          keyboardEventTarget,\n          EventType.KEYPRESS,\n          this.handleBrowserEvent,\n          this,\n        ),\n      ];\n      const rootNode = targetElement.getRootNode();\n      if (rootNode instanceof ShadowRoot) {\n        this.resizeObserver_.observe(rootNode.host);\n      }\n      this.resizeObserver_.observe(targetElement);\n    }\n\n    this.updateSize();\n    // updateSize calls setSize, so no need to call this.render\n    // ourselves here.\n  }\n\n  /**\n   * @private\n   */\n  handleTileChange_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewPropertyChanged_() {\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleViewChanged_() {\n    if (this.viewPropertyListenerKey_) {\n      unlistenByKey(this.viewPropertyListenerKey_);\n      this.viewPropertyListenerKey_ = null;\n    }\n    if (this.viewChangeListenerKey_) {\n      unlistenByKey(this.viewChangeListenerKey_);\n      this.viewChangeListenerKey_ = null;\n    }\n    const view = this.getView();\n    if (view) {\n      this.updateViewportSize_(this.getSize());\n\n      this.viewPropertyListenerKey_ = listen(\n        view,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n      this.viewChangeListenerKey_ = listen(\n        view,\n        EventType.CHANGE,\n        this.handleViewPropertyChanged_,\n        this,\n      );\n\n      view.resolveConstraints(0);\n    }\n    this.render();\n  }\n\n  /**\n   * @private\n   */\n  handleLayerGroupChanged_() {\n    if (this.layerGroupPropertyListenerKeys_) {\n      this.layerGroupPropertyListenerKeys_.forEach(unlistenByKey);\n      this.layerGroupPropertyListenerKeys_ = null;\n    }\n    const layerGroup = this.getLayerGroup();\n    if (layerGroup) {\n      this.handleLayerAdd_(new GroupEvent('addlayer', layerGroup));\n      this.layerGroupPropertyListenerKeys_ = [\n        listen(layerGroup, ObjectEventType.PROPERTYCHANGE, this.render, this),\n        listen(layerGroup, EventType.CHANGE, this.render, this),\n        listen(layerGroup, 'addlayer', this.handleLayerAdd_, this),\n        listen(layerGroup, 'removelayer', this.handleLayerRemove_, this),\n      ];\n    }\n    this.render();\n  }\n\n  /**\n   * @return {boolean} Is rendered.\n   */\n  isRendered() {\n    return !!this.frameState_;\n  }\n\n  /**\n   * @private\n   */\n  animationDelay_() {\n    this.animationDelayKey_ = undefined;\n    this.renderFrame_(Date.now());\n  }\n\n  /**\n   * Requests an immediate render in a synchronous manner.\n   * @api\n   */\n  renderSync() {\n    if (this.animationDelayKey_) {\n      cancelAnimationFrame(this.animationDelayKey_);\n    }\n    this.animationDelay_();\n  }\n\n  /**\n   * Redraws all text after new fonts have loaded\n   */\n  redrawText() {\n    if (!this.frameState_) {\n      return;\n    }\n    const layerStates = this.frameState_.layerStatesArray;\n    for (let i = 0, ii = layerStates.length; i < ii; ++i) {\n      const layer = layerStates[i].layer;\n      if (layer.hasRenderer()) {\n        layer.getRenderer().handleFontsChanged();\n      }\n    }\n  }\n\n  /**\n   * Request a map rendering (at the next animation frame).\n   * @api\n   */\n  render() {\n    if (this.renderer_ && this.animationDelayKey_ === undefined) {\n      this.animationDelayKey_ = requestAnimationFrame(this.animationDelay_);\n    }\n  }\n\n  /**\n   * Remove the given control from the map.\n   * @param {import(\"./control/Control.js\").default} control Control.\n   * @return {import(\"./control/Control.js\").default|undefined} The removed control (or undefined\n   *     if the control was not found).\n   * @api\n   */\n  removeControl(control) {\n    return this.getControls().remove(control);\n  }\n\n  /**\n   * Remove the given interaction from the map.\n   * @param {import(\"./interaction/Interaction.js\").default} interaction Interaction to remove.\n   * @return {import(\"./interaction/Interaction.js\").default|undefined} The removed interaction (or\n   *     undefined if the interaction was not found).\n   * @api\n   */\n  removeInteraction(interaction) {\n    return this.getInteractions().remove(interaction);\n  }\n\n  /**\n   * Removes the given layer from the map.\n   * @param {import(\"./layer/Base.js\").default} layer Layer.\n   * @return {import(\"./layer/Base.js\").default|undefined} The removed layer (or undefined if the\n   *     layer was not found).\n   * @api\n   */\n  removeLayer(layer) {\n    const layers = this.getLayerGroup().getLayers();\n    return layers.remove(layer);\n  }\n\n  /**\n   * @param {import(\"./layer/Group.js\").GroupEvent} event The layer remove event.\n   * @private\n   */\n  handleLayerRemove_(event) {\n    removeLayerMapProperty(event.layer);\n  }\n\n  /**\n   * Remove the given overlay from the map.\n   * @param {import(\"./Overlay.js\").default} overlay Overlay.\n   * @return {import(\"./Overlay.js\").default|undefined} The removed overlay (or undefined\n   *     if the overlay was not found).\n   * @api\n   */\n  removeOverlay(overlay) {\n    return this.getOverlays().remove(overlay);\n  }\n\n  /**\n   * @param {number} time Time.\n   * @private\n   */\n  renderFrame_(time) {\n    const size = this.getSize();\n    const view = this.getView();\n    const previousFrameState = this.frameState_;\n    /** @type {?FrameState} */\n    let frameState = null;\n    if (size !== undefined && hasArea(size) && view && view.isDef()) {\n      const viewHints = view.getHints(\n        this.frameState_ ? this.frameState_.viewHints : undefined,\n      );\n      const viewState = view.getState();\n      frameState = {\n        animate: false,\n        coordinateToPixelTransform: this.coordinateToPixelTransform_,\n        declutter: null,\n        extent: getForViewAndSize(\n          viewState.center,\n          viewState.resolution,\n          viewState.rotation,\n          size,\n        ),\n        index: this.frameIndex_++,\n        layerIndex: 0,\n        layerStatesArray: this.getLayerGroup().getLayerStatesArray(),\n        pixelRatio: this.pixelRatio_,\n        pixelToCoordinateTransform: this.pixelToCoordinateTransform_,\n        postRenderFunctions: [],\n        size: size,\n        tileQueue: this.tileQueue_,\n        time: time,\n        usedTiles: {},\n        viewState: viewState,\n        viewHints: viewHints,\n        wantedTiles: {},\n        mapId: getUid(this),\n        renderTargets: {},\n      };\n      if (viewState.nextCenter && viewState.nextResolution) {\n        const rotation = isNaN(viewState.nextRotation)\n          ? viewState.rotation\n          : viewState.nextRotation;\n\n        frameState.nextExtent = getForViewAndSize(\n          viewState.nextCenter,\n          viewState.nextResolution,\n          rotation,\n          size,\n        );\n      }\n    }\n\n    this.frameState_ = frameState;\n    this.renderer_.renderFrame(frameState);\n\n    if (frameState) {\n      if (frameState.animate) {\n        this.render();\n      }\n      Array.prototype.push.apply(\n        this.postRenderFunctions_,\n        frameState.postRenderFunctions,\n      );\n\n      if (previousFrameState) {\n        const moveStart =\n          !this.previousExtent_ ||\n          (!isEmpty(this.previousExtent_) &&\n            !equalsExtent(frameState.extent, this.previousExtent_));\n        if (moveStart) {\n          this.dispatchEvent(\n            new MapEvent(MapEventType.MOVESTART, this, previousFrameState),\n          );\n          this.previousExtent_ = createOrUpdateEmpty(this.previousExtent_);\n        }\n      }\n\n      const idle =\n        this.previousExtent_ &&\n        !frameState.viewHints[ViewHint.ANIMATING] &&\n        !frameState.viewHints[ViewHint.INTERACTING] &&\n        !equalsExtent(frameState.extent, this.previousExtent_);\n\n      if (idle) {\n        this.dispatchEvent(\n          new MapEvent(MapEventType.MOVEEND, this, frameState),\n        );\n        clone(frameState.extent, this.previousExtent_);\n      }\n    }\n\n    this.dispatchEvent(new MapEvent(MapEventType.POSTRENDER, this, frameState));\n\n    this.renderComplete_ =\n      (this.hasListener(MapEventType.LOADSTART) ||\n        this.hasListener(MapEventType.LOADEND) ||\n        this.hasListener(RenderEventType.RENDERCOMPLETE)) &&\n      !this.tileQueue_.getTilesLoading() &&\n      !this.tileQueue_.getCount() &&\n      !this.getLoadingOrNotReady();\n\n    if (!this.postRenderTimeoutHandle_) {\n      this.postRenderTimeoutHandle_ = setTimeout(() => {\n        this.postRenderTimeoutHandle_ = undefined;\n        this.handlePostRender();\n      }, 0);\n    }\n  }\n\n  /**\n   * Sets the layergroup of this map.\n   * @param {LayerGroup} layerGroup A layer group containing the layers in this map.\n   * @observable\n   * @api\n   */\n  setLayerGroup(layerGroup) {\n    const oldLayerGroup = this.getLayerGroup();\n    if (oldLayerGroup) {\n      this.handleLayerRemove_(new GroupEvent('removelayer', oldLayerGroup));\n    }\n    this.set(MapProperty.LAYERGROUP, layerGroup);\n  }\n\n  /**\n   * Set the size of this map.\n   * @param {import(\"./size.js\").Size|undefined} size The size in pixels of the map in the DOM.\n   * @observable\n   * @api\n   */\n  setSize(size) {\n    this.set(MapProperty.SIZE, size);\n  }\n\n  /**\n   * Set the target element to render this map into.\n   * For accessibility (focus and keyboard events for map navigation), the `target` element must have a\n   *  properly configured `tabindex` attribute. If the `target` element is inside a Shadow DOM, the\n   *  `tabindex` atribute must be set on the custom element's host element.\n   * @param {HTMLElement|string} [target] The Element or id of the Element\n   *     that the map is rendered in.\n   * @observable\n   * @api\n   */\n  setTarget(target) {\n    this.set(MapProperty.TARGET, target);\n  }\n\n  /**\n   * Set the view for this map.\n   * @param {View|Promise<import(\"./View.js\").ViewOptions>|null} view The view that controls this map.\n   * It is also possible to pass a promise that resolves to options for constructing a view.  This\n   * alternative allows view properties to be resolved by sources or other components that load\n   * view-related metadata.\n   * @observable\n   * @api\n   */\n  setView(view) {\n    if (!view || view instanceof View) {\n      this.set(MapProperty.VIEW, view);\n      return;\n    }\n    this.set(MapProperty.VIEW, new View());\n\n    const map = this;\n    view.then(function (viewOptions) {\n      map.setView(new View(viewOptions));\n    });\n  }\n\n  /**\n   * Force a recalculation of the map viewport size.  This should be called when\n   * third-party code changes the size of the map viewport.\n   * @api\n   */\n  updateSize() {\n    const targetElement = this.getTargetElement();\n\n    let size = undefined;\n    if (targetElement) {\n      const computedStyle = getComputedStyle(targetElement);\n      const width =\n        targetElement.offsetWidth -\n        parseFloat(computedStyle['borderLeftWidth']) -\n        parseFloat(computedStyle['paddingLeft']) -\n        parseFloat(computedStyle['paddingRight']) -\n        parseFloat(computedStyle['borderRightWidth']);\n      const height =\n        targetElement.offsetHeight -\n        parseFloat(computedStyle['borderTopWidth']) -\n        parseFloat(computedStyle['paddingTop']) -\n        parseFloat(computedStyle['paddingBottom']) -\n        parseFloat(computedStyle['borderBottomWidth']);\n      if (!isNaN(width) && !isNaN(height)) {\n        size = [Math.max(0, width), Math.max(0, height)];\n        if (\n          !hasArea(size) &&\n          !!(\n            targetElement.offsetWidth ||\n            targetElement.offsetHeight ||\n            targetElement.getClientRects().length\n          )\n        ) {\n          warn(\n            \"No map visible because the map container's width or height are 0.\",\n          );\n        }\n      }\n    }\n\n    const oldSize = this.getSize();\n    if (size && (!oldSize || !equals(size, oldSize))) {\n      this.setSize(size);\n      this.updateViewportSize_(size);\n    }\n  }\n\n  /**\n   * Recomputes the viewport size and save it on the view object (if any)\n   * @param {import(\"./size.js\").Size|undefined} size The size.\n   * @private\n   */\n  updateViewportSize_(size) {\n    const view = this.getView();\n    if (view) {\n      view.setViewportSize(size);\n    }\n  }\n}\n\n/**\n * @param {MapOptions} options Map options.\n * @return {MapOptionsInternal} Internal map options.\n */\nfunction createOptionsInternal(options) {\n  /**\n   * @type {HTMLElement|Document}\n   */\n  let keyboardEventTarget = null;\n  if (options.keyboardEventTarget !== undefined) {\n    keyboardEventTarget =\n      typeof options.keyboardEventTarget === 'string'\n        ? document.getElementById(options.keyboardEventTarget)\n        : options.keyboardEventTarget;\n  }\n\n  /**\n   * @type {Object<string, *>}\n   */\n  const values = {};\n\n  const layerGroup =\n    options.layers &&\n    typeof (/** @type {?} */ (options.layers).getLayers) === 'function'\n      ? /** @type {LayerGroup} */ (options.layers)\n      : new LayerGroup({\n          layers:\n            /** @type {Collection<import(\"./layer/Base.js\").default>|Array<import(\"./layer/Base.js\").default>} */ (\n              options.layers\n            ),\n        });\n  values[MapProperty.LAYERGROUP] = layerGroup;\n\n  values[MapProperty.TARGET] = options.target;\n\n  values[MapProperty.VIEW] =\n    options.view instanceof View ? options.view : new View();\n\n  /** @type {Collection<import(\"./control/Control.js\").default>} */\n  let controls;\n  if (options.controls !== undefined) {\n    if (Array.isArray(options.controls)) {\n      controls = new Collection(options.controls.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.controls).getArray) === 'function',\n        'Expected `controls` to be an array or an `ol/Collection.js`',\n      );\n      controls = options.controls;\n    }\n  }\n\n  /** @type {Collection<import(\"./interaction/Interaction\").default>} */\n  let interactions;\n  if (options.interactions !== undefined) {\n    if (Array.isArray(options.interactions)) {\n      interactions = new Collection(options.interactions.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.interactions).getArray) ===\n          'function',\n        'Expected `interactions` to be an array or an `ol/Collection.js`',\n      );\n      interactions = options.interactions;\n    }\n  }\n\n  /** @type {Collection<import(\"./Overlay.js\").default>} */\n  let overlays;\n  if (options.overlays !== undefined) {\n    if (Array.isArray(options.overlays)) {\n      overlays = new Collection(options.overlays.slice());\n    } else {\n      assert(\n        typeof (/** @type {?} */ (options.overlays).getArray) === 'function',\n        'Expected `overlays` to be an array or an `ol/Collection.js`',\n      );\n      overlays = options.overlays;\n    }\n  } else {\n    overlays = new Collection();\n  }\n\n  return {\n    controls: controls,\n    interactions: interactions,\n    keyboardEventTarget: keyboardEventTarget,\n    overlays: overlays,\n    values: values,\n  };\n}\nexport default Map;\n","/**\n * @module ol/interaction/defaults\n */\nimport Collection from '../Collection.js';\nimport Kinetic from '../Kinetic.js';\nimport DoubleClickZoom from './DoubleClickZoom.js';\nimport DragPan from './DragPan.js';\nimport DragRotate from './DragRotate.js';\nimport DragZoom from './DragZoom.js';\nimport KeyboardPan from './KeyboardPan.js';\nimport KeyboardZoom from './KeyboardZoom.js';\nimport MouseWheelZoom from './MouseWheelZoom.js';\nimport PinchRotate from './PinchRotate.js';\nimport PinchZoom from './PinchZoom.js';\n\n/**\n * @typedef {Object} DefaultsOptions\n * @property {boolean} [altShiftDragRotate=true] Whether Alt-Shift-drag rotate is\n * desired.\n * @property {boolean} [onFocusOnly=false] Interact only when the map has the\n * focus. This affects the `MouseWheelZoom` and `DragPan` interactions and is\n * useful when page scroll is desired for maps that do not have the browser's\n * focus.\n * @property {boolean} [doubleClickZoom=true] Whether double click zoom is\n * desired.\n * @property {boolean} [keyboard=true] Whether keyboard interaction is desired.\n * @property {boolean} [mouseWheelZoom=true] Whether mousewheel zoom is desired.\n * @property {boolean} [shiftDragZoom=true] Whether Shift-drag zoom is desired.\n * @property {boolean} [dragPan=true] Whether drag pan is desired.\n * @property {boolean} [pinchRotate=true] Whether pinch rotate is desired.\n * @property {boolean} [pinchZoom=true] Whether pinch zoom is desired.\n * @property {number} [zoomDelta] Zoom level delta when using keyboard or double click zoom.\n * @property {number} [zoomDuration] Duration of the zoom animation in\n * milliseconds.\n */\n\n/**\n * Set of interactions included in maps by default. Specific interactions can be\n * excluded by setting the appropriate option to false in the constructor\n * options, but the order of the interactions is fixed.  If you want to specify\n * a different order for interactions, you will need to create your own\n * {@link module:ol/interaction/Interaction~Interaction} instances and insert\n * them into a {@link module:ol/Collection~Collection} in the order you want\n * before creating your {@link module:ol/Map~Map} instance. Changing the order can\n * be of interest if the event propagation needs to be stopped at a point.\n * The default set of interactions, in sequence, is:\n * {@link module:ol/interaction/DragRotate~DragRotate}\n * {@link module:ol/interaction/DoubleClickZoom~DoubleClickZoom}\n * {@link module:ol/interaction/DragPan~DragPan}\n * {@link module:ol/interaction/PinchRotate~PinchRotate}\n * {@link module:ol/interaction/PinchZoom~PinchZoom}\n * {@link module:ol/interaction/KeyboardPan~KeyboardPan}\n * {@link module:ol/interaction/KeyboardZoom~KeyboardZoom}\n * {@link module:ol/interaction/MouseWheelZoom~MouseWheelZoom}\n * {@link module:ol/interaction/DragZoom~DragZoom}\n *\n * @param {DefaultsOptions} [options] Defaults options.\n * @return {Collection<import(\"./Interaction.js\").default>}\n * A collection of interactions to be used with the {@link module:ol/Map~Map}\n * constructor's `interactions` option.\n * @api\n */\nexport function defaults(options) {\n  options = options ? options : {};\n\n  /** @type {Collection<import(\"./Interaction.js\").default>} */\n  const interactions = new Collection();\n\n  const kinetic = new Kinetic(-0.005, 0.05, 100);\n\n  const altShiftDragRotate =\n    options.altShiftDragRotate !== undefined\n      ? options.altShiftDragRotate\n      : true;\n  if (altShiftDragRotate) {\n    interactions.push(new DragRotate());\n  }\n\n  const doubleClickZoom =\n    options.doubleClickZoom !== undefined ? options.doubleClickZoom : true;\n  if (doubleClickZoom) {\n    interactions.push(\n      new DoubleClickZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const dragPan = options.dragPan !== undefined ? options.dragPan : true;\n  if (dragPan) {\n    interactions.push(\n      new DragPan({\n        onFocusOnly: options.onFocusOnly,\n        kinetic: kinetic,\n      }),\n    );\n  }\n\n  const pinchRotate =\n    options.pinchRotate !== undefined ? options.pinchRotate : true;\n  if (pinchRotate) {\n    interactions.push(new PinchRotate());\n  }\n\n  const pinchZoom = options.pinchZoom !== undefined ? options.pinchZoom : true;\n  if (pinchZoom) {\n    interactions.push(\n      new PinchZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const keyboard = options.keyboard !== undefined ? options.keyboard : true;\n  if (keyboard) {\n    interactions.push(new KeyboardPan());\n    interactions.push(\n      new KeyboardZoom({\n        delta: options.zoomDelta,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const mouseWheelZoom =\n    options.mouseWheelZoom !== undefined ? options.mouseWheelZoom : true;\n  if (mouseWheelZoom) {\n    interactions.push(\n      new MouseWheelZoom({\n        onFocusOnly: options.onFocusOnly,\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  const shiftDragZoom =\n    options.shiftDragZoom !== undefined ? options.shiftDragZoom : true;\n  if (shiftDragZoom) {\n    interactions.push(\n      new DragZoom({\n        duration: options.zoomDuration,\n      }),\n    );\n  }\n\n  return interactions;\n}\n","/**\n * @module ol/Overlay\n */\nimport MapEventType from './MapEventType.js';\nimport BaseObject from './Object.js';\nimport {CLASS_SELECTABLE} from './css.js';\nimport {outerHeight, outerWidth, removeChildren} from './dom.js';\nimport {listen, unlistenByKey} from './events.js';\nimport {containsExtent} from './extent.js';\n\n/**\n * @typedef {'bottom-left' | 'bottom-center' | 'bottom-right' | 'center-left' | 'center-center' | 'center-right' | 'top-left' | 'top-center' | 'top-right'} Positioning\n * The overlay position: `'bottom-left'`, `'bottom-center'`,  `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, or `'top-right'`.\n */\n\n/**\n * @typedef {Object} Options\n * @property {number|string} [id] Set the overlay id. The overlay id can be used\n * with the {@link module:ol/Map~Map#getOverlayById} method.\n * @property {HTMLElement} [element] The overlay element.\n * @property {Array<number>} [offset=[0, 0]] Offsets in pixels used when positioning\n * the overlay. The first element in the\n * array is the horizontal offset. A positive value shifts the overlay right.\n * The second element in the array is the vertical offset. A positive value\n * shifts the overlay down.\n * @property {import(\"./coordinate.js\").Coordinate} [position] The overlay position\n * in map projection.\n * @property {Positioning} [positioning='top-left'] Defines how\n * the overlay is actually positioned with respect to its `position` property.\n * Possible values are `'bottom-left'`, `'bottom-center'`, `'bottom-right'`,\n * `'center-left'`, `'center-center'`, `'center-right'`, `'top-left'`,\n * `'top-center'`, and `'top-right'`.\n * @property {boolean} [stopEvent=true] Whether event propagation to the map\n * viewport should be stopped. If `true` the overlay is placed in the same\n * container as that of the controls (CSS class name\n * `ol-overlaycontainer-stopevent`); if `false` it is placed in the container\n * with CSS class name specified by the `className` property.\n * @property {boolean} [insertFirst=true] Whether the overlay is inserted first\n * in the overlay container, or appended. If the overlay is placed in the same\n * container as that of the controls (see the `stopEvent` option) you will\n * probably set `insertFirst` to `true` so the overlay is displayed below the\n * controls.\n * @property {PanIntoViewOptions|boolean} [autoPan=false] Pan the map when calling\n * `setPosition`, so that the overlay is entirely visible in the current viewport.\n * @property {string} [className='ol-overlay-container ol-selectable'] CSS class\n * name.\n */\n\n/**\n * @typedef {Object} PanOptions\n * @property {number} [duration=1000] The duration of the animation in\n * milliseconds.\n * @property {function(number):number} [easing] The easing function to use. Can\n * be one from {@link module:ol/easing} or a custom function.\n * Default is {@link module:ol/easing.inAndOut}.\n */\n\n/**\n * @typedef {Object} PanIntoViewOptions\n * @property {PanOptions} [animation={}] The animation parameters for the pan\n * @property {number} [margin=20] The margin (in pixels) between the\n * overlay and the borders of the map when panning into view.\n */\n\n/**\n * @enum {string}\n * @protected\n */\nconst Property = {\n  ELEMENT: 'element',\n  MAP: 'map',\n  OFFSET: 'offset',\n  POSITION: 'position',\n  POSITIONING: 'positioning',\n};\n\n/**\n * @typedef {import(\"./ObjectEventType\").Types|'change:element'|'change:map'|'change:offset'|'change:position'|\n *   'change:positioning'} OverlayObjectEventTypes\n */\n\n/***\n * @template Return\n * @typedef {import(\"./Observable\").OnSignature<import(\"./Observable\").EventTypes, import(\"./events/Event.js\").default, Return> &\n *   import(\"./Observable\").OnSignature<OverlayObjectEventTypes, import(\"./Object\").ObjectEvent, Return> &\n *   import(\"./Observable\").CombinedOnSignature<import(\"./Observable\").EventTypes|OverlayObjectEventTypes, Return>} OverlayOnSignature\n */\n\n/**\n * @classdesc\n * An element to be displayed over the map and attached to a single map\n * location.  Like {@link module:ol/control/Control~Control}, Overlays are\n * visible widgets. Unlike Controls, they are not in a fixed position on the\n * screen, but are tied to a geographical coordinate, so panning the map will\n * move an Overlay but not a Control.\n *\n * Example:\n *\n *     import Overlay from 'ol/Overlay.js';\n *\n *     // ...\n *     const popup = new Overlay({\n *       element: document.getElementById('popup'),\n *     });\n *     popup.setPosition(coordinate);\n *     map.addOverlay(popup);\n *\n * @api\n */\nclass Overlay extends BaseObject {\n  /**\n   * @param {Options} options Overlay options.\n   */\n  constructor(options) {\n    super();\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {OverlayOnSignature<import(\"./events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {OverlayOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {Options}\n     */\n    this.options = options;\n\n    /**\n     * @protected\n     * @type {number|string|undefined}\n     */\n    this.id = options.id;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.insertFirst =\n      options.insertFirst !== undefined ? options.insertFirst : true;\n\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.stopEvent = options.stopEvent !== undefined ? options.stopEvent : true;\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.element = document.createElement('div');\n    this.element.className =\n      options.className !== undefined\n        ? options.className\n        : 'ol-overlay-container ' + CLASS_SELECTABLE;\n    this.element.style.position = 'absolute';\n    this.element.style.pointerEvents = 'auto';\n\n    /**\n     * @protected\n     * @type {PanIntoViewOptions|undefined}\n     */\n    this.autoPan = options.autoPan === true ? {} : options.autoPan || undefined;\n\n    /**\n     * @protected\n     * @type {{transform_: string,\n     *         visible: boolean}}\n     */\n    this.rendered = {\n      transform_: '',\n      visible: true,\n    };\n\n    /**\n     * @protected\n     * @type {?import(\"./events.js\").EventsKey}\n     */\n    this.mapPostrenderListenerKey = null;\n\n    this.addChangeListener(Property.ELEMENT, this.handleElementChanged);\n    this.addChangeListener(Property.MAP, this.handleMapChanged);\n    this.addChangeListener(Property.OFFSET, this.handleOffsetChanged);\n    this.addChangeListener(Property.POSITION, this.handlePositionChanged);\n    this.addChangeListener(Property.POSITIONING, this.handlePositioningChanged);\n\n    if (options.element !== undefined) {\n      this.setElement(options.element);\n    }\n\n    this.setOffset(options.offset !== undefined ? options.offset : [0, 0]);\n\n    this.setPositioning(options.positioning || 'top-left');\n\n    if (options.position !== undefined) {\n      this.setPosition(options.position);\n    }\n  }\n\n  /**\n   * Get the DOM element of this overlay.\n   * @return {HTMLElement|undefined} The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  getElement() {\n    return /** @type {HTMLElement|undefined} */ (this.get(Property.ELEMENT));\n  }\n\n  /**\n   * Get the overlay identifier which is set on constructor.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id;\n  }\n\n  /**\n   * Get the map associated with this overlay.\n   * @return {import(\"./Map.js\").default|null} The map that the\n   * overlay is part of.\n   * @observable\n   * @api\n   */\n  getMap() {\n    return /** @type {import(\"./Map.js\").default|null} */ (\n      this.get(Property.MAP) || null\n    );\n  }\n\n  /**\n   * Get the offset of this overlay.\n   * @return {Array<number>} The offset.\n   * @observable\n   * @api\n   */\n  getOffset() {\n    return /** @type {Array<number>} */ (this.get(Property.OFFSET));\n  }\n\n  /**\n   * Get the current position of this overlay.\n   * @return {import(\"./coordinate.js\").Coordinate|undefined} The spatial point that the overlay is\n   *     anchored at.\n   * @observable\n   * @api\n   */\n  getPosition() {\n    return /** @type {import(\"./coordinate.js\").Coordinate|undefined} */ (\n      this.get(Property.POSITION)\n    );\n  }\n\n  /**\n   * Get the current positioning of this overlay.\n   * @return {Positioning} How the overlay is positioned\n   *     relative to its point on the map.\n   * @observable\n   * @api\n   */\n  getPositioning() {\n    return /** @type {Positioning} */ (this.get(Property.POSITIONING));\n  }\n\n  /**\n   * @protected\n   */\n  handleElementChanged() {\n    removeChildren(this.element);\n    const element = this.getElement();\n    if (element) {\n      this.element.appendChild(element);\n    }\n  }\n\n  /**\n   * @protected\n   */\n  handleMapChanged() {\n    if (this.mapPostrenderListenerKey) {\n      this.element?.remove();\n      unlistenByKey(this.mapPostrenderListenerKey);\n      this.mapPostrenderListenerKey = null;\n    }\n    const map = this.getMap();\n    if (map) {\n      this.mapPostrenderListenerKey = listen(\n        map,\n        MapEventType.POSTRENDER,\n        this.render,\n        this,\n      );\n      this.updatePixelPosition();\n      const container = this.stopEvent\n        ? map.getOverlayContainerStopEvent()\n        : map.getOverlayContainer();\n      if (this.insertFirst) {\n        container.insertBefore(this.element, container.childNodes[0] || null);\n      } else {\n        container.appendChild(this.element);\n      }\n      this.performAutoPan();\n    }\n  }\n\n  /**\n   * @protected\n   */\n  render() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handleOffsetChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositionChanged() {\n    this.updatePixelPosition();\n    this.performAutoPan();\n  }\n\n  /**\n   * @protected\n   */\n  handlePositioningChanged() {\n    this.updatePixelPosition();\n  }\n\n  /**\n   * Set the DOM element to be associated with this overlay.\n   * @param {HTMLElement|undefined} element The Element containing the overlay.\n   * @observable\n   * @api\n   */\n  setElement(element) {\n    this.set(Property.ELEMENT, element);\n  }\n\n  /**\n   * Set the map to be associated with this overlay.\n   * @param {import(\"./Map.js\").default|null} map The map that the\n   * overlay is part of. Pass `null` to just remove the overlay from the current map.\n   * @observable\n   * @api\n   */\n  setMap(map) {\n    this.set(Property.MAP, map);\n  }\n\n  /**\n   * Set the offset for this overlay.\n   * @param {Array<number>} offset Offset.\n   * @observable\n   * @api\n   */\n  setOffset(offset) {\n    this.set(Property.OFFSET, offset);\n  }\n\n  /**\n   * Set the position for this overlay. If the position is `undefined` the\n   * overlay is hidden.\n   * @param {import(\"./coordinate.js\").Coordinate|undefined} position The spatial point that the overlay\n   *     is anchored at.\n   * @observable\n   * @api\n   */\n  setPosition(position) {\n    this.set(Property.POSITION, position);\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary) using the configured autoPan parameters\n   * @protected\n   */\n  performAutoPan() {\n    if (this.autoPan) {\n      this.panIntoView(this.autoPan);\n    }\n  }\n\n  /**\n   * Pan the map so that the overlay is entirely visible in the current viewport\n   * (if necessary).\n   * @param {PanIntoViewOptions} [panIntoViewOptions] Options for the pan action\n   * @api\n   */\n  panIntoView(panIntoViewOptions) {\n    const map = this.getMap();\n\n    if (!map || !map.getTargetElement() || !this.get(Property.POSITION)) {\n      return;\n    }\n\n    const mapRect = this.getRect(map.getTargetElement(), map.getSize());\n    const element = this.getElement();\n    const overlayRect = this.getRect(element, [\n      outerWidth(element),\n      outerHeight(element),\n    ]);\n\n    panIntoViewOptions = panIntoViewOptions || {};\n\n    const myMargin =\n      panIntoViewOptions.margin === undefined ? 20 : panIntoViewOptions.margin;\n    if (!containsExtent(mapRect, overlayRect)) {\n      // the overlay is not completely inside the viewport, so pan the map\n      const offsetLeft = overlayRect[0] - mapRect[0];\n      const offsetRight = mapRect[2] - overlayRect[2];\n      const offsetTop = overlayRect[1] - mapRect[1];\n      const offsetBottom = mapRect[3] - overlayRect[3];\n\n      const delta = [0, 0];\n      if (offsetLeft < 0) {\n        // move map to the left\n        delta[0] = offsetLeft - myMargin;\n      } else if (offsetRight < 0) {\n        // move map to the right\n        delta[0] = Math.abs(offsetRight) + myMargin;\n      }\n      if (offsetTop < 0) {\n        // move map up\n        delta[1] = offsetTop - myMargin;\n      } else if (offsetBottom < 0) {\n        // move map down\n        delta[1] = Math.abs(offsetBottom) + myMargin;\n      }\n\n      if (delta[0] !== 0 || delta[1] !== 0) {\n        const center = /** @type {import(\"./coordinate.js\").Coordinate} */ (\n          map.getView().getCenterInternal()\n        );\n        const centerPx = map.getPixelFromCoordinateInternal(center);\n        if (!centerPx) {\n          return;\n        }\n        const newCenterPx = [centerPx[0] + delta[0], centerPx[1] + delta[1]];\n\n        const panOptions = panIntoViewOptions.animation || {};\n        map.getView().animateInternal({\n          center: map.getCoordinateFromPixelInternal(newCenterPx),\n          duration: panOptions.duration,\n          easing: panOptions.easing,\n        });\n      }\n    }\n  }\n\n  /**\n   * Get the extent of an element relative to the document\n   * @param {HTMLElement} element The element.\n   * @param {import(\"./size.js\").Size} size The size of the element.\n   * @return {import(\"./extent.js\").Extent} The extent.\n   * @protected\n   */\n  getRect(element, size) {\n    const box = element.getBoundingClientRect();\n    const offsetX = box.left + window.pageXOffset;\n    const offsetY = box.top + window.pageYOffset;\n    return [offsetX, offsetY, offsetX + size[0], offsetY + size[1]];\n  }\n\n  /**\n   * Set the positioning for this overlay.\n   * @param {Positioning} positioning how the overlay is\n   *     positioned relative to its point on the map.\n   * @observable\n   * @api\n   */\n  setPositioning(positioning) {\n    this.set(Property.POSITIONING, positioning);\n  }\n\n  /**\n   * Modify the visibility of the element.\n   * @param {boolean} visible Element visibility.\n   * @protected\n   */\n  setVisible(visible) {\n    if (this.rendered.visible !== visible) {\n      this.element.style.display = visible ? '' : 'none';\n      this.rendered.visible = visible;\n    }\n  }\n\n  /**\n   * Update pixel position.\n   * @protected\n   */\n  updatePixelPosition() {\n    const map = this.getMap();\n    const position = this.getPosition();\n    if (!map || !map.isRendered() || !position) {\n      this.setVisible(false);\n      return;\n    }\n\n    const pixel = map.getPixelFromCoordinate(position);\n    const mapSize = map.getSize();\n    this.updateRenderedPosition(pixel, mapSize);\n  }\n\n  /**\n   * @param {import(\"./pixel.js\").Pixel} pixel The pixel location.\n   * @param {import(\"./size.js\").Size|undefined} mapSize The map size.\n   * @protected\n   */\n  updateRenderedPosition(pixel, mapSize) {\n    const style = this.element.style;\n    const offset = this.getOffset();\n\n    const positioning = this.getPositioning();\n\n    this.setVisible(true);\n\n    const x = `${pixel[0] + offset[0]}px`;\n    const y = `${pixel[1] + offset[1]}px`;\n    let posX = '0%';\n    let posY = '0%';\n    if (\n      positioning == 'bottom-right' ||\n      positioning == 'center-right' ||\n      positioning == 'top-right'\n    ) {\n      posX = '-100%';\n    } else if (\n      positioning == 'bottom-center' ||\n      positioning == 'center-center' ||\n      positioning == 'top-center'\n    ) {\n      posX = '-50%';\n    }\n    if (\n      positioning == 'bottom-left' ||\n      positioning == 'bottom-center' ||\n      positioning == 'bottom-right'\n    ) {\n      posY = '-100%';\n    } else if (\n      positioning == 'center-left' ||\n      positioning == 'center-center' ||\n      positioning == 'center-right'\n    ) {\n      posY = '-50%';\n    }\n    const transform = `translate(${posX}, ${posY}) translate(${x}, ${y})`;\n    if (this.rendered.transform_ != transform) {\n      this.rendered.transform_ = transform;\n      style.transform = transform;\n    }\n  }\n\n  /**\n   * returns the options this Overlay has been created with\n   * @return {Options} overlay options\n   */\n  getOptions() {\n    return this.options;\n  }\n}\n\nexport default Overlay;\n","/**\n * @module ol/TileRange\n */\n\n/**\n * A representation of a contiguous block of tiles.  A tile range is specified\n * by its min/max tile coordinates and is inclusive of coordinates.\n */\nclass TileRange {\n  /**\n   * @param {number} minX Minimum X.\n   * @param {number} maxX Maximum X.\n   * @param {number} minY Minimum Y.\n   * @param {number} maxY Maximum Y.\n   */\n  constructor(minX, maxX, minY, maxY) {\n    /**\n     * @type {number}\n     */\n    this.minX = minX;\n\n    /**\n     * @type {number}\n     */\n    this.maxX = maxX;\n\n    /**\n     * @type {number}\n     */\n    this.minY = minY;\n\n    /**\n     * @type {number}\n     */\n    this.maxY = maxY;\n  }\n\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {boolean} Contains tile coordinate.\n   */\n  contains(tileCoord) {\n    return this.containsXY(tileCoord[1], tileCoord[2]);\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Contains.\n   */\n  containsTileRange(tileRange) {\n    return (\n      this.minX <= tileRange.minX &&\n      tileRange.maxX <= this.maxX &&\n      this.minY <= tileRange.minY &&\n      tileRange.maxY <= this.maxY\n    );\n  }\n\n  /**\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @return {boolean} Contains coordinate.\n   */\n  containsXY(x, y) {\n    return this.minX <= x && x <= this.maxX && this.minY <= y && y <= this.maxY;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Equals.\n   */\n  equals(tileRange) {\n    return (\n      this.minX == tileRange.minX &&\n      this.minY == tileRange.minY &&\n      this.maxX == tileRange.maxX &&\n      this.maxY == tileRange.maxY\n    );\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   */\n  extend(tileRange) {\n    if (tileRange.minX < this.minX) {\n      this.minX = tileRange.minX;\n    }\n    if (tileRange.maxX > this.maxX) {\n      this.maxX = tileRange.maxX;\n    }\n    if (tileRange.minY < this.minY) {\n      this.minY = tileRange.minY;\n    }\n    if (tileRange.maxY > this.maxY) {\n      this.maxY = tileRange.maxY;\n    }\n  }\n\n  /**\n   * @return {number} Height.\n   */\n  getHeight() {\n    return this.maxY - this.minY + 1;\n  }\n\n  /**\n   * @return {import(\"./size.js\").Size} Size.\n   */\n  getSize() {\n    return [this.getWidth(), this.getHeight()];\n  }\n\n  /**\n   * @return {number} Width.\n   */\n  getWidth() {\n    return this.maxX - this.minX + 1;\n  }\n\n  /**\n   * @param {TileRange} tileRange Tile range.\n   * @return {boolean} Intersects.\n   */\n  intersects(tileRange) {\n    return (\n      this.minX <= tileRange.maxX &&\n      this.maxX >= tileRange.minX &&\n      this.minY <= tileRange.maxY &&\n      this.maxY >= tileRange.minY\n    );\n  }\n}\n\n/**\n * @param {number} minX Minimum X.\n * @param {number} maxX Maximum X.\n * @param {number} minY Minimum Y.\n * @param {number} maxY Maximum Y.\n * @param {TileRange} [tileRange] TileRange.\n * @return {TileRange} Tile range.\n */\nexport function createOrUpdate(minX, maxX, minY, maxY, tileRange) {\n  if (tileRange !== undefined) {\n    tileRange.minX = minX;\n    tileRange.maxX = maxX;\n    tileRange.minY = minY;\n    tileRange.maxY = maxY;\n    return tileRange;\n  }\n  return new TileRange(minX, maxX, minY, maxY);\n}\n\nexport default TileRange;\n","/**\n * @module ol/tilecoord\n */\n\n/**\n * An array of three numbers representing the location of a tile in a tile\n * grid. The order is `z` (zoom level), `x` (column), and `y` (row).\n * @typedef {Array<number>} TileCoord\n * @api\n */\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @param {TileCoord} [tileCoord] Tile coordinate.\n * @return {TileCoord} Tile coordinate.\n */\nexport function createOrUpdate(z, x, y, tileCoord) {\n  if (tileCoord !== undefined) {\n    tileCoord[0] = z;\n    tileCoord[1] = x;\n    tileCoord[2] = y;\n    return tileCoord;\n  }\n  return [z, x, y];\n}\n\n/**\n * @param {number} z Z.\n * @param {number} x X.\n * @param {number} y Y.\n * @return {string} Key.\n */\nexport function getKeyZXY(z, x, y) {\n  return z + '/' + x + '/' + y;\n}\n\n/**\n * Get the key for a tile coord.\n * @param {TileCoord} tileCoord The tile coord.\n * @return {string} Key.\n */\nexport function getKey(tileCoord) {\n  return getKeyZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * Get the tile cache key for a tile key obtained through `tile.getKey()`.\n * @param {string} tileKey The tile key.\n * @return {string} The cache key.\n */\nexport function getCacheKeyForTileKey(tileKey) {\n  const [z, x, y] = tileKey\n    .substring(tileKey.lastIndexOf('/') + 1, tileKey.length)\n    .split(',')\n    .map(Number);\n  return getKeyZXY(z, x, y);\n}\n\n/**\n * Get a tile coord given a key.\n * @param {string} key The tile coord key.\n * @return {TileCoord} The tile coord.\n */\nexport function fromKey(key) {\n  return key.split('/').map(Number);\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coord.\n * @return {number} Hash.\n */\nexport function hash(tileCoord) {\n  return hashZXY(tileCoord[0], tileCoord[1], tileCoord[2]);\n}\n\n/**\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {number} Hash.\n */\nexport function hashZXY(z, x, y) {\n  return (x << z) + y;\n}\n\n/**\n * @param {TileCoord} tileCoord Tile coordinate.\n * @param {!import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {boolean} Tile coordinate is within extent and zoom level range.\n */\nexport function withinExtentAndZ(tileCoord, tileGrid) {\n  const z = tileCoord[0];\n  const x = tileCoord[1];\n  const y = tileCoord[2];\n\n  if (tileGrid.getMinZoom() > z || z > tileGrid.getMaxZoom()) {\n    return false;\n  }\n  const tileRange = tileGrid.getFullTileRange(z);\n  if (!tileRange) {\n    return true;\n  }\n  return tileRange.containsXY(x, y);\n}\n","/**\n * @module ol/tilegrid/TileGrid\n */\nimport TileRange, {\n  createOrUpdate as createOrUpdateTileRange,\n} from '../TileRange.js';\nimport {isSorted, linearFindNearest} from '../array.js';\nimport {assert} from '../asserts.js';\nimport {createOrUpdate, getTopLeft} from '../extent.js';\nimport {intersectsLinearRing} from '../geom/flat/intersectsextent.js';\nimport {ceil, clamp, floor} from '../math.js';\nimport {toSize} from '../size.js';\nimport {createOrUpdate as createOrUpdateTileCoord} from '../tilecoord.js';\nimport {DEFAULT_TILE_SIZE} from './common.js';\n\n/**\n * @private\n * @type {import(\"../tilecoord.js\").TileCoord}\n */\nconst tmpTileCoord = [0, 0, 0];\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nconst DECIMALS = 5;\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles outside this\n * extent will be requested by {@link module:ol/source/Tile~TileSource} sources. When no `origin` or\n * `origins` are configured, the `origin` will be set to the top-left corner of the extent.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e. where the `x`\n * and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left to right and downwards. If not\n * specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins, i.e. where\n * the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * origin. Tile coordinates increase left to right and downwards. If not specified, `extent` or\n * `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each resolution needs\n * to match the zoom level. This means that even if a `minZoom` is configured, the resolutions\n * array will have a length of `maxZoom + 1`.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. If specified the values\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent\n * for which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * Default is `[256, 256]`.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. If given, the array length\n * should match the length of the `resolutions` array, i.e. each resolution can have a different\n * tile size.\n */\n\n/**\n * @classdesc\n * Base class for setting the grid pattern for sources accessing tiled-image\n * servers.\n * @api\n */\nclass TileGrid {\n  /**\n   * @param {Options} options Tile grid options.\n   */\n  constructor(options) {\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.minZoom = options.minZoom !== undefined ? options.minZoom : 0;\n\n    /**\n     * @private\n     * @type {!Array<number>}\n     */\n    this.resolutions_ = options.resolutions;\n    assert(\n      isSorted(\n        this.resolutions_,\n        /**\n         * @param {number} a First resolution\n         * @param {number} b Second resolution\n         * @return {number} Comparison result\n         */\n        (a, b) => b - a,\n        true,\n      ),\n      '`resolutions` must be sorted in descending order',\n    );\n\n    // check if we've got a consistent zoom factor and origin\n    let zoomFactor;\n    if (!options.origins) {\n      for (let i = 0, ii = this.resolutions_.length - 1; i < ii; ++i) {\n        if (!zoomFactor) {\n          zoomFactor = this.resolutions_[i] / this.resolutions_[i + 1];\n        } else {\n          if (this.resolutions_[i] / this.resolutions_[i + 1] !== zoomFactor) {\n            zoomFactor = undefined;\n            break;\n          }\n        }\n      }\n    }\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.zoomFactor_ = zoomFactor;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxZoom = this.resolutions_.length - 1;\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.origin_ = options.origin !== undefined ? options.origin : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../coordinate.js\").Coordinate>}\n     */\n    this.origins_ = null;\n    if (options.origins !== undefined) {\n      this.origins_ = options.origins;\n      assert(\n        this.origins_.length == this.resolutions_.length,\n        'Number of `origins` and `resolutions` must be equal',\n      );\n    }\n\n    const extent = options.extent;\n\n    if (extent !== undefined && !this.origin_ && !this.origins_) {\n      this.origin_ = getTopLeft(extent);\n    }\n\n    assert(\n      (!this.origin_ && this.origins_) || (this.origin_ && !this.origins_),\n      'Either `origin` or `origins` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {Array<number|import(\"../size.js\").Size>}\n     */\n    this.tileSizes_ = null;\n    if (options.tileSizes !== undefined) {\n      this.tileSizes_ = options.tileSizes;\n      assert(\n        this.tileSizes_.length == this.resolutions_.length,\n        'Number of `tileSizes` and `resolutions` must be equal',\n      );\n    }\n\n    /**\n     * @private\n     * @type {number|import(\"../size.js\").Size}\n     */\n    this.tileSize_ =\n      options.tileSize !== undefined\n        ? options.tileSize\n        : !this.tileSizes_\n          ? DEFAULT_TILE_SIZE\n          : null;\n    assert(\n      (!this.tileSize_ && this.tileSizes_) ||\n        (this.tileSize_ && !this.tileSizes_),\n      'Either `tileSize` or `tileSizes` must be configured, never both',\n    );\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.extent_ = extent !== undefined ? extent : null;\n\n    /**\n     * @private\n     * @type {Array<import(\"../TileRange.js\").default>}\n     */\n    this.fullTileRanges_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = [0, 0, 0, 0];\n\n    if (options.sizes !== undefined) {\n      this.fullTileRanges_ = options.sizes.map((size, z) => {\n        const tileRange = new TileRange(\n          Math.min(0, size[0]),\n          Math.max(size[0] - 1, -1),\n          Math.min(0, size[1]),\n          Math.max(size[1] - 1, -1),\n        );\n        if (extent) {\n          const restrictedTileRange = this.getTileRangeForExtentAndZ(extent, z);\n          tileRange.minX = Math.max(restrictedTileRange.minX, tileRange.minX);\n          tileRange.maxX = Math.min(restrictedTileRange.maxX, tileRange.maxX);\n          tileRange.minY = Math.max(restrictedTileRange.minY, tileRange.minY);\n          tileRange.maxY = Math.min(restrictedTileRange.maxY, tileRange.maxY);\n        }\n        return tileRange;\n      });\n    } else if (extent) {\n      this.calculateTileRanges_(extent);\n    }\n  }\n\n  /**\n   * Call a function with each tile coordinate for a given extent and zoom level.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} zoom Integer zoom level.\n   * @param {function(import(\"../tilecoord.js\").TileCoord): void} callback Function called with each tile coordinate.\n   * @api\n   */\n  forEachTileCoord(extent, zoom, callback) {\n    const tileRange = this.getTileRangeForExtentAndZ(extent, zoom);\n    for (let i = tileRange.minX, ii = tileRange.maxX; i <= ii; ++i) {\n      for (let j = tileRange.minY, jj = tileRange.maxY; j <= jj; ++j) {\n        callback([zoom, i, j]);\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {function(number, import(\"../TileRange.js\").default): boolean} callback Callback.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {boolean} Callback succeeded.\n   */\n  forEachTileCoordParentTileRange(\n    tileCoord,\n    callback,\n    tempTileRange,\n    tempExtent,\n  ) {\n    let tileRange, x, y;\n    let tileCoordExtent = null;\n    let z = tileCoord[0] - 1;\n    if (this.zoomFactor_ === 2) {\n      x = tileCoord[1];\n      y = tileCoord[2];\n    } else {\n      tileCoordExtent = this.getTileCoordExtent(tileCoord, tempExtent);\n    }\n    while (z >= this.minZoom) {\n      if (x !== undefined && y !== undefined) {\n        x = Math.floor(x / 2);\n        y = Math.floor(y / 2);\n        tileRange = createOrUpdateTileRange(x, x, y, y, tempTileRange);\n      } else {\n        tileRange = this.getTileRangeForExtentAndZ(\n          tileCoordExtent,\n          z,\n          tempTileRange,\n        );\n      }\n      if (callback(z, tileRange)) {\n        return true;\n      }\n      --z;\n    }\n    return false;\n  }\n\n  /**\n   * Get the extent for this tile grid, if it was configured.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    return this.extent_;\n  }\n\n  /**\n   * Get the maximum zoom level for the grid.\n   * @return {number} Max zoom.\n   * @api\n   */\n  getMaxZoom() {\n    return this.maxZoom;\n  }\n\n  /**\n   * Get the minimum zoom level for the grid.\n   * @return {number} Min zoom.\n   * @api\n   */\n  getMinZoom() {\n    return this.minZoom;\n  }\n\n  /**\n   * Get the origin for the grid at the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {import(\"../coordinate.js\").Coordinate} Origin.\n   * @api\n   */\n  getOrigin(z) {\n    if (this.origin_) {\n      return this.origin_;\n    }\n    return this.origins_[z];\n  }\n\n  /**\n   * Get the resolution for the given zoom level.\n   * @param {number} z Integer zoom level.\n   * @return {number} Resolution.\n   * @api\n   */\n  getResolution(z) {\n    return this.resolutions_[z];\n  }\n\n  /**\n   * Get the list of resolutions for the tile grid.\n   * @return {Array<number>} Resolutions.\n   * @api\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary import(\"../extent.js\").Extent object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileCoordChildTileRange(tileCoord, tempTileRange, tempExtent) {\n    if (tileCoord[0] < this.maxZoom) {\n      if (this.zoomFactor_ === 2) {\n        const minX = tileCoord[1] * 2;\n        const minY = tileCoord[2] * 2;\n        return createOrUpdateTileRange(\n          minX,\n          minX + 1,\n          minY,\n          minY + 1,\n          tempTileRange,\n        );\n      }\n      const tileCoordExtent = this.getTileCoordExtent(\n        tileCoord,\n        tempExtent || this.tmpExtent_,\n      );\n      return this.getTileRangeForExtentAndZ(\n        tileCoordExtent,\n        tileCoord[0] + 1,\n        tempTileRange,\n      );\n    }\n    return null;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary import(\"../TileRange.js\").default object.\n   * @return {import(\"../TileRange.js\").default|null} Tile range.\n   */\n  getTileRangeForTileCoordAndZ(tileCoord, z, tempTileRange) {\n    if (z > this.maxZoom || z < this.minZoom) {\n      return null;\n    }\n\n    const tileCoordZ = tileCoord[0];\n    const tileCoordX = tileCoord[1];\n    const tileCoordY = tileCoord[2];\n\n    if (z === tileCoordZ) {\n      return createOrUpdateTileRange(\n        tileCoordX,\n        tileCoordY,\n        tileCoordX,\n        tileCoordY,\n        tempTileRange,\n      );\n    }\n\n    if (this.zoomFactor_) {\n      const factor = Math.pow(this.zoomFactor_, z - tileCoordZ);\n      const minX = Math.floor(tileCoordX * factor);\n      const minY = Math.floor(tileCoordY * factor);\n      if (z < tileCoordZ) {\n        return createOrUpdateTileRange(minX, minX, minY, minY, tempTileRange);\n      }\n\n      const maxX = Math.floor(factor * (tileCoordX + 1)) - 1;\n      const maxY = Math.floor(factor * (tileCoordY + 1)) - 1;\n      return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n    }\n\n    const tileCoordExtent = this.getTileCoordExtent(tileCoord, this.tmpExtent_);\n    return this.getTileRangeForExtentAndZ(tileCoordExtent, z, tempTileRange);\n  }\n\n  /**\n   * Get a tile range for the given extent and integer zoom level.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} z Integer zoom level.\n   * @param {import(\"../TileRange.js\").default} [tempTileRange] Temporary tile range object.\n   * @return {import(\"../TileRange.js\").default} Tile range.\n   */\n  getTileRangeForExtentAndZ(extent, z, tempTileRange) {\n    this.getTileCoordForXYAndZ_(extent[0], extent[3], z, false, tmpTileCoord);\n    const minX = tmpTileCoord[1];\n    const minY = tmpTileCoord[2];\n    this.getTileCoordForXYAndZ_(extent[2], extent[1], z, true, tmpTileCoord);\n    const maxX = tmpTileCoord[1];\n    const maxY = tmpTileCoord[2];\n    return createOrUpdateTileRange(minX, maxX, minY, maxY, tempTileRange);\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {import(\"../coordinate.js\").Coordinate} Tile center.\n   */\n  getTileCoordCenter(tileCoord) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    return [\n      origin[0] + (tileCoord[1] + 0.5) * tileSize[0] * resolution,\n      origin[1] - (tileCoord[2] + 0.5) * tileSize[1] * resolution,\n    ];\n  }\n\n  /**\n   * Get the extent of a tile coordinate.\n   *\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} [tempExtent] Temporary extent object.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getTileCoordExtent(tileCoord, tempExtent) {\n    const origin = this.getOrigin(tileCoord[0]);\n    const resolution = this.getResolution(tileCoord[0]);\n    const tileSize = toSize(this.getTileSize(tileCoord[0]), this.tmpSize_);\n    const minX = origin[0] + tileCoord[1] * tileSize[0] * resolution;\n    const minY = origin[1] - (tileCoord[2] + 1) * tileSize[1] * resolution;\n    const maxX = minX + tileSize[0] * resolution;\n    const maxY = minY + tileSize[1] * resolution;\n    return createOrUpdate(minX, minY, maxX, maxY, tempExtent);\n  }\n\n  /**\n   * Get the tile coordinate for the given map coordinate and resolution.  This\n   * method considers that coordinates that intersect tile boundaries should be\n   * assigned the higher tile coordinate.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndResolution(coordinate, resolution, opt_tileCoord) {\n    return this.getTileCoordForXYAndResolution_(\n      coordinate[0],\n      coordinate[1],\n      resolution,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * Note that this method should not be called for resolutions that correspond\n   * to an integer zoom level.  Instead call the `getTileCoordForXYAndZ_` method.\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {number} resolution Resolution (for a non-integer zoom level).\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndResolution_(\n    x,\n    y,\n    resolution,\n    reverseIntersectionPolicy,\n    opt_tileCoord,\n  ) {\n    const z = this.getZForResolution(resolution);\n    const scale = resolution / this.getResolution(z);\n    const origin = this.getOrigin(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (scale * (x - origin[0])) / resolution / tileSize[0];\n    let tileCoordY = (scale * (origin[1] - y)) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Although there is repetition between this method and `getTileCoordForXYAndResolution_`,\n   * they should have separate implementations.  This method is for integer zoom\n   * levels.  The other method should only be called for resolutions corresponding\n   * to non-integer zoom levels.\n   * @param {number} x Map x coordinate.\n   * @param {number} y Map y coordinate.\n   * @param {number} z Integer zoom level.\n   * @param {boolean} reverseIntersectionPolicy Instead of letting edge\n   *     intersections go to the higher tile coordinate, let edge intersections\n   *     go to the lower tile coordinate.\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Temporary import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @private\n   */\n  getTileCoordForXYAndZ_(x, y, z, reverseIntersectionPolicy, opt_tileCoord) {\n    const origin = this.getOrigin(z);\n    const resolution = this.getResolution(z);\n    const tileSize = toSize(this.getTileSize(z), this.tmpSize_);\n\n    let tileCoordX = (x - origin[0]) / resolution / tileSize[0];\n    let tileCoordY = (origin[1] - y) / resolution / tileSize[1];\n\n    if (reverseIntersectionPolicy) {\n      tileCoordX = ceil(tileCoordX, DECIMALS) - 1;\n      tileCoordY = ceil(tileCoordY, DECIMALS) - 1;\n    } else {\n      tileCoordX = floor(tileCoordX, DECIMALS);\n      tileCoordY = floor(tileCoordY, DECIMALS);\n    }\n\n    return createOrUpdateTileCoord(z, tileCoordX, tileCoordY, opt_tileCoord);\n  }\n\n  /**\n   * Get a tile coordinate given a map coordinate and zoom level.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} z Integer zoom level, e.g. the result of a `getZForResolution()` method call\n   * @param {import(\"../tilecoord.js\").TileCoord} [opt_tileCoord] Destination import(\"../tilecoord.js\").TileCoord object.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate.\n   * @api\n   */\n  getTileCoordForCoordAndZ(coordinate, z, opt_tileCoord) {\n    return this.getTileCoordForXYAndZ_(\n      coordinate[0],\n      coordinate[1],\n      z,\n      false,\n      opt_tileCoord,\n    );\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @return {number} Tile resolution.\n   */\n  getTileCoordResolution(tileCoord) {\n    return this.resolutions_[tileCoord[0]];\n  }\n\n  /**\n   * Get the tile size for a zoom level. The type of the return value matches the\n   * `tileSize` or `tileSizes` that the tile grid was configured with. To always\n   * get an {@link import(\"../size.js\").Size}, run the result through {@link module:ol/size.toSize}.\n   * @param {number} z Z.\n   * @return {number|import(\"../size.js\").Size} Tile size.\n   * @api\n   */\n  getTileSize(z) {\n    if (this.tileSize_) {\n      return this.tileSize_;\n    }\n    return this.tileSizes_[z];\n  }\n\n  /**\n   * @param {number} z Zoom level.\n   * @return {import(\"../TileRange.js\").default|null} Extent tile range for the specified zoom level.\n   */\n  getFullTileRange(z) {\n    if (!this.fullTileRanges_) {\n      return this.extent_\n        ? this.getTileRangeForExtentAndZ(this.extent_, z)\n        : null;\n    }\n    return this.fullTileRanges_[z];\n  }\n\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number|import(\"../array.js\").NearestDirectionFunction} [opt_direction]\n   *     If 0, the nearest resolution will be used.\n   *     If 1, the nearest higher resolution (lower Z) will be used. If -1, the\n   *     nearest lower resolution (higher Z) will be used. Default is 0.\n   *     Use a {@link module:ol/array~NearestDirectionFunction} for more precise control.\n   *\n   * For example to change tile Z at the midpoint of zoom levels\n   * ```js\n   * function(value, high, low) {\n   *   return value - low * Math.sqrt(high / low);\n   * }\n   * ```\n   * @return {number} Z.\n   * @api\n   */\n  getZForResolution(resolution, opt_direction) {\n    const z = linearFindNearest(\n      this.resolutions_,\n      resolution,\n      opt_direction || 0,\n    );\n    return clamp(z, this.minZoom, this.maxZoom);\n  }\n\n  /**\n   * The tile with the provided tile coordinate intersects the given viewport.\n   * @param {import('../tilecoord.js').TileCoord} tileCoord Tile coordinate.\n   * @param {Array<number>} viewport Viewport as returned from {@link module:ol/extent.getRotatedViewport}.\n   * @return {boolean} The tile with the provided tile coordinate intersects the given viewport.\n   */\n  tileCoordIntersectsViewport(tileCoord, viewport) {\n    return intersectsLinearRing(\n      viewport,\n      0,\n      viewport.length,\n      2,\n      this.getTileCoordExtent(tileCoord),\n    );\n  }\n\n  /**\n   * @param {!import(\"../extent.js\").Extent} extent Extent for this tile grid.\n   * @private\n   */\n  calculateTileRanges_(extent) {\n    const length = this.resolutions_.length;\n    const fullTileRanges = new Array(length);\n    for (let z = this.minZoom; z < length; ++z) {\n      fullTileRanges[z] = this.getTileRangeForExtentAndZ(extent, z);\n    }\n    this.fullTileRanges_ = fullTileRanges;\n  }\n}\n\nexport default TileGrid;\n","/**\n * @module ol/geom/flat/interpolate\n */\nimport {binarySearch} from '../../array.js';\nimport {lerp} from '../../math.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} fraction Fraction.\n * @param {Array<number>} [dest] Destination.\n * @param {number} [dimension] Destination dimension (default is `2`)\n * @return {Array<number>} Destination.\n */\nexport function interpolatePoint(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  fraction,\n  dest,\n  dimension,\n) {\n  let o, t;\n  const n = (end - offset) / stride;\n  if (n === 1) {\n    o = offset;\n  } else if (n === 2) {\n    o = offset;\n    t = fraction;\n  } else if (n !== 0) {\n    let x1 = flatCoordinates[offset];\n    let y1 = flatCoordinates[offset + 1];\n    let length = 0;\n    const cumulativeLengths = [0];\n    for (let i = offset + stride; i < end; i += stride) {\n      const x2 = flatCoordinates[i];\n      const y2 = flatCoordinates[i + 1];\n      length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n      cumulativeLengths.push(length);\n      x1 = x2;\n      y1 = y2;\n    }\n    const target = fraction * length;\n    const index = binarySearch(cumulativeLengths, target);\n    if (index < 0) {\n      t =\n        (target - cumulativeLengths[-index - 2]) /\n        (cumulativeLengths[-index - 1] - cumulativeLengths[-index - 2]);\n      o = offset + (-index - 2) * stride;\n    } else {\n      o = offset + index * stride;\n    }\n  }\n  dimension = dimension > 1 ? dimension : 2;\n  dest = dest ? dest : new Array(dimension);\n  for (let i = 0; i < dimension; ++i) {\n    dest[i] =\n      o === undefined\n        ? NaN\n        : t === undefined\n          ? flatCoordinates[o + i]\n          : lerp(flatCoordinates[o + i], flatCoordinates[o + stride + i], t);\n  }\n  return dest;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringCoordinateAtM(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  m,\n  extrapolate,\n) {\n  if (end == offset) {\n    return null;\n  }\n  let coordinate;\n  if (m < flatCoordinates[offset + stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(offset, offset + stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[end - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(end - stride, end);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  // FIXME use O(1) search\n  if (m == flatCoordinates[offset + stride - 1]) {\n    return flatCoordinates.slice(offset, offset + stride);\n  }\n  let lo = offset / stride;\n  let hi = end / stride;\n  while (lo < hi) {\n    const mid = (lo + hi) >> 1;\n    if (m < flatCoordinates[(mid + 1) * stride - 1]) {\n      hi = mid;\n    } else {\n      lo = mid + 1;\n    }\n  }\n  const m0 = flatCoordinates[lo * stride - 1];\n  if (m == m0) {\n    return flatCoordinates.slice((lo - 1) * stride, (lo - 1) * stride + stride);\n  }\n  const m1 = flatCoordinates[(lo + 1) * stride - 1];\n  const t = (m - m0) / (m1 - m0);\n  coordinate = [];\n  for (let i = 0; i < stride - 1; ++i) {\n    coordinate.push(\n      lerp(\n        flatCoordinates[(lo - 1) * stride + i],\n        flatCoordinates[lo * stride + i],\n        t,\n      ),\n    );\n  }\n  coordinate.push(m);\n  return coordinate;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<number>} ends Ends.\n * @param {number} stride Stride.\n * @param {number} m M.\n * @param {boolean} extrapolate Extrapolate.\n * @param {boolean} interpolate Interpolate.\n * @return {import(\"../../coordinate.js\").Coordinate|null} Coordinate.\n */\nexport function lineStringsCoordinateAtM(\n  flatCoordinates,\n  offset,\n  ends,\n  stride,\n  m,\n  extrapolate,\n  interpolate,\n) {\n  if (interpolate) {\n    return lineStringCoordinateAtM(\n      flatCoordinates,\n      offset,\n      ends[ends.length - 1],\n      stride,\n      m,\n      extrapolate,\n    );\n  }\n  let coordinate;\n  if (m < flatCoordinates[stride - 1]) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(0, stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  if (flatCoordinates[flatCoordinates.length - 1] < m) {\n    if (extrapolate) {\n      coordinate = flatCoordinates.slice(flatCoordinates.length - stride);\n      coordinate[stride - 1] = m;\n      return coordinate;\n    }\n    return null;\n  }\n  for (let i = 0, ii = ends.length; i < ii; ++i) {\n    const end = ends[i];\n    if (offset == end) {\n      continue;\n    }\n    if (m < flatCoordinates[offset + stride - 1]) {\n      return null;\n    }\n    if (m <= flatCoordinates[end - 1]) {\n      return lineStringCoordinateAtM(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        m,\n        false,\n      );\n    }\n    offset = end;\n  }\n  return null;\n}\n","/**\n * @module ol/geom/flat/length\n */\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Length.\n */\nexport function lineStringLength(flatCoordinates, offset, end, stride) {\n  let x1 = flatCoordinates[offset];\n  let y1 = flatCoordinates[offset + 1];\n  let length = 0;\n  for (let i = offset + stride; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    length += Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n    x1 = x2;\n    y1 = y2;\n  }\n  return length;\n}\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {number} Perimeter.\n */\nexport function linearRingLength(flatCoordinates, offset, end, stride) {\n  let perimeter = lineStringLength(flatCoordinates, offset, end, stride);\n  const dx = flatCoordinates[end - stride] - flatCoordinates[offset];\n  const dy = flatCoordinates[end - stride + 1] - flatCoordinates[offset + 1];\n  perimeter += Math.sqrt(dx * dx + dy * dy);\n  return perimeter;\n}\n","/**\n * @module ol/geom/LineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {assignClosestPoint, maxSquaredDelta} from './flat/closest.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\nimport {interpolatePoint, lineStringCoordinateAtM} from './flat/interpolate.js';\nimport {intersectsLineString} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {forEach as forEachSegment} from './flat/segments.js';\nimport {douglasPeucker} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Linestring geometry.\n *\n * @api\n */\nclass LineString extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n\n    /**\n     * @private\n     * @type {import(\"../coordinate.js\").Coordinate|null}\n     */\n    this.flatMidpoint_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatMidpointRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (layout !== undefined && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed coordinate to the coordinates of the linestring.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @api\n   */\n  appendCoordinate(coordinate) {\n    extend(this.flatCoordinates, coordinate);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!LineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const lineString = new LineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    lineString.applyProperties(this);\n    return lineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        maxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.flatCoordinates.length,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestPoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Iterate over each segment, calling the provided callback.\n   * If the callback returns a truthy value the function returns that\n   * value immediately. Otherwise the function returns `false`.\n   *\n   * @param {function(this: S, import(\"../coordinate.js\").Coordinate, import(\"../coordinate.js\").Coordinate): T} callback Function\n   *     called for each segment. The function will receive two arguments, the start and end coordinates of the segment.\n   * @return {T|boolean} Value.\n   * @template T,S\n   * @api\n   */\n  forEachSegment(callback) {\n    return forEachSegment(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      callback,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate) {\n    if (this.layout != 'XYM' && this.layout != 'XYZM') {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    return lineStringCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      m,\n      extrapolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the linestring.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the coordinate at the provided fraction along the linestring.\n   * The `fraction` is a number between 0 and 1, where 0 is the start of the\n   * linestring and 1 is the end.\n   * @param {number} fraction Fraction.\n   * @param {import(\"../coordinate.js\").Coordinate} [dest] Optional coordinate whose values will\n   *     be modified. If not provided, a new coordinate will be returned.\n   * @return {import(\"../coordinate.js\").Coordinate} Coordinate of the interpolated point.\n   * @api\n   */\n  getCoordinateAt(fraction, dest) {\n    return interpolatePoint(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      fraction,\n      dest,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the length of the linestring on projected plane.\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    return lineStringLength(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (this.flatMidpointRevision_ != this.getRevision()) {\n      this.flatMidpoint_ = this.getCoordinateAt(\n        0.5,\n        this.flatMidpoint_ ?? undefined,\n      );\n      this.flatMidpointRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatMidpoint_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {LineString} Simplified LineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    simplifiedFlatCoordinates.length = douglasPeucker(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n    );\n    return new LineString(simplifiedFlatCoordinates, 'XY');\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'LineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineString(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n      extent,\n      this.getExtent(),\n    );\n  }\n\n  /**\n   * Set the coordinates of the linestring.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default LineString;\n","/**\n * @module ol/geom/MultiLineString\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport LineString from './LineString.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {arrayMaxSquaredDelta, assignClosestArrayPoint} from './flat/closest.js';\nimport {deflateCoordinatesArray} from './flat/deflate.js';\nimport {inflateCoordinatesArray} from './flat/inflate.js';\nimport {\n  interpolatePoint,\n  lineStringsCoordinateAtM,\n} from './flat/interpolate.js';\nimport {intersectsLineStringArray} from './flat/intersectsextent.js';\nimport {lineStringLength} from './flat/length.js';\nimport {douglasPeuckerArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-linestring geometry.\n *\n * @api\n */\nclass MultiLineString extends SimpleGeometry {\n  /**\n   * @param {Array<Array<import(\"../coordinate.js\").Coordinate>|LineString>|Array<number>} coordinates\n   *     Coordinates or LineString geometries. (For internal use, flat coordinates in\n   *     combination with `layout` and `ends` are also accepted.)\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<number>} [ends] Flat coordinate ends for internal use.\n   */\n  constructor(coordinates, layout, ends) {\n    super();\n\n    /**\n     * @type {Array<number>}\n     * @private\n     */\n    this.ends_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    if (Array.isArray(coordinates[0])) {\n      this.setCoordinates(\n        /** @type {Array<Array<import(\"../coordinate.js\").Coordinate>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    } else if (layout !== undefined && ends) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.ends_ = ends;\n    } else {\n      const lineStrings = /** @type {Array<LineString>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const ends = [];\n      for (let i = 0, ii = lineStrings.length; i < ii; ++i) {\n        const lineString = lineStrings[i];\n        extend(flatCoordinates, lineString.getFlatCoordinates());\n        ends.push(flatCoordinates.length);\n      }\n      const layout =\n        lineStrings.length === 0\n          ? this.getLayout()\n          : lineStrings[0].getLayout();\n      this.setFlatCoordinates(layout, flatCoordinates);\n      this.ends_ = ends;\n    }\n  }\n\n  /**\n   * Append the passed linestring to the multilinestring.\n   * @param {LineString} lineString LineString.\n   * @api\n   */\n  appendLineString(lineString) {\n    extend(this.flatCoordinates, lineString.getFlatCoordinates().slice());\n    this.ends_.push(this.flatCoordinates.length);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiLineString} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiLineString = new MultiLineString(\n      this.flatCoordinates.slice(),\n      this.layout,\n      this.ends_.slice(),\n    );\n    multiLineString.applyProperties(this);\n    return multiLineString;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        arrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.ends_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestArrayPoint(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      this.maxDelta_,\n      false,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * Returns the coordinate at `m` using linear interpolation, or `null` if no\n   * such coordinate exists.\n   *\n   * `extrapolate` controls extrapolation beyond the range of Ms in the\n   * MultiLineString. If `extrapolate` is `true` then Ms less than the first\n   * M will return the first coordinate and Ms greater than the last M will\n   * return the last coordinate.\n   *\n   * `interpolate` controls interpolation between consecutive LineStrings\n   * within the MultiLineString. If `interpolate` is `true` the coordinates\n   * will be linearly interpolated between the last coordinate of one LineString\n   * and the first coordinate of the next LineString.  If `interpolate` is\n   * `false` then the function will return `null` for Ms falling between\n   * LineStrings.\n   *\n   * @param {number} m M.\n   * @param {boolean} [extrapolate] Extrapolate. Default is `false`.\n   * @param {boolean} [interpolate] Interpolate. Default is `false`.\n   * @return {import(\"../coordinate.js\").Coordinate|null} Coordinate.\n   * @api\n   */\n  getCoordinateAtM(m, extrapolate, interpolate) {\n    if (\n      (this.layout != 'XYM' && this.layout != 'XYZM') ||\n      this.flatCoordinates.length === 0\n    ) {\n      return null;\n    }\n    extrapolate = extrapolate !== undefined ? extrapolate : false;\n    interpolate = interpolate !== undefined ? interpolate : false;\n    return lineStringsCoordinateAtM(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      m,\n      extrapolate,\n      interpolate,\n    );\n  }\n\n  /**\n   * Return the coordinates of the multilinestring.\n   * @return {Array<Array<import(\"../coordinate.js\").Coordinate>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<number>} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Return the linestring at the specified index.\n   * @param {number} index Index.\n   * @return {LineString} LineString.\n   * @api\n   */\n  getLineString(index) {\n    if (index < 0 || this.ends_.length <= index) {\n      return null;\n    }\n    return new LineString(\n      this.flatCoordinates.slice(\n        index === 0 ? 0 : this.ends_[index - 1],\n        this.ends_[index],\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the linestrings of this multilinestring.\n   * @return {Array<LineString>} LineStrings.\n   * @api\n   */\n  getLineStrings() {\n    const flatCoordinates = this.flatCoordinates;\n    const ends = this.ends_;\n    const layout = this.layout;\n    /** @type {Array<LineString>} */\n    const lineStrings = [];\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const lineString = new LineString(\n        flatCoordinates.slice(offset, end),\n        layout,\n      );\n      lineStrings.push(lineString);\n      offset = end;\n    }\n    return lineStrings;\n  }\n\n  /**\n   * Return the sum of all line string lengths\n   * @return {number} Length (on projected plane).\n   * @api\n   */\n  getLength() {\n    const ends = this.ends_;\n    let start = 0;\n    let length = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      length += lineStringLength(\n        this.flatCoordinates,\n        start,\n        ends[i],\n        this.stride,\n      );\n      start = ends[i];\n    }\n    return length;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    /** @type {Array<number>} */\n    const midpoints = [];\n    const flatCoordinates = this.flatCoordinates;\n    let offset = 0;\n    const ends = this.ends_;\n    const stride = this.stride;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const midpoint = interpolatePoint(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        0.5,\n      );\n      extend(midpoints, midpoint);\n      offset = end;\n    }\n    return midpoints;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiLineString} Simplified MultiLineString.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<number>} */\n    const simplifiedEnds = [];\n    simplifiedFlatCoordinates.length = douglasPeuckerArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      squaredTolerance,\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEnds,\n    );\n    return new MultiLineString(simplifiedFlatCoordinates, 'XY', simplifiedEnds);\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiLineString';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLineStringArray(\n      this.flatCoordinates,\n      0,\n      this.ends_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multilinestring.\n   * @param {!Array<Array<import(\"../coordinate.js\").Coordinate>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 2);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const ends = deflateCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.ends_,\n    );\n    this.flatCoordinates.length = ends.length === 0 ? 0 : ends[ends.length - 1];\n    this.changed();\n  }\n}\n\nexport default MultiLineString;\n","/**\n * @module ol/geom/MultiPoint\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY, containsXY} from '../extent.js';\nimport {squaredDistance as squaredDx} from '../math.js';\nimport Point from './Point.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {deflateCoordinates} from './flat/deflate.js';\nimport {inflateCoordinates} from './flat/inflate.js';\n\n/**\n * @classdesc\n * Multi-point geometry.\n *\n * @api\n */\nclass MultiPoint extends SimpleGeometry {\n  /**\n   * @param {Array<import(\"../coordinate.js\").Coordinate>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   */\n  constructor(coordinates, layout) {\n    super();\n    if (layout && !Array.isArray(coordinates[0])) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n    } else {\n      this.setCoordinates(\n        /** @type {Array<import(\"../coordinate.js\").Coordinate>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed point to this multipoint.\n   * @param {Point} point Point.\n   * @api\n   */\n  appendPoint(point) {\n    extend(this.flatCoordinates, point.getFlatCoordinates());\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPoint} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const multiPoint = new MultiPoint(\n      this.flatCoordinates.slice(),\n      this.layout,\n    );\n    multiPoint.applyProperties(this);\n    return multiPoint;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const squaredDistance = squaredDx(\n        x,\n        y,\n        flatCoordinates[i],\n        flatCoordinates[i + 1],\n      );\n      if (squaredDistance < minSquaredDistance) {\n        minSquaredDistance = squaredDistance;\n        for (let j = 0; j < stride; ++j) {\n          closestPoint[j] = flatCoordinates[i + j];\n        }\n        closestPoint.length = stride;\n      }\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * Return the coordinates of the multipoint.\n   * @return {Array<import(\"../coordinate.js\").Coordinate>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates() {\n    return inflateCoordinates(\n      this.flatCoordinates,\n      0,\n      this.flatCoordinates.length,\n      this.stride,\n    );\n  }\n\n  /**\n   * Return the point at the specified index.\n   * @param {number} index Index.\n   * @return {Point} Point.\n   * @api\n   */\n  getPoint(index) {\n    const n = this.flatCoordinates.length / this.stride;\n    if (index < 0 || n <= index) {\n      return null;\n    }\n    return new Point(\n      this.flatCoordinates.slice(\n        index * this.stride,\n        (index + 1) * this.stride,\n      ),\n      this.layout,\n    );\n  }\n\n  /**\n   * Return the points of this multipoint.\n   * @return {Array<Point>} Points.\n   * @api\n   */\n  getPoints() {\n    const flatCoordinates = this.flatCoordinates;\n    const layout = this.layout;\n    const stride = this.stride;\n    /** @type {Array<Point>} */\n    const points = [];\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const point = new Point(flatCoordinates.slice(i, i + stride), layout);\n      points.push(point);\n    }\n    return points;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPoint';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const flatCoordinates = this.flatCoordinates;\n    const stride = this.stride;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      const x = flatCoordinates[i];\n      const y = flatCoordinates[i + 1];\n      if (containsXY(extent, x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Set the coordinates of the multipoint.\n   * @param {!Array<import(\"../coordinate.js\").Coordinate>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 1);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    this.flatCoordinates.length = deflateCoordinates(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n    );\n    this.changed();\n  }\n}\n\nexport default MultiPoint;\n","/**\n * @module ol/geom/flat/center\n */\nimport {createEmpty, createOrUpdateFromFlatCoordinates} from '../../extent.js';\n\n/**\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {Array<Array<number>>} endss Endss.\n * @param {number} stride Stride.\n * @return {Array<number>} Flat centers.\n */\nexport function linearRingss(flatCoordinates, offset, endss, stride) {\n  const flatCenters = [];\n  let extent = createEmpty();\n  for (let i = 0, ii = endss.length; i < ii; ++i) {\n    const ends = endss[i];\n    extent = createOrUpdateFromFlatCoordinates(\n      flatCoordinates,\n      offset,\n      ends[0],\n      stride,\n    );\n    flatCenters.push((extent[0] + extent[2]) / 2, (extent[1] + extent[3]) / 2);\n    offset = ends[ends.length - 1];\n  }\n  return flatCenters;\n}\n","/**\n * @module ol/geom/MultiPolygon\n */\nimport {extend} from '../array.js';\nimport {closestSquaredDistanceXY} from '../extent.js';\nimport MultiPoint from './MultiPoint.js';\nimport Polygon from './Polygon.js';\nimport SimpleGeometry from './SimpleGeometry.js';\nimport {linearRingss as linearRingssArea} from './flat/area.js';\nimport {linearRingss as linearRingssCenter} from './flat/center.js';\nimport {\n  assignClosestMultiArrayPoint,\n  multiArrayMaxSquaredDelta,\n} from './flat/closest.js';\nimport {linearRingssContainsXY} from './flat/contains.js';\nimport {deflateMultiCoordinatesArray} from './flat/deflate.js';\nimport {inflateMultiCoordinatesArray} from './flat/inflate.js';\nimport {getInteriorPointsOfMultiArray} from './flat/interiorpoint.js';\nimport {intersectsLinearRingMultiArray} from './flat/intersectsextent.js';\nimport {\n  linearRingssAreOriented,\n  orientLinearRingsArray,\n} from './flat/orient.js';\nimport {quantizeMultiArray} from './flat/simplify.js';\n\n/**\n * @classdesc\n * Multi-polygon geometry.\n *\n * @api\n */\nclass MultiPolygon extends SimpleGeometry {\n  /**\n   * @param {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>|Polygon>|Array<number>} coordinates Coordinates.\n   *     For internal use, flat coordinates in combination with `layout` and `endss` are also accepted.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @param {Array<Array<number>>} [endss] Array of ends for internal use with flat coordinates.\n   */\n  constructor(coordinates, layout, endss) {\n    super();\n\n    /**\n     * @type {Array<Array<number>>}\n     * @private\n     */\n    this.endss_ = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.flatInteriorPointsRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDelta_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.maxDeltaRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.orientedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.orientedFlatCoordinates_ = null;\n\n    if (!endss && !Array.isArray(coordinates[0])) {\n      const polygons = /** @type {Array<Polygon>} */ (coordinates);\n      /** @type {Array<number>} */\n      const flatCoordinates = [];\n      const thisEndss = [];\n      for (let i = 0, ii = polygons.length; i < ii; ++i) {\n        const polygon = polygons[i];\n        const offset = flatCoordinates.length;\n        const ends = polygon.getEnds();\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] += offset;\n        }\n        extend(flatCoordinates, polygon.getFlatCoordinates());\n        thisEndss.push(ends);\n      }\n      layout =\n        polygons.length === 0 ? this.getLayout() : polygons[0].getLayout();\n      coordinates = flatCoordinates;\n      endss = thisEndss;\n    }\n    if (layout !== undefined && endss) {\n      this.setFlatCoordinates(\n        layout,\n        /** @type {Array<number>} */ (coordinates),\n      );\n      this.endss_ = endss;\n    } else {\n      this.setCoordinates(\n        /** @type {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} */ (\n          coordinates\n        ),\n        layout,\n      );\n    }\n  }\n\n  /**\n   * Append the passed polygon to this multipolygon.\n   * @param {Polygon} polygon Polygon.\n   * @api\n   */\n  appendPolygon(polygon) {\n    /** @type {Array<number>} */\n    let ends;\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = polygon.getFlatCoordinates().slice();\n      ends = polygon.getEnds().slice();\n      this.endss_.push();\n    } else {\n      const offset = this.flatCoordinates.length;\n      extend(this.flatCoordinates, polygon.getFlatCoordinates());\n      ends = polygon.getEnds().slice();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] += offset;\n      }\n    }\n    this.endss_.push(ends);\n    this.changed();\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!MultiPolygon} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const len = this.endss_.length;\n    const newEndss = new Array(len);\n    for (let i = 0; i < len; ++i) {\n      newEndss[i] = this.endss_[i].slice();\n    }\n\n    const multiPolygon = new MultiPolygon(\n      this.flatCoordinates.slice(),\n      this.layout,\n      newEndss,\n    );\n    multiPolygon.applyProperties(this);\n\n    return multiPolygon;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    if (this.maxDeltaRevision_ != this.getRevision()) {\n      this.maxDelta_ = Math.sqrt(\n        multiArrayMaxSquaredDelta(\n          this.flatCoordinates,\n          0,\n          this.endss_,\n          this.stride,\n          0,\n        ),\n      );\n      this.maxDeltaRevision_ = this.getRevision();\n    }\n    return assignClosestMultiArrayPoint(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      this.maxDelta_,\n      true,\n      x,\n      y,\n      closestPoint,\n      minSquaredDistance,\n    );\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    return linearRingssContainsXY(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      x,\n      y,\n    );\n  }\n\n  /**\n   * Return the area of the multipolygon on projected plane.\n   * @return {number} Area (on projected plane).\n   * @api\n   */\n  getArea() {\n    return linearRingssArea(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * Get the coordinate array for this geometry.  This array has the structure\n   * of a GeoJSON coordinate array for multi-polygons.\n   *\n   * @param {boolean} [right] Orient coordinates according to the right-hand\n   *     rule (counter-clockwise for exterior and clockwise for interior rings).\n   *     If `false`, coordinates will be oriented according to the left-hand rule\n   *     (clockwise for exterior and counter-clockwise for interior rings).\n   *     By default, coordinate orientation will depend on how the geometry was\n   *     constructed.\n   * @return {Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} Coordinates.\n   * @api\n   * @override\n   */\n  getCoordinates(right) {\n    let flatCoordinates;\n    if (right !== undefined) {\n      flatCoordinates = this.getOrientedFlatCoordinates().slice();\n      orientLinearRingsArray(\n        flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n        right,\n      );\n    } else {\n      flatCoordinates = this.flatCoordinates;\n    }\n\n    return inflateMultiCoordinatesArray(\n      flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n    );\n  }\n\n  /**\n   * @return {Array<Array<number>>} Endss.\n   */\n  getEndss() {\n    return this.endss_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (this.flatInteriorPointsRevision_ != this.getRevision()) {\n      const flatCenters = linearRingssCenter(\n        this.flatCoordinates,\n        0,\n        this.endss_,\n        this.stride,\n      );\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.getOrientedFlatCoordinates(),\n        0,\n        this.endss_,\n        this.stride,\n        flatCenters,\n      );\n      this.flatInteriorPointsRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.flatInteriorPoints_);\n  }\n\n  /**\n   * Return the interior points as {@link module:ol/geom/MultiPoint~MultiPoint multipoint}.\n   * @return {MultiPoint} Interior points as XYM coordinates, where M is\n   * the length of the horizontal intersection that the point belongs to.\n   * @api\n   */\n  getInteriorPoints() {\n    return new MultiPoint(this.getFlatInteriorPoints().slice(), 'XYM');\n  }\n\n  /**\n   * @return {Array<number>} Oriented flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    if (this.orientedRevision_ != this.getRevision()) {\n      const flatCoordinates = this.flatCoordinates;\n      if (\n        linearRingssAreOriented(flatCoordinates, 0, this.endss_, this.stride)\n      ) {\n        this.orientedFlatCoordinates_ = flatCoordinates;\n      } else {\n        this.orientedFlatCoordinates_ = flatCoordinates.slice();\n        this.orientedFlatCoordinates_.length = orientLinearRingsArray(\n          this.orientedFlatCoordinates_,\n          0,\n          this.endss_,\n          this.stride,\n        );\n      }\n      this.orientedRevision_ = this.getRevision();\n    }\n    return /** @type {Array<number>} */ (this.orientedFlatCoordinates_);\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {MultiPolygon} Simplified MultiPolygon.\n   * @protected\n   * @override\n   */\n  getSimplifiedGeometryInternal(squaredTolerance) {\n    /** @type {Array<number>} */\n    const simplifiedFlatCoordinates = [];\n    /** @type {Array<Array<number>>} */\n    const simplifiedEndss = [];\n    simplifiedFlatCoordinates.length = quantizeMultiArray(\n      this.flatCoordinates,\n      0,\n      this.endss_,\n      this.stride,\n      Math.sqrt(squaredTolerance),\n      simplifiedFlatCoordinates,\n      0,\n      simplifiedEndss,\n    );\n    return new MultiPolygon(simplifiedFlatCoordinates, 'XY', simplifiedEndss);\n  }\n\n  /**\n   * Return the polygon at the specified index.\n   * @param {number} index Index.\n   * @return {Polygon} Polygon.\n   * @api\n   */\n  getPolygon(index) {\n    if (index < 0 || this.endss_.length <= index) {\n      return null;\n    }\n    let offset;\n    if (index === 0) {\n      offset = 0;\n    } else {\n      const prevEnds = this.endss_[index - 1];\n      offset = prevEnds[prevEnds.length - 1];\n    }\n    const ends = this.endss_[index].slice();\n    const end = ends[ends.length - 1];\n    if (offset !== 0) {\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        ends[i] -= offset;\n      }\n    }\n    return new Polygon(\n      this.flatCoordinates.slice(offset, end),\n      this.layout,\n      ends,\n    );\n  }\n\n  /**\n   * Return the polygons of this multipolygon.\n   * @return {Array<Polygon>} Polygons.\n   * @api\n   */\n  getPolygons() {\n    const layout = this.layout;\n    const flatCoordinates = this.flatCoordinates;\n    const endss = this.endss_;\n    const polygons = [];\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      const ends = endss[i].slice();\n      const end = ends[ends.length - 1];\n      if (offset !== 0) {\n        for (let j = 0, jj = ends.length; j < jj; ++j) {\n          ends[j] -= offset;\n        }\n      }\n      const polygon = new Polygon(\n        flatCoordinates.slice(offset, end),\n        layout,\n        ends,\n      );\n      polygons.push(polygon);\n      offset = end;\n    }\n    return polygons;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'MultiPolygon';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    return intersectsLinearRingMultiArray(\n      this.getOrientedFlatCoordinates(),\n      0,\n      this.endss_,\n      this.stride,\n      extent,\n    );\n  }\n\n  /**\n   * Set the coordinates of the multipolygon.\n   * @param {!Array<Array<Array<import(\"../coordinate.js\").Coordinate>>>} coordinates Coordinates.\n   * @param {import(\"./Geometry.js\").GeometryLayout} [layout] Layout.\n   * @api\n   * @override\n   */\n  setCoordinates(coordinates, layout) {\n    this.setLayout(layout, coordinates, 3);\n    if (!this.flatCoordinates) {\n      this.flatCoordinates = [];\n    }\n    const endss = deflateMultiCoordinatesArray(\n      this.flatCoordinates,\n      0,\n      coordinates,\n      this.stride,\n      this.endss_,\n    );\n    if (endss.length === 0) {\n      this.flatCoordinates.length = 0;\n    } else {\n      const lastEnds = endss[endss.length - 1];\n      this.flatCoordinates.length =\n        lastEnds.length === 0 ? 0 : lastEnds[lastEnds.length - 1];\n    }\n    this.changed();\n  }\n}\n\nexport default MultiPolygon;\n","/**\n * @module ol/geom/GeometryCollection\n */\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  closestSquaredDistanceXY,\n  createOrUpdateEmpty,\n  extend,\n  getCenter,\n} from '../extent.js';\nimport Geometry from './Geometry.js';\n\n/**\n * @classdesc\n * An array of {@link module:ol/geom/Geometry~Geometry} objects.\n *\n * @api\n */\nclass GeometryCollection extends Geometry {\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  constructor(geometries) {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Geometry>}\n     */\n    this.geometries_ = geometries;\n\n    /**\n     * @private\n     * @type {Array<import(\"../events.js\").EventsKey>}\n     */\n    this.changeEventsKeys_ = [];\n\n    this.listenGeometriesChange_();\n  }\n\n  /**\n   * @private\n   */\n  unlistenGeometriesChange_() {\n    this.changeEventsKeys_.forEach(unlistenByKey);\n    this.changeEventsKeys_.length = 0;\n  }\n\n  /**\n   * @private\n   */\n  listenGeometriesChange_() {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.changeEventsKeys_.push(\n        listen(geometries[i], EventType.CHANGE, this.changed, this),\n      );\n    }\n  }\n\n  /**\n   * Make a complete copy of the geometry.\n   * @return {!GeometryCollection} Clone.\n   * @api\n   * @override\n   */\n  clone() {\n    const geometryCollection = new GeometryCollection(\n      cloneGeometries(this.geometries_),\n    );\n    geometryCollection.applyProperties(this);\n    return geometryCollection;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @param {import(\"../coordinate.js\").Coordinate} closestPoint Closest point.\n   * @param {number} minSquaredDistance Minimum squared distance.\n   * @return {number} Minimum squared distance.\n   * @override\n   */\n  closestPointXY(x, y, closestPoint, minSquaredDistance) {\n    if (minSquaredDistance < closestSquaredDistanceXY(this.getExtent(), x, y)) {\n      return minSquaredDistance;\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      minSquaredDistance = geometries[i].closestPointXY(\n        x,\n        y,\n        closestPoint,\n        minSquaredDistance,\n      );\n    }\n    return minSquaredDistance;\n  }\n\n  /**\n   * @param {number} x X.\n   * @param {number} y Y.\n   * @return {boolean} Contains (x, y).\n   * @override\n   */\n  containsXY(x, y) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].containsXY(x, y)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @protected\n   * @return {import(\"../extent.js\").Extent} extent Extent.\n   * @override\n   */\n  computeExtent(extent) {\n    createOrUpdateEmpty(extent);\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      extend(extent, geometries[i].getExtent());\n    }\n    return extent;\n  }\n\n  /**\n   * Return the geometries that make up this geometry collection.\n   * @return {Array<Geometry>} Geometries.\n   * @api\n   */\n  getGeometries() {\n    return cloneGeometries(this.geometries_);\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArray() {\n    return this.geometries_;\n  }\n\n  /**\n   * @return {Array<Geometry>} Geometries.\n   */\n  getGeometriesArrayRecursive() {\n    /** @type {Array<Geometry>} */\n    let geometriesArray = [];\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].getType() === this.getType()) {\n        geometriesArray = geometriesArray.concat(\n          /** @type {GeometryCollection} */ (\n            geometries[i]\n          ).getGeometriesArrayRecursive(),\n        );\n      } else {\n        geometriesArray.push(geometries[i]);\n      }\n    }\n    return geometriesArray;\n  }\n\n  /**\n   * Create a simplified version of this geometry using the Douglas Peucker algorithm.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {GeometryCollection} Simplified GeometryCollection.\n   * @override\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    if (this.simplifiedGeometryRevision !== this.getRevision()) {\n      this.simplifiedGeometryMaxMinSquaredTolerance = 0;\n      this.simplifiedGeometryRevision = this.getRevision();\n    }\n    if (\n      squaredTolerance < 0 ||\n      (this.simplifiedGeometryMaxMinSquaredTolerance !== 0 &&\n        squaredTolerance < this.simplifiedGeometryMaxMinSquaredTolerance)\n    ) {\n      return this;\n    }\n\n    const simplifiedGeometries = [];\n    const geometries = this.geometries_;\n    let simplified = false;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      const geometry = geometries[i];\n      const simplifiedGeometry =\n        geometry.getSimplifiedGeometry(squaredTolerance);\n      simplifiedGeometries.push(simplifiedGeometry);\n      if (simplifiedGeometry !== geometry) {\n        simplified = true;\n      }\n    }\n    if (simplified) {\n      const simplifiedGeometryCollection = new GeometryCollection(\n        simplifiedGeometries,\n      );\n      return simplifiedGeometryCollection;\n    }\n    this.simplifiedGeometryMaxMinSquaredTolerance = squaredTolerance;\n    return this;\n  }\n\n  /**\n   * Get the type of this geometry.\n   * @return {import(\"./Geometry.js\").Type} Geometry type.\n   * @api\n   * @override\n   */\n  getType() {\n    return 'GeometryCollection';\n  }\n\n  /**\n   * Test if the geometry and the passed extent intersect.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {boolean} `true` if the geometry and the extent intersect.\n   * @api\n   * @override\n   */\n  intersectsExtent(extent) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      if (geometries[i].intersectsExtent(extent)) {\n        return true;\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return this.geometries_.length === 0;\n  }\n\n  /**\n   * Rotate the geometry around a given coordinate. This modifies the geometry\n   * coordinates in place.\n   * @param {number} angle Rotation angle in radians.\n   * @param {import(\"../coordinate.js\").Coordinate} anchor The rotation center.\n   * @api\n   * @override\n   */\n  rotate(angle, anchor) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].rotate(angle, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Scale the geometry (with an optional origin).  This modifies the geometry\n   * coordinates in place.\n   * @abstract\n   * @param {number} sx The scaling factor in the x-direction.\n   * @param {number} [sy] The scaling factor in the y-direction (defaults to sx).\n   * @param {import(\"../coordinate.js\").Coordinate} [anchor] The scale origin (defaults to the center\n   *     of the geometry extent).\n   * @api\n   * @override\n   */\n  scale(sx, sy, anchor) {\n    if (!anchor) {\n      anchor = getCenter(this.getExtent());\n    }\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].scale(sx, sy, anchor);\n    }\n    this.changed();\n  }\n\n  /**\n   * Set the geometries that make up this geometry collection.\n   * @param {Array<Geometry>} geometries Geometries.\n   * @api\n   */\n  setGeometries(geometries) {\n    this.setGeometriesArray(cloneGeometries(geometries));\n  }\n\n  /**\n   * @param {Array<Geometry>} geometries Geometries.\n   */\n  setGeometriesArray(geometries) {\n    this.unlistenGeometriesChange_();\n    this.geometries_ = geometries;\n    this.listenGeometriesChange_();\n    this.changed();\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   * Called with a flat array of geometry coordinates.\n   * @api\n   * @override\n   */\n  applyTransform(transformFn) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].applyTransform(transformFn);\n    }\n    this.changed();\n  }\n\n  /**\n   * Translate the geometry.  This modifies the geometry coordinates in place.  If\n   * instead you want a new geometry, first `clone()` this geometry.\n   * @param {number} deltaX Delta X.\n   * @param {number} deltaY Delta Y.\n   * @api\n   * @override\n   */\n  translate(deltaX, deltaY) {\n    const geometries = this.geometries_;\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      geometries[i].translate(deltaX, deltaY);\n    }\n    this.changed();\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenGeometriesChange_();\n    super.disposeInternal();\n  }\n}\n\n/**\n * @param {Array<Geometry>} geometries Geometries.\n * @return {Array<Geometry>} Cloned geometries.\n */\nfunction cloneGeometries(geometries) {\n  return geometries.map((geometry) => geometry.clone());\n}\n\nexport default GeometryCollection;\n","/**\n * @module ol/render/Feature\n */\nimport Feature from '../Feature.js';\nimport {extend} from '../array.js';\nimport {\n  createOrUpdateFromCoordinate,\n  createOrUpdateFromFlatCoordinates,\n  getCenter,\n  getHeight,\n} from '../extent.js';\nimport {memoizeOne} from '../functions.js';\nimport {linearRingss as linearRingssCenter} from '../geom/flat/center.js';\nimport {\n  getInteriorPointOfArray,\n  getInteriorPointsOfMultiArray,\n} from '../geom/flat/interiorpoint.js';\nimport {interpolatePoint} from '../geom/flat/interpolate.js';\nimport {inflateEnds} from '../geom/flat/orient.js';\nimport {\n  douglasPeucker,\n  douglasPeuckerArray,\n  quantizeArray,\n} from '../geom/flat/simplify.js';\nimport {transform2D} from '../geom/flat/transform.js';\nimport {\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {get as getProjection} from '../proj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../transform.js';\n\n/**\n * @typedef {'Point' | 'LineString' | 'LinearRing' | 'Polygon' | 'MultiPoint' | 'MultiLineString'} Type\n * The geometry type.  One of `'Point'`, `'LineString'`, `'LinearRing'`,\n * `'Polygon'`, `'MultiPoint'` or 'MultiLineString'`.\n */\n\n/**\n * @type {import(\"../transform.js\").Transform}\n */\nconst tmpTransform = createTransform();\n\n/**\n * Lightweight, read-only, {@link module:ol/Feature~Feature} and {@link module:ol/geom/Geometry~Geometry} like\n * structure, optimized for vector tile rendering and styling. Geometry access\n * through the API is limited to getting the type and extent of the geometry.\n */\nclass RenderFeature {\n  /**\n   * @param {Type} type Geometry type.\n   * @param {Array<number>} flatCoordinates Flat coordinates. These always need\n   *     to be right-handed for polygons.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Object<string, *>} properties Properties.\n   * @param {number|string|undefined} id Feature id.\n   */\n  constructor(type, flatCoordinates, ends, stride, properties, id) {\n    /**\n     * @type {import(\"../style/Style.js\").StyleFunction|undefined}\n     */\n    this.styleFunction;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent|undefined}\n     */\n    this.extent_;\n\n    /**\n     * @private\n     * @type {number|string|undefined}\n     */\n    this.id_ = id;\n\n    /**\n     * @private\n     * @type {Type}\n     */\n    this.type_ = type;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatCoordinates_ = flatCoordinates;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatInteriorPoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.flatMidpoints_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.ends_ = ends || null;\n\n    /**\n     * @private\n     * @type {Object<string, *>}\n     */\n    this.properties_ = properties;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.stride_ = stride;\n\n    /**\n     * @private\n     * @type {RenderFeature}\n     */\n    this.simplifiedGeometry_;\n  }\n\n  /**\n   * Get a feature property by its key.\n   * @param {string} key Key\n   * @return {*} Value for the requested key.\n   * @api\n   */\n  get(key) {\n    return this.properties_[key];\n  }\n\n  /**\n   * Get the extent of this feature's geometry.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent() {\n    if (!this.extent_) {\n      this.extent_ =\n        this.type_ === 'Point'\n          ? createOrUpdateFromCoordinate(this.flatCoordinates_)\n          : createOrUpdateFromFlatCoordinates(\n              this.flatCoordinates_,\n              0,\n              this.flatCoordinates_.length,\n              2,\n            );\n    }\n    return this.extent_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoint() {\n    if (!this.flatInteriorPoints_) {\n      const flatCenter = getCenter(this.getExtent());\n      this.flatInteriorPoints_ = getInteriorPointOfArray(\n        this.flatCoordinates_,\n        0,\n        this.ends_,\n        2,\n        flatCenter,\n        0,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat interior points.\n   */\n  getFlatInteriorPoints() {\n    if (!this.flatInteriorPoints_) {\n      const ends = inflateEnds(this.flatCoordinates_, this.ends_);\n      const flatCenters = linearRingssCenter(this.flatCoordinates_, 0, ends, 2);\n      this.flatInteriorPoints_ = getInteriorPointsOfMultiArray(\n        this.flatCoordinates_,\n        0,\n        ends,\n        2,\n        flatCenters,\n      );\n    }\n    return this.flatInteriorPoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoint.\n   */\n  getFlatMidpoint() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = interpolatePoint(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        0.5,\n      );\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * @return {Array<number>} Flat midpoints.\n   */\n  getFlatMidpoints() {\n    if (!this.flatMidpoints_) {\n      this.flatMidpoints_ = [];\n      const flatCoordinates = this.flatCoordinates_;\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (this.ends_);\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        const end = ends[i];\n        const midpoint = interpolatePoint(flatCoordinates, offset, end, 2, 0.5);\n        extend(this.flatMidpoints_, midpoint);\n        offset = end;\n      }\n    }\n    return this.flatMidpoints_;\n  }\n\n  /**\n   * Get the feature identifier.  This is a stable identifier for the feature and\n   * is set when reading data from a remote source.\n   * @return {number|string|undefined} Id.\n   * @api\n   */\n  getId() {\n    return this.id_;\n  }\n\n  /**\n   * @return {Array<number>} Flat coordinates.\n   */\n  getOrientedFlatCoordinates() {\n    return this.flatCoordinates_;\n  }\n\n  /**\n   * For API compatibility with {@link module:ol/Feature~Feature}, this method is useful when\n   * determining the geometry type in style function (see {@link #getType}).\n   * @return {RenderFeature} Feature.\n   * @api\n   */\n  getGeometry() {\n    return this;\n  }\n\n  /**\n   * @param {number} squaredTolerance Squared tolerance.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  getSimplifiedGeometry(squaredTolerance) {\n    return this;\n  }\n\n  /**\n   * Get a transformed and simplified version of the geometry.\n   * @param {number} squaredTolerance Squared tolerance.\n   * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n   * @return {RenderFeature} Simplified geometry.\n   */\n  simplifyTransformed(squaredTolerance, transform) {\n    return this;\n  }\n\n  /**\n   * Get the feature properties.\n   * @return {Object<string, *>} Feature properties.\n   * @api\n   */\n  getProperties() {\n    return this.properties_;\n  }\n\n  /**\n   * Get an object of all property names and values.  This has the same behavior as getProperties,\n   * but is here to conform with the {@link module:ol/Feature~Feature} interface.\n   * @return {Object<string, *>?} Object.\n   */\n  getPropertiesInternal() {\n    return this.properties_;\n  }\n\n  /**\n   * @return {number} Stride.\n   */\n  getStride() {\n    return this.stride_;\n  }\n\n  /**\n   * @return {import('../style/Style.js').StyleFunction|undefined} Style\n   */\n  getStyleFunction() {\n    return this.styleFunction;\n  }\n\n  /**\n   * Get the type of this feature's geometry.\n   * @return {Type} Geometry type.\n   * @api\n   */\n  getType() {\n    return this.type_;\n  }\n\n  /**\n   * Transform geometry coordinates from tile pixel space to projected.\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection The data projection\n   */\n  transform(projection) {\n    projection = getProjection(projection);\n    const pixelExtent = projection.getExtent();\n    const projectedExtent = projection.getWorldExtent();\n    if (pixelExtent && projectedExtent) {\n      const scale = getHeight(projectedExtent) / getHeight(pixelExtent);\n      composeTransform(\n        tmpTransform,\n        projectedExtent[0],\n        projectedExtent[3],\n        scale,\n        -scale,\n        0,\n        0,\n        0,\n      );\n      transform2D(\n        this.flatCoordinates_,\n        0,\n        this.flatCoordinates_.length,\n        2,\n        tmpTransform,\n        this.flatCoordinates_,\n      );\n    }\n  }\n\n  /**\n   * Apply a transform function to the coordinates of the geometry.\n   * The geometry is modified in place.\n   * If you do not want the geometry modified in place, first `clone()` it and\n   * then use this function on the clone.\n   * @param {import(\"../proj.js\").TransformFunction} transformFn Transform function.\n   */\n  applyTransform(transformFn) {\n    transformFn(this.flatCoordinates_, this.flatCoordinates_, this.stride_);\n  }\n\n  /**\n   * @return {RenderFeature} A cloned render feature.\n   */\n  clone() {\n    return new RenderFeature(\n      this.type_,\n      this.flatCoordinates_.slice(),\n      this.ends_?.slice(),\n      this.stride_,\n      Object.assign({}, this.properties_),\n      this.id_,\n    );\n  }\n\n  /**\n   * @return {Array<number>|null} Ends.\n   */\n  getEnds() {\n    return this.ends_;\n  }\n\n  /**\n   * Add transform and resolution based geometry simplification to this instance.\n   * @return {RenderFeature} This render feature.\n   */\n  enableSimplifyTransformed() {\n    this.simplifyTransformed = memoizeOne((squaredTolerance, transform) => {\n      if (squaredTolerance === this.squaredTolerance_) {\n        return this.simplifiedGeometry_;\n      }\n      this.simplifiedGeometry_ = this.clone();\n      if (transform) {\n        this.simplifiedGeometry_.applyTransform(transform);\n      }\n      const simplifiedFlatCoordinates =\n        this.simplifiedGeometry_.getFlatCoordinates();\n      let simplifiedEnds;\n      switch (this.type_) {\n        case 'LineString':\n          simplifiedFlatCoordinates.length = douglasPeucker(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.flatCoordinates_.length,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n          );\n          simplifiedEnds = [simplifiedFlatCoordinates.length];\n          break;\n        case 'MultiLineString':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = douglasPeuckerArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            squaredTolerance,\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        case 'Polygon':\n          simplifiedEnds = [];\n          simplifiedFlatCoordinates.length = quantizeArray(\n            simplifiedFlatCoordinates,\n            0,\n            this.simplifiedGeometry_.ends_,\n            this.simplifiedGeometry_.stride_,\n            Math.sqrt(squaredTolerance),\n            simplifiedFlatCoordinates,\n            0,\n            simplifiedEnds,\n          );\n          break;\n        default:\n      }\n      if (simplifiedEnds) {\n        this.simplifiedGeometry_ = new RenderFeature(\n          this.type_,\n          simplifiedFlatCoordinates,\n          simplifiedEnds,\n          2,\n          this.properties_,\n          this.id_,\n        );\n      }\n      this.squaredTolerance_ = squaredTolerance;\n      return this.simplifiedGeometry_;\n    });\n    return this;\n  }\n}\n\n/**\n * @return {Array<number>} Flat coordinates.\n */\nRenderFeature.prototype.getFlatCoordinates =\n  RenderFeature.prototype.getOrientedFlatCoordinates;\n\n/**\n * Create a geometry from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature\n * Render Feature\n * @return {Point|MultiPoint|LineString|MultiLineString|Polygon|MultiPolygon}\n * New geometry instance.\n * @api\n */\nexport function toGeometry(renderFeature) {\n  const geometryType = renderFeature.getType();\n  switch (geometryType) {\n    case 'Point':\n      return new Point(renderFeature.getFlatCoordinates());\n    case 'MultiPoint':\n      return new MultiPoint(renderFeature.getFlatCoordinates(), 'XY');\n    case 'LineString':\n      return new LineString(renderFeature.getFlatCoordinates(), 'XY');\n    case 'MultiLineString':\n      return new MultiLineString(\n        renderFeature.getFlatCoordinates(),\n        'XY',\n        /** @type {Array<number>} */ (renderFeature.getEnds()),\n      );\n    case 'Polygon':\n      const flatCoordinates = renderFeature.getFlatCoordinates();\n      const ends = renderFeature.getEnds();\n      const endss = inflateEnds(flatCoordinates, ends);\n      return endss.length > 1\n        ? new MultiPolygon(flatCoordinates, 'XY', endss)\n        : new Polygon(flatCoordinates, 'XY', ends);\n    default:\n      throw new Error('Invalid geometry type:' + geometryType);\n  }\n}\n\n/**\n * Create an `ol/Feature` from an `ol/render/Feature`\n * @param {RenderFeature} renderFeature RenderFeature\n * @param {string} [geometryName] Geometry name to use\n * when creating the Feature.\n * @return {Feature} Newly constructed `ol/Feature` with properties,\n * geometry, and id copied over.\n * @api\n */\nexport function toFeature(renderFeature, geometryName) {\n  const id = renderFeature.getId();\n  const geometry = toGeometry(renderFeature);\n  const properties = renderFeature.getProperties();\n  const feature = new Feature();\n  if (geometryName !== undefined) {\n    feature.setGeometryName(geometryName);\n  }\n  feature.setGeometry(geometry);\n  if (id !== undefined) {\n    feature.setId(id);\n  }\n  feature.setProperties(properties, true);\n  return feature;\n}\n\nexport default RenderFeature;\n","/**\n * @module ol/format/Feature\n */\nimport Feature from '../Feature.js';\nimport {\n  linearRingsAreOriented,\n  linearRingssAreOriented,\n  orientLinearRings,\n  orientLinearRingsArray,\n} from '../geom/flat/orient.js';\nimport {\n  GeometryCollection,\n  LineString,\n  MultiLineString,\n  MultiPoint,\n  MultiPolygon,\n  Point,\n  Polygon,\n} from '../geom.js';\nimport {\n  equivalent as equivalentProjection,\n  get as getProjection,\n  getTransform,\n  transformExtent,\n} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {abstract} from '../util.js';\n\n/**\n * @typedef {Object} ReadOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are reading.\n * If not provided, the projection will be derived from the data (where possible) or\n * the `dataProjection` of the format is assigned (where set). If the projection\n * can not be derived from the data and if no `dataProjection` is set for a format,\n * the features will not be reprojected.\n * @property {import(\"../extent.js\").Extent} [extent] Tile extent in map units of the tile being read.\n * This is only required when reading data with tile pixels as geometry units. When configured,\n * a `dataProjection` with `TILE_PIXELS` as `units` and the tile's pixel extent as `extent` needs to be\n * provided.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * created by the format reader. If not provided, features will be returned in the\n * `dataProjection`.\n */\n\n/**\n * @typedef {Object} WriteOptions\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection] Projection of the data we are writing.\n * If not provided, the `dataProjection` of the format is assigned (where set).\n * If no `dataProjection` is set for a format, the features will be returned\n * in the `featureProjection`.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection of the feature geometries\n * that will be serialized by the format writer. If not provided, geometries are assumed\n * to be in the `dataProjection` if that is set; in other words, they are not transformed.\n * @property {boolean} [rightHanded] When writing geometries, follow the right-hand\n * rule for linear ring orientation.  This means that polygons will have counter-clockwise\n * exterior rings and clockwise interior rings.  By default, coordinates are serialized\n * as they are provided at construction.  If `true`, the right-hand rule will\n * be applied.  If `false`, the left-hand rule will be applied (clockwise for\n * exterior and counter-clockwise for interior rings).  Note that not all\n * formats support this.  The GeoJSON format does use this property when writing\n * geometries.\n * @property {number} [decimals] Maximum number of decimal places for coordinates.\n * Coordinates are stored internally as floats, but floating-point arithmetic can create\n * coordinates with a large number of decimal places, not generally wanted on output.\n * Set a number here to round coordinates. Can also be used to ensure that\n * coordinates read in can be written back out with the same number of decimals.\n * Default is no rounding.\n */\n\n/**\n * @typedef {'arraybuffer' | 'json' | 'text' | 'xml'} Type\n */\n\n/**\n * @typedef {Object} SimpleGeometryObject\n * @property {import('../geom/Geometry.js').Type} type Type.\n * @property {Array<number>} flatCoordinates Flat coordinates.\n * @property {Array<number>|Array<Array<number>>} [ends] Ends or endss.\n * @property {import('../geom/Geometry.js').GeometryLayout} [layout] Layout.\n */\n\n/**\n * @typedef {Array<GeometryObject>} GeometryCollectionObject\n */\n\n/**\n * @typedef {SimpleGeometryObject|GeometryCollectionObject} GeometryObject\n */\n\n/**\n * @typedef {Object} FeatureObject\n * @property {string|number} [id] Id.\n * @property {GeometryObject} [geometry] Geometry.\n * @property {Object<string, *>} [properties] Properties.\n */\n\n/***\n * @template {import('../Feature.js').FeatureLike} T\n * @typedef {T extends RenderFeature ? typeof RenderFeature : typeof Feature} FeatureToFeatureClass\n */\n\n/***\n * @template {import(\"../Feature.js\").FeatureClass} T\n * @typedef {T[keyof T] extends RenderFeature ? RenderFeature : Feature} FeatureClassToFeature\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for feature formats.\n * {@link module:ol/format/Feature~FeatureFormat} subclasses provide the ability to decode and encode\n * {@link module:ol/Feature~Feature} objects from a variety of commonly used geospatial\n * file formats.  See the documentation for each format for more details.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @abstract\n * @api\n */\nclass FeatureFormat {\n  constructor() {\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.dataProjection = undefined;\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|undefined}\n     */\n    this.defaultFeatureProjection = undefined;\n\n    /**\n     * @protected\n     * @type {FeatureToFeatureClass<FeatureType>}\n     */\n    this.featureClass = /** @type {FeatureToFeatureClass<FeatureType>} */ (\n      Feature\n    );\n\n    /**\n     * A list media types supported by the format in descending order of preference.\n     * @type {Array<string>}\n     */\n    this.supportedMediaTypes = null;\n  }\n\n  /**\n   * Adds the data projection to the read options.\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Options.\n   * @return {ReadOptions|undefined} Options.\n   * @protected\n   */\n  getReadOptions(source, options) {\n    if (options) {\n      let dataProjection = options.dataProjection\n        ? getProjection(options.dataProjection)\n        : this.readProjection(source);\n      if (\n        options.extent &&\n        dataProjection &&\n        dataProjection.getUnits() === 'tile-pixels'\n      ) {\n        dataProjection = getProjection(dataProjection);\n        dataProjection.setWorldExtent(options.extent);\n      }\n      options = {\n        dataProjection: dataProjection,\n        featureProjection: options.featureProjection,\n      };\n    }\n    return this.adaptOptions(options);\n  }\n\n  /**\n   * Sets the `dataProjection` on the options, if no `dataProjection`\n   * is set.\n   * @param {WriteOptions|ReadOptions|undefined} options\n   *     Options.\n   * @protected\n   * @return {WriteOptions|ReadOptions|undefined}\n   *     Updated options.\n   */\n  adaptOptions(options) {\n    return Object.assign(\n      {\n        dataProjection: this.dataProjection,\n        featureProjection: this.defaultFeatureProjection,\n        featureClass: this.featureClass,\n      },\n      options,\n    );\n  }\n\n  /**\n   * @abstract\n   * @return {Type} The format type.\n   */\n  getType() {\n    return abstract();\n  }\n\n  /**\n   * Read a single feature from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeature(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read all features from a source.\n   *\n   * @abstract\n   * @param {Document|Element|ArrayBuffer|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeatures(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a single geometry from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @param {ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometry(source, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection from a source.\n   *\n   * @abstract\n   * @param {Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default|undefined} Projection.\n   */\n  readProjection(source) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature in this format.\n   *\n   * @abstract\n   * @param {Feature} feature Feature.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeature(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features in this format.\n   *\n   * @abstract\n   * @param {Array<Feature>} features Features.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeFeatures(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Write a single geometry in this format.\n   *\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {WriteOptions} [options] Write options.\n   * @return {string|ArrayBuffer} Result.\n   */\n  writeGeometry(geometry, options) {\n    return abstract();\n  }\n}\n\nexport default FeatureFormat;\n\n/**\n * @template {import(\"../geom/Geometry.js\").default|RenderFeature} T\n * @param {T} geometry Geometry.\n * @param {boolean} write Set to true for writing, false for reading.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {T} Transformed geometry.\n */\nexport function transformGeometryWithOptions(geometry, write, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  let transformed = geometry;\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    if (write) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    const fromProjection = write ? featureProjection : dataProjection;\n    const toProjection = write ? dataProjection : featureProjection;\n    if (fromProjection.getUnits() === 'tile-pixels') {\n      transformed.transform(fromProjection, toProjection);\n    } else {\n      transformed.applyTransform(getTransform(fromProjection, toProjection));\n    }\n  }\n  if (\n    write &&\n    options &&\n    /** @type {WriteOptions} */ (options).decimals !== undefined\n  ) {\n    const power = Math.pow(10, /** @type {WriteOptions} */ (options).decimals);\n    // if decimals option on write, round each coordinate appropriately\n    /**\n     * @param {Array<number>} coordinates Coordinates.\n     * @return {Array<number>} Transformed coordinates.\n     */\n    const transform = function (coordinates) {\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = Math.round(coordinates[i] * power) / power;\n      }\n      return coordinates;\n    };\n    if (transformed === geometry) {\n      transformed = /** @type {T} */ (geometry.clone());\n    }\n    transformed.applyTransform(transform);\n  }\n  return transformed;\n}\n\n/**\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {ReadOptions} [options] Read options.\n * @return {import(\"../extent.js\").Extent} Transformed extent.\n */\nexport function transformExtentWithOptions(extent, options) {\n  const featureProjection = options\n    ? getProjection(options.featureProjection)\n    : null;\n  const dataProjection = options ? getProjection(options.dataProjection) : null;\n\n  if (\n    featureProjection &&\n    dataProjection &&\n    !equivalentProjection(featureProjection, dataProjection)\n  ) {\n    return transformExtent(extent, dataProjection, featureProjection);\n  }\n  return extent;\n}\n\nconst GeometryConstructor = {\n  Point: Point,\n  LineString: LineString,\n  Polygon: Polygon,\n  MultiPoint: MultiPoint,\n  MultiLineString: MultiLineString,\n  MultiPolygon: MultiPolygon,\n};\n\nfunction orientFlatCoordinates(flatCoordinates, ends, stride) {\n  if (Array.isArray(ends[0])) {\n    // MultiPolagon\n    if (!linearRingssAreOriented(flatCoordinates, 0, ends, stride)) {\n      flatCoordinates = flatCoordinates.slice();\n      orientLinearRingsArray(flatCoordinates, 0, ends, stride);\n    }\n    return flatCoordinates;\n  }\n  if (!linearRingsAreOriented(flatCoordinates, 0, ends, stride)) {\n    flatCoordinates = flatCoordinates.slice();\n    orientLinearRings(flatCoordinates, 0, ends, stride);\n  }\n  return flatCoordinates;\n}\n\n/**\n * @param {FeatureObject} object Feature object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {RenderFeature|Array<RenderFeature>} Render feature.\n */\nexport function createRenderFeature(object, options) {\n  const geometry = object.geometry;\n  if (!geometry) {\n    return [];\n  }\n  if (Array.isArray(geometry)) {\n    return geometry\n      .map((geometry) => createRenderFeature({...object, geometry}))\n      .flat();\n  }\n\n  const geometryType =\n    geometry.type === 'MultiPolygon' ? 'Polygon' : geometry.type;\n  if (geometryType === 'GeometryCollection' || geometryType === 'Circle') {\n    throw new Error('Unsupported geometry type: ' + geometryType);\n  }\n\n  const stride = geometry.layout.length;\n  return transformGeometryWithOptions(\n    new RenderFeature(\n      geometryType,\n      geometryType === 'Polygon'\n        ? orientFlatCoordinates(geometry.flatCoordinates, geometry.ends, stride)\n        : geometry.flatCoordinates,\n      geometry.ends?.flat(),\n      stride,\n      object.properties || {},\n      object.id,\n    ).enableSimplifyTransformed(),\n    false,\n    options,\n  );\n}\n\n/**\n * @param {GeometryObject|null} object Geometry object.\n * @param {WriteOptions|ReadOptions} [options] Options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nexport function createGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  if (Array.isArray(object)) {\n    const geometries = object.map((geometry) =>\n      createGeometry(geometry, options),\n    );\n    return new GeometryCollection(geometries);\n  }\n  const Geometry = GeometryConstructor[object.type];\n  return transformGeometryWithOptions(\n    new Geometry(object.flatCoordinates, object.layout || 'XY', object.ends),\n    false,\n    options,\n  );\n}\n","/**\n * @module ol/format/JSONFeature\n */\nimport {abstract} from '../util.js';\nimport FeatureFormat from './Feature.js';\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for JSON feature formats.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {FeatureFormat<FeatureType>}\n * @abstract\n */\nclass JSONFeature extends FeatureFormat {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @return {import(\"./Feature.js\").Type} Format.\n   * @override\n   */\n  getType() {\n    return 'json';\n  }\n\n  /**\n   * Read a feature.  Only works for a single feature. Use `readFeatures` to\n   * read a feature collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @api\n   * @override\n   */\n  readFeature(source, options) {\n    return this.readFeatureFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * Read all features.  Works with both a single feature and a feature\n   * collection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   * @override\n   */\n  readFeatures(source, options) {\n    return this.readFeaturesFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   */\n  readFeatureFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   */\n  readFeaturesFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read a geometry.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @api\n   * @override\n   */\n  readGeometry(source, options) {\n    return this.readGeometryFromObject(\n      getObject(source),\n      this.getReadOptions(source, options),\n    );\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   */\n  readGeometryFromObject(object, options) {\n    return abstract();\n  }\n\n  /**\n   * Read the projection.\n   *\n   * @param {ArrayBuffer|Document|Element|Object|string} source Source.\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @api\n   * @override\n   */\n  readProjection(source) {\n    return this.readProjectionFromObject(getObject(source));\n  }\n\n  /**\n   * @abstract\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  readProjectionFromObject(object) {\n    return abstract();\n  }\n\n  /**\n   * Encode a feature as string.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded feature.\n   * @api\n   * @override\n   */\n  writeFeature(feature, options) {\n    return JSON.stringify(this.writeFeatureObject(feature, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeatureObject(feature, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode an array of features as string.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded features.\n   * @api\n   * @override\n   */\n  writeFeatures(features, options) {\n    return JSON.stringify(this.writeFeaturesObject(features, options));\n  }\n\n  /**\n   * @abstract\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeFeaturesObject(features, options) {\n    return abstract();\n  }\n\n  /**\n   * Encode a geometry as string.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {string} Encoded geometry.\n   * @api\n   * @override\n   */\n  writeGeometry(geometry, options) {\n    return JSON.stringify(this.writeGeometryObject(geometry, options));\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   */\n  writeGeometryObject(geometry, options) {\n    return abstract();\n  }\n}\n\n/**\n * @param {Document|Element|Object|string} source Source.\n * @return {Object} Object.\n */\nfunction getObject(source) {\n  if (typeof source === 'string') {\n    const object = JSON.parse(source);\n    return object ? /** @type {Object} */ (object) : null;\n  }\n  if (source !== null) {\n    return source;\n  }\n  return null;\n}\n\nexport default JSONFeature;\n","/**\n * @module ol/format/EsriJSON\n */\nimport Feature from '../Feature.js';\nimport {containsExtent} from '../extent.js';\nimport LineString from '../geom/LineString.js';\nimport LinearRing from '../geom/LinearRing.js';\nimport MultiLineString from '../geom/MultiLineString.js';\nimport MultiPoint from '../geom/MultiPoint.js';\nimport MultiPolygon from '../geom/MultiPolygon.js';\nimport Point from '../geom/Point.js';\nimport Polygon from '../geom/Polygon.js';\nimport {deflateCoordinates} from '../geom/flat/deflate.js';\nimport {linearRingIsClockwise} from '../geom/flat/orient.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport {transformGeometryWithOptions} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\n\n/**\n * @typedef {import(\"arcgis-rest-api\").Feature} EsriJSONFeature\n * @typedef {import(\"arcgis-rest-api\").FeatureSet} EsriJSONFeatureSet\n * @typedef {import(\"arcgis-rest-api\").Geometry} EsriJSONGeometry\n * @typedef {import(\"arcgis-rest-api\").Point} EsriJSONPoint\n * @typedef {import(\"arcgis-rest-api\").Polyline} EsriJSONPolyline\n * @typedef {import(\"arcgis-rest-api\").Polygon} EsriJSONPolygon\n * @typedef {import(\"arcgis-rest-api\").Multipoint} EsriJSONMultipoint\n * @typedef {import(\"arcgis-rest-api\").HasZM} EsriJSONHasZM\n * @typedef {import(\"arcgis-rest-api\").Position} EsriJSONPosition\n * @typedef {import(\"arcgis-rest-api\").SpatialReferenceWkid} EsriJSONSpatialReferenceWkid\n */\n\n/**\n * @typedef {Object} EsriJSONMultiPolygon\n * @property {Array<Array<Array<Array<number>>>>} rings Rings for the MultiPolygon.\n * @property {boolean} [hasM] If the polygon coordinates have an M value.\n * @property {boolean} [hasZ] If the polygon coordinates have a Z value.\n * @property {EsriJSONSpatialReferenceWkid} [spatialReference] The coordinate reference system.\n */\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(EsriJSONGeometry): import(\"../geom/Geometry.js\").default>}\n */\nconst GEOMETRY_READERS = {\n  Point: readPointGeometry,\n  LineString: readLineStringGeometry,\n  Polygon: readPolygonGeometry,\n  MultiPoint: readMultiPointGeometry,\n  MultiLineString: readMultiLineStringGeometry,\n  MultiPolygon: readMultiPolygonGeometry,\n};\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type, function(import(\"../geom/Geometry.js\").default, import(\"./Feature.js\").WriteOptions=): (EsriJSONGeometry)>}\n */\nconst GEOMETRY_WRITERS = {\n  Point: writePointGeometry,\n  LineString: writeLineStringGeometry,\n  Polygon: writePolygonGeometry,\n  MultiPoint: writeMultiPointGeometry,\n  MultiLineString: writeMultiLineStringGeometry,\n  MultiPolygon: writeMultiPolygonGeometry,\n};\n\n/**\n * @typedef {Object} Options\n * @property {string} [geometryName] Geometry name to use when creating features.\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the EsriJSON format.\n *\n * @api\n */\nclass EsriJSON extends JSONFeature {\n  /**\n   * @param {Options} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @param {string} [idField] Name of the field where to get the id from.\n   * @protected\n   * @return {import(\"../Feature.js\").default} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options, idField) {\n    const esriJSONFeature = /** @type {EsriJSONFeature} */ (object);\n    const geometry = readGeometry(esriJSONFeature.geometry, options);\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    }\n    feature.setGeometry(geometry);\n    if (esriJSONFeature.attributes) {\n      feature.setProperties(esriJSONFeature.attributes, true);\n      const id = esriJSONFeature.attributes[idField];\n      if (id !== undefined) {\n        feature.setId(/** @type {number} */ (id));\n      }\n    }\n    return feature;\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<Feature>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    options = options ? options : {};\n    if (object['features']) {\n      const esriJSONFeatureSet = /** @type {EsriJSONFeatureSet} */ (object);\n      /** @type {Array<import(\"../Feature.js\").default>} */\n      const features = [];\n      const esriJSONFeatures = esriJSONFeatureSet.features;\n      for (let i = 0, ii = esriJSONFeatures.length; i < ii; ++i) {\n        features.push(\n          this.readFeatureFromObject(\n            esriJSONFeatures[i],\n            options,\n            object.objectIdFieldName,\n          ),\n        );\n      }\n      return features;\n    }\n    return [this.readFeatureFromObject(object, options)];\n  }\n\n  /**\n   * @param {EsriJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    if (\n      object['spatialReference'] &&\n      object['spatialReference']['wkid'] !== undefined\n    ) {\n      const spatialReference = /** @type {EsriJSONSpatialReferenceWkid} */ (\n        object['spatialReference']\n      );\n      const crs = spatialReference.wkid;\n      return getProjection('EPSG:' + crs);\n    }\n    return null;\n  }\n\n  /**\n   * Encode a geometry as a EsriJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONGeometry} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n\n  /**\n   * Encode a feature as a esriJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {Object} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n    const object = {};\n    if (!feature.hasProperties()) {\n      object['attributes'] = {};\n      return object;\n    }\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object['geometry'] = writeGeometry(geometry, options);\n      const projection =\n        options && (options.dataProjection || options.featureProjection);\n      if (projection) {\n        object['geometry']['spatialReference'] =\n          /** @type {EsriJSONSpatialReferenceWkid} */ ({\n            wkid: Number(getProjection(projection).getCode().split(':').pop()),\n          });\n      }\n      delete properties[feature.getGeometryName()];\n    }\n    if (!isEmpty(properties)) {\n      object['attributes'] = properties;\n    } else {\n      object['attributes'] = {};\n    }\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a EsriJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {EsriJSONFeatureSet} EsriJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      'features': objects,\n    };\n  }\n}\n\n/**\n * @param {EsriJSONGeometry} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  if (!object) {\n    return null;\n  }\n  /** @type {import(\"../geom/Geometry.js\").Type} */\n  let type;\n  if (typeof object['x'] === 'number' && typeof object['y'] === 'number') {\n    type = 'Point';\n  } else if (object['points']) {\n    type = 'MultiPoint';\n  } else if (object['paths']) {\n    const esriJSONPolyline = /** @type {EsriJSONPolyline} */ (object);\n    if (esriJSONPolyline.paths.length === 1) {\n      type = 'LineString';\n    } else {\n      type = 'MultiLineString';\n    }\n  } else if (object['rings']) {\n    const esriJSONPolygon = /** @type {EsriJSONPolygon} */ (object);\n    const layout = getGeometryLayout(esriJSONPolygon);\n    const rings = convertRings(esriJSONPolygon.rings, layout);\n    if (rings.length === 1) {\n      type = 'Polygon';\n      object = Object.assign({}, object, {['rings']: rings[0]});\n    } else {\n      type = 'MultiPolygon';\n      object = Object.assign({}, object, {['rings']: rings});\n    }\n  }\n  const geometryReader = GEOMETRY_READERS[type];\n  return transformGeometryWithOptions(geometryReader(object), false, options);\n}\n\n/**\n * Determines inner and outer rings.\n * Checks if any polygons in this array contain any other polygons in this\n * array. It is used for checking for holes.\n * Logic inspired by: https://github.com/Esri/terraformer-arcgis-parser\n * @param {Array<!Array<!Array<number>>>} rings Rings.\n * @param {import(\"../geom/Geometry.js\").GeometryLayout} layout Geometry layout.\n * @return {Array<!Array<!Array<!Array<number>>>>} Transformed rings.\n */\nfunction convertRings(rings, layout) {\n  const flatRing = [];\n  const outerRings = [];\n  const holes = [];\n  let i, ii;\n  for (i = 0, ii = rings.length; i < ii; ++i) {\n    flatRing.length = 0;\n    deflateCoordinates(flatRing, 0, rings[i], layout.length);\n    // is this ring an outer ring? is it clockwise?\n    const clockwise = linearRingIsClockwise(\n      flatRing,\n      0,\n      flatRing.length,\n      layout.length,\n    );\n    if (clockwise) {\n      outerRings.push([rings[i]]);\n    } else {\n      holes.push(rings[i]);\n    }\n  }\n  while (holes.length) {\n    const hole = holes.shift();\n    let matched = false;\n    // loop over all outer rings and see if they contain our hole.\n    for (i = outerRings.length - 1; i >= 0; i--) {\n      const outerRing = outerRings[i][0];\n      const containsHole = containsExtent(\n        new LinearRing(outerRing).getExtent(),\n        new LinearRing(hole).getExtent(),\n      );\n      if (containsHole) {\n        // the hole is contained push it into our polygon\n        outerRings[i].push(hole);\n        matched = true;\n        break;\n      }\n    }\n    if (!matched) {\n      // no outer rings contain this hole turn it into and outer\n      // ring (reverse it)\n      outerRings.push([hole.reverse()]);\n    }\n  }\n  return outerRings;\n}\n\n/**\n * @param {EsriJSONPoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Point.\n */\nfunction readPointGeometry(object) {\n  let point;\n  if (object.m !== undefined && object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z, object.m], 'XYZM');\n  } else if (object.z !== undefined) {\n    point = new Point([object.x, object.y, object.z], 'XYZ');\n  } else if (object.m !== undefined) {\n    point = new Point([object.x, object.y, object.m], 'XYM');\n  } else {\n    point = new Point([object.x, object.y]);\n  }\n  return point;\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} LineString.\n */\nfunction readLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new LineString(object.paths[0], layout);\n}\n\n/**\n * @param {EsriJSONPolyline} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiLineString.\n */\nfunction readMultiLineStringGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiLineString(object.paths, layout);\n}\n\n/**\n * @param {EsriJSONHasZM} object Object.\n * @return {import(\"../geom/Geometry.js\").GeometryLayout} The geometry layout to use.\n */\nfunction getGeometryLayout(object) {\n  /** @type {import(\"../geom/Geometry.js\").GeometryLayout} */\n  let layout = 'XY';\n  if (object.hasZ === true && object.hasM === true) {\n    layout = 'XYZM';\n  } else if (object.hasZ === true) {\n    layout = 'XYZ';\n  } else if (object.hasM === true) {\n    layout = 'XYM';\n  }\n  return layout;\n}\n\n/**\n * @param {EsriJSONMultipoint} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPoint.\n */\nfunction readMultiPointGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPoint(object.points, layout);\n}\n\n/**\n * @param {EsriJSONMultiPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} MultiPolygon.\n */\nfunction readMultiPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new MultiPolygon(object.rings, layout);\n}\n\n/**\n * @param {EsriJSONPolygon} object Object.\n * @return {import(\"../geom/Geometry.js\").default} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const layout = getGeometryLayout(object);\n  return new Polygon(object.rings, layout);\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPoint} EsriJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  const coordinates = geometry.getCoordinates();\n  /** @type {EsriJSONPoint} */\n  let esriJSON;\n  const layout = geometry.getLayout();\n  if (layout === 'XYZ') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n    };\n  } else if (layout === 'XYM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      m: coordinates[2],\n    };\n  } else if (layout === 'XYZM') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n      z: coordinates[2],\n      m: coordinates[3],\n    };\n  } else if (layout === 'XY') {\n    esriJSON = {\n      x: coordinates[0],\n      y: coordinates[1],\n    };\n  } else {\n    throw new Error('Invalid geometry layout');\n  }\n  return esriJSON;\n}\n\n/**\n * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n * @return {Object} Object with boolean hasZ and hasM keys.\n */\nfunction getHasZM(geometry) {\n  const layout = geometry.getLayout();\n  return {\n    hasZ: layout === 'XYZ' || layout === 'XYZM',\n    hasM: layout === 'XYM' || layout === 'XYZM',\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} lineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeLineStringGeometry(lineString, options) {\n  const hasZM = getHasZM(lineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: [\n      /** @type {Array<EsriJSONPosition>} */ (lineString.getCoordinates()),\n    ],\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} polygon Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writePolygonGeometry(polygon, options) {\n  // Esri geometries use the left-hand rule\n  const hasZM = getHasZM(polygon);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      polygon.getCoordinates(false)\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} multiLineString Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolyline} EsriJSON geometry.\n */\nfunction writeMultiLineStringGeometry(multiLineString, options) {\n  const hasZM = getHasZM(multiLineString);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    paths: /** @type {Array<Array<EsriJSONPosition>>} */ (\n      multiLineString.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} multiPoint Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONMultipoint} EsriJSON geometry.\n */\nfunction writeMultiPointGeometry(multiPoint, options) {\n  const hasZM = getHasZM(multiPoint);\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    points: /** @type {Array<EsriJSONPosition>} */ (\n      multiPoint.getCoordinates()\n    ),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONPolygon} EsriJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  const hasZM = getHasZM(geometry);\n  const coordinates = geometry.getCoordinates(false);\n  const output = [];\n  for (let i = 0; i < coordinates.length; i++) {\n    for (let x = coordinates[i].length - 1; x >= 0; x--) {\n      output.push(coordinates[i][x]);\n    }\n  }\n  return {\n    hasZ: hasZM.hasZ,\n    hasM: hasZM.hasM,\n    rings: /** @type {Array<Array<EsriJSONPosition>>} */ (output),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {EsriJSONGeometry} EsriJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  const geometryWriter = GEOMETRY_WRITERS[geometry.getType()];\n  return geometryWriter(\n    transformGeometryWithOptions(geometry, true, options),\n    options,\n  );\n}\n\nexport default EsriJSON;\n","/**\n * @module ol/format/GeoJSON\n */\n\nimport Feature from '../Feature.js';\nimport {getLayoutForStride} from '../geom/SimpleGeometry.js';\nimport {\n  deflateCoordinatesArray,\n  deflateMultiCoordinatesArray,\n} from '../geom/flat/deflate.js';\nimport {isEmpty} from '../obj.js';\nimport {get as getProjection} from '../proj.js';\nimport RenderFeature from '../render/Feature.js';\nimport {\n  createGeometry,\n  createRenderFeature,\n  transformGeometryWithOptions,\n} from './Feature.js';\nimport JSONFeature from './JSONFeature.js';\n\n/**\n * @typedef {import(\"geojson\").GeoJSON} GeoJSONObject\n * @typedef {import(\"geojson\").Feature} GeoJSONFeature\n * @typedef {import(\"geojson\").FeatureCollection} GeoJSONFeatureCollection\n * @typedef {import(\"geojson\").Geometry} GeoJSONGeometry\n * @typedef {import(\"geojson\").Point} GeoJSONPoint\n * @typedef {import(\"geojson\").LineString} GeoJSONLineString\n * @typedef {import(\"geojson\").Polygon} GeoJSONPolygon\n * @typedef {import(\"geojson\").MultiPoint} GeoJSONMultiPoint\n * @typedef {import(\"geojson\").MultiLineString} GeoJSONMultiLineString\n * @typedef {import(\"geojson\").MultiPolygon} GeoJSONMultiPolygon\n * @typedef {import(\"geojson\").GeometryCollection} GeoJSONGeometryCollection\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n *\n * @property {import(\"../proj.js\").ProjectionLike} [dataProjection='EPSG:4326'] Default data projection.\n * @property {import(\"../proj.js\").ProjectionLike} [featureProjection] Projection for features read or\n * written by the format.  Options passed to read or write methods will take precedence.\n * @property {string} [geometryName] Geometry name to use when creating features.\n * @property {boolean} [extractGeometryName=false] Certain GeoJSON providers include\n * the geometry_name field in the feature GeoJSON. If set to `true` the GeoJSON reader\n * will look for that field to set the geometry name. If both this field is set to `true`\n * and a `geometryName` is provided, the `geometryName` will take precedence.\n * @property {import('./Feature.js').FeatureToFeatureClass<FeatureType>} [featureClass] Feature class\n * to be used when reading features. The default is {@link module:ol/Feature~Feature}. If performance is\n * the primary concern, and features are not going to be modified or round-tripped through the format,\n * consider using {@link module:ol/render/Feature~RenderFeature}\n */\n\n/**\n * @classdesc\n * Feature format for reading and writing data in the GeoJSON format.\n *\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @extends {JSONFeature<FeatureType>}\n * @api\n */\nclass GeoJSON extends JSONFeature {\n  /**\n   * @param {Options<FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super();\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.dataProjection = getProjection(\n      options.dataProjection ? options.dataProjection : 'EPSG:4326',\n    );\n\n    if (options.featureProjection) {\n      /**\n       * @type {import(\"../proj/Projection.js\").default}\n       */\n      this.defaultFeatureProjection = getProjection(options.featureProjection);\n    }\n\n    if (options.featureClass) {\n      this.featureClass = options.featureClass;\n    }\n\n    /**\n     * Name of the geometry attribute for features.\n     * @type {string|undefined}\n     * @private\n     */\n    this.geometryName_ = options.geometryName;\n\n    /**\n     * Look for the `geometry_name` in the feature GeoJSON\n     * @type {boolean|undefined}\n     * @private\n     */\n    this.extractGeometryName_ = options.extractGeometryName;\n\n    this.supportedMediaTypes = [\n      'application/geo+json',\n      'application/vnd.geo+json',\n    ];\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {FeatureType|Array<FeatureType>} Feature.\n   * @override\n   */\n  readFeatureFromObject(object, options) {\n    /**\n     * @type {GeoJSONFeature}\n     */\n    let geoJSONFeature = null;\n    if (object['type'] === 'Feature') {\n      geoJSONFeature = /** @type {GeoJSONFeature} */ (object);\n    } else {\n      geoJSONFeature = {\n        'type': 'Feature',\n        'geometry': /** @type {GeoJSONGeometry} */ (object),\n        'properties': null,\n      };\n    }\n\n    const geometry = readGeometryInternal(geoJSONFeature['geometry'], options);\n    if (this.featureClass === RenderFeature) {\n      return /** @type {FeatureType|Array<FeatureType>} */ (\n        createRenderFeature(\n          {\n            geometry,\n            id: geoJSONFeature['id'],\n            properties: geoJSONFeature['properties'],\n          },\n          options,\n        )\n      );\n    }\n\n    const feature = new Feature();\n    if (this.geometryName_) {\n      feature.setGeometryName(this.geometryName_);\n    } else if (this.extractGeometryName_ && geoJSONFeature['geometry_name']) {\n      feature.setGeometryName(geoJSONFeature['geometry_name']);\n    }\n    feature.setGeometry(createGeometry(geometry, options));\n\n    if ('id' in geoJSONFeature) {\n      feature.setId(geoJSONFeature['id']);\n    }\n\n    if (geoJSONFeature['properties']) {\n      feature.setProperties(geoJSONFeature['properties'], true);\n    }\n    return /** @type {FeatureType|Array<FeatureType>} */ (feature);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {Array<FeatureType>} Features.\n   * @override\n   */\n  readFeaturesFromObject(object, options) {\n    const geoJSONObject = /** @type {GeoJSONObject} */ (object);\n    let features = null;\n    if (geoJSONObject['type'] === 'FeatureCollection') {\n      const geoJSONFeatureCollection = /** @type {GeoJSONFeatureCollection} */ (\n        object\n      );\n      features = [];\n      const geoJSONFeatures = geoJSONFeatureCollection['features'];\n      for (let i = 0, ii = geoJSONFeatures.length; i < ii; ++i) {\n        const featureObject = this.readFeatureFromObject(\n          geoJSONFeatures[i],\n          options,\n        );\n        if (!featureObject) {\n          continue;\n        }\n        features.push(featureObject);\n      }\n    } else {\n      features = [this.readFeatureFromObject(object, options)];\n    }\n    return /** @type {Array<FeatureType>} */ (features.flat());\n  }\n\n  /**\n   * @param {GeoJSONGeometry} object Object.\n   * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n   * @protected\n   * @return {import(\"../geom/Geometry.js\").default} Geometry.\n   * @override\n   */\n  readGeometryFromObject(object, options) {\n    return readGeometry(object, options);\n  }\n\n  /**\n   * @param {Object} object Object.\n   * @protected\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   * @override\n   */\n  readProjectionFromObject(object) {\n    const crs = object['crs'];\n    let projection;\n    if (crs) {\n      if (crs['type'] == 'name') {\n        projection = getProjection(crs['properties']['name']);\n      } else if (crs['type'] === 'EPSG') {\n        projection = getProjection('EPSG:' + crs['properties']['code']);\n      } else {\n        throw new Error('Unknown SRS type');\n      }\n    } else {\n      projection = this.dataProjection;\n    }\n    return /** @type {import(\"../proj/Projection.js\").default} */ (projection);\n  }\n\n  /**\n   * Encode a feature as a GeoJSON Feature object.\n   *\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeature} Object.\n   * @api\n   * @override\n   */\n  writeFeatureObject(feature, options) {\n    options = this.adaptOptions(options);\n\n    /** @type {GeoJSONFeature} */\n    const object = {\n      'type': 'Feature',\n      geometry: null,\n      properties: null,\n    };\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      object.id = id;\n    }\n\n    if (!feature.hasProperties()) {\n      return object;\n    }\n\n    const properties = feature.getProperties();\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      object.geometry = writeGeometry(geometry, options);\n\n      delete properties[feature.getGeometryName()];\n    }\n\n    if (!isEmpty(properties)) {\n      object.properties = properties;\n    }\n\n    return object;\n  }\n\n  /**\n   * Encode an array of features as a GeoJSON object.\n   *\n   * @param {Array<import(\"../Feature.js\").default>} features Features.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONFeatureCollection} GeoJSON Object.\n   * @api\n   * @override\n   */\n  writeFeaturesObject(features, options) {\n    options = this.adaptOptions(options);\n    const objects = [];\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      objects.push(this.writeFeatureObject(features[i], options));\n    }\n    return {\n      type: 'FeatureCollection',\n      features: objects,\n    };\n  }\n\n  /**\n   * Encode a geometry as a GeoJSON object.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n   * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n   * @return {GeoJSONGeometry|GeoJSONGeometryCollection} Object.\n   * @api\n   * @override\n   */\n  writeGeometryObject(geometry, options) {\n    return writeGeometry(geometry, this.adaptOptions(options));\n  }\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryObject} Geometry.\n */\nfunction readGeometryInternal(object, options) {\n  if (!object) {\n    return null;\n  }\n\n  /** @type {import(\"./Feature.js\").GeometryObject} */\n  let geometry;\n  switch (object['type']) {\n    case 'Point': {\n      geometry = readPointGeometry(/** @type {GeoJSONPoint} */ (object));\n      break;\n    }\n    case 'LineString': {\n      geometry = readLineStringGeometry(\n        /** @type {GeoJSONLineString} */ (object),\n      );\n      break;\n    }\n    case 'Polygon': {\n      geometry = readPolygonGeometry(/** @type {GeoJSONPolygon} */ (object));\n      break;\n    }\n    case 'MultiPoint': {\n      geometry = readMultiPointGeometry(\n        /** @type {GeoJSONMultiPoint} */ (object),\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geometry = readMultiLineStringGeometry(\n        /** @type {GeoJSONMultiLineString} */ (object),\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geometry = readMultiPolygonGeometry(\n        /** @type {GeoJSONMultiPolygon} */ (object),\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geometry = readGeometryCollectionGeometry(\n        /** @type {GeoJSONGeometryCollection} */ (object),\n      );\n      break;\n    }\n    default: {\n      throw new Error('Unsupported GeoJSON type: ' + object['type']);\n    }\n  }\n  return geometry;\n}\n\n/**\n * @param {GeoJSONGeometry|GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"../geom/Geometry.js\").default} Geometry.\n */\nfunction readGeometry(object, options) {\n  const geometryObject = readGeometryInternal(object, options);\n  return createGeometry(geometryObject, options);\n}\n\n/**\n * @param {GeoJSONGeometryCollection} object Object.\n * @param {import(\"./Feature.js\").ReadOptions} [options] Read options.\n * @return {import(\"./Feature.js\").GeometryCollectionObject} Geometry collection.\n */\nfunction readGeometryCollectionGeometry(object, options) {\n  const geometries = object['geometries'].map(\n    /**\n     * @param {GeoJSONGeometry} geometry Geometry.\n     * @return {import(\"./Feature.js\").GeometryObject} geometry Geometry.\n     */\n    function (geometry) {\n      return readGeometryInternal(geometry, options);\n    },\n  );\n  return geometries;\n}\n\n/**\n * @param {GeoJSONPoint} object Input object.\n * @return {import(\"./Feature.js\").GeometryObject} Point geometry.\n */\nfunction readPointGeometry(object) {\n  const flatCoordinates = object['coordinates'];\n  return {\n    type: 'Point',\n    flatCoordinates,\n    layout: getLayoutForStride(flatCoordinates.length),\n  };\n}\n\n/**\n * @param {GeoJSONLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} LineString geometry.\n */\nfunction readLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = coordinates.flat();\n  return {\n    type: 'LineString',\n    flatCoordinates,\n    ends: [flatCoordinates.length],\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiLineString} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiLineString geometry.\n */\nfunction readMultiLineStringGeometry(object) {\n  const coordinates = object['coordinates'];\n  const stride = coordinates[0]?.[0]?.length || 2;\n  const flatCoordinates = [];\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'MultiLineString',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPoint} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPoint geometry.\n */\nfunction readMultiPointGeometry(object) {\n  const coordinates = object['coordinates'];\n  return {\n    type: 'MultiPoint',\n    flatCoordinates: coordinates.flat(),\n    layout: getLayoutForStride(coordinates[0]?.length || 2),\n  };\n}\n\n/**\n * @param {GeoJSONMultiPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} MultiPolygon geometry.\n */\nfunction readMultiPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.[0].length || 2;\n  const endss = deflateMultiCoordinatesArray(\n    flatCoordinates,\n    0,\n    coordinates,\n    stride,\n  );\n  return {\n    type: 'MultiPolygon',\n    flatCoordinates,\n    ends: endss,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {GeoJSONPolygon} object Object.\n * @return {import(\"./Feature.js\").GeometryObject} Polygon.\n */\nfunction readPolygonGeometry(object) {\n  const coordinates = object['coordinates'];\n  const flatCoordinates = [];\n  const stride = coordinates[0]?.[0]?.length;\n  const ends = deflateCoordinatesArray(flatCoordinates, 0, coordinates, stride);\n  return {\n    type: 'Polygon',\n    flatCoordinates,\n    ends,\n    layout: getLayoutForStride(stride),\n  };\n}\n\n/**\n * @param {import(\"../geom/Geometry.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeGeometry(geometry, options) {\n  geometry = transformGeometryWithOptions(geometry, true, options);\n\n  const type = geometry.getType();\n\n  /** @type {GeoJSONGeometry} */\n  let geoJSON;\n  switch (type) {\n    case 'Point': {\n      geoJSON = writePointGeometry(\n        /** @type {import(\"../geom/Point.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'LineString': {\n      geoJSON = writeLineStringGeometry(\n        /** @type {import(\"../geom/LineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'Polygon': {\n      geoJSON = writePolygonGeometry(\n        /** @type {import(\"../geom/Polygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPoint': {\n      geoJSON = writeMultiPointGeometry(\n        /** @type {import(\"../geom/MultiPoint.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiLineString': {\n      geoJSON = writeMultiLineStringGeometry(\n        /** @type {import(\"../geom/MultiLineString.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'MultiPolygon': {\n      geoJSON = writeMultiPolygonGeometry(\n        /** @type {import(\"../geom/MultiPolygon.js\").default} */ (geometry),\n        options,\n      );\n      break;\n    }\n    case 'GeometryCollection': {\n      geoJSON = writeGeometryCollectionGeometry(\n        /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n          geometry\n        ),\n        options,\n      );\n      break;\n    }\n    case 'Circle': {\n      geoJSON = {\n        type: 'GeometryCollection',\n        geometries: [],\n      };\n      break;\n    }\n    default: {\n      throw new Error('Unsupported geometry type: ' + type);\n    }\n  }\n  return geoJSON;\n}\n\n/**\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometryCollection} GeoJSON geometry collection.\n */\nfunction writeGeometryCollectionGeometry(geometry, options) {\n  options = Object.assign({}, options);\n  delete options.featureProjection;\n  const geometries = geometry.getGeometriesArray().map(function (geometry) {\n    return writeGeometry(geometry, options);\n  });\n  return {\n    type: 'GeometryCollection',\n    geometries: geometries,\n  };\n}\n\n/**\n * @param {import(\"../geom/LineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeLineStringGeometry(geometry, options) {\n  return {\n    type: 'LineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiLineString.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiLineStringGeometry(geometry, options) {\n  return {\n    type: 'MultiLineString',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPoint.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPointGeometry(geometry, options) {\n  return {\n    type: 'MultiPoint',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writeMultiPolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'MultiPolygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\n/**\n * @param {import(\"../geom/Point.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePointGeometry(geometry, options) {\n  return {\n    type: 'Point',\n    coordinates: geometry.getCoordinates(),\n  };\n}\n\n/**\n * @param {import(\"../geom/Polygon.js\").default} geometry Geometry.\n * @param {import(\"./Feature.js\").WriteOptions} [options] Write options.\n * @return {GeoJSONGeometry} GeoJSON geometry.\n */\nfunction writePolygonGeometry(geometry, options) {\n  let right;\n  if (options) {\n    right = options.rightHanded;\n  }\n  return {\n    type: 'Polygon',\n    coordinates: geometry.getCoordinates(right),\n  };\n}\n\nexport default GeoJSON;\n","/**\n * @module ol/xml\n */\nimport {extend} from './array.js';\n\n/**\n * When using {@link module:ol/xml.makeChildAppender} or\n * {@link module:ol/xml.makeSimpleNodeFactory}, the top `objectStack` item needs\n * to have this structure.\n * @typedef {Object} NodeStackItem\n * @property {Element} node Node.\n */\n\n/**\n * @typedef {function(Element, Array<*>): void} Parser\n */\n\n/**\n * @typedef {function(Element, *, Array<*>): void} Serializer\n */\n\n/**\n * @type {string}\n */\nexport const XML_SCHEMA_INSTANCE_URI =\n  'http://www.w3.org/2001/XMLSchema-instance';\n\n/**\n * @param {string} namespaceURI Namespace URI.\n * @param {string} qualifiedName Qualified name.\n * @return {Element} Node.\n */\nexport function createElementNS(namespaceURI, qualifiedName) {\n  return getDocument().createElementNS(namespaceURI, qualifiedName);\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @return {string} All text content.\n * @api\n */\nexport function getAllTextContent(node, normalizeWhitespace) {\n  return getAllTextContent_(node, normalizeWhitespace, []).join('');\n}\n\n/**\n * Recursively grab all text content of child nodes into a single string.\n * @param {Node} node Node.\n * @param {boolean} normalizeWhitespace Normalize whitespace: remove all line\n * breaks.\n * @param {Array<string>} accumulator Accumulator.\n * @private\n * @return {Array<string>} Accumulator.\n */\nexport function getAllTextContent_(node, normalizeWhitespace, accumulator) {\n  if (\n    node.nodeType == Node.CDATA_SECTION_NODE ||\n    node.nodeType == Node.TEXT_NODE\n  ) {\n    if (normalizeWhitespace) {\n      accumulator.push(String(node.nodeValue).replace(/(\\r\\n|\\r|\\n)/g, ''));\n    } else {\n      accumulator.push(node.nodeValue);\n    }\n  } else {\n    let n;\n    for (n = node.firstChild; n; n = n.nextSibling) {\n      getAllTextContent_(n, normalizeWhitespace, accumulator);\n    }\n  }\n  return accumulator;\n}\n\n/**\n * @param {Object} object Object.\n * @return {boolean} Is a document.\n */\nexport function isDocument(object) {\n  return 'documentElement' in object;\n}\n\n/**\n * @param {Element} node Node.\n * @param {?string} namespaceURI Namespace URI.\n * @param {string} name Attribute name.\n * @return {string} Value\n */\nexport function getAttributeNS(node, namespaceURI, name) {\n  return node.getAttributeNS(namespaceURI, name) || '';\n}\n\n/**\n * Parse an XML string to an XML Document.\n * @param {string} xml XML.\n * @return {Document} Document.\n * @api\n */\nexport function parse(xml) {\n  return new DOMParser().parseFromString(xml, 'application/xml');\n}\n\n/**\n * Make an array extender function for extending the array at the top of the\n * object stack.\n * @param {function(this: T, Node, Array<*>): (Array<*>|undefined)} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayExtender(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        extend(array, value);\n      }\n    }\n  );\n}\n\n/**\n * Make an array pusher function for pushing to the array at the top of the\n * object stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeArrayPusher(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const array = /** @type {Array<*>} */ (\n          objectStack[objectStack.length - 1]\n        );\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object stack replacer function for replacing the object at the\n * top of the stack.\n * @param {function(this: T, Node, Array<*>): *} valueReader Value reader.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeReplacer(valueReader, thisArg) {\n  return (\n    /**\n     * @param {Node} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        objectStack[objectStack.length - 1] = value;\n      }\n    }\n  );\n}\n\n/**\n * Make an object property pusher function for adding a property to the\n * object at the top of the stack.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertyPusher(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        let array;\n        if (name in object) {\n          array = object[name];\n        } else {\n          array = [];\n          object[name] = array;\n        }\n        array.push(value);\n      }\n    }\n  );\n}\n\n/**\n * Make an object property setter function.\n * @param {function(this: T, Element, Array<*>): *} valueReader Value reader.\n * @param {string} [property] Property.\n * @param {T} [thisArg] The object to use as `this` in `valueReader`.\n * @return {Parser} Parser.\n * @template T\n */\nexport function makeObjectPropertySetter(valueReader, property, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, objectStack) {\n      const value = valueReader.call(thisArg ?? this, node, objectStack);\n      if (value !== undefined) {\n        const object = /** @type {!Object} */ (\n          objectStack[objectStack.length - 1]\n        );\n        const name = property !== undefined ? property : node.localName;\n        object[name] = value;\n      }\n    }\n  );\n}\n\n/**\n * Create a serializer that appends nodes written by its `nodeWriter` to its\n * designated parent. The parent is the `node` of the\n * {@link module:ol/xml~NodeStackItem} at the top of the `objectStack`.\n * @param {function(this: T, Node, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeChildAppender(nodeWriter, thisArg) {\n  return (\n    /**\n     * @param {Element} node Node.\n     * @param {*} value Value to be written.\n     * @param {Array<*>} objectStack Object stack.\n     * @this {*}\n     */\n    function (node, value, objectStack) {\n      nodeWriter.call(thisArg ?? this, node, value, objectStack);\n      const parent = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const parentNode = parent.node;\n      parentNode.appendChild(node);\n    }\n  );\n}\n\n/**\n * Create a serializer that calls the provided `nodeWriter` from\n * {@link module:ol/xml.serialize}. This can be used by the parent writer to have the\n * `nodeWriter` called with an array of values when the `nodeWriter` was\n * designed to serialize a single item. An example would be a LineString\n * geometry writer, which could be reused for writing MultiLineString\n * geometries.\n * @param {function(this: T, Element, V, Array<*>): void} nodeWriter Node writer.\n * @param {T} [thisArg] The object to use as `this` in `nodeWriter`.\n * @return {Serializer} Serializer.\n * @template T, V\n */\nexport function makeArraySerializer(nodeWriter, thisArg) {\n  let serializersNS, nodeFactory;\n  return function (node, value, objectStack) {\n    if (serializersNS === undefined) {\n      serializersNS = {};\n      const serializers = {};\n      serializers[node.localName] = nodeWriter;\n      serializersNS[node.namespaceURI] = serializers;\n      nodeFactory = makeSimpleNodeFactory(node.localName);\n    }\n    serialize(serializersNS, nodeFactory, value, objectStack);\n  };\n}\n\n/**\n * Create a node factory which can use the `keys` passed to\n * {@link module:ol/xml.serialize} or {@link module:ol/xml.pushSerializeAndPop} as node names,\n * or a fixed node name. The namespace of the created nodes can either be fixed,\n * or the parent namespace will be used.\n * @param {string} [fixedNodeName] Fixed node name which will be used for all\n *     created nodes. If not provided, the 3rd argument to the resulting node\n *     factory needs to be provided and will be the nodeName.\n * @param {string} [fixedNamespaceURI] Fixed namespace URI which will be used for\n *     all created nodes. If not provided, the namespace of the parent node will\n *     be used.\n * @return {function(*, Array<*>, string=): (Node|undefined)} Node factory.\n */\nexport function makeSimpleNodeFactory(fixedNodeName, fixedNamespaceURI) {\n  return (\n    /**\n     * @param {*} value Value.\n     * @param {Array<*>} objectStack Object stack.\n     * @param {string} [newNodeName] Node name.\n     * @return {Node} Node.\n     */\n    function (value, objectStack, newNodeName) {\n      const context = /** @type {NodeStackItem} */ (\n        objectStack[objectStack.length - 1]\n      );\n      const node = context.node;\n      let nodeName = fixedNodeName;\n      if (nodeName === undefined) {\n        nodeName = newNodeName;\n      }\n\n      const namespaceURI =\n        fixedNamespaceURI !== undefined ? fixedNamespaceURI : node.namespaceURI;\n      return createElementNS(namespaceURI, /** @type {string} */ (nodeName));\n    }\n  );\n}\n\n/**\n * A node factory that creates a node using the parent's `namespaceURI` and the\n * `nodeName` passed by {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop} to the node factory.\n * @const\n * @type {function(*, Array<*>, string=): (Node|undefined)}\n */\nexport const OBJECT_PROPERTY_NODE_FACTORY = makeSimpleNodeFactory();\n\n/**\n * Create an array of `values` to be used with {@link module:ol/xml.serialize} or\n * {@link module:ol/xml.pushSerializeAndPop}, where `orderedKeys` has to be provided as\n * `key` argument.\n * @param {Object<string, *>} object Key-value pairs for the sequence. Keys can\n *     be a subset of the `orderedKeys`.\n * @param {Array<string>} orderedKeys Keys in the order of the sequence.\n * @return {Array<*>} Values in the order of the sequence. The resulting array\n *     has the same length as the `orderedKeys` array. Values that are not\n *     present in `object` will be `undefined` in the resulting array.\n */\nexport function makeSequence(object, orderedKeys) {\n  const length = orderedKeys.length;\n  const sequence = new Array(length);\n  for (let i = 0; i < length; ++i) {\n    sequence[i] = object[orderedKeys[i]];\n  }\n  return sequence;\n}\n\n/**\n * Create a namespaced structure, using the same values for each namespace.\n * This can be used as a starting point for versioned parsers, when only a few\n * values are version specific.\n * @param {Array<string>} namespaceURIs Namespace URIs.\n * @param {T} structure Structure.\n * @param {Object<string, T>} [structureNS] Namespaced structure to add to.\n * @return {Object<string, T>} Namespaced structure.\n * @template T\n */\nexport function makeStructureNS(namespaceURIs, structure, structureNS) {\n  structureNS = structureNS !== undefined ? structureNS : {};\n  let i, ii;\n  for (i = 0, ii = namespaceURIs.length; i < ii; ++i) {\n    structureNS[namespaceURIs[i]] = structure;\n  }\n  return structureNS;\n}\n\n/**\n * Parse a node using the parsers and object stack.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n */\nexport function parseNode(parsersNS, node, objectStack, thisArg) {\n  let n;\n  for (n = node.firstElementChild; n; n = n.nextElementSibling) {\n    const parsers = parsersNS[n.namespaceURI];\n    if (parsers !== undefined) {\n      const parser = parsers[n.localName];\n      if (parser !== undefined) {\n        parser.call(thisArg, n, objectStack);\n      }\n    }\n  }\n}\n\n/**\n * Push an object on top of the stack, parse and return the popped object.\n * @param {T} object Object.\n * @param {Object<string, Object<string, Parser>>} parsersNS\n *     Parsers by namespace.\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @param {*} [thisArg] The object to use as `this`.\n * @return {T} Object.\n * @template T\n */\nexport function pushParseAndPop(object, parsersNS, node, objectStack, thisArg) {\n  objectStack.push(object);\n  parseNode(parsersNS, node, objectStack, thisArg);\n  return /** @type {T} */ (objectStack.pop());\n}\n\n/**\n * Walk through an array of `values` and call a serializer for each value.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @template T\n */\nexport function serialize(\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  const length = (keys !== undefined ? keys : values).length;\n  let value, node;\n  for (let i = 0; i < length; ++i) {\n    value = values[i];\n    if (value !== undefined) {\n      node = nodeFactory.call(\n        thisArg,\n        value,\n        objectStack,\n        keys !== undefined ? keys[i] : undefined,\n      );\n      if (node !== undefined) {\n        serializersNS[node.namespaceURI][node.localName].call(\n          thisArg,\n          node,\n          value,\n          objectStack,\n        );\n      }\n    }\n  }\n}\n\n/**\n * @param {O} object Object.\n * @param {Object<string, Object<string, Serializer>>} serializersNS\n *     Namespaced serializers.\n * @param {function(this: T, *, Array<*>, (string|undefined)): (Node|undefined)} nodeFactory\n *     Node factory. The `nodeFactory` creates the node whose namespace and name\n *     will be used to choose a node writer from `serializersNS`. This\n *     separation allows us to decide what kind of node to create, depending on\n *     the value we want to serialize. An example for this would be different\n *     geometry writers based on the geometry type.\n * @param {Array<*>} values Values to serialize. An example would be an array\n *     of {@link module:ol/Feature~Feature} instances.\n * @param {Array<*>} objectStack Node stack.\n * @param {Array<string>} [keys] Keys of the `values`. Will be passed to the\n *     `nodeFactory`. This is used for serializing object literals where the\n *     node name relates to the property key. The array length of `keys` has\n *     to match the length of `values`. For serializing a sequence, `keys`\n *     determines the order of the sequence.\n * @param {T} [thisArg] The object to use as `this` for the node factory and\n *     serializers.\n * @return {O|undefined} Object.\n * @template O, T\n */\nexport function pushSerializeAndPop(\n  object,\n  serializersNS,\n  nodeFactory,\n  values,\n  objectStack,\n  keys,\n  thisArg,\n) {\n  objectStack.push(object);\n  serialize(serializersNS, nodeFactory, values, objectStack, keys, thisArg);\n  return /** @type {O|undefined} */ (objectStack.pop());\n}\n\nlet xmlSerializer_ = undefined;\n\n/**\n * Register a XMLSerializer. Can be used  to inject a XMLSerializer\n * where there is no globally available implementation.\n *\n * @param {XMLSerializer} xmlSerializer A XMLSerializer.\n * @api\n */\nexport function registerXMLSerializer(xmlSerializer) {\n  xmlSerializer_ = xmlSerializer;\n}\n\n/**\n * @return {XMLSerializer} The XMLSerializer.\n */\nexport function getXMLSerializer() {\n  if (xmlSerializer_ === undefined && typeof XMLSerializer !== 'undefined') {\n    xmlSerializer_ = new XMLSerializer();\n  }\n  return xmlSerializer_;\n}\n\nlet document_ = undefined;\n\n/**\n * Register a Document to use when creating nodes for XML serializations. Can be used\n * to inject a Document where there is no globally available implementation.\n *\n * @param {Document} document A Document.\n * @api\n */\nexport function registerDocument(document) {\n  document_ = document;\n}\n\n/**\n * Get a document that should be used when creating nodes for XML serializations.\n * @return {Document} The document.\n */\nexport function getDocument() {\n  if (document_ === undefined && typeof document !== 'undefined') {\n    document_ = document.implementation.createDocument('', '', null);\n  }\n  return document_;\n}\n","/**\n * @module ol/format/XML\n */\nimport {abstract} from '../util.js';\nimport {isDocument, parse} from '../xml.js';\n\n/**\n * @classdesc\n * Generic format for reading non-feature XML data\n *\n * @abstract\n */\nclass XML {\n  /**\n   * Read the source document.\n   *\n   * @param {Document|Element|string} source The XML source.\n   * @return {Object|null} An object representing the source.\n   * @api\n   */\n  read(source) {\n    if (!source) {\n      return null;\n    }\n    if (typeof source === 'string') {\n      const doc = parse(source);\n      return this.readFromDocument(doc);\n    }\n    if (isDocument(source)) {\n      return this.readFromDocument(/** @type {Document} */ (source));\n    }\n    return this.readFromNode(/** @type {Element} */ (source));\n  }\n\n  /**\n   * @param {Document} doc Document.\n   * @return {Object|null} Object\n   */\n  readFromDocument(doc) {\n    for (let n = doc.firstChild; n; n = n.nextSibling) {\n      if (n.nodeType == Node.ELEMENT_NODE) {\n        return this.readFromNode(/** @type {Element} */ (n));\n      }\n    }\n    return null;\n  }\n\n  /**\n   * @abstract\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   */\n  readFromNode(node) {\n    abstract();\n  }\n}\n\nexport default XML;\n","/**\n * @module ol/format/xlink\n */\n\n/**\n * @const\n * @type {string}\n */\nconst NAMESPACE_URI = 'http://www.w3.org/1999/xlink';\n\n/**\n * @param {Element} node Node.\n * @return {string|null} href.\n */\nexport function readHref(node) {\n  return node.getAttributeNS(NAMESPACE_URI, 'href');\n}\n","/**\n * @module ol/format/xsd\n */\nimport {padNumber} from '../string.js';\nimport {getAllTextContent, getDocument} from '../xml.js';\n\n/**\n * @param {Node} node Node.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBoolean(node) {\n  const s = getAllTextContent(node, false);\n  return readBooleanString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {boolean|undefined} Boolean.\n */\nexport function readBooleanString(string) {\n  const m = /^\\s*(true|1)|(false|0)\\s*$/.exec(string);\n  if (m) {\n    return m[1] !== undefined || false;\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} DateTime in seconds.\n */\nexport function readDateTime(node) {\n  const s = getAllTextContent(node, false);\n  const dateTime = Date.parse(s);\n  return isNaN(dateTime) ? undefined : dateTime / 1000;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimal(node) {\n  const s = getAllTextContent(node, false);\n  return readDecimalString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Decimal.\n */\nexport function readDecimalString(string) {\n  // FIXME check spec\n  const m = /^\\s*([+\\-]?\\d*\\.?\\d+(?:e[+\\-]?\\d+)?)\\s*$/i.exec(string);\n  if (m) {\n    return parseFloat(m[1]);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {number|undefined} Non negative integer.\n */\nexport function readPositiveInteger(node) {\n  const s = getAllTextContent(node, false);\n  return readNonNegativeIntegerString(s);\n}\n\n/**\n * @param {string} string String.\n * @return {number|undefined} Non negative integer.\n */\nexport function readNonNegativeIntegerString(string) {\n  const m = /^\\s*(\\d+)\\s*$/.exec(string);\n  if (m) {\n    return parseInt(m[1], 10);\n  }\n  return undefined;\n}\n\n/**\n * @param {Node} node Node.\n * @return {string|undefined} String.\n */\nexport function readString(node) {\n  return getAllTextContent(node, false).trim();\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the boolean to.\n * @param {boolean} bool Boolean.\n */\nexport function writeBooleanTextNode(node, bool) {\n  writeStringTextNode(node, bool ? '1' : '0');\n}\n\n/**\n * @param {Node} node Node to append a CDATA Section with the string to.\n * @param {string} string String.\n */\nexport function writeCDATASection(node, string) {\n  node.appendChild(getDocument().createCDATASection(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the dateTime to.\n * @param {number} dateTime DateTime in seconds.\n */\nexport function writeDateTimeTextNode(node, dateTime) {\n  const date = new Date(dateTime * 1000);\n  const string =\n    date.getUTCFullYear() +\n    '-' +\n    padNumber(date.getUTCMonth() + 1, 2) +\n    '-' +\n    padNumber(date.getUTCDate(), 2) +\n    'T' +\n    padNumber(date.getUTCHours(), 2) +\n    ':' +\n    padNumber(date.getUTCMinutes(), 2) +\n    ':' +\n    padNumber(date.getUTCSeconds(), 2) +\n    'Z';\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} decimal Decimal.\n */\nexport function writeDecimalTextNode(node, decimal) {\n  const string = decimal.toPrecision();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\n/**\n * @param {Node} node Node to append a TextNode with the decimal to.\n * @param {number} nonNegativeInteger Non negative integer.\n */\nexport function writeNonNegativeIntegerTextNode(node, nonNegativeInteger) {\n  const string = nonNegativeInteger.toString();\n  node.appendChild(getDocument().createTextNode(string));\n}\n\nconst whiteSpaceStart = /^\\s/;\nconst whiteSpaceEnd = /\\s$/;\nconst cdataCharacters = /(\\n|\\t|\\r|<|&| {2})/;\n\n/**\n * @param {Node} node Node to append a TextNode with the string to.\n * @param {string} string String.\n */\nexport function writeStringTextNode(node, string) {\n  if (\n    typeof string === 'string' &&\n    (whiteSpaceStart.test(string) ||\n      whiteSpaceEnd.test(string) ||\n      cdataCharacters.test(string))\n  ) {\n    string.split(']]>').forEach((part, i, a) => {\n      if (i < a.length - 1) {\n        part += ']]';\n      }\n      if (i > 0) {\n        part = '>' + part;\n      }\n      writeCDATASection(node, part);\n    });\n  } else {\n    node.appendChild(getDocument().createTextNode(string));\n  }\n}\n","/**\n * @module ol/format/OWS\n */\nimport {\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport XML from './XML.js';\nimport {readHref} from './xlink.js';\nimport {readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ServiceIdentification': makeObjectPropertySetter(readServiceIdentification),\n  'ServiceProvider': makeObjectPropertySetter(readServiceProvider),\n  'OperationsMetadata': makeObjectPropertySetter(readOperationsMetadata),\n});\n\nclass OWS extends XML {\n  constructor() {\n    super();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    const owsObject = pushParseAndPop({}, PARSERS, node, []);\n    return owsObject ? owsObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ADDRESS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DeliveryPoint': makeObjectPropertySetter(readString),\n  'City': makeObjectPropertySetter(readString),\n  'AdministrativeArea': makeObjectPropertySetter(readString),\n  'PostalCode': makeObjectPropertySetter(readString),\n  'Country': makeObjectPropertySetter(readString),\n  'ElectronicMailAddress': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst ALLOWED_VALUES_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Value': makeObjectPropertyPusher(readValue),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONSTRAINT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'AllowedValues': makeObjectPropertySetter(readAllowedValues),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTACT_INFO_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Phone': makeObjectPropertySetter(readPhone),\n  'Address': makeObjectPropertySetter(readAddress),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DCP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'HTTP': makeObjectPropertySetter(readHttp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst HTTP_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Get': makeObjectPropertyPusher(readGet),\n  'Post': undefined, // TODO\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'DCP': makeObjectPropertySetter(readDcp),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst OPERATIONS_METADATA_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Operation': readOperation,\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PHONE_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Voice': makeObjectPropertySetter(readString),\n  'Facsimile': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst REQUEST_METHOD_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Constraint': makeObjectPropertyPusher(readConstraint),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_CONTACT_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'IndividualName': makeObjectPropertySetter(readString),\n  'PositionName': makeObjectPropertySetter(readString),\n  'ContactInfo': makeObjectPropertySetter(readContactInfo),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_IDENTIFICATION_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Abstract': makeObjectPropertySetter(readString),\n  'AccessConstraints': makeObjectPropertySetter(readString),\n  'Fees': makeObjectPropertySetter(readString),\n  'Title': makeObjectPropertySetter(readString),\n  'ServiceTypeVersion': makeObjectPropertySetter(readString),\n  'ServiceType': makeObjectPropertySetter(readString),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst SERVICE_PROVIDER_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'ProviderName': makeObjectPropertySetter(readString),\n  'ProviderSite': makeObjectPropertySetter(readHref),\n  'ServiceContact': makeObjectPropertySetter(readServiceContact),\n});\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The address.\n */\nfunction readAddress(node, objectStack) {\n  return pushParseAndPop({}, ADDRESS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The values.\n */\nfunction readAllowedValues(node, objectStack) {\n  return pushParseAndPop({}, ALLOWED_VALUES_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The constraint.\n */\nfunction readConstraint(node, objectStack) {\n  const name = node.getAttribute('name');\n  if (!name) {\n    return undefined;\n  }\n  return pushParseAndPop({'name': name}, CONSTRAINT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The contact info.\n */\nfunction readContactInfo(node, objectStack) {\n  return pushParseAndPop({}, CONTACT_INFO_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The DCP.\n */\nfunction readDcp(node, objectStack) {\n  return pushParseAndPop({}, DCP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The GET object.\n */\nfunction readGet(node, objectStack) {\n  const href = readHref(node);\n  if (!href) {\n    return undefined;\n  }\n  return pushParseAndPop(\n    {'href': href},\n    REQUEST_METHOD_PARSERS,\n    node,\n    objectStack,\n  );\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The HTTP object.\n */\nfunction readHttp(node, objectStack) {\n  return pushParseAndPop({}, HTTP_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operation.\n */\nfunction readOperation(node, objectStack) {\n  const name = node.getAttribute('name');\n  const value = pushParseAndPop({}, OPERATION_PARSERS, node, objectStack);\n  if (!value) {\n    return undefined;\n  }\n  const object = /** @type {Object} */ (objectStack[objectStack.length - 1]);\n  object[name] = value;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The operations metadata.\n */\nfunction readOperationsMetadata(node, objectStack) {\n  return pushParseAndPop({}, OPERATIONS_METADATA_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The phone.\n */\nfunction readPhone(node, objectStack) {\n  return pushParseAndPop({}, PHONE_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service identification.\n */\nfunction readServiceIdentification(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_IDENTIFICATION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service contact.\n */\nfunction readServiceContact(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_CONTACT_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} The service provider.\n */\nfunction readServiceProvider(node, objectStack) {\n  return pushParseAndPop({}, SERVICE_PROVIDER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {string|undefined} The value.\n */\nfunction readValue(node, objectStack) {\n  return readString(node);\n}\n\nexport default OWS;\n","/**\n * @module ol/format/WMTSCapabilities\n */\nimport {boundingExtent} from '../extent.js';\nimport {\n  makeArrayPusher,\n  makeObjectPropertyPusher,\n  makeObjectPropertySetter,\n  makeStructureNS,\n  pushParseAndPop,\n} from '../xml.js';\nimport OWS from './OWS.js';\nimport XML from './XML.js';\nimport {readHref} from './xlink.js';\nimport {readDecimal, readPositiveInteger, readString} from './xsd.js';\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst NAMESPACE_URIS = [null, 'http://www.opengis.net/wmts/1.0'];\n\n/**\n * @const\n * @type {Array<null|string>}\n */\nconst OWS_NAMESPACE_URIS = [null, 'http://www.opengis.net/ows/1.1'];\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Contents': makeObjectPropertySetter(readContents),\n});\n\n/**\n * @classdesc\n * Format for reading WMTS capabilities data.\n *\n * @api\n */\nclass WMTSCapabilities extends XML {\n  constructor() {\n    super();\n\n    /**\n     * @type {OWS}\n     * @private\n     */\n    this.owsParser_ = new OWS();\n  }\n\n  /**\n   * @param {Element} node Node.\n   * @return {Object|null} Object\n   * @override\n   */\n  readFromNode(node) {\n    let version = node.getAttribute('version');\n    if (version) {\n      version = version.trim();\n    }\n    let WMTSCapabilityObject = this.owsParser_.readFromNode(node);\n    if (!WMTSCapabilityObject) {\n      return null;\n    }\n    WMTSCapabilityObject['version'] = version;\n    WMTSCapabilityObject = pushParseAndPop(\n      WMTSCapabilityObject,\n      PARSERS,\n      node,\n      [],\n    );\n    return WMTSCapabilityObject ? WMTSCapabilityObject : null;\n  }\n}\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst CONTENTS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'Layer': makeObjectPropertyPusher(readLayer),\n  'TileMatrixSet': makeObjectPropertyPusher(readTileMatrixSet),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst LAYER_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Style': makeObjectPropertyPusher(readStyle),\n    'Format': makeObjectPropertyPusher(readString),\n    'TileMatrixSetLink': makeObjectPropertyPusher(readTileMatrixSetLink),\n    'Dimension': makeObjectPropertyPusher(readDimensions),\n    'ResourceURL': makeObjectPropertyPusher(readResourceUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Abstract': makeObjectPropertySetter(readString),\n    'WGS84BoundingBox': makeObjectPropertySetter(readBoundingBox),\n    'BoundingBox': makeObjectPropertyPusher(readBoundingBoxWithCrs),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst STYLE_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'LegendURL': makeObjectPropertyPusher(readLegendUrl),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Title': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LINKS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixSet': makeObjectPropertySetter(readString),\n  'TileMatrixSetLimits': makeObjectPropertySetter(readTileMatrixLimitsList),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_LIST_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrixLimits': makeArrayPusher(readTileMatrixLimits),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_LIMITS_PARSERS = makeStructureNS(NAMESPACE_URIS, {\n  'TileMatrix': makeObjectPropertySetter(readString),\n  'MinTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileRow': makeObjectPropertySetter(readPositiveInteger),\n  'MinTileCol': makeObjectPropertySetter(readPositiveInteger),\n  'MaxTileCol': makeObjectPropertySetter(readPositiveInteger),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst DIMENSION_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'Default': makeObjectPropertySetter(readString),\n    'Value': makeObjectPropertyPusher(readString),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst WGS84_BBOX_READERS = makeStructureNS(OWS_NAMESPACE_URIS, {\n  'LowerCorner': makeArrayPusher(readCoordinates),\n  'UpperCorner': makeArrayPusher(readCoordinates),\n});\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TMS_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'WellKnownScaleSet': makeObjectPropertySetter(readString),\n    'TileMatrix': makeObjectPropertyPusher(readTileMatrix),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'SupportedCRS': makeObjectPropertySetter(readString),\n    'Identifier': makeObjectPropertySetter(readString),\n    'BoundingBox': makeObjectPropertySetter(readBoundingBox),\n  }),\n);\n\n/**\n * @const\n * @type {Object<string, Object<string, import(\"../xml.js\").Parser>>}\n */\n// @ts-ignore\nconst TM_PARSERS = makeStructureNS(\n  NAMESPACE_URIS,\n  {\n    'TopLeftCorner': makeObjectPropertySetter(readCoordinates),\n    'ScaleDenominator': makeObjectPropertySetter(readDecimal),\n    'TileWidth': makeObjectPropertySetter(readPositiveInteger),\n    'TileHeight': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixWidth': makeObjectPropertySetter(readPositiveInteger),\n    'MatrixHeight': makeObjectPropertySetter(readPositiveInteger),\n  },\n  makeStructureNS(OWS_NAMESPACE_URIS, {\n    'Identifier': makeObjectPropertySetter(readString),\n  }),\n);\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Attribution object.\n */\nfunction readContents(node, objectStack) {\n  return pushParseAndPop({}, CONTENTS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Layers object.\n */\nfunction readLayer(node, objectStack) {\n  return pushParseAndPop({}, LAYER_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set object.\n */\nfunction readTileMatrixSet(node, objectStack) {\n  return pushParseAndPop({}, TMS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Style object.\n */\nfunction readStyle(node, objectStack) {\n  const style = pushParseAndPop({}, STYLE_PARSERS, node, objectStack);\n  if (!style) {\n    return undefined;\n  }\n  const isDefault = node.getAttribute('isDefault') === 'true';\n  style['isDefault'] = isDefault;\n  return style;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Tile Matrix Set Link object.\n */\nfunction readTileMatrixSetLink(node, objectStack) {\n  return pushParseAndPop({}, TMS_LINKS_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Dimension object.\n */\nfunction readDimensions(node, objectStack) {\n  return pushParseAndPop({}, DIMENSION_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Resource URL object.\n */\nfunction readResourceUrl(node, objectStack) {\n  const format = node.getAttribute('format');\n  const template = node.getAttribute('template');\n  const resourceType = node.getAttribute('resourceType');\n  const resource = {};\n  if (format) {\n    resource['format'] = format;\n  }\n  if (template) {\n    resource['template'] = template;\n  }\n  if (resourceType) {\n    resource['resourceType'] = resourceType;\n  }\n  return resource;\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBox(node, objectStack) {\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return boundingExtent(coordinates);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} BBox object.\n */\nfunction readBoundingBoxWithCrs(node, objectStack) {\n  const crs = node.getAttribute('crs');\n  const coordinates = pushParseAndPop(\n    [],\n    WGS84_BBOX_READERS,\n    node,\n    objectStack,\n  );\n  if (coordinates.length != 2) {\n    return undefined;\n  }\n  return {extent: boundingExtent(coordinates), crs: crs};\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Legend object.\n */\nfunction readLegendUrl(node, objectStack) {\n  const legend = {};\n  legend['format'] = node.getAttribute('format');\n  legend['href'] = readHref(node);\n  return legend;\n}\n\n/**\n * @param {Node} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} Coordinates object.\n */\nfunction readCoordinates(node, objectStack) {\n  const coordinates = readString(node).split(/\\s+/);\n  if (!coordinates || coordinates.length != 2) {\n    return undefined;\n  }\n  const x = +coordinates[0];\n  const y = +coordinates[1];\n  if (isNaN(x) || isNaN(y)) {\n    return undefined;\n  }\n  return [x, y];\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrix object.\n */\nfunction readTileMatrix(node, objectStack) {\n  return pushParseAndPop({}, TM_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixSetLimits Object.\n */\nfunction readTileMatrixLimitsList(node, objectStack) {\n  return pushParseAndPop([], TMS_LIMITS_LIST_PARSERS, node, objectStack);\n}\n\n/**\n * @param {Element} node Node.\n * @param {Array<*>} objectStack Object stack.\n * @return {Object|undefined} TileMatrixLimits Array.\n */\nfunction readTileMatrixLimits(node, objectStack) {\n  return pushParseAndPop({}, TMS_LIMITS_PARSERS, node, objectStack);\n}\n\nexport default WMTSCapabilities;\n","/**\n * @module ol/render/canvas/ZIndexContext\n */\n\nimport {getSharedCanvasContext2D} from '../../dom.js';\n\n/** @typedef {CanvasRenderingContext2D & {globalAlpha: any}} ZIndexContextProxy */\n\n/**\n * @extends {CanvasRenderingContext2D}\n */\nclass ZIndexContext {\n  constructor() {\n    /**\n     * @private\n     * @type {Array<Array<*>>}\n     */\n    this.instructions_ = [];\n    /**\n     * @type {number}\n     */\n    this.zIndex = 0;\n    /**\n     * @private\n     * @type {number}\n     */\n    this.offset_ = 0;\n\n    /**\n     * @private\n     * @type {ZIndexContextProxy}\n     */\n    this.context_ = /** @type {ZIndexContextProxy} */ (\n      new Proxy(getSharedCanvasContext2D(), {\n        get: (target, property) => {\n          if (\n            typeof (/** @type {*} */ (getSharedCanvasContext2D())[property]) !==\n            'function'\n          ) {\n            // we only accept calling functions on the proxy, not accessing properties\n            return undefined;\n          }\n          this.push_(property);\n          return this.pushMethodArgs_;\n        },\n        set: (target, property, value) => {\n          this.push_(property, value);\n          return true;\n        },\n      })\n    );\n  }\n\n  /**\n   * @param {...*} args Arguments to push to the instructions array.\n   * @private\n   */\n  push_(...args) {\n    const instructions = this.instructions_;\n    const index = this.zIndex + this.offset_;\n    if (!instructions[index]) {\n      instructions[index] = [];\n    }\n    instructions[index].push(...args);\n  }\n\n  /**\n   * @private\n   * @param {...*} args Args.\n   * @return {ZIndexContext} This.\n   */\n  pushMethodArgs_ = (...args) => {\n    this.push_(args);\n    return this;\n  };\n\n  /**\n   * Push a function that renders to the context directly.\n   * @param {function(CanvasRenderingContext2D): void} render Function.\n   */\n  pushFunction(render) {\n    this.push_(render);\n  }\n\n  /**\n   * Get a proxy for CanvasRenderingContext2D which does not support getting state\n   * (e.g. `context.globalAlpha`, which will return `undefined`). To set state, if it relies on a\n   * previous state (e.g. `context.globalAlpha = context.globalAlpha / 2`), set a function,\n   * e.g. `context.globalAlpha = (context) => context.globalAlpha / 2`.\n   * @return {ZIndexContextProxy} Context.\n   */\n  getContext() {\n    return this.context_;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  draw(context) {\n    this.instructions_.forEach((instructionsAtIndex) => {\n      for (let i = 0, ii = instructionsAtIndex.length; i < ii; ++i) {\n        const property = instructionsAtIndex[i];\n        if (typeof property === 'function') {\n          property(context);\n          continue;\n        }\n        const instructionAtIndex = instructionsAtIndex[++i];\n        if (typeof (/** @type {*} */ (context)[property]) === 'function') {\n          /** @type {*} */ (context)[property](...instructionAtIndex);\n        } else {\n          if (typeof instructionAtIndex === 'function') {\n            /** @type {*} */ (context)[property] = instructionAtIndex(context);\n            continue;\n          }\n          /** @type {*} */ (context)[property] = instructionAtIndex;\n        }\n      }\n    });\n  }\n\n  clear() {\n    this.instructions_.length = 0;\n    this.zIndex = 0;\n    this.offset_ = 0;\n  }\n\n  /**\n   * Offsets the zIndex by the highest current zIndex. Useful for rendering multiple worlds or tiles, to\n   * avoid conflicting context.clip() or context.save()/restore() calls.\n   */\n  offset() {\n    this.offset_ = this.instructions_.length;\n    this.zIndex = 0;\n  }\n}\n\nexport default ZIndexContext;\n","/**\n * @module ol/renderer/Layer\n */\nimport ImageState from '../ImageState.js';\nimport Observable from '../Observable.js';\nimport EventType from '../events/EventType.js';\nimport {abstract} from '../util.js';\n\nconst maxStaleKeys = 5;\n\n/**\n * @template {import(\"../layer/Layer.js\").default} LayerType\n */\nclass LayerRenderer extends Observable {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super();\n\n    /**\n     * The renderer is initialized and ready to render.\n     * @type {boolean}\n     */\n    this.ready = true;\n\n    /** @private */\n    this.boundHandleImageChange_ = this.handleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {LayerType}\n     */\n    this.layer_ = layer;\n\n    /**\n     * @type {Array<string>}\n     * @private\n     */\n    this.staleKeys_ = new Array();\n\n    /**\n     * @type {number}\n     * @protected\n     */\n    this.maxStaleKeys = maxStaleKeys;\n  }\n\n  /**\n   * @return {Array<string>} Get the list of stale keys.\n   */\n  getStaleKeys() {\n    return this.staleKeys_;\n  }\n\n  /**\n   * @param {string} key The new stale key.\n   */\n  prependStaleKey(key) {\n    this.staleKeys_.unshift(key);\n    if (this.staleKeys_.length > this.maxStaleKeys) {\n      this.staleKeys_.length = this.maxStaleKeys;\n    }\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../Feature\").FeatureLike>>} Promise that resolves with\n   * an array of features.\n   */\n  getFeatures(pixel) {\n    return abstract();\n  }\n\n  /**\n   * @param {import(\"../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   */\n  getData(pixel) {\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   */\n  prepareFrame(frameState) {\n    return abstract();\n  }\n\n  /**\n   * Render the layer.\n   * @abstract\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   */\n  renderFrame(frameState, target) {\n    return abstract();\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"./vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"./Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    return undefined;\n  }\n\n  /**\n   * @return {LayerType} Layer.\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @abstract\n   */\n  handleFontsChanged() {}\n\n  /**\n   * Handle changes in image state.\n   * @param {import(\"../events/Event.js\").default} event Image change event.\n   * @private\n   */\n  handleImageChange_(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    if (\n      image.getState() === ImageState.LOADED ||\n      image.getState() === ImageState.ERROR\n    ) {\n      this.renderIfReadyAndVisible();\n    }\n  }\n\n  /**\n   * Load the image if not already loaded, and register the image change\n   * listener if needed.\n   * @param {import(\"../Image.js\").default} image Image.\n   * @return {boolean} `true` if the image is already loaded, `false` otherwise.\n   * @protected\n   */\n  loadImage(image) {\n    let imageState = image.getState();\n    if (imageState != ImageState.LOADED && imageState != ImageState.ERROR) {\n      image.addEventListener(EventType.CHANGE, this.boundHandleImageChange_);\n    }\n    if (imageState == ImageState.IDLE) {\n      image.load();\n      imageState = image.getState();\n    }\n    return imageState == ImageState.LOADED;\n  }\n\n  /**\n   * @protected\n   */\n  renderIfReadyAndVisible() {\n    const layer = this.getLayer();\n    if (layer && layer.getVisible() && layer.getSourceState() === 'ready') {\n      layer.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferred(frameState) {}\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.layer_;\n    super.disposeInternal();\n  }\n}\n\nexport default LayerRenderer;\n","/**\n * @module ol/renderer/canvas/Layer\n */\nimport {equals} from '../../array.js';\nimport {asArray} from '../../color.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {\n  getBottomLeft,\n  getBottomRight,\n  getHeight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n} from '../../extent.js';\nimport RenderEvent from '../../render/Event.js';\nimport RenderEventType from '../../render/EventType.js';\nimport ZIndexContext from '../../render/canvas/ZIndexContext.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  equivalent,\n  makeInverse,\n  toString as toTransformString,\n} from '../../transform.js';\nimport LayerRenderer from '../Layer.js';\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * @type {CanvasRenderingContext2D}\n */\nlet pixelContext = null;\n\nfunction createPixelContext() {\n  pixelContext = createCanvasContext2D(1, 1, undefined, {\n    willReadFrequently: true,\n  });\n}\n\n/**\n * @abstract\n * @template {import(\"../../layer/Layer.js\").default} LayerType\n * @extends {LayerRenderer<LayerType>}\n */\nclass CanvasLayerRenderer extends LayerRenderer {\n  /**\n   * @param {LayerType} layer Layer.\n   */\n  constructor(layer) {\n    super(layer);\n\n    /**\n     * @protected\n     * @type {HTMLElement}\n     */\n    this.container = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedResolution;\n\n    /**\n     * A temporary transform.  The values in this transform should only be used in a\n     * function that sets the values.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tempTransform = createTransform();\n\n    /**\n     * The transform for rendered pixels to viewport CSS pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.pixelTransform = createTransform();\n\n    /**\n     * The transform for viewport CSS pixels to rendered pixels.  This transform must\n     * be set when rendering a frame and may be used by other functions after rendering.\n     * @protected\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.inversePixelTransform = createTransform();\n\n    /**\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context = null;\n\n    /**\n     * @private\n     * @type {ZIndexContext}\n     */\n    this.deferredContext_ = null;\n\n    /**\n     * @type {boolean}\n     */\n    this.containerReused = false;\n\n    /**\n     * @protected\n     * @type {import(\"../../Map.js\").FrameState|null}\n     */\n    this.frameState = null;\n  }\n\n  /**\n   * @param {import('../../DataTile.js').ImageLike} image Image.\n   * @param {number} col The column index.\n   * @param {number} row The row index.\n   * @return {Uint8ClampedArray|null} The image data.\n   */\n  getImageData(image, col, row) {\n    if (!pixelContext) {\n      createPixelContext();\n    }\n    pixelContext.clearRect(0, 0, 1, 1);\n\n    let data;\n    try {\n      pixelContext.drawImage(image, col, row, 1, 1, 0, 0, 1, 1);\n      data = pixelContext.getImageData(0, 0, 1, 1).data;\n    } catch {\n      pixelContext = null;\n      return null;\n    }\n    return data;\n  }\n\n  /**\n   * @param {import('../../Map.js').FrameState} frameState Frame state.\n   * @return {string} Background color.\n   */\n  getBackground(frameState) {\n    const layer = this.getLayer();\n    let background = layer.getBackground();\n    if (typeof background === 'function') {\n      background = background(frameState.viewState.resolution);\n    }\n    return background || undefined;\n  }\n\n  /**\n   * Get a rendering container from an existing target, if compatible.\n   * @param {HTMLElement} target Potential render target.\n   * @param {string} transform CSS transform matrix.\n   * @param {string} [backgroundColor] Background color.\n   */\n  useContainer(target, transform, backgroundColor) {\n    const layerClassName = this.getLayer().getClassName();\n    let container, context;\n    if (\n      target &&\n      target.className === layerClassName &&\n      (!backgroundColor ||\n        (target &&\n          target.style.backgroundColor &&\n          equals(\n            asArray(target.style.backgroundColor),\n            asArray(backgroundColor),\n          )))\n    ) {\n      const canvas = target.firstElementChild;\n      if (canvas instanceof HTMLCanvasElement) {\n        context = canvas.getContext('2d');\n      }\n    }\n    if (context && equivalent(context.canvas.style.transform, transform)) {\n      // Container of the previous layer renderer can be used.\n      this.container = target;\n      this.context = context;\n      this.containerReused = true;\n    } else if (this.containerReused) {\n      // Previously reused container cannot be used any more.\n      this.container = null;\n      this.context = null;\n      this.containerReused = false;\n    } else if (this.container) {\n      this.container.style.backgroundColor = null;\n    }\n    if (!this.container) {\n      container = document.createElement('div');\n      container.className = layerClassName;\n      let style = container.style;\n      style.position = 'absolute';\n      style.width = '100%';\n      style.height = '100%';\n      context = createCanvasContext2D();\n      const canvas = context.canvas;\n      container.appendChild(canvas);\n      style = canvas.style;\n      style.position = 'absolute';\n      style.left = '0';\n      style.transformOrigin = 'top left';\n      this.container = container;\n      this.context = context;\n    }\n    if (\n      !this.containerReused &&\n      backgroundColor &&\n      !this.container.style.backgroundColor\n    ) {\n      this.container.style.backgroundColor = backgroundColor;\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent Clip extent.\n   * @protected\n   */\n  clipUnrotated(context, frameState, extent) {\n    const topLeft = getTopLeft(extent);\n    const topRight = getTopRight(extent);\n    const bottomRight = getBottomRight(extent);\n    const bottomLeft = getBottomLeft(extent);\n\n    applyTransform(frameState.coordinateToPixelTransform, topLeft);\n    applyTransform(frameState.coordinateToPixelTransform, topRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomRight);\n    applyTransform(frameState.coordinateToPixelTransform, bottomLeft);\n\n    const inverted = this.inversePixelTransform;\n    applyTransform(inverted, topLeft);\n    applyTransform(inverted, topRight);\n    applyTransform(inverted, bottomRight);\n    applyTransform(inverted, bottomLeft);\n\n    context.save();\n    context.beginPath();\n    context.moveTo(Math.round(topLeft[0]), Math.round(topLeft[1]));\n    context.lineTo(Math.round(topRight[0]), Math.round(topRight[1]));\n    context.lineTo(Math.round(bottomRight[0]), Math.round(bottomRight[1]));\n    context.lineTo(Math.round(bottomLeft[0]), Math.round(bottomLeft[1]));\n    context.clip();\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @protected\n   */\n  prepareContainer(frameState, target) {\n    const extent = frameState.extent;\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const pixelRatio = frameState.pixelRatio;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n    // set forward and inverse pixel transforms\n    composeTransform(\n      this.pixelTransform,\n      frameState.size[0] / 2,\n      frameState.size[1] / 2,\n      1 / pixelRatio,\n      1 / pixelRatio,\n      rotation,\n      -width / 2,\n      -height / 2,\n    );\n    makeInverse(this.inversePixelTransform, this.pixelTransform);\n\n    const canvasTransform = toTransformString(this.pixelTransform);\n    this.useContainer(target, canvasTransform, this.getBackground(frameState));\n\n    if (!this.containerReused) {\n      const canvas = this.context.canvas;\n      if (canvas.width != width || canvas.height != height) {\n        canvas.width = width;\n        canvas.height = height;\n      } else {\n        this.context.clearRect(0, 0, width, height);\n      }\n      if (canvasTransform !== canvas.style.transform) {\n        canvas.style.transform = canvasTransform;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../render/EventType.js\").default} type Event type.\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @private\n   */\n  dispatchRenderEvent_(type, context, frameState) {\n    const layer = this.getLayer();\n    if (layer.hasListener(type)) {\n      const event = new RenderEvent(\n        type,\n        this.inversePixelTransform,\n        frameState,\n        context,\n      );\n      layer.dispatchEvent(event);\n    }\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  preRender(context, frameState) {\n    this.frameState = frameState;\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.PRERENDER, context, frameState);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @protected\n   */\n  postRender(context, frameState) {\n    if (frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(RenderEventType.POSTRENDER, context, frameState);\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeferredInternal(frameState) {}\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import('../../render/canvas/ZIndexContext.js').ZIndexContextProxy} Context.\n   */\n  getRenderContext(frameState) {\n    if (frameState.declutter && !this.deferredContext_) {\n      this.deferredContext_ = new ZIndexContext();\n    }\n    return frameState.declutter\n      ? this.deferredContext_.getContext()\n      : this.context;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferred(frameState) {\n    if (!frameState.declutter) {\n      return;\n    }\n    this.dispatchRenderEvent_(\n      RenderEventType.PRERENDER,\n      this.context,\n      frameState,\n    );\n    if (frameState.declutter && this.deferredContext_) {\n      this.deferredContext_.draw(this.context);\n      this.deferredContext_.clear();\n    }\n    this.renderDeferredInternal(frameState);\n    this.dispatchRenderEvent_(\n      RenderEventType.POSTRENDER,\n      this.context,\n      frameState,\n    );\n  }\n\n  /**\n   * Creates a transform for rendering to an element that will be rotated after rendering.\n   * @param {import(\"../../coordinate.js\").Coordinate} center Center.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} width Width of the rendered element (in pixels).\n   * @param {number} height Height of the rendered element (in pixels).\n   * @param {number} offsetX Offset on the x-axis in view coordinates.\n   * @protected\n   * @return {!import(\"../../transform.js\").Transform} Transform.\n   */\n  getRenderTransform(\n    center,\n    resolution,\n    rotation,\n    pixelRatio,\n    width,\n    height,\n    offsetX,\n  ) {\n    const dx1 = width / 2;\n    const dy1 = height / 2;\n    const sx = pixelRatio / resolution;\n    const sy = -sx;\n    const dx2 = -center[0] + offsetX;\n    const dy2 = -center[1];\n    return composeTransform(\n      this.tempTransform,\n      dx1,\n      dy1,\n      sx,\n      sy,\n      -rotation,\n      dx2,\n      dy2,\n    );\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    delete this.frameState;\n    super.disposeInternal();\n  }\n}\n\nexport default CanvasLayerRenderer;\n","/**\n * @module ol/renderer/canvas/ImageLayer\n */\nimport ImageState from '../../ImageState.js';\nimport ViewHint from '../../ViewHint.js';\nimport {\n  containsCoordinate,\n  containsExtent,\n  getHeight,\n  getIntersection,\n  getWidth,\n  intersects as intersectsExtent,\n  isEmpty,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for image layers.\n * @api\n */\nclass CanvasImageLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/Image.js\").default} imageLayer Image layer.\n   */\n  constructor(imageLayer) {\n    super(imageLayer);\n\n    /**\n     * @protected\n     * @type {?import(\"../../Image.js\").default}\n     */\n    this.image = null;\n  }\n\n  /**\n   * @return {import('../../DataTile.js').ImageLike} Image.\n   */\n  getImage() {\n    return !this.image ? null : this.image.getImage();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewResolution = viewState.resolution;\n\n    const imageSource = this.getLayer().getSource();\n\n    const hints = frameState.viewHints;\n\n    let renderedExtent = frameState.extent;\n    if (layerState.extent !== undefined) {\n      renderedExtent = getIntersection(\n        renderedExtent,\n        fromUserExtent(layerState.extent, viewState.projection),\n      );\n    }\n\n    if (\n      !hints[ViewHint.ANIMATING] &&\n      !hints[ViewHint.INTERACTING] &&\n      !isEmpty(renderedExtent)\n    ) {\n      if (imageSource) {\n        const projection = viewState.projection;\n        const image = imageSource.getImage(\n          renderedExtent,\n          viewResolution,\n          pixelRatio,\n          projection,\n        );\n        if (image) {\n          if (this.loadImage(image)) {\n            this.image = image;\n          } else if (image.getState() === ImageState.EMPTY) {\n            this.image = null;\n          }\n        }\n      } else {\n        this.image = null;\n      }\n    }\n\n    return !!this.image;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const imageExtent = this.image.getExtent();\n    const img = this.image.getImage();\n\n    const imageMapWidth = getWidth(imageExtent);\n    const col = Math.floor(\n      img.width * ((coordinate[0] - imageExtent[0]) / imageMapWidth),\n    );\n    if (col < 0 || col >= img.width) {\n      return null;\n    }\n\n    const imageMapHeight = getHeight(imageExtent);\n    const row = Math.floor(\n      img.height * ((imageExtent[3] - coordinate[1]) / imageMapHeight),\n    );\n    if (row < 0 || row >= img.height) {\n      return null;\n    }\n\n    return this.getImageData(img, col, row);\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const image = this.image;\n    const imageExtent = image.getExtent();\n    const imageResolution = image.getResolution();\n    const [imageResolutionX, imageResolutionY] = Array.isArray(imageResolution)\n      ? imageResolution\n      : [imageResolution, imageResolution];\n    const imagePixelRatio = image.getPixelRatio();\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const pixelRatio = frameState.pixelRatio;\n    const viewState = frameState.viewState;\n    const viewCenter = viewState.center;\n    const viewResolution = viewState.resolution;\n    const scaleX =\n      (pixelRatio * imageResolutionX) / (viewResolution * imagePixelRatio);\n    const scaleY =\n      (pixelRatio * imageResolutionY) / (viewResolution * imagePixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const context = this.getRenderContext(frameState);\n\n    // clipped rendering if layer extent is set\n    let clipped = false;\n    let render = true;\n    if (layerState.extent) {\n      const layerExtent = fromUserExtent(\n        layerState.extent,\n        viewState.projection,\n      );\n      render = intersectsExtent(layerExtent, frameState.extent);\n      clipped = render && !containsExtent(layerExtent, frameState.extent);\n      if (clipped) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    const img = image.getImage();\n\n    const transform = composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      scaleX,\n      scaleY,\n      0,\n      (imagePixelRatio * (imageExtent[0] - viewCenter[0])) / imageResolutionX,\n      (imagePixelRatio * (viewCenter[1] - imageExtent[3])) / imageResolutionY,\n    );\n\n    this.renderedResolution = (imageResolutionY * pixelRatio) / imagePixelRatio;\n\n    const dw = img.width * transform[0];\n    const dh = img.height * transform[3];\n\n    if (!this.getLayer().getSource().getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n    if (render && dw >= 0.5 && dh >= 0.5) {\n      const dx = transform[4];\n      const dy = transform[5];\n      const opacity = layerState.opacity;\n      if (opacity !== 1) {\n        context.save();\n        context.globalAlpha = opacity;\n      }\n      context.drawImage(img, 0, 0, +img.width, +img.height, dx, dy, dw, dh);\n      if (opacity !== 1) {\n        context.restore();\n      }\n    }\n    this.postRender(this.context, frameState);\n\n    if (clipped) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    return this.container;\n  }\n}\n\nexport default CanvasImageLayerRenderer;\n","/**\n * @module ol/layer/BaseImage\n */\nimport Layer from './Layer.js';\n\n/**\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {ImageSourceType} [source] Source for this layer.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<ImageSourceType, RendererType>}\n * @api\n */\nclass BaseImageLayer extends Layer {\n  /**\n   * @param {Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n    super(options);\n  }\n}\n\nexport default BaseImageLayer;\n","/**\n * @module ol/layer/Image\n */\nimport CanvasImageLayerRenderer from '../renderer/canvas/ImageLayer.js';\nimport BaseImageLayer from './BaseImage.js';\n\n/**\n * @classdesc\n * Server-rendered images that are available for arbitrary extents and\n * resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Image.js\").default} ImageSourceType\n * @extends {BaseImageLayer<ImageSourceType, CanvasImageLayerRenderer>}\n * @api\n */\nclass ImageLayer extends BaseImageLayer {\n  /**\n   * @param {import(\"./BaseImage.js\").Options<ImageSourceType>} [options] Layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasImageLayerRenderer(this);\n  }\n\n  /**\n   * Get data for a pixel location.  A four element RGBA array will be returned.  For requests outside the\n   * layer extent, `null` will be returned.  Data for an image can only be retrieved if the\n   * source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default ImageLayer;\n","/**\n * @module ol/Tile\n */\nimport TileState from './TileState.js';\nimport {easeIn} from './easing.js';\nimport EventType from './events/EventType.js';\nimport EventTarget from './events/Target.js';\nimport {abstract} from './util.js';\n\n/**\n * A function that takes a {@link module:ol/Tile~Tile} for the tile and a\n * `{string}` for the url as arguments. The default is\n * ```js\n * source.setTileLoadFunction(function(tile, src) {\n *   tile.getImage().src = src;\n * });\n * ```\n * For more fine grained control, the load function can use fetch or XMLHttpRequest and involve\n * error handling:\n *\n * ```js\n * import TileState from 'ol/TileState.js';\n *\n * source.setTileLoadFunction(function(tile, src) {\n *   const xhr = new XMLHttpRequest();\n *   xhr.responseType = 'blob';\n *   xhr.addEventListener('loadend', function (evt) {\n *     const data = this.response;\n *     if (data !== undefined) {\n *       tile.getImage().src = URL.createObjectURL(data);\n *     } else {\n *       tile.setState(TileState.ERROR);\n *     }\n *   });\n *   xhr.addEventListener('error', function () {\n *     tile.setState(TileState.ERROR);\n *   });\n *   xhr.open('GET', src);\n *   xhr.send();\n * });\n * ```\n *\n * @typedef {function(Tile, string): void} LoadFunction\n * @api\n */\n\n/**\n * {@link module:ol/source/Tile~TileSource} sources use a function of this type to get\n * the url that provides a tile for a given tile coordinate.\n *\n * This function takes a {@link module:ol/tilecoord~TileCoord} for the tile\n * coordinate, a `{number}` representing the pixel ratio and a\n * {@link module:ol/proj/Projection~Projection} for the projection  as arguments\n * and returns a `{string}` representing the tile URL, or undefined if no tile\n * should be requested for the passed tile coordinate.\n *\n * @typedef {function(import(\"./tilecoord.js\").TileCoord, number,\n *           import(\"./proj/Projection.js\").default): (string|undefined)} UrlFunction\n * @api\n */\n\n/**\n * @typedef {Object} Options\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @api\n */\n\n/**\n * @classdesc\n * Base class for tiles.\n *\n * @abstract\n */\nclass Tile extends EventTarget {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, options) {\n    super();\n\n    options = options ? options : {};\n\n    /**\n     * @type {import(\"./tilecoord.js\").TileCoord}\n     */\n    this.tileCoord = tileCoord;\n\n    /**\n     * @protected\n     * @type {import(\"./TileState.js\").default}\n     */\n    this.state = state;\n\n    /**\n     * A key assigned to the tile. This is used in conjunction with a source key\n     * to determine if a cached version of this tile may be used by the renderer.\n     * @type {string}\n     */\n    this.key = '';\n\n    /**\n     * The duration for the opacity transition.\n     * @private\n     * @type {number}\n     */\n    this.transition_ =\n      options.transition === undefined ? 250 : options.transition;\n\n    /**\n     * Lookup of start times for rendering transitions.  If the start time is\n     * equal to -1, the transition is complete.\n     * @private\n     * @type {Object<string, number>}\n     */\n    this.transitionStarts_ = {};\n\n    /**\n     * @type {boolean}\n     */\n    this.interpolate = !!options.interpolate;\n  }\n\n  /**\n   * @protected\n   */\n  changed() {\n    this.dispatchEvent(EventType.CHANGE);\n  }\n\n  /**\n   * Called by the tile cache when the tile is removed from the cache due to expiry\n   */\n  release() {\n    // to remove the `change` listener on this tile in `ol/TileQueue#handleTileChange`\n    this.setState(TileState.EMPTY);\n  }\n\n  /**\n   * @return {string} Key.\n   */\n  getKey() {\n    return this.key + '/' + this.tileCoord;\n  }\n\n  /**\n   * Get the tile coordinate for this tile.\n   * @return {import(\"./tilecoord.js\").TileCoord} The tile coordinate.\n   * @api\n   */\n  getTileCoord() {\n    return this.tileCoord;\n  }\n\n  /**\n   * @return {import(\"./TileState.js\").default} State.\n   */\n  getState() {\n    return this.state;\n  }\n\n  /**\n   * Sets the state of this tile. If you write your own {@link module:ol/Tile~LoadFunction tileLoadFunction} ,\n   * it is important to set the state correctly to {@link module:ol/TileState~ERROR}\n   * when the tile cannot be loaded. Otherwise the tile cannot be removed from\n   * the tile queue and will block other requests.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @api\n   */\n  setState(state) {\n    if (this.state === TileState.EMPTY) {\n      // no more state changes\n      return;\n    }\n    if (this.state !== TileState.ERROR && this.state > state) {\n      throw new Error('Tile load sequence violation');\n    }\n    this.state = state;\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   * @abstract\n   * @api\n   */\n  load() {\n    abstract();\n  }\n\n  /**\n   * Get the alpha value for rendering.\n   * @param {string} id An id for the renderer.\n   * @param {number} time The render frame time.\n   * @return {number} A number between 0 and 1.\n   */\n  getAlpha(id, time) {\n    if (!this.transition_) {\n      return 1;\n    }\n\n    let start = this.transitionStarts_[id];\n    if (!start) {\n      start = time;\n      this.transitionStarts_[id] = start;\n    } else if (start === -1) {\n      return 1;\n    }\n\n    const delta = time - start + 1000 / 60; // avoid rendering at 0\n    if (delta >= this.transition_) {\n      return 1;\n    }\n    return easeIn(delta / this.transition_);\n  }\n\n  /**\n   * Determine if a tile is in an alpha transition.  A tile is considered in\n   * transition if tile.getAlpha() has not yet been called or has been called\n   * and returned 1.\n   * @param {string} id An id for the renderer.\n   * @return {boolean} The tile is in transition.\n   */\n  inTransition(id) {\n    if (!this.transition_) {\n      return false;\n    }\n    return this.transitionStarts_[id] !== -1;\n  }\n\n  /**\n   * Mark a transition as complete.\n   * @param {string} id An id for the renderer.\n   */\n  endTransition(id) {\n    if (this.transition_) {\n      this.transitionStarts_[id] = -1;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.release();\n    super.disposeInternal();\n  }\n}\n\nexport default Tile;\n","/**\n * @module ol/DataTile\n */\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\n/**\n * @typedef {HTMLImageElement|HTMLCanvasElement|HTMLVideoElement|ImageBitmap} ImageLike\n */\n\n/**\n * @typedef {Uint8Array|Uint8ClampedArray|Float32Array|DataView} ArrayLike\n */\n\n/**\n * Data that can be used with a DataTile.\n * @typedef {ArrayLike|ImageLike} Data\n */\n\n/**\n * @param {Data} data Tile data.\n * @return {ImageLike|null} The image-like data.\n */\nexport function asImageLike(data) {\n  return data instanceof Image ||\n    data instanceof HTMLCanvasElement ||\n    data instanceof HTMLVideoElement ||\n    data instanceof ImageBitmap\n    ? data\n    : null;\n}\n\n/**\n * @param {Data} data Tile data.\n * @return {ArrayLike|null} The array-like data.\n */\nexport function asArrayLike(data) {\n  return data instanceof Uint8Array ||\n    data instanceof Uint8ClampedArray ||\n    data instanceof Float32Array ||\n    data instanceof DataView\n    ? data\n    : null;\n}\n\n/**\n * This is set as the cancellation reason when a tile is disposed.\n */\nexport const disposedError = new Error('disposed');\n\n/**\n * @type {CanvasRenderingContext2D|null}\n */\nlet sharedContext = null;\n\n/**\n * @param {ImageLike} image The image.\n * @return {Uint8ClampedArray} The data.\n */\nexport function toArray(image) {\n  if (!sharedContext) {\n    sharedContext = createCanvasContext2D(\n      image.width,\n      image.height,\n      undefined,\n      {willReadFrequently: true},\n    );\n  }\n  const canvas = sharedContext.canvas;\n  const width = image.width;\n  if (canvas.width !== width) {\n    canvas.width = width;\n  }\n  const height = image.height;\n  if (canvas.height !== height) {\n    canvas.height = height;\n  }\n  sharedContext.clearRect(0, 0, width, height);\n  sharedContext.drawImage(image, 0, 0);\n  return sharedContext.getImageData(0, 0, width, height).data;\n}\n\n/**\n * @type {import('./size.js').Size}\n */\nconst defaultSize = [256, 256];\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @property {function(): Promise<Data>} loader Data loader.  For loaders that generate images,\n * the promise should not resolve until the image is loaded.\n * @property {number} [transition=250] A duration for tile opacity\n * transitions in milliseconds. A duration of 0 disables the opacity transition.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n * @property {import('./size.js').Size} [size=[256, 256]] Tile size.\n * @property {AbortController} [controller] An abort controller.\n * @api\n */\n\nclass DataTile extends Tile {\n  /**\n   * @param {Options} options Tile options.\n   */\n  constructor(options) {\n    const state = TileState.IDLE;\n\n    super(options.tileCoord, state, {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    });\n\n    /**\n     * @type {function(): Promise<Data>}\n     * @private\n     */\n    this.loader_ = options.loader;\n\n    /**\n     * @type {Data}\n     * @private\n     */\n    this.data_ = null;\n\n    /**\n     * @type {Error}\n     * @private\n     */\n    this.error_ = null;\n\n    /**\n     * @type {import('./size.js').Size|null}\n     * @private\n     */\n    this.size_ = options.size || null;\n\n    /**\n     * @type {AbortController|null}\n     * @private\n     */\n    this.controller_ = options.controller || null;\n  }\n\n  /**\n   * Get the tile size.\n   * @return {import('./size.js').Size} Tile size.\n   */\n  getSize() {\n    if (this.size_) {\n      return this.size_;\n    }\n    const imageData = asImageLike(this.data_);\n    if (imageData) {\n      return [imageData.width, imageData.height];\n    }\n    return defaultSize;\n  }\n\n  /**\n   * Get the data for the tile.\n   * @return {Data} Tile data.\n   * @api\n   */\n  getData() {\n    return this.data_;\n  }\n\n  /**\n   * Get any loading error.\n   * @return {Error} Loading error.\n   * @api\n   */\n  getError() {\n    return this.error_;\n  }\n\n  /**\n   * Load the tile data.\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state !== TileState.IDLE && this.state !== TileState.ERROR) {\n      return;\n    }\n    this.state = TileState.LOADING;\n    this.changed();\n\n    const self = this;\n    this.loader_()\n      .then(function (data) {\n        self.data_ = data;\n        self.state = TileState.LOADED;\n        self.changed();\n      })\n      .catch(function (error) {\n        self.error_ = error;\n        self.state = TileState.ERROR;\n        self.changed();\n      });\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.controller_) {\n      this.controller_.abort(disposedError);\n      this.controller_ = null;\n    }\n    super.disposeInternal();\n  }\n}\n\nexport default DataTile;\n","/**\n * @module ol/ImageTile\n */\nimport {listenImage} from './Image.js';\nimport Tile from './Tile.js';\nimport TileState from './TileState.js';\nimport {createCanvasContext2D} from './dom.js';\n\nclass ImageTile extends Tile {\n  /**\n   * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"./TileState.js\").default} state State.\n   * @param {string} src Image source URI.\n   * @param {?string} crossOrigin Cross origin.\n   * @param {import(\"./Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @param {import(\"./Tile.js\").Options} [options] Tile options.\n   */\n  constructor(tileCoord, state, src, crossOrigin, tileLoadFunction, options) {\n    super(tileCoord, state, options);\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ = crossOrigin;\n\n    /**\n     * Image URI\n     *\n     * @private\n     * @type {string}\n     */\n    this.src_ = src;\n\n    this.key = src;\n\n    /**\n     * @private\n     * @type {HTMLImageElement|HTMLCanvasElement}\n     */\n    this.image_ = new Image();\n    if (crossOrigin !== null) {\n      this.image_.crossOrigin = crossOrigin;\n    }\n\n    /**\n     * @private\n     * @type {?function():void}\n     */\n    this.unlisten_ = null;\n\n    /**\n     * @private\n     * @type {import(\"./Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction_ = tileLoadFunction;\n  }\n\n  /**\n   * Get the HTML image element for this tile (may be a Canvas, Image, or Video).\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @api\n   */\n  getImage() {\n    return this.image_;\n  }\n\n  /**\n   * Sets an HTML image element for this tile (may be a Canvas or preloaded Image).\n   * @param {HTMLCanvasElement|HTMLImageElement} element Element.\n   */\n  setImage(element) {\n    this.image_ = element;\n    this.state = TileState.LOADED;\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Tracks loading or read errors.\n   *\n   * @private\n   */\n  handleImageError_() {\n    this.state = TileState.ERROR;\n    this.unlistenImage_();\n    this.image_ = getBlankImage();\n    this.changed();\n  }\n\n  /**\n   * Tracks successful image load.\n   *\n   * @private\n   */\n  handleImageLoad_() {\n    const image = /** @type {HTMLImageElement} */ (this.image_);\n    if (image.naturalWidth && image.naturalHeight) {\n      this.state = TileState.LOADED;\n    } else {\n      this.state = TileState.EMPTY;\n    }\n    this.unlistenImage_();\n    this.changed();\n  }\n\n  /**\n   * Load the image or retry if loading previously failed.\n   * Loading is taken care of by the tile queue, and calling this method is\n   * only needed for preloading or for reloading in case of an error.\n   *\n   * To retry loading tiles on failed requests, use a custom `tileLoadFunction`\n   * that checks for error status codes and reloads only when the status code is\n   * 408, 429, 500, 502, 503 and 504, and only when not too many retries have been\n   * made already:\n   *\n   * ```js\n   * const retryCodes = [408, 429, 500, 502, 503, 504];\n   * const retries = {};\n   * source.setTileLoadFunction((tile, src) => {\n   *   const image = tile.getImage();\n   *   fetch(src)\n   *     .then((response) => {\n   *       if (retryCodes.includes(response.status)) {\n   *         retries[src] = (retries[src] || 0) + 1;\n   *         if (retries[src] <= 3) {\n   *           setTimeout(() => tile.load(), retries[src] * 1000);\n   *         }\n   *         return Promise.reject();\n   *       }\n   *       return response.blob();\n   *     })\n   *     .then((blob) => {\n   *       const imageUrl = URL.createObjectURL(blob);\n   *       image.src = imageUrl;\n   *       setTimeout(() => URL.revokeObjectURL(imageUrl), 5000);\n   *     })\n   *     .catch(() => tile.setState(3)); // error\n   * });\n   * ```\n   * @api\n   * @override\n   */\n  load() {\n    if (this.state == TileState.ERROR) {\n      this.state = TileState.IDLE;\n      this.image_ = new Image();\n      if (this.crossOrigin_ !== null) {\n        this.image_.crossOrigin = this.crossOrigin_;\n      }\n    }\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n      this.tileLoadFunction_(this, this.src_);\n      this.unlisten_ = listenImage(\n        this.image_,\n        this.handleImageLoad_.bind(this),\n        this.handleImageError_.bind(this),\n      );\n    }\n  }\n\n  /**\n   * Discards event handlers which listen for load completion or errors.\n   *\n   * @private\n   */\n  unlistenImage_() {\n    if (this.unlisten_) {\n      this.unlisten_();\n      this.unlisten_ = null;\n    }\n  }\n\n  /**\n   * @override\n   */\n  disposeInternal() {\n    this.unlistenImage_();\n    this.image_ = null;\n    super.disposeInternal();\n  }\n}\n\n/**\n * Get a 1-pixel blank image.\n * @return {HTMLCanvasElement} Blank image.\n */\nfunction getBlankImage() {\n  const ctx = createCanvasContext2D(1, 1);\n  ctx.fillStyle = 'rgba(0,0,0,0)';\n  ctx.fillRect(0, 0, 1, 1);\n  return ctx.canvas;\n}\n\nexport default ImageTile;\n","/**\n * @module ol/reproj\n */\nimport {createCanvasContext2D, releaseCanvas} from './dom.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  extend,\n  forEachCorner,\n  getCenter,\n  getHeight,\n  getTopLeft,\n  getWidth,\n} from './extent.js';\nimport {solveLinearSystem} from './math.js';\nimport {getPointResolution, transform} from './proj.js';\n\nlet brokenDiagonalRendering_;\n\n/**\n * @type {Array<HTMLCanvasElement>}\n */\nexport const canvasPool = [];\n\n/**\n * This draws a small triangle into a canvas by setting the triangle as the clip region\n * and then drawing a (too large) rectangle\n *\n * @param {CanvasRenderingContext2D} ctx The context in which to draw the triangle\n * @param {number} u1 The x-coordinate of the second point. The first point is 0,0.\n * @param {number} v1 The y-coordinate of the second point.\n * @param {number} u2 The x-coordinate of the third point.\n * @param {number} v2 The y-coordinate of the third point.\n */\nfunction drawTestTriangle(ctx, u1, v1, u2, v2) {\n  ctx.beginPath();\n  ctx.moveTo(0, 0);\n  ctx.lineTo(u1, v1);\n  ctx.lineTo(u2, v2);\n  ctx.closePath();\n  ctx.save();\n  ctx.clip();\n  ctx.fillRect(0, 0, Math.max(u1, u2) + 1, Math.max(v1, v2));\n  ctx.restore();\n}\n\n/**\n * Given the data from getImageData, see if the right values appear at the provided offset.\n * Returns true if either the color or transparency is off\n *\n * @param {Uint8ClampedArray} data The data returned from getImageData\n * @param {number} offset The pixel offset from the start of data.\n * @return {boolean} true if the diagonal rendering is broken\n */\nfunction verifyBrokenDiagonalRendering(data, offset) {\n  // the values ought to be close to the rgba(210, 0, 0, 0.75)\n  return (\n    Math.abs(data[offset * 4] - 210) > 2 ||\n    Math.abs(data[offset * 4 + 3] - 0.75 * 255) > 2\n  );\n}\n\n/**\n * Determines if the current browser configuration can render triangular clip regions correctly.\n * This value is cached so the function is only expensive the first time called.\n * Firefox on Windows (as of now) does not if HWA is enabled. See https://bugzilla.mozilla.org/show_bug.cgi?id=1606976\n * Chrome works, and everything seems to work on OSX and Android. This function caches the\n * result. I suppose that it is conceivably possible that a browser might flip modes while the app is\n * running, but lets hope not.\n *\n * @return {boolean} true if the Diagonal Rendering is broken.\n */\nfunction isBrokenDiagonalRendering() {\n  if (brokenDiagonalRendering_ === undefined) {\n    const ctx = createCanvasContext2D(6, 6, canvasPool);\n    ctx.globalCompositeOperation = 'lighter';\n    ctx.fillStyle = 'rgba(210, 0, 0, 0.75)';\n    drawTestTriangle(ctx, 4, 5, 4, 0);\n    drawTestTriangle(ctx, 4, 5, 0, 5);\n    const data = ctx.getImageData(0, 0, 3, 3).data;\n    brokenDiagonalRendering_ =\n      verifyBrokenDiagonalRendering(data, 0) ||\n      verifyBrokenDiagonalRendering(data, 4) ||\n      verifyBrokenDiagonalRendering(data, 8);\n    releaseCanvas(ctx);\n    canvasPool.push(ctx.canvas);\n  }\n\n  return brokenDiagonalRendering_;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./coordinate.js\").Coordinate} targetCenter Target center.\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceResolution(\n  sourceProj,\n  targetProj,\n  targetCenter,\n  targetResolution,\n) {\n  const sourceCenter = transform(targetCenter, targetProj, sourceProj);\n\n  // calculate the ideal resolution of the source data\n  let sourceResolution = getPointResolution(\n    targetProj,\n    targetResolution,\n    targetCenter,\n  );\n\n  const targetMetersPerUnit = targetProj.getMetersPerUnit();\n  if (targetMetersPerUnit !== undefined) {\n    sourceResolution *= targetMetersPerUnit;\n  }\n  const sourceMetersPerUnit = sourceProj.getMetersPerUnit();\n  if (sourceMetersPerUnit !== undefined) {\n    sourceResolution /= sourceMetersPerUnit;\n  }\n\n  // Based on the projection properties, the point resolution at the specified\n  // coordinates may be slightly different. We need to reverse-compensate this\n  // in order to achieve optimal results.\n\n  const sourceExtent = sourceProj.getExtent();\n  if (!sourceExtent || containsCoordinate(sourceExtent, sourceCenter)) {\n    const compensationFactor =\n      getPointResolution(sourceProj, sourceResolution, sourceCenter) /\n      sourceResolution;\n    if (isFinite(compensationFactor) && compensationFactor > 0) {\n      sourceResolution /= compensationFactor;\n    }\n  }\n\n  return sourceResolution;\n}\n\n/**\n * Calculates ideal resolution to use from the source in order to achieve\n * pixel mapping as close as possible to 1:1 during reprojection.\n * The resolution is calculated regardless of what resolutions\n * are actually available in the dataset (TileGrid, Image, ...).\n *\n * @param {import(\"./proj/Projection.js\").default} sourceProj Source projection.\n * @param {import(\"./proj/Projection.js\").default} targetProj Target projection.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent\n * @param {number} targetResolution Target resolution.\n * @return {number} The best resolution to use. Can be +-Infinity, NaN or 0.\n */\nexport function calculateSourceExtentResolution(\n  sourceProj,\n  targetProj,\n  targetExtent,\n  targetResolution,\n) {\n  const targetCenter = getCenter(targetExtent);\n  let sourceResolution = calculateSourceResolution(\n    sourceProj,\n    targetProj,\n    targetCenter,\n    targetResolution,\n  );\n\n  if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n    forEachCorner(targetExtent, function (corner) {\n      sourceResolution = calculateSourceResolution(\n        sourceProj,\n        targetProj,\n        corner,\n        targetResolution,\n      );\n      return isFinite(sourceResolution) && sourceResolution > 0;\n    });\n  }\n\n  return sourceResolution;\n}\n\n/**\n * @typedef {Object} ImageExtent\n * @property {import(\"./extent.js\").Extent} extent Extent.\n * @property {import(\"./extent.js\").Extent} [clipExtent] Clip extent.\n * @property {import('./DataTile.js').ImageLike} image Image.\n */\n\n/**\n * Renders the source data into new canvas based on the triangulation.\n *\n * @param {number} width Width of the canvas.\n * @param {number} height Height of the canvas.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} sourceResolution Source resolution.\n * @param {import(\"./extent.js\").Extent} sourceExtent Extent of the data source.\n * @param {number} targetResolution Target resolution.\n * @param {import(\"./extent.js\").Extent} targetExtent Target extent.\n * @param {import(\"./reproj/Triangulation.js\").default} triangulation Calculated triangulation.\n * @param {Array<ImageExtent>} sources Array of sources.\n * @param {number} gutter Gutter of the sources.\n * @param {boolean} [renderEdges] Render reprojection edges.\n * @param {boolean} [interpolate] Use linear interpolation when resampling.\n * @param {boolean} [drawSingle] Draw single source images directly without stitchContext.\n * @param {boolean} [clipExtent] Clip stitchContext to sourceExtent.\n * @return {HTMLCanvasElement} Canvas with reprojected data.\n */\nexport function render(\n  width,\n  height,\n  pixelRatio,\n  sourceResolution,\n  sourceExtent,\n  targetResolution,\n  targetExtent,\n  triangulation,\n  sources,\n  gutter,\n  renderEdges,\n  interpolate,\n  drawSingle,\n  clipExtent,\n) {\n  const context = createCanvasContext2D(\n    Math.round(pixelRatio * width),\n    Math.round(pixelRatio * height),\n    canvasPool,\n  );\n\n  if (!interpolate) {\n    context.imageSmoothingEnabled = false;\n  }\n\n  if (sources.length === 0) {\n    return context.canvas;\n  }\n\n  context.scale(pixelRatio, pixelRatio);\n\n  function pixelRound(value) {\n    return Math.round(value * pixelRatio) / pixelRatio;\n  }\n\n  context.globalCompositeOperation = 'lighter';\n\n  const sourceDataExtent = createEmpty();\n  sources.forEach(function (src, i, arr) {\n    extend(sourceDataExtent, src.extent);\n  });\n\n  let stitchContext;\n  const stitchScale = pixelRatio / sourceResolution;\n  // Round up Float32 scale values to prevent interpolation in Firefox.\n  const inverseScale = (interpolate ? 1 : 1 + Math.pow(2, -24)) / stitchScale;\n\n  if (!drawSingle || sources.length !== 1 || gutter !== 0) {\n    stitchContext = createCanvasContext2D(\n      Math.round(getWidth(sourceDataExtent) * stitchScale),\n      Math.round(getHeight(sourceDataExtent) * stitchScale),\n      canvasPool,\n    );\n\n    if (!interpolate) {\n      stitchContext.imageSmoothingEnabled = false;\n    }\n    if (sourceExtent && clipExtent) {\n      const xPos = (sourceExtent[0] - sourceDataExtent[0]) * stitchScale;\n      const yPos = -(sourceExtent[3] - sourceDataExtent[3]) * stitchScale;\n      const width = getWidth(sourceExtent) * stitchScale;\n      const height = getHeight(sourceExtent) * stitchScale;\n      stitchContext.rect(xPos, yPos, width, height);\n      stitchContext.clip();\n    }\n\n    sources.forEach(function (src, i, arr) {\n      // This test should never fail -- but it does. Need to find a fix the upstream condition\n      if (src.image.width > 0 && src.image.height > 0) {\n        if (src.clipExtent) {\n          stitchContext.save();\n          const xPos = (src.clipExtent[0] - sourceDataExtent[0]) * stitchScale;\n          const yPos = -(src.clipExtent[3] - sourceDataExtent[3]) * stitchScale;\n          const width = getWidth(src.clipExtent) * stitchScale;\n          const height = getHeight(src.clipExtent) * stitchScale;\n          stitchContext.rect(\n            interpolate ? xPos : Math.round(xPos),\n            interpolate ? yPos : Math.round(yPos),\n            interpolate ? width : Math.round(xPos + width) - Math.round(xPos),\n            interpolate ? height : Math.round(yPos + height) - Math.round(yPos),\n          );\n          stitchContext.clip();\n        }\n\n        const xPos = (src.extent[0] - sourceDataExtent[0]) * stitchScale;\n        const yPos = -(src.extent[3] - sourceDataExtent[3]) * stitchScale;\n        const srcWidth = getWidth(src.extent) * stitchScale;\n        const srcHeight = getHeight(src.extent) * stitchScale;\n        stitchContext.drawImage(\n          src.image,\n          gutter,\n          gutter,\n          src.image.width - 2 * gutter,\n          src.image.height - 2 * gutter,\n          interpolate ? xPos : Math.round(xPos),\n          interpolate ? yPos : Math.round(yPos),\n          interpolate\n            ? srcWidth\n            : Math.round(xPos + srcWidth) - Math.round(xPos),\n          interpolate\n            ? srcHeight\n            : Math.round(yPos + srcHeight) - Math.round(yPos),\n        );\n\n        if (src.clipExtent) {\n          stitchContext.restore();\n        }\n      }\n    });\n  }\n  const targetTopLeft = getTopLeft(targetExtent);\n\n  triangulation.getTriangles().forEach(function (triangle, i, arr) {\n    /* Calculate affine transform (src -> dst)\n     * Resulting matrix can be used to transform coordinate\n     * from `sourceProjection` to destination pixels.\n     *\n     * To optimize number of context calls and increase numerical stability,\n     * we also do the following operations:\n     * trans(-topLeftExtentCorner), scale(1 / targetResolution), scale(1, -1)\n     * here before solving the linear system so [ui, vi] are pixel coordinates.\n     *\n     * Src points: xi, yi\n     * Dst points: ui, vi\n     * Affine coefficients: aij\n     *\n     * | x0 y0 1  0  0 0 |   |a00|   |u0|\n     * | x1 y1 1  0  0 0 |   |a01|   |u1|\n     * | x2 y2 1  0  0 0 | x |a02| = |u2|\n     * |  0  0 0 x0 y0 1 |   |a10|   |v0|\n     * |  0  0 0 x1 y1 1 |   |a11|   |v1|\n     * |  0  0 0 x2 y2 1 |   |a12|   |v2|\n     */\n    const source = triangle.source;\n    const target = triangle.target;\n    let x0 = source[0][0],\n      y0 = source[0][1];\n    let x1 = source[1][0],\n      y1 = source[1][1];\n    let x2 = source[2][0],\n      y2 = source[2][1];\n    // Make sure that everything is on pixel boundaries\n    const u0 = pixelRound((target[0][0] - targetTopLeft[0]) / targetResolution);\n    const v0 = pixelRound(\n      -(target[0][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u1 = pixelRound((target[1][0] - targetTopLeft[0]) / targetResolution);\n    const v1 = pixelRound(\n      -(target[1][1] - targetTopLeft[1]) / targetResolution,\n    );\n    const u2 = pixelRound((target[2][0] - targetTopLeft[0]) / targetResolution);\n    const v2 = pixelRound(\n      -(target[2][1] - targetTopLeft[1]) / targetResolution,\n    );\n\n    // Shift all the source points to improve numerical stability\n    // of all the subsequent calculations. The [x0, y0] is used here.\n    // This is also used to simplify the linear system.\n    const sourceNumericalShiftX = x0;\n    const sourceNumericalShiftY = y0;\n    x0 = 0;\n    y0 = 0;\n    x1 -= sourceNumericalShiftX;\n    y1 -= sourceNumericalShiftY;\n    x2 -= sourceNumericalShiftX;\n    y2 -= sourceNumericalShiftY;\n\n    const augmentedMatrix = [\n      [x1, y1, 0, 0, u1 - u0],\n      [x2, y2, 0, 0, u2 - u0],\n      [0, 0, x1, y1, v1 - v0],\n      [0, 0, x2, y2, v2 - v0],\n    ];\n    const affineCoefs = solveLinearSystem(augmentedMatrix);\n    if (!affineCoefs) {\n      return;\n    }\n\n    context.save();\n    context.beginPath();\n\n    if (isBrokenDiagonalRendering() || !interpolate) {\n      // Make sure that all lines are horizontal or vertical\n      context.moveTo(u1, v1);\n      // This is the diagonal line. Do it in 4 steps\n      const steps = 4;\n      const ud = u0 - u1;\n      const vd = v0 - v1;\n      for (let step = 0; step < steps; step++) {\n        // Go horizontally\n        context.lineTo(\n          u1 + pixelRound(((step + 1) * ud) / steps),\n          v1 + pixelRound((step * vd) / (steps - 1)),\n        );\n        // Go vertically\n        if (step != steps - 1) {\n          context.lineTo(\n            u1 + pixelRound(((step + 1) * ud) / steps),\n            v1 + pixelRound(((step + 1) * vd) / (steps - 1)),\n          );\n        }\n      }\n      // We are almost at u0r, v0r\n      context.lineTo(u2, v2);\n    } else {\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n    }\n\n    context.clip();\n\n    context.transform(\n      affineCoefs[0],\n      affineCoefs[2],\n      affineCoefs[1],\n      affineCoefs[3],\n      u0,\n      v0,\n    );\n\n    context.translate(\n      sourceDataExtent[0] - sourceNumericalShiftX,\n      sourceDataExtent[3] - sourceNumericalShiftY,\n    );\n\n    let image;\n    if (stitchContext) {\n      image = stitchContext.canvas;\n      context.scale(inverseScale, -inverseScale);\n    } else {\n      const source = sources[0];\n      const extent = source.extent;\n      image = source.image;\n      context.scale(\n        getWidth(extent) / image.width,\n        -getHeight(extent) / image.height,\n      );\n    }\n\n    context.drawImage(image, 0, 0);\n    context.restore();\n  });\n\n  if (stitchContext) {\n    releaseCanvas(stitchContext);\n    canvasPool.push(stitchContext.canvas);\n  }\n\n  if (renderEdges) {\n    context.save();\n\n    context.globalCompositeOperation = 'source-over';\n    context.strokeStyle = 'black';\n    context.lineWidth = 1;\n\n    triangulation.getTriangles().forEach(function (triangle, i, arr) {\n      const target = triangle.target;\n      const u0 = (target[0][0] - targetTopLeft[0]) / targetResolution;\n      const v0 = -(target[0][1] - targetTopLeft[1]) / targetResolution;\n      const u1 = (target[1][0] - targetTopLeft[0]) / targetResolution;\n      const v1 = -(target[1][1] - targetTopLeft[1]) / targetResolution;\n      const u2 = (target[2][0] - targetTopLeft[0]) / targetResolution;\n      const v2 = -(target[2][1] - targetTopLeft[1]) / targetResolution;\n\n      context.beginPath();\n      context.moveTo(u1, v1);\n      context.lineTo(u0, v0);\n      context.lineTo(u2, v2);\n      context.closePath();\n      context.stroke();\n    });\n\n    context.restore();\n  }\n  return context.canvas;\n}\n","/**\n * @module ol/reproj/Triangulation\n */\nimport {\n  boundingExtent,\n  createEmpty,\n  extendCoordinate,\n  getArea,\n  getBottomLeft,\n  getBottomRight,\n  getTopLeft,\n  getTopRight,\n  getWidth,\n  intersects,\n} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {\n  createTransformFromCoordinateTransform,\n  getTransform,\n  transform,\n} from '../proj.js';\nimport {apply as applyMatrix} from '../transform.js';\n\n/**\n * Single triangle; consists of 3 source points and 3 target points.\n * @typedef {Object} Triangle\n * @property {Array<import(\"../coordinate.js\").Coordinate>} source Source.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} target Target.\n */\n\n/**\n * Maximum number of subdivision steps during raster reprojection triangulation.\n * Prevents high memory usage and large number of proj4 calls (for certain\n * transformations and areas). At most `2*(2^this)` triangles are created for\n * each triangulated extent (tile/image).\n * @type {number}\n */\nconst MAX_SUBDIVISION = 10;\n\n/**\n * Maximum allowed size of triangle relative to world width. When transforming\n * corners of world extent between certain projections, the resulting\n * triangulation seems to have zero error and no subdivision is performed. If\n * the triangle width is more than this (relative to world width; 0-1),\n * subdivison is forced (up to `MAX_SUBDIVISION`). Default is `0.25`.\n * @type {number}\n */\nconst MAX_TRIANGLE_WIDTH = 0.25;\n\n/**\n * @classdesc\n * Class containing triangulation of the given target extent.\n * Used for determining source data and the reprojection itself.\n */\nclass Triangulation {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent to triangulate.\n   * @param {import(\"../extent.js\").Extent} maxSourceExtent Maximal source extent that can be used.\n   * @param {number} errorThreshold Acceptable error (in source units).\n   * @param {?number} destinationResolution The (optional) resolution of the destination.\n   * @param {import(\"../transform.js\").Transform} [sourceMatrix] Source transform matrix.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    maxSourceExtent,\n    errorThreshold,\n    destinationResolution,\n    sourceMatrix,\n  ) {\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.sourceProj_ = sourceProj;\n\n    /**\n     * @type {import(\"../proj/Projection.js\").default}\n     * @private\n     */\n    this.targetProj_ = targetProj;\n\n    /** @type {!Object<string, import(\"../coordinate.js\").Coordinate>} */\n    let transformInvCache = {};\n    const transformInv = sourceMatrix\n      ? createTransformFromCoordinateTransform((input) =>\n          applyMatrix(\n            sourceMatrix,\n            transform(input, this.targetProj_, this.sourceProj_),\n          ),\n        )\n      : getTransform(this.targetProj_, this.sourceProj_);\n\n    /**\n     * @param {import(\"../coordinate.js\").Coordinate} c A coordinate.\n     * @return {import(\"../coordinate.js\").Coordinate} Transformed coordinate.\n     * @private\n     */\n    this.transformInv_ = function (c) {\n      const key = c[0] + '/' + c[1];\n      if (!transformInvCache[key]) {\n        transformInvCache[key] = transformInv(c);\n      }\n      return transformInvCache[key];\n    };\n\n    /**\n     * @type {import(\"../extent.js\").Extent}\n     * @private\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.errorThresholdSquared_ = errorThreshold * errorThreshold;\n\n    /**\n     * @type {Array<Triangle>}\n     * @private\n     */\n    this.triangles_ = [];\n\n    /**\n     * Indicates that the triangulation crosses edge of the source projection.\n     * @type {boolean}\n     * @private\n     */\n    this.wrapsXInSource_ = false;\n\n    /**\n     * @type {boolean}\n     * @private\n     */\n    this.canWrapXInSource_ =\n      this.sourceProj_.canWrapX() &&\n      !!maxSourceExtent &&\n      !!this.sourceProj_.getExtent() &&\n      getWidth(maxSourceExtent) >= getWidth(this.sourceProj_.getExtent());\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.sourceWorldWidth_ = this.sourceProj_.getExtent()\n      ? getWidth(this.sourceProj_.getExtent())\n      : null;\n\n    /**\n     * @type {?number}\n     * @private\n     */\n    this.targetWorldWidth_ = this.targetProj_.getExtent()\n      ? getWidth(this.targetProj_.getExtent())\n      : null;\n\n    const destinationTopLeft = getTopLeft(targetExtent);\n    const destinationTopRight = getTopRight(targetExtent);\n    const destinationBottomRight = getBottomRight(targetExtent);\n    const destinationBottomLeft = getBottomLeft(targetExtent);\n    const sourceTopLeft = this.transformInv_(destinationTopLeft);\n    const sourceTopRight = this.transformInv_(destinationTopRight);\n    const sourceBottomRight = this.transformInv_(destinationBottomRight);\n    const sourceBottomLeft = this.transformInv_(destinationBottomLeft);\n\n    /*\n     * The maxSubdivision controls how many splittings of the target area can\n     * be done. The idea here is to do a linear mapping of the target areas\n     * but the actual overall reprojection (can be) extremely non-linear. The\n     * default value of MAX_SUBDIVISION was chosen based on mapping a 256x256\n     * tile size. However this function is also called to remap canvas rendered\n     * layers which can be much larger. This calculation increases the maxSubdivision\n     * value by the right factor so that each 256x256 pixel area has\n     * MAX_SUBDIVISION divisions.\n     */\n    const maxSubdivision =\n      MAX_SUBDIVISION +\n      (destinationResolution\n        ? Math.max(\n            0,\n            Math.ceil(\n              Math.log2(\n                getArea(targetExtent) /\n                  (destinationResolution * destinationResolution * 256 * 256),\n              ),\n            ),\n          )\n        : 0);\n\n    this.addQuad_(\n      destinationTopLeft,\n      destinationTopRight,\n      destinationBottomRight,\n      destinationBottomLeft,\n      sourceTopLeft,\n      sourceTopRight,\n      sourceBottomRight,\n      sourceBottomLeft,\n      maxSubdivision,\n    );\n\n    if (this.wrapsXInSource_) {\n      let leftBound = Infinity;\n      this.triangles_.forEach(function (triangle, i, arr) {\n        leftBound = Math.min(\n          leftBound,\n          triangle.source[0][0],\n          triangle.source[1][0],\n          triangle.source[2][0],\n        );\n      });\n\n      // Shift triangles to be as close to `leftBound` as possible\n      // (if the distance is more than `worldWidth / 2` it can be closer.\n      this.triangles_.forEach((triangle) => {\n        if (\n          Math.max(\n            triangle.source[0][0],\n            triangle.source[1][0],\n            triangle.source[2][0],\n          ) -\n            leftBound >\n          this.sourceWorldWidth_ / 2\n        ) {\n          const newTriangle = [\n            [triangle.source[0][0], triangle.source[0][1]],\n            [triangle.source[1][0], triangle.source[1][1]],\n            [triangle.source[2][0], triangle.source[2][1]],\n          ];\n          if (newTriangle[0][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[0][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[1][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[1][0] -= this.sourceWorldWidth_;\n          }\n          if (newTriangle[2][0] - leftBound > this.sourceWorldWidth_ / 2) {\n            newTriangle[2][0] -= this.sourceWorldWidth_;\n          }\n\n          // Rarely (if the extent contains both the dateline and prime meridian)\n          // the shift can in turn break some triangles.\n          // Detect this here and don't shift in such cases.\n          const minX = Math.min(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          const maxX = Math.max(\n            newTriangle[0][0],\n            newTriangle[1][0],\n            newTriangle[2][0],\n          );\n          if (maxX - minX < this.sourceWorldWidth_ / 2) {\n            triangle.source = newTriangle;\n          }\n        }\n      });\n    }\n\n    transformInvCache = {};\n  }\n\n  /**\n   * Adds triangle to the triangulation.\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @private\n   */\n  addTriangle_(a, b, c, aSrc, bSrc, cSrc) {\n    this.triangles_.push({\n      source: [aSrc, bSrc, cSrc],\n      target: [a, b, c],\n    });\n  }\n\n  /**\n   * Adds quad (points in clock-wise order) to the triangulation\n   * (and reprojects the vertices) if valid.\n   * Performs quad subdivision if needed to increase precision.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} a The target a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} b The target b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} c The target c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} d The target d coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} aSrc The source a coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} bSrc The source b coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} cSrc The source c coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} dSrc The source d coordinate.\n   * @param {number} maxSubdivision Maximal allowed subdivision of the quad.\n   * @private\n   */\n  addQuad_(a, b, c, d, aSrc, bSrc, cSrc, dSrc, maxSubdivision) {\n    const sourceQuadExtent = boundingExtent([aSrc, bSrc, cSrc, dSrc]);\n    const sourceCoverageX = this.sourceWorldWidth_\n      ? getWidth(sourceQuadExtent) / this.sourceWorldWidth_\n      : null;\n    const sourceWorldWidth = /** @type {number} */ (this.sourceWorldWidth_);\n\n    // when the quad is wrapped in the source projection\n    // it covers most of the projection extent, but not fully\n    const wrapsX =\n      this.sourceProj_.canWrapX() &&\n      sourceCoverageX > 0.5 &&\n      sourceCoverageX < 1;\n\n    let needsSubdivision = false;\n\n    if (maxSubdivision > 0) {\n      if (this.targetProj_.isGlobal() && this.targetWorldWidth_) {\n        const targetQuadExtent = boundingExtent([a, b, c, d]);\n        const targetCoverageX =\n          getWidth(targetQuadExtent) / this.targetWorldWidth_;\n        needsSubdivision =\n          targetCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n      if (!wrapsX && this.sourceProj_.isGlobal() && sourceCoverageX) {\n        needsSubdivision =\n          sourceCoverageX > MAX_TRIANGLE_WIDTH || needsSubdivision;\n      }\n    }\n\n    if (!needsSubdivision && this.maxSourceExtent_) {\n      if (\n        isFinite(sourceQuadExtent[0]) &&\n        isFinite(sourceQuadExtent[1]) &&\n        isFinite(sourceQuadExtent[2]) &&\n        isFinite(sourceQuadExtent[3])\n      ) {\n        if (!intersects(sourceQuadExtent, this.maxSourceExtent_)) {\n          // whole quad outside source projection extent -> ignore\n          return;\n        }\n      }\n    }\n\n    let isNotFinite = 0;\n\n    if (!needsSubdivision) {\n      if (\n        !isFinite(aSrc[0]) ||\n        !isFinite(aSrc[1]) ||\n        !isFinite(bSrc[0]) ||\n        !isFinite(bSrc[1]) ||\n        !isFinite(cSrc[0]) ||\n        !isFinite(cSrc[1]) ||\n        !isFinite(dSrc[0]) ||\n        !isFinite(dSrc[1])\n      ) {\n        if (maxSubdivision > 0) {\n          needsSubdivision = true;\n        } else {\n          // It might be the case that only 1 of the points is infinite. In this case\n          // we can draw a single triangle with the other three points\n          isNotFinite =\n            (!isFinite(aSrc[0]) || !isFinite(aSrc[1]) ? 8 : 0) +\n            (!isFinite(bSrc[0]) || !isFinite(bSrc[1]) ? 4 : 0) +\n            (!isFinite(cSrc[0]) || !isFinite(cSrc[1]) ? 2 : 0) +\n            (!isFinite(dSrc[0]) || !isFinite(dSrc[1]) ? 1 : 0);\n          if (\n            isNotFinite != 1 &&\n            isNotFinite != 2 &&\n            isNotFinite != 4 &&\n            isNotFinite != 8\n          ) {\n            return;\n          }\n        }\n      }\n    }\n\n    if (maxSubdivision > 0) {\n      if (!needsSubdivision) {\n        const center = [(a[0] + c[0]) / 2, (a[1] + c[1]) / 2];\n        const centerSrc = this.transformInv_(center);\n\n        let dx;\n        if (wrapsX) {\n          const centerSrcEstimX =\n            (modulo(aSrc[0], sourceWorldWidth) +\n              modulo(cSrc[0], sourceWorldWidth)) /\n            2;\n          dx = centerSrcEstimX - modulo(centerSrc[0], sourceWorldWidth);\n        } else {\n          dx = (aSrc[0] + cSrc[0]) / 2 - centerSrc[0];\n        }\n        const dy = (aSrc[1] + cSrc[1]) / 2 - centerSrc[1];\n        const centerSrcErrorSquared = dx * dx + dy * dy;\n        needsSubdivision = centerSrcErrorSquared > this.errorThresholdSquared_;\n      }\n      if (needsSubdivision) {\n        if (Math.abs(a[0] - c[0]) <= Math.abs(a[1] - c[1])) {\n          // split horizontally (top & bottom)\n          const bc = [(b[0] + c[0]) / 2, (b[1] + c[1]) / 2];\n          const bcSrc = this.transformInv_(bc);\n          const da = [(d[0] + a[0]) / 2, (d[1] + a[1]) / 2];\n          const daSrc = this.transformInv_(da);\n\n          this.addQuad_(\n            a,\n            b,\n            bc,\n            da,\n            aSrc,\n            bSrc,\n            bcSrc,\n            daSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            da,\n            bc,\n            c,\n            d,\n            daSrc,\n            bcSrc,\n            cSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n        } else {\n          // split vertically (left & right)\n          const ab = [(a[0] + b[0]) / 2, (a[1] + b[1]) / 2];\n          const abSrc = this.transformInv_(ab);\n          const cd = [(c[0] + d[0]) / 2, (c[1] + d[1]) / 2];\n          const cdSrc = this.transformInv_(cd);\n\n          this.addQuad_(\n            a,\n            ab,\n            cd,\n            d,\n            aSrc,\n            abSrc,\n            cdSrc,\n            dSrc,\n            maxSubdivision - 1,\n          );\n          this.addQuad_(\n            ab,\n            b,\n            c,\n            cd,\n            abSrc,\n            bSrc,\n            cSrc,\n            cdSrc,\n            maxSubdivision - 1,\n          );\n        }\n        return;\n      }\n    }\n\n    if (wrapsX) {\n      if (!this.canWrapXInSource_) {\n        return;\n      }\n      this.wrapsXInSource_ = true;\n    }\n\n    // Exactly zero or one of *Src is not finite\n    // The triangles must have the diagonal line as the first side\n    // This is to allow easy code in reproj.s to make it straight for broken\n    // browsers that can't handle diagonal clipping\n    if ((isNotFinite & 0xb) == 0) {\n      this.addTriangle_(a, c, d, aSrc, cSrc, dSrc);\n    }\n    if ((isNotFinite & 0xe) == 0) {\n      this.addTriangle_(a, c, b, aSrc, cSrc, bSrc);\n    }\n    if (isNotFinite) {\n      // Try the other two triangles\n      if ((isNotFinite & 0xd) == 0) {\n        this.addTriangle_(b, d, a, bSrc, dSrc, aSrc);\n      }\n      if ((isNotFinite & 0x7) == 0) {\n        this.addTriangle_(b, d, c, bSrc, dSrc, cSrc);\n      }\n    }\n  }\n\n  /**\n   * Calculates extent of the `source` coordinates from all the triangles.\n   *\n   * @return {import(\"../extent.js\").Extent} Calculated extent.\n   */\n  calculateSourceExtent() {\n    const extent = createEmpty();\n\n    this.triangles_.forEach(function (triangle, i, arr) {\n      const src = triangle.source;\n      extendCoordinate(extent, src[0]);\n      extendCoordinate(extent, src[1]);\n      extendCoordinate(extent, src[2]);\n    });\n\n    return extent;\n  }\n\n  /**\n   * @return {Array<Triangle>} Array of the calculated triangles.\n   */\n  getTriangles() {\n    return this.triangles_;\n  }\n}\n\nexport default Triangulation;\n","/**\n * @module ol/reproj/Tile\n */\n\nimport Tile from '../Tile.js';\nimport TileState from '../TileState.js';\nimport {releaseCanvas} from '../dom.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {getArea, getIntersection, getWidth, wrapAndSliceX} from '../extent.js';\nimport {clamp} from '../math.js';\nimport {\n  calculateSourceExtentResolution,\n  canvasPool,\n  render as renderReprojected,\n} from '../reproj.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(number, number, number, number) : (import(\"../ImageTile.js\").default)} FunctionType\n */\n\n/**\n * @typedef {Object} TileOffset\n * @property {import(\"../ImageTile.js\").default} tile Tile.\n * @property {number} offset Offset.\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected tile.\n * See {@link module:ol/source/TileImage~TileImage}.\n *\n */\nclass ReprojTile extends Tile {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} sourceTileGrid Source tile grid.\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} targetTileGrid Target tile grid.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Coordinate of the tile.\n   * @param {import(\"../tilecoord.js\").TileCoord} wrappedTileCoord Coordinate of the tile wrapped in X.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {number} gutter Gutter of the source tiles.\n   * @param {FunctionType} getTileFunction\n   *     Function returning source tiles (z, x, y, pixelRatio).\n   * @param {number} [errorThreshold] Acceptable reprojection error (in px).\n   * @param {boolean} [renderEdges] Render reprojection edges.\n   * @param {import(\"../Tile.js\").Options} [options] Tile options.\n   */\n  constructor(\n    sourceProj,\n    sourceTileGrid,\n    targetProj,\n    targetTileGrid,\n    tileCoord,\n    wrappedTileCoord,\n    pixelRatio,\n    gutter,\n    getTileFunction,\n    errorThreshold,\n    renderEdges,\n    options,\n  ) {\n    super(tileCoord, TileState.IDLE, options);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderEdges_ = renderEdges !== undefined ? renderEdges : false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = gutter;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.sourceTileGrid_ = sourceTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilegrid/TileGrid.js\").default}\n     */\n    this.targetTileGrid_ = targetTileGrid;\n\n    /**\n     * @private\n     * @type {import(\"../tilecoord.js\").TileCoord}\n     */\n    this.wrappedTileCoord_ = wrappedTileCoord ? wrappedTileCoord : tileCoord;\n\n    /**\n     * @private\n     * @type {!Array<TileOffset>}\n     */\n    this.sourceTiles_ = [];\n\n    /**\n     * @private\n     * @type {?Array<import(\"../events.js\").EventsKey>}\n     */\n    this.sourcesListenerKeys_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourceZ_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.clipExtent_ = sourceProj.canWrapX()\n      ? sourceProj.getExtent()\n      : undefined;\n\n    const targetExtent = targetTileGrid.getTileCoordExtent(\n      this.wrappedTileCoord_,\n    );\n    const maxTargetExtent = this.targetTileGrid_.getExtent();\n    let maxSourceExtent = this.sourceTileGrid_.getExtent();\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    if (getArea(limitedTargetExtent) === 0) {\n      // Tile is completely outside range -> EMPTY\n      // TODO: is it actually correct that the source even creates the tile ?\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const sourceProjExtent = sourceProj.getExtent();\n    if (sourceProjExtent) {\n      if (!maxSourceExtent) {\n        maxSourceExtent = sourceProjExtent;\n      } else {\n        maxSourceExtent = getIntersection(maxSourceExtent, sourceProjExtent);\n      }\n    }\n\n    const targetResolution = targetTileGrid.getResolution(\n      this.wrappedTileCoord_[0],\n    );\n\n    const sourceResolution = calculateSourceExtentResolution(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      targetResolution,\n    );\n\n    if (!isFinite(sourceResolution) || sourceResolution <= 0) {\n      // invalid sourceResolution -> EMPTY\n      // probably edges of the projections when no extent is defined\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    const errorThresholdInPixels =\n      errorThreshold !== undefined ? errorThreshold : ERROR_THRESHOLD;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    if (this.triangulation_.getTriangles().length === 0) {\n      // no valid triangles -> EMPTY\n      this.state = TileState.EMPTY;\n      return;\n    }\n\n    this.sourceZ_ = sourceTileGrid.getZForResolution(sourceResolution);\n    let sourceExtent = this.triangulation_.calculateSourceExtent();\n\n    if (maxSourceExtent) {\n      if (sourceProj.canWrapX()) {\n        sourceExtent[1] = clamp(\n          sourceExtent[1],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n        sourceExtent[3] = clamp(\n          sourceExtent[3],\n          maxSourceExtent[1],\n          maxSourceExtent[3],\n        );\n      } else {\n        sourceExtent = getIntersection(sourceExtent, maxSourceExtent);\n      }\n    }\n\n    if (!getArea(sourceExtent)) {\n      this.state = TileState.EMPTY;\n    } else {\n      let worldWidth = 0;\n      let worldsAway = 0;\n      if (sourceProj.canWrapX()) {\n        worldWidth = getWidth(sourceProjExtent);\n        worldsAway = Math.floor(\n          (sourceExtent[0] - sourceProjExtent[0]) / worldWidth,\n        );\n      }\n\n      const sourceExtents = wrapAndSliceX(\n        sourceExtent.slice(),\n        sourceProj,\n        true,\n      );\n      sourceExtents.forEach((extent) => {\n        const sourceRange = sourceTileGrid.getTileRangeForExtentAndZ(\n          extent,\n          this.sourceZ_,\n        );\n\n        for (let srcX = sourceRange.minX; srcX <= sourceRange.maxX; srcX++) {\n          for (let srcY = sourceRange.minY; srcY <= sourceRange.maxY; srcY++) {\n            const tile = getTileFunction(this.sourceZ_, srcX, srcY, pixelRatio);\n            if (tile) {\n              const offset = worldsAway * worldWidth;\n              this.sourceTiles_.push({tile, offset});\n            }\n          }\n        }\n        ++worldsAway;\n      });\n\n      if (this.sourceTiles_.length === 0) {\n        this.state = TileState.EMPTY;\n      }\n    }\n  }\n\n  /**\n   * Get the HTML Canvas element for this tile.\n   * @return {HTMLCanvasElement} Canvas.\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sources = [];\n    this.sourceTiles_.forEach((source) => {\n      const tile = source.tile;\n      if (tile && tile.getState() == TileState.LOADED) {\n        const extent = this.sourceTileGrid_.getTileCoordExtent(tile.tileCoord);\n        extent[0] += source.offset;\n        extent[2] += source.offset;\n        const clipExtent = this.clipExtent_?.slice();\n        if (clipExtent) {\n          clipExtent[0] += source.offset;\n          clipExtent[2] += source.offset;\n        }\n        sources.push({\n          extent: extent,\n          clipExtent: clipExtent,\n          image: tile.getImage(),\n        });\n      }\n    });\n    this.sourceTiles_.length = 0;\n\n    if (sources.length === 0) {\n      this.state = TileState.ERROR;\n    } else {\n      const z = this.wrappedTileCoord_[0];\n      const size = this.targetTileGrid_.getTileSize(z);\n      const width = typeof size === 'number' ? size : size[0];\n      const height = typeof size === 'number' ? size : size[1];\n      const targetResolution = this.targetTileGrid_.getResolution(z);\n      const sourceResolution = this.sourceTileGrid_.getResolution(\n        this.sourceZ_,\n      );\n\n      const targetExtent = this.targetTileGrid_.getTileCoordExtent(\n        this.wrappedTileCoord_,\n      );\n\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.pixelRatio_,\n        sourceResolution,\n        this.sourceTileGrid_.getExtent(),\n        targetResolution,\n        targetExtent,\n        this.triangulation_,\n        sources,\n        this.gutter_,\n        this.renderEdges_,\n        this.interpolate,\n      );\n\n      this.state = TileState.LOADED;\n    }\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == TileState.IDLE) {\n      this.state = TileState.LOADING;\n      this.changed();\n\n      let leftToLoad = 0;\n\n      this.sourcesListenerKeys_ = [];\n      this.sourceTiles_.forEach(({tile}) => {\n        const state = tile.getState();\n        if (state == TileState.IDLE || state == TileState.LOADING) {\n          leftToLoad++;\n\n          const sourceListenKey = listen(tile, EventType.CHANGE, (e) => {\n            const state = tile.getState();\n            if (\n              state == TileState.LOADED ||\n              state == TileState.ERROR ||\n              state == TileState.EMPTY\n            ) {\n              unlistenByKey(sourceListenKey);\n              leftToLoad--;\n              if (leftToLoad === 0) {\n                this.unlistenSources_();\n                this.reproject_();\n              }\n            }\n          });\n          this.sourcesListenerKeys_.push(sourceListenKey);\n        }\n      });\n\n      if (leftToLoad === 0) {\n        setTimeout(this.reproject_.bind(this), 0);\n      } else {\n        this.sourceTiles_.forEach(function ({tile}, i, arr) {\n          const state = tile.getState();\n          if (state == TileState.IDLE) {\n            tile.load();\n          }\n        });\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSources_() {\n    this.sourcesListenerKeys_.forEach(unlistenByKey);\n    this.sourcesListenerKeys_ = null;\n  }\n\n  /**\n   * Remove from the cache due to expiry\n   * @override\n   */\n  release() {\n    if (this.canvas_) {\n      releaseCanvas(this.canvas_.getContext('2d'));\n      canvasPool.push(this.canvas_);\n      this.canvas_ = null;\n    }\n    super.release();\n  }\n}\n\nexport default ReprojTile;\n","/**\n * @module ol/reproj/common\n */\n\n/**\n * Default maximum allowed threshold  (in pixels) for reprojection\n * triangulation.\n * @type {number}\n */\nexport const ERROR_THRESHOLD = 0.5;\n","/**\n * @module ol/structs/LRUCache\n */\n\nimport Disposable from '../Disposable.js';\nimport {assert} from '../asserts.js';\n\n/**\n * @typedef {Object} Entry\n * @property {string} key_ Key.\n * @property {Entry|null} newer Newer.\n * @property {Entry|null} older Older.\n * @property {*} value_ Value.\n */\n\n/**\n * @classdesc\n * Implements a Least-Recently-Used cache where the keys do not conflict with\n * Object's properties (e.g. 'hasOwnProperty' is not allowed as a key). Expiring\n * items from the cache is the responsibility of the user.\n *\n * @fires import(\"../events/Event.js\").default\n * @template T\n */\nclass LRUCache {\n  /**\n   * @param {number} [highWaterMark] High water mark.\n   */\n  constructor(highWaterMark) {\n    /**\n     * Desired max cache size after expireCache(). If set to 0, no cache entries\n     * will be pruned at all.\n     * @type {number}\n     */\n    this.highWaterMark = highWaterMark !== undefined ? highWaterMark : 2048;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.count_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, Entry>}\n     */\n    this.entries_ = {};\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.oldest_ = null;\n\n    /**\n     * @private\n     * @type {?Entry}\n     */\n    this.newest_ = null;\n  }\n\n  deleteOldest() {\n    const entry = this.pop();\n    if (entry instanceof Disposable) {\n      entry.dispose();\n    }\n  }\n\n  /**\n   * @return {boolean} Can expire cache.\n   */\n  canExpireCache() {\n    return this.highWaterMark > 0 && this.getCount() > this.highWaterMark;\n  }\n\n  /**\n   * Expire the cache. When the cache entry is a {@link module:ol/Disposable~Disposable},\n   * the entry will be disposed.\n   * @param {!Object<string, boolean>} [keep] Keys to keep. To be implemented by subclasses.\n   */\n  expireCache(keep) {\n    while (this.canExpireCache()) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * FIXME empty description for jsdoc\n   */\n  clear() {\n    while (this.oldest_) {\n      this.deleteOldest();\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @return {boolean} Contains key.\n   */\n  containsKey(key) {\n    return this.entries_.hasOwnProperty(key);\n  }\n\n  /**\n   * @param {function(T, string, LRUCache<T>): ?} f The function\n   *     to call for every entry from the oldest to the newer. This function takes\n   *     3 arguments (the entry value, the entry key and the LRUCache object).\n   *     The return value is ignored.\n   */\n  forEach(f) {\n    let entry = this.oldest_;\n    while (entry) {\n      f(entry.value_, entry.key_, this);\n      entry = entry.newer;\n    }\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {*} [options] Options (reserved for subclasses).\n   * @return {T} Value.\n   */\n  get(key, options) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      return entry.value_;\n    }\n    if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (this.oldest_.newer);\n      this.oldest_.older = null;\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    entry.newer = null;\n    entry.older = this.newest_;\n    this.newest_.newer = entry;\n    this.newest_ = entry;\n    return entry.value_;\n  }\n\n  /**\n   * Remove an entry from the cache.\n   * @param {string} key The entry key.\n   * @return {T} The removed entry.\n   */\n  remove(key) {\n    const entry = this.entries_[key];\n    assert(\n      entry !== undefined,\n      'Tried to get a value for a key that does not exist in the cache',\n    );\n    if (entry === this.newest_) {\n      this.newest_ = /** @type {Entry} */ (entry.older);\n      if (this.newest_) {\n        this.newest_.newer = null;\n      }\n    } else if (entry === this.oldest_) {\n      this.oldest_ = /** @type {Entry} */ (entry.newer);\n      if (this.oldest_) {\n        this.oldest_.older = null;\n      }\n    } else {\n      entry.newer.older = entry.older;\n      entry.older.newer = entry.newer;\n    }\n    delete this.entries_[key];\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @return {number} Count.\n   */\n  getCount() {\n    return this.count_;\n  }\n\n  /**\n   * @return {Array<string>} Keys.\n   */\n  getKeys() {\n    const keys = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      keys[i++] = entry.key_;\n    }\n    return keys;\n  }\n\n  /**\n   * @return {Array<T>} Values.\n   */\n  getValues() {\n    const values = new Array(this.count_);\n    let i = 0;\n    let entry;\n    for (entry = this.newest_; entry; entry = entry.older) {\n      values[i++] = entry.value_;\n    }\n    return values;\n  }\n\n  /**\n   * @return {T} Last value.\n   */\n  peekLast() {\n    return this.oldest_.value_;\n  }\n\n  /**\n   * @return {string} Last key.\n   */\n  peekLastKey() {\n    return this.oldest_.key_;\n  }\n\n  /**\n   * Get the key of the newest item in the cache.  Throws if the cache is empty.\n   * @return {string} The newest key.\n   */\n  peekFirstKey() {\n    return this.newest_.key_;\n  }\n\n  /**\n   * Return an entry without updating least recently used time.\n   * @param {string} key Key.\n   * @return {T|undefined} Value.\n   */\n  peek(key) {\n    return this.entries_[key]?.value_;\n  }\n\n  /**\n   * @return {T} value Value.\n   */\n  pop() {\n    const entry = this.oldest_;\n    delete this.entries_[entry.key_];\n    if (entry.newer) {\n      entry.newer.older = null;\n    }\n    this.oldest_ = /** @type {Entry} */ (entry.newer);\n    if (!this.oldest_) {\n      this.newest_ = null;\n    }\n    --this.count_;\n    return entry.value_;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  replace(key, value) {\n    this.get(key); // update `newest_`\n    this.entries_[key].value_ = value;\n  }\n\n  /**\n   * @param {string} key Key.\n   * @param {T} value Value.\n   */\n  set(key, value) {\n    assert(\n      !(key in this.entries_),\n      'Tried to set a value for a key that is used already',\n    );\n    const entry = {\n      key_: key,\n      newer: null,\n      older: this.newest_,\n      value_: value,\n    };\n    if (!this.newest_) {\n      this.oldest_ = entry;\n    } else {\n      this.newest_.newer = entry;\n    }\n    this.newest_ = entry;\n    this.entries_[key] = entry;\n    ++this.count_;\n  }\n\n  /**\n   * Set a maximum number of entries for the cache.\n   * @param {number} size Cache size.\n   * @api\n   */\n  setSize(size) {\n    this.highWaterMark = size;\n  }\n}\n\nexport default LRUCache;\n","/**\n * @module ol/renderer/canvas/TileLayer\n */\nimport DataTile, {asImageLike} from '../../DataTile.js';\nimport ImageTile from '../../ImageTile.js';\nimport TileRange from '../../TileRange.js';\nimport TileState from '../../TileState.js';\nimport {ascending} from '../../array.js';\nimport {\n  containsCoordinate,\n  createEmpty,\n  equals,\n  getIntersection,\n  getRotatedViewport,\n  getTopLeft,\n  intersects,\n} from '../../extent.js';\nimport {fromUserExtent} from '../../proj.js';\nimport ReprojTile from '../../reproj/Tile.js';\nimport {toSize} from '../../size.js';\nimport LRUCache from '../../structs/LRUCache.js';\nimport {createOrUpdate as createTileCoord, getKeyZXY} from '../../tilecoord.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n} from '../../transform.js';\nimport {getUid} from '../../util.js';\nimport CanvasLayerRenderer from './Layer.js';\n\n/**\n * @param {import(\"../../source/Tile.js\").default} source The tile source.\n * @param {string} sourceKey The source key.\n * @param {number} z The tile z level.\n * @param {number} x The tile x level.\n * @param {number} y The tile y level.\n * @return {string} The cache key.\n */\nfunction getCacheKey(source, sourceKey, z, x, y) {\n  return `${getUid(source)},${sourceKey},${getKeyZXY(z, x, y)}`;\n}\n\n/**\n * @typedef {Object<number, Set<import(\"../../Tile.js\").default>>} TileLookup\n */\n\n/**\n * Add a tile to the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was added to the lookup.\n */\nfunction addTileToLookup(tilesByZ, tile, z) {\n  if (!(z in tilesByZ)) {\n    tilesByZ[z] = new Set([tile]);\n    return true;\n  }\n  const set = tilesByZ[z];\n  const existing = set.has(tile);\n  if (!existing) {\n    set.add(tile);\n  }\n  return !existing;\n}\n\n/**\n * Remove a tile from the lookup.\n * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n * @param {import(\"../../Tile.js\").default} tile A tile.\n * @param {number} z The zoom level.\n * @return {boolean} The tile was removed from the lookup.\n */\nfunction removeTileFromLookup(tilesByZ, tile, z) {\n  const set = tilesByZ[z];\n  if (set) {\n    return set.delete(tile);\n  }\n  return false;\n}\n\n/**\n * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n * @param {import(\"../../extent.js\").Extent} extent The frame extent.\n * @return {import(\"../../extent.js\").Extent} Frame extent intersected with layer extents.\n */\nfunction getRenderExtent(frameState, extent) {\n  const layerState = frameState.layerStatesArray[frameState.layerIndex];\n  if (layerState.extent) {\n    extent = getIntersection(\n      extent,\n      fromUserExtent(layerState.extent, frameState.viewState.projection),\n    );\n  }\n  const source = /** @type {import(\"../../source/Tile.js\").default} */ (\n    layerState.layer.getRenderSource()\n  );\n  if (!source.getWrapX()) {\n    const gridExtent = source\n      .getTileGridForProjection(frameState.viewState.projection)\n      .getExtent();\n    if (gridExtent) {\n      extent = getIntersection(extent, gridExtent);\n    }\n  }\n  return extent;\n}\n\n/**\n * @typedef {Object} Options\n * @property {number} [cacheSize=512] The cache size.\n */\n\n/**\n * @classdesc\n * Canvas renderer for tile layers.\n * @api\n * @template {import(\"../../layer/Tile.js\").default|import(\"../../layer/VectorTile.js\").default} [LayerType=import(\"../../layer/Tile.js\").default<import(\"../../source/Tile.js\").default>|import(\"../../layer/VectorTile.js\").default]\n * @extends {CanvasLayerRenderer<LayerType>}\n */\nclass CanvasTileLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {LayerType} tileLayer Tile layer.\n   * @param {Options} [options] Options.\n   */\n  constructor(tileLayer, options) {\n    super(tileLayer);\n\n    options = options || {};\n\n    /**\n     * Rendered extent has changed since the previous `renderFrame()` call\n     * @type {boolean}\n     */\n    this.extentChanged = true;\n\n    /**\n     * The last call to `renderFrame` was completed with all tiles loaded\n     * @type {boolean}\n     */\n    this.renderComplete = false;\n\n    /**\n     * @private\n     * @type {?import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = null;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.renderedPixelRatio;\n\n    /**\n     * @protected\n     * @type {import(\"../../proj/Projection.js\").default|null}\n     */\n    this.renderedProjection = null;\n\n    /**\n     * @protected\n     * @type {!Array<import(\"../../Tile.js\").default>}\n     */\n    this.renderedTiles = [];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.renderedSourceKey_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedSourceRevision_;\n\n    /**\n     * @protected\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.tempExtent = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../TileRange.js\").default}\n     */\n    this.tempTileRange_ = new TileRange(0, 0, 0, 0);\n\n    /**\n     * @type {import(\"../../tilecoord.js\").TileCoord}\n     * @private\n     */\n    this.tempTileCoord_ = createTileCoord(0, 0, 0);\n\n    const cacheSize = options.cacheSize !== undefined ? options.cacheSize : 512;\n\n    /**\n     * @type {import(\"../../structs/LRUCache.js\").default<import(\"../../Tile.js\").default>}\n     * @private\n     */\n    this.tileCache_ = new LRUCache(cacheSize);\n\n    this.maxStaleKeys = cacheSize * 0.5;\n  }\n\n  /**\n   * @return {LRUCache} Tile cache.\n   */\n  getTileCache() {\n    return this.tileCache_;\n  }\n\n  /**\n   * Get a tile from the cache or create one if needed.\n   *\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getOrCreateTile(z, x, y, frameState) {\n    const tileCache = this.tileCache_;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const cacheKey = getCacheKey(tileSource, tileSource.getKey(), z, x, y);\n\n    /** @type {import(\"../../Tile.js\").default} */\n    let tile;\n\n    if (tileCache.containsKey(cacheKey)) {\n      tile = tileCache.get(cacheKey);\n    } else {\n      tile = tileSource.getTile(\n        z,\n        x,\n        y,\n        frameState.pixelRatio,\n        frameState.viewState.projection,\n      );\n      if (!tile) {\n        return null;\n      }\n      tileCache.set(cacheKey, tile);\n    }\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {import(\"../../Tile.js\").default|null} Tile (or null if outside source extent).\n   * @protected\n   */\n  getTile(z, x, y, frameState) {\n    const tile = this.getOrCreateTile(z, x, y, frameState);\n    if (!tile) {\n      return null;\n    }\n    return tile;\n  }\n\n  /**\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray} Data at the pixel location.\n   * @override\n   */\n  getData(pixel) {\n    const frameState = this.frameState;\n    if (!frameState) {\n      return null;\n    }\n\n    const layer = this.getLayer();\n    const coordinate = applyTransform(\n      frameState.pixelToCoordinateTransform,\n      pixel.slice(),\n    );\n\n    const layerExtent = layer.getExtent();\n    if (layerExtent) {\n      if (!containsCoordinate(layerExtent, coordinate)) {\n        return null;\n      }\n    }\n\n    const viewState = frameState.viewState;\n    const source = layer.getRenderSource();\n    const tileGrid = source.getTileGridForProjection(viewState.projection);\n    const tilePixelRatio = source.getTilePixelRatio(frameState.pixelRatio);\n\n    for (\n      let z = tileGrid.getZForResolution(viewState.resolution);\n      z >= tileGrid.getMinZoom();\n      --z\n    ) {\n      const tileCoord = tileGrid.getTileCoordForCoordAndZ(coordinate, z);\n      const tile = this.getTile(z, tileCoord[1], tileCoord[2], frameState);\n      if (!tile || tile.getState() !== TileState.LOADED) {\n        continue;\n      }\n\n      const tileOrigin = tileGrid.getOrigin(z);\n      const tileSize = toSize(tileGrid.getTileSize(z));\n      const tileResolution = tileGrid.getResolution(z);\n\n      /**\n       * @type {import('../../DataTile.js').ImageLike}\n       */\n      let image;\n      if (tile instanceof ImageTile || tile instanceof ReprojTile) {\n        image = tile.getImage();\n      } else if (tile instanceof DataTile) {\n        image = asImageLike(tile.getData());\n        if (!image) {\n          continue;\n        }\n      } else {\n        continue;\n      }\n\n      const col = Math.floor(\n        tilePixelRatio *\n          ((coordinate[0] - tileOrigin[0]) / tileResolution -\n            tileCoord[1] * tileSize[0]),\n      );\n\n      const row = Math.floor(\n        tilePixelRatio *\n          ((tileOrigin[1] - coordinate[1]) / tileResolution -\n            tileCoord[2] * tileSize[1]),\n      );\n\n      const gutter = Math.round(\n        tilePixelRatio * source.getGutterForProjection(viewState.projection),\n      );\n\n      return this.getImageData(image, col + gutter, row + gutter);\n    }\n\n    return null;\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    if (!this.renderedProjection) {\n      this.renderedProjection = frameState.viewState.projection;\n    } else if (frameState.viewState.projection !== this.renderedProjection) {\n      this.tileCache_.clear();\n      this.renderedProjection = frameState.viewState.projection;\n    }\n\n    const source = this.getLayer().getSource();\n    if (!source) {\n      return false;\n    }\n    const sourceRevision = source.getRevision();\n    if (!this.renderedSourceRevision_) {\n      this.renderedSourceRevision_ = sourceRevision;\n    } else if (this.renderedSourceRevision_ !== sourceRevision) {\n      this.renderedSourceRevision_ = sourceRevision;\n      if (this.renderedSourceKey_ === source.getKey()) {\n        this.tileCache_.clear();\n      }\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {import(\"../../extent.js\").Extent} extent The extent to be rendered.\n   * @param {number} initialZ The zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @param {number} preload Number of additional levels to load.\n   */\n  enqueueTiles(frameState, extent, initialZ, tilesByZ, preload) {\n    const viewState = frameState.viewState;\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getRenderSource();\n    const tileGrid = tileSource.getTileGridForProjection(viewState.projection);\n\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in frameState.wantedTiles)) {\n      frameState.wantedTiles[tileSourceKey] = {};\n    }\n\n    const wantedTiles = frameState.wantedTiles[tileSourceKey];\n\n    const map = tileLayer.getMapInternal();\n    const minZ = Math.max(\n      initialZ - preload,\n      tileGrid.getMinZoom(),\n      tileGrid.getZForResolution(\n        Math.min(\n          tileLayer.getMaxResolution(),\n          map\n            ? map\n                .getView()\n                .getResolutionForZoom(Math.max(tileLayer.getMinZoom(), 0))\n            : tileGrid.getResolution(0),\n        ),\n        tileSource.zDirection,\n      ),\n    );\n    const rotation = viewState.rotation;\n    const viewport = rotation\n      ? getRotatedViewport(\n          viewState.center,\n          viewState.resolution,\n          rotation,\n          frameState.size,\n        )\n      : undefined;\n    for (let z = initialZ; z >= minZ; --z) {\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        extent,\n        z,\n        this.tempTileRange_,\n      );\n\n      const tileResolution = tileGrid.getResolution(z);\n\n      for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n        for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n          if (\n            rotation &&\n            !tileGrid.tileCoordIntersectsViewport([z, x, y], viewport)\n          ) {\n            continue;\n          }\n          const tile = this.getTile(z, x, y, frameState);\n          if (!tile) {\n            continue;\n          }\n          const added = addTileToLookup(tilesByZ, tile, z);\n          if (!added) {\n            continue;\n          }\n\n          const tileQueueKey = tile.getKey();\n          wantedTiles[tileQueueKey] = true;\n\n          if (tile.getState() === TileState.IDLE) {\n            if (!frameState.tileQueue.isKeyQueued(tileQueueKey)) {\n              const tileCoord = createTileCoord(z, x, y, this.tempTileCoord_);\n              frameState.tileQueue.enqueue([\n                tile,\n                tileSourceKey,\n                tileGrid.getTileCoordCenter(tileCoord),\n                tileResolution,\n              ]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findStaleTile_(tileCoord, tilesByZ) {\n    const tileCache = this.tileCache_;\n    const z = tileCoord[0];\n    const x = tileCoord[1];\n    const y = tileCoord[2];\n    const staleKeys = this.getStaleKeys();\n    for (let i = 0; i < staleKeys.length; ++i) {\n      const cacheKey = getCacheKey(\n        this.getLayer().getSource(),\n        staleKeys[i],\n        z,\n        x,\n        y,\n      );\n      if (tileCache.containsKey(cacheKey)) {\n        const tile = tileCache.peek(cacheKey);\n        if (tile.getState() === TileState.LOADED) {\n          tile.endTransition(getUid(this));\n          addTileToLookup(tilesByZ, tile, z);\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * Look for tiles covering the provided tile coordinate at an alternate\n   * zoom level.  Loaded tiles will be added to the provided tile texture lookup.\n   * @param {import(\"../../tilegrid/TileGrid.js\").default} tileGrid The tile grid.\n   * @param {import(\"../../tilecoord.js\").TileCoord} tileCoord The target tile coordinate.\n   * @param {number} altZ The alternate zoom level.\n   * @param {TileLookup} tilesByZ Lookup of tiles by zoom level.\n   * @return {boolean} The tile coordinate is covered by loaded tiles at the alternate zoom level.\n   * @private\n   */\n  findAltTiles_(tileGrid, tileCoord, altZ, tilesByZ) {\n    const tileRange = tileGrid.getTileRangeForTileCoordAndZ(\n      tileCoord,\n      altZ,\n      this.tempTileRange_,\n    );\n\n    if (!tileRange) {\n      return false;\n    }\n\n    let covered = true;\n    const tileCache = this.tileCache_;\n    const source = this.getLayer().getRenderSource();\n    const sourceKey = source.getKey();\n    for (let x = tileRange.minX; x <= tileRange.maxX; ++x) {\n      for (let y = tileRange.minY; y <= tileRange.maxY; ++y) {\n        const cacheKey = getCacheKey(source, sourceKey, altZ, x, y);\n        let loaded = false;\n        if (tileCache.containsKey(cacheKey)) {\n          const tile = tileCache.peek(cacheKey);\n          if (tile.getState() === TileState.LOADED) {\n            addTileToLookup(tilesByZ, tile, altZ);\n            loaded = true;\n          }\n        }\n        if (!loaded) {\n          covered = false;\n        }\n      }\n    }\n    return covered;\n  }\n\n  /**\n   * Render the layer.\n   *\n   * The frame rendering logic has three parts:\n   *\n   *  1. Enqueue tiles\n   *  2. Find alt tiles for those that are not yet loaded\n   *  3. Render loaded tiles\n   *\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    this.renderComplete = true;\n\n    /**\n     * TODO:\n     *  maybe skip transition when not fully opaque\n     *  decide if this.renderComplete is useful\n     */\n\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const viewResolution = viewState.resolution;\n    const viewCenter = viewState.center;\n    const pixelRatio = frameState.pixelRatio;\n\n    const tileLayer = this.getLayer();\n    const tileSource = tileLayer.getSource();\n    const tileGrid = tileSource.getTileGridForProjection(projection);\n    const z = tileGrid.getZForResolution(viewResolution, tileSource.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n\n    const sourceKey = tileSource.getKey();\n    if (!this.renderedSourceKey_) {\n      this.renderedSourceKey_ = sourceKey;\n    } else if (this.renderedSourceKey_ !== sourceKey) {\n      this.prependStaleKey(this.renderedSourceKey_);\n      this.renderedSourceKey_ = sourceKey;\n    }\n\n    let frameExtent = frameState.extent;\n    const tilePixelRatio = tileSource.getTilePixelRatio(pixelRatio);\n\n    this.prepareContainer(frameState, target);\n\n    // desired dimensions of the canvas in pixels\n    const width = this.context.canvas.width;\n    const height = this.context.canvas.height;\n\n    const layerExtent =\n      layerState.extent && fromUserExtent(layerState.extent, projection);\n    if (layerExtent) {\n      frameExtent = getIntersection(\n        frameExtent,\n        fromUserExtent(layerState.extent, projection),\n      );\n    }\n\n    const dx = (tileResolution * width) / 2 / tilePixelRatio;\n    const dy = (tileResolution * height) / 2 / tilePixelRatio;\n    const canvasExtent = [\n      viewCenter[0] - dx,\n      viewCenter[1] - dy,\n      viewCenter[0] + dx,\n      viewCenter[1] + dy,\n    ];\n\n    /**\n     * @type {TileLookup}\n     */\n    const tilesByZ = {};\n\n    this.renderedTiles.length = 0;\n\n    /**\n     * Part 1: Enqueue tiles\n     */\n\n    const preload = tileLayer.getPreload();\n    if (frameState.nextExtent) {\n      const targetZ = tileGrid.getZForResolution(\n        viewState.nextResolution,\n        tileSource.zDirection,\n      );\n      const nextExtent = getRenderExtent(frameState, frameState.nextExtent);\n      this.enqueueTiles(frameState, nextExtent, targetZ, tilesByZ, preload);\n    }\n\n    const renderExtent = getRenderExtent(frameState, frameExtent);\n    this.enqueueTiles(frameState, renderExtent, z, tilesByZ, 0);\n    if (preload > 0) {\n      setTimeout(() => {\n        this.enqueueTiles(\n          frameState,\n          renderExtent,\n          z - 1,\n          tilesByZ,\n          preload - 1,\n        );\n      }, 0);\n    }\n\n    if (!(z in tilesByZ)) {\n      return this.container;\n    }\n\n    /**\n     * Part 2: Find alt tiles for those that are not yet loaded\n     */\n\n    const uid = getUid(this);\n    const time = frameState.time;\n\n    // look for cached tiles to use if a target tile is not ready\n    for (const tile of tilesByZ[z]) {\n      const tileState = tile.getState();\n      if (tileState === TileState.EMPTY) {\n        continue;\n      }\n      const tileCoord = tile.tileCoord;\n\n      if (tileState === TileState.LOADED) {\n        const alpha = tile.getAlpha(uid, time);\n        if (alpha === 1) {\n          // no need to look for alt tiles\n          tile.endTransition(uid);\n          continue;\n        }\n      }\n      if (tileState !== TileState.ERROR) {\n        this.renderComplete = false;\n      }\n\n      const hasStaleTile = this.findStaleTile_(tileCoord, tilesByZ);\n      if (hasStaleTile) {\n        // use the stale tile before the new tile's transition has completed\n        removeTileFromLookup(tilesByZ, tile, z);\n        frameState.animate = true;\n        continue;\n      }\n\n      // first look for child tiles (at z + 1)\n      const coveredByChildren = this.findAltTiles_(\n        tileGrid,\n        tileCoord,\n        z + 1,\n        tilesByZ,\n      );\n\n      if (coveredByChildren) {\n        continue;\n      }\n\n      // next look for parent tiles\n      const minZoom = tileGrid.getMinZoom();\n      for (let parentZ = z - 1; parentZ >= minZoom; --parentZ) {\n        const coveredByParent = this.findAltTiles_(\n          tileGrid,\n          tileCoord,\n          parentZ,\n          tilesByZ,\n        );\n\n        if (coveredByParent) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * Part 3: Render loaded tiles\n     */\n\n    const canvasScale =\n      ((tileResolution / viewResolution) * pixelRatio) / tilePixelRatio;\n\n    const context = this.getRenderContext(frameState);\n\n    // set scale transform for calculating tile positions on the canvas\n    composeTransform(\n      this.tempTransform,\n      width / 2,\n      height / 2,\n      canvasScale,\n      canvasScale,\n      0,\n      -width / 2,\n      -height / 2,\n    );\n\n    if (layerState.extent) {\n      this.clipUnrotated(context, frameState, layerExtent);\n    }\n\n    if (!tileSource.getInterpolate()) {\n      context.imageSmoothingEnabled = false;\n    }\n\n    this.preRender(context, frameState);\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(tilesByZ).map(Number);\n    zs.sort(ascending);\n\n    let currentClip;\n    const clips = [];\n    const clipZs = [];\n    for (let i = zs.length - 1; i >= 0; --i) {\n      const currentZ = zs[i];\n      const currentTilePixelSize = tileSource.getTilePixelSize(\n        currentZ,\n        pixelRatio,\n        projection,\n      );\n      const currentResolution = tileGrid.getResolution(currentZ);\n      const currentScale = currentResolution / tileResolution;\n      const dx = currentTilePixelSize[0] * currentScale * canvasScale;\n      const dy = currentTilePixelSize[1] * currentScale * canvasScale;\n      const originTileCoord = tileGrid.getTileCoordForCoordAndZ(\n        getTopLeft(canvasExtent),\n        currentZ,\n      );\n      const originTileExtent = tileGrid.getTileCoordExtent(originTileCoord);\n      const origin = applyTransform(this.tempTransform, [\n        (tilePixelRatio * (originTileExtent[0] - canvasExtent[0])) /\n          tileResolution,\n        (tilePixelRatio * (canvasExtent[3] - originTileExtent[3])) /\n          tileResolution,\n      ]);\n      const tileGutter =\n        tilePixelRatio * tileSource.getGutterForProjection(projection);\n      for (const tile of tilesByZ[currentZ]) {\n        if (tile.getState() !== TileState.LOADED) {\n          continue;\n        }\n        const tileCoord = tile.tileCoord;\n\n        // Calculate integer positions and sizes so that tiles align\n        const xIndex = originTileCoord[1] - tileCoord[1];\n        const nextX = Math.round(origin[0] - (xIndex - 1) * dx);\n        const yIndex = originTileCoord[2] - tileCoord[2];\n        const nextY = Math.round(origin[1] - (yIndex - 1) * dy);\n        const x = Math.round(origin[0] - xIndex * dx);\n        const y = Math.round(origin[1] - yIndex * dy);\n        const w = nextX - x;\n        const h = nextY - y;\n        const transition = zs.length === 1;\n\n        let contextSaved = false;\n\n        // Clip mask for regions in this tile that already filled by a higher z tile\n        currentClip = [x, y, x + w, y, x + w, y + h, x, y + h];\n        for (let i = 0, ii = clips.length; i < ii; ++i) {\n          if (!transition && currentZ < clipZs[i]) {\n            const clip = clips[i];\n            if (\n              intersects(\n                [x, y, x + w, y + h],\n                [clip[0], clip[3], clip[4], clip[7]],\n              )\n            ) {\n              if (!contextSaved) {\n                context.save();\n                contextSaved = true;\n              }\n              context.beginPath();\n              // counter-clockwise (outer ring) for current tile\n              context.moveTo(currentClip[0], currentClip[1]);\n              context.lineTo(currentClip[2], currentClip[3]);\n              context.lineTo(currentClip[4], currentClip[5]);\n              context.lineTo(currentClip[6], currentClip[7]);\n              // clockwise (inner ring) for higher z tile\n              context.moveTo(clip[6], clip[7]);\n              context.lineTo(clip[4], clip[5]);\n              context.lineTo(clip[2], clip[3]);\n              context.lineTo(clip[0], clip[1]);\n              context.clip();\n            }\n          }\n        }\n        clips.push(currentClip);\n        clipZs.push(currentZ);\n\n        this.drawTile(tile, frameState, x, y, w, h, tileGutter, transition);\n        if (contextSaved) {\n          context.restore();\n        }\n        this.renderedTiles.unshift(tile);\n\n        // TODO: decide if this is necessary\n        this.updateUsedTiles(frameState.usedTiles, tileSource, tile);\n      }\n    }\n\n    this.renderedResolution = tileResolution;\n    this.extentChanged =\n      !this.renderedExtent_ || !equals(this.renderedExtent_, canvasExtent);\n    this.renderedExtent_ = canvasExtent;\n    this.renderedPixelRatio = pixelRatio;\n\n    this.postRender(this.context, frameState);\n\n    if (layerState.extent) {\n      context.restore();\n    }\n    context.imageSmoothingEnabled = true;\n\n    if (this.renderComplete) {\n      /**\n       * @param {import(\"../../Map.js\").default} map Map.\n       * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n       */\n      const postRenderFunction = (map, frameState) => {\n        const tileSourceKey = getUid(tileSource);\n        const wantedTiles = frameState.wantedTiles[tileSourceKey];\n        const tilesCount = wantedTiles ? Object.keys(wantedTiles).length : 0;\n        this.updateCacheSize(tilesCount);\n        this.tileCache_.expireCache();\n      };\n\n      frameState.postRenderFunctions.push(postRenderFunction);\n    }\n\n    return this.container;\n  }\n\n  /**\n   * Increases the cache size if needed\n   * @param {number} tileCount Minimum number of tiles needed.\n   */\n  updateCacheSize(tileCount) {\n    this.tileCache_.highWaterMark = Math.max(\n      this.tileCache_.highWaterMark,\n      tileCount * 2,\n    );\n  }\n\n  /**\n   * @param {import(\"../../Tile.js\").default} tile Tile.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} x Left of the tile.\n   * @param {number} y Top of the tile.\n   * @param {number} w Width of the tile.\n   * @param {number} h Height of the tile.\n   * @param {number} gutter Tile gutter.\n   * @param {boolean} transition Apply an alpha transition.\n   * @protected\n   */\n  drawTile(tile, frameState, x, y, w, h, gutter, transition) {\n    let image;\n    if (tile instanceof DataTile) {\n      image = asImageLike(tile.getData());\n      if (!image) {\n        throw new Error('Rendering array data is not yet supported');\n      }\n    } else {\n      image = this.getTileImage(\n        /** @type {import(\"../../ImageTile.js\").default} */ (tile),\n      );\n    }\n    if (!image) {\n      return;\n    }\n    const context = this.getRenderContext(frameState);\n    const uid = getUid(this);\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    const alpha =\n      layerState.opacity *\n      (transition ? tile.getAlpha(uid, frameState.time) : 1);\n    const alphaChanged = alpha !== context.globalAlpha;\n    if (alphaChanged) {\n      context.save();\n      context.globalAlpha = alpha;\n    }\n    context.drawImage(\n      image,\n      gutter,\n      gutter,\n      image.width - 2 * gutter,\n      image.height - 2 * gutter,\n      x,\n      y,\n      w,\n      h,\n    );\n\n    if (alphaChanged) {\n      context.restore();\n    }\n    if (alpha !== layerState.opacity) {\n      frameState.animate = true;\n    } else if (transition) {\n      tile.endTransition(uid);\n    }\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image\n   */\n  getImage() {\n    const context = this.context;\n    return context ? context.canvas : null;\n  }\n\n  /**\n   * Get the image from a tile.\n   * @param {import(\"../../ImageTile.js\").default} tile Tile.\n   * @return {HTMLCanvasElement|HTMLImageElement|HTMLVideoElement} Image.\n   * @protected\n   */\n  getTileImage(tile) {\n    return tile.getImage();\n  }\n\n  /**\n   * @param {!Object<string, !Object<string, boolean>>} usedTiles Used tiles.\n   * @param {import(\"../../source/Tile.js\").default} tileSource Tile source.\n   * @param {import('../../Tile.js').default} tile Tile.\n   * @protected\n   */\n  updateUsedTiles(usedTiles, tileSource, tile) {\n    // FIXME should we use tilesToDrawByZ instead?\n    const tileSourceKey = getUid(tileSource);\n    if (!(tileSourceKey in usedTiles)) {\n      usedTiles[tileSourceKey] = {};\n    }\n    usedTiles[tileSourceKey][tile.getKey()] = true;\n  }\n}\n\nexport default CanvasTileLayerRenderer;\n","/**\n * @module ol/layer/TileProperty\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  PRELOAD: 'preload',\n  USE_INTERIM_TILES_ON_ERROR: 'useInterimTilesOnError',\n};\n","/**\n * @module ol/layer/BaseTile\n */\nimport Layer from './Layer.js';\nimport TileProperty from './TileProperty.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./Base\").BaseLayerObjectEventTypes|\n *     import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError', import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../render/EventType\").LayerRenderEventTypes, import(\"../render/Event\").default, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"./Base\").BaseLayerObjectEventTypes|\n *   import(\"./Layer.js\").LayerEventType|'change:preload'|'change:useInterimTilesOnError'|import(\"../render/EventType\").LayerRenderEventTypes, Return>} BaseTileLayerOnSignature\n */\n\n/**\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {number} [preload=0] Preload. Load low-resolution tiles up to `preload` levels. `0`\n * means no preloading.\n * @property {TileSourceType} [source] Source for this layer.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use {@link import(\"../Map.js\").default#addLayer map.addLayer()}.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [useInterimTilesOnError=true] Deprecated.  Use interim tiles on error.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n * @property {number} [cacheSize=512] The internal tile cache size.  This needs to be large enough to render\n * two zoom levels worth of tiles.\n */\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} TileSourceType\n * @template {import(\"../renderer/Layer.js\").default} RendererType\n * @extends {Layer<TileSourceType, RendererType>}\n * @api\n */\nclass BaseTileLayer extends Layer {\n  /**\n   * @param {Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    const baseOptions = Object.assign({}, options);\n\n    const cacheSize = options.cacheSize;\n    delete options.cacheSize;\n\n    delete baseOptions.preload;\n    delete baseOptions.useInterimTilesOnError;\n    super(baseOptions);\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {BaseTileLayerOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {BaseTileLayerOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @type {number|undefined}\n     * @private\n     */\n    this.cacheSize_ = cacheSize;\n\n    this.setPreload(options.preload !== undefined ? options.preload : 0);\n    this.setUseInterimTilesOnError(\n      options.useInterimTilesOnError !== undefined\n        ? options.useInterimTilesOnError\n        : true,\n    );\n  }\n\n  /**\n   * @return {number|undefined} The suggested cache size\n   * @protected\n   */\n  getCacheSize() {\n    return this.cacheSize_;\n  }\n\n  /**\n   * Return the level as number to which we will preload tiles up to.\n   * @return {number} The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  getPreload() {\n    return /** @type {number} */ (this.get(TileProperty.PRELOAD));\n  }\n\n  /**\n   * Set the level as number to which we will preload tiles up to.\n   * @param {number} preload The level to preload tiles up to.\n   * @observable\n   * @api\n   */\n  setPreload(preload) {\n    this.set(TileProperty.PRELOAD, preload);\n  }\n\n  /**\n   * Deprecated.  Whether we use interim tiles on error.\n   * @return {boolean} Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  getUseInterimTilesOnError() {\n    return /** @type {boolean} */ (\n      this.get(TileProperty.USE_INTERIM_TILES_ON_ERROR)\n    );\n  }\n\n  /**\n   * Deprecated.  Set whether we use interim tiles on error.\n   * @param {boolean} useInterimTilesOnError Use interim tiles on error.\n   * @observable\n   * @api\n   */\n  setUseInterimTilesOnError(useInterimTilesOnError) {\n    this.set(TileProperty.USE_INTERIM_TILES_ON_ERROR, useInterimTilesOnError);\n  }\n\n  /**\n   * Get data for a pixel location.  The return type depends on the source data.  For image tiles,\n   * a four element RGBA array will be returned.  For data tiles, the array length will match the\n   * number of bands in the dataset.  For requests outside the layer extent, `null` will be returned.\n   * Data for a image tiles can only be retrieved if the source's `crossOrigin` property is set.\n   *\n   * ```js\n   * // display layer data on every pointer move\n   * map.on('pointermove', (event) => {\n   *   console.log(layer.getData(event.pixel));\n   * });\n   * ```\n   * @param {import(\"../pixel\").Pixel} pixel Pixel.\n   * @return {Uint8ClampedArray|Uint8Array|Float32Array|DataView|null} Pixel data.\n   * @api\n   * @override\n   */\n  getData(pixel) {\n    return super.getData(pixel);\n  }\n}\n\nexport default BaseTileLayer;\n","/**\n * @module ol/layer/Tile\n */\nimport CanvasTileLayerRenderer from '../renderer/canvas/TileLayer.js';\nimport BaseTileLayer from './BaseTile.js';\n\n/**\n * @classdesc\n * For layer sources that provide pre-rendered, tiled images in grids that are\n * organized by zoom levels for specific resolutions.\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Tile.js\").default} [TileSourceType=import(\"../source/Tile.js\").default]\n * @extends BaseTileLayer<TileSourceType, CanvasTileLayerRenderer>\n * @api\n */\nclass TileLayer extends BaseTileLayer {\n  /**\n   * @param {import(\"./BaseTile.js\").Options<TileSourceType>} [options] Tile layer options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasTileLayerRenderer(this, {\n      cacheSize: this.getCacheSize(),\n    });\n  }\n}\n\nexport default TileLayer;\n","/**\n * @module ol/render/VectorContext\n */\n\n/**\n * @classdesc\n * Context for drawing geometries.  A vector context is available on render\n * events and does not need to be constructed directly.\n * @api\n */\nclass VectorContext {\n  /**\n   * Render a geometry with a custom renderer.\n   *\n   * @param {import(\"../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {}\n\n  /**\n   * Render a geometry.\n   *\n   * @param {import(\"../geom/Geometry.js\").default} geometry The geometry to render.\n   */\n  drawGeometry(geometry) {}\n\n  /**\n   * Set the rendering style.\n   *\n   * @param {import(\"../style/Style.js\").default} style The rendering style.\n   */\n  setStyle(style) {}\n\n  /**\n   * @param {import(\"../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawCircle(circleGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {import(\"../style/Style.js\").default} style Style.\n   * @param {number} [index] Render order index.\n   */\n  drawFeature(feature, style, index) {}\n\n  /**\n   * @param {import(\"../geom/GeometryCollection.js\").default} geometryCollectionGeometry Geometry collection.\n   * @param {import(\"../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawGeometryCollection(geometryCollectionGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/LineString.js\").default|import(\"./Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawLineString(lineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiLineString.js\").default|import(\"./Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPoint.js\").default|import(\"./Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Point.js\").default|import(\"./Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPoint(pointGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/Polygon.js\").default|import(\"./Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawPolygon(polygonGeometry, feature, index) {}\n\n  /**\n   * @param {import(\"../geom/SimpleGeometry.js\").default|import(\"./Feature.js\").default} geometry Geometry.\n   * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   */\n  drawText(geometry, feature, index) {}\n\n  /**\n   * @param {import(\"../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../style/Stroke.js\").default} strokeStyle Stroke style.\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {}\n\n  /**\n   * @param {import(\"../style/Image.js\").default} imageStyle Image style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with a text style.\n   */\n  setImageStyle(imageStyle, declutterImageWithText) {}\n\n  /**\n   * @param {import(\"../style/Text.js\").default} textStyle Text style.\n   * @param {import(\"../render/canvas.js\").DeclutterImageWithText} [declutterImageWithText] Shared data for combined decluttering with an image style.\n   */\n  setTextStyle(textStyle, declutterImageWithText) {}\n}\n\nexport default VectorContext;\n","/**\n * @module ol/render/canvas/Instruction\n */\n\n/**\n * @enum {number}\n */\nconst Instruction = {\n  BEGIN_GEOMETRY: 0,\n  BEGIN_PATH: 1,\n  CIRCLE: 2,\n  CLOSE_PATH: 3,\n  CUSTOM: 4,\n  DRAW_CHARS: 5,\n  DRAW_IMAGE: 6,\n  END_GEOMETRY: 7,\n  FILL: 8,\n  MOVE_TO_LINE_TO: 9,\n  SET_FILL_STYLE: 10,\n  SET_STROKE_STYLE: 11,\n  STROKE: 12,\n};\n\n/**\n * @type {Array<Instruction>}\n */\nexport const fillInstruction = [Instruction.FILL];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const strokeInstruction = [Instruction.STROKE];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const beginPathInstruction = [Instruction.BEGIN_PATH];\n\n/**\n * @type {Array<Instruction>}\n */\nexport const closePathInstruction = [Instruction.CLOSE_PATH];\n\nexport default Instruction;\n","/**\n * @module ol/render/canvas/Builder\n */\nimport {equals, reverseSubArray} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport Relationship from '../../extent/Relationship.js';\nimport {\n  buffer,\n  clone,\n  containsCoordinate,\n  coordinateRelationship,\n} from '../../extent.js';\nimport {\n  inflateCoordinates,\n  inflateCoordinatesArray,\n  inflateMultiCoordinatesArray,\n} from '../../geom/flat/inflate.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasBuilder extends VectorContext {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super();\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.tolerance = tolerance;\n\n    /**\n     * @protected\n     * @const\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent = maxExtent;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.maxLineWidth = 0;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction1_ = null;\n\n    /**\n     * @private\n     * @type {Array<*>}\n     */\n    this.beginGeometryInstruction2_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.bufferedMaxExtent_ = null;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = [];\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = [];\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate.js\").Coordinate}\n     */\n    this.tmpCoordinate_ = [];\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = [];\n\n    /**\n     * @protected\n     * @type {import(\"../canvas.js\").FillStrokeState}\n     */\n    this.state = /** @type {import(\"../canvas.js\").FillStrokeState} */ ({});\n  }\n\n  /**\n   * @protected\n   * @param {Array<number>} dashArray Dash array.\n   * @return {Array<number>} Dash array with pixel ratio applied\n   */\n  applyPixelRatio(dashArray) {\n    const pixelRatio = this.pixelRatio;\n    return pixelRatio == 1\n      ? dashArray\n      : dashArray.map(function (dash) {\n          return dash * pixelRatio;\n        });\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} stride Stride.\n   * @protected\n   * @return {number} My end\n   */\n  appendFlatPointCoordinates(flatCoordinates, stride) {\n    const extent = this.getBufferedMaxExtent();\n    const tmpCoord = this.tmpCoordinate_;\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    for (let i = 0, ii = flatCoordinates.length; i < ii; i += stride) {\n      tmpCoord[0] = flatCoordinates[i];\n      tmpCoord[1] = flatCoordinates[i + 1];\n      if (containsCoordinate(extent, tmpCoord)) {\n        coordinates[myEnd++] = tmpCoord[0];\n        coordinates[myEnd++] = tmpCoord[1];\n      }\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} closed Last input coordinate equals first.\n   * @param {boolean} skipFirst Skip first coordinate.\n   * @protected\n   * @return {number} My end.\n   */\n  appendFlatLineCoordinates(\n    flatCoordinates,\n    offset,\n    end,\n    stride,\n    closed,\n    skipFirst,\n  ) {\n    const coordinates = this.coordinates;\n    let myEnd = coordinates.length;\n    const extent = this.getBufferedMaxExtent();\n    if (skipFirst) {\n      offset += stride;\n    }\n    let lastXCoord = flatCoordinates[offset];\n    let lastYCoord = flatCoordinates[offset + 1];\n    const nextCoord = this.tmpCoordinate_;\n    let skipped = true;\n\n    let i, lastRel, nextRel;\n    for (i = offset + stride; i < end; i += stride) {\n      nextCoord[0] = flatCoordinates[i];\n      nextCoord[1] = flatCoordinates[i + 1];\n      nextRel = coordinateRelationship(extent, nextCoord);\n      if (nextRel !== lastRel) {\n        if (skipped) {\n          coordinates[myEnd++] = lastXCoord;\n          coordinates[myEnd++] = lastYCoord;\n          skipped = false;\n        }\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n      } else if (nextRel === Relationship.INTERSECTING) {\n        coordinates[myEnd++] = nextCoord[0];\n        coordinates[myEnd++] = nextCoord[1];\n        skipped = false;\n      } else {\n        skipped = true;\n      }\n      lastXCoord = nextCoord[0];\n      lastYCoord = nextCoord[1];\n      lastRel = nextRel;\n    }\n\n    // Last coordinate equals first or only one point to append:\n    if ((closed && skipped) || i === offset + stride) {\n      coordinates[myEnd++] = lastXCoord;\n      coordinates[myEnd++] = lastYCoord;\n    }\n    return myEnd;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @param {Array<number>} builderEnds Builder ends.\n   * @return {number} Offset.\n   */\n  drawCustomCoordinates_(flatCoordinates, offset, ends, stride, builderEnds) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      const end = ends[i];\n      const builderEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        false,\n        false,\n      );\n      builderEnds.push(builderEnd);\n      offset = end;\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {Function} renderer Renderer.\n   * @param {Function} hitDetectionRenderer Renderer.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCustom(geometry, feature, renderer, hitDetectionRenderer, index) {\n    this.beginGeometry(geometry, feature, index);\n\n    const type = geometry.getType();\n    const stride = geometry.getStride();\n    const builderBegin = this.coordinates.length;\n\n    let flatCoordinates, builderEnd, builderEnds, builderEndss;\n    let offset;\n\n    switch (type) {\n      case 'MultiPolygon':\n        flatCoordinates =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getOrientedFlatCoordinates();\n        builderEndss = [];\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        offset = 0;\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          const myEnds = [];\n          offset = this.drawCustomCoordinates_(\n            flatCoordinates,\n            offset,\n            endss[i],\n            stride,\n            myEnds,\n          );\n          builderEndss.push(myEnds);\n        }\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEndss,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateMultiCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'Polygon':\n      case 'MultiLineString':\n        builderEnds = [];\n        flatCoordinates =\n          type == 'Polygon'\n            ? /** @type {import(\"../../geom/Polygon.js\").default} */ (\n                geometry\n              ).getOrientedFlatCoordinates()\n            : geometry.getFlatCoordinates();\n        offset = this.drawCustomCoordinates_(\n          flatCoordinates,\n          0,\n          /** @type {import(\"../../geom/Polygon.js\").default|import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ).getEnds(),\n          stride,\n          builderEnds,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnds,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinatesArray,\n          index,\n        ]);\n        break;\n      case 'LineString':\n      case 'Circle':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatLineCoordinates(\n          flatCoordinates,\n          0,\n          flatCoordinates.length,\n          stride,\n          false,\n          false,\n        );\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          inflateCoordinates,\n          index,\n        ]);\n        break;\n      case 'MultiPoint':\n        flatCoordinates = geometry.getFlatCoordinates();\n        builderEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n\n        if (builderEnd > builderBegin) {\n          this.instructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            renderer,\n            inflateCoordinates,\n            index,\n          ]);\n          this.hitDetectionInstructions.push([\n            CanvasInstruction.CUSTOM,\n            builderBegin,\n            builderEnd,\n            geometry,\n            hitDetectionRenderer || renderer,\n            inflateCoordinates,\n            index,\n          ]);\n        }\n        break;\n      case 'Point':\n        flatCoordinates = geometry.getFlatCoordinates();\n        this.coordinates.push(flatCoordinates[0], flatCoordinates[1]);\n        builderEnd = this.coordinates.length;\n\n        this.instructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          renderer,\n          undefined,\n          index,\n        ]);\n        this.hitDetectionInstructions.push([\n          CanvasInstruction.CUSTOM,\n          builderBegin,\n          builderEnd,\n          geometry,\n          hitDetectionRenderer || renderer,\n          undefined,\n          index,\n        ]);\n        break;\n      default:\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @protected\n   * @param {import(\"../../geom/Geometry\").default|import(\"../Feature.js\").default} geometry The geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} index Render order index\n   */\n  beginGeometry(geometry, feature, index) {\n    this.beginGeometryInstruction1_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.instructions.push(this.beginGeometryInstruction1_);\n    this.beginGeometryInstruction2_ = [\n      CanvasInstruction.BEGIN_GEOMETRY,\n      feature,\n      0,\n      geometry,\n      index,\n    ];\n    this.hitDetectionInstructions.push(this.beginGeometryInstruction2_);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   */\n  finish() {\n    return {\n      instructions: this.instructions,\n      hitDetectionInstructions: this.hitDetectionInstructions,\n      coordinates: this.coordinates,\n    };\n  }\n\n  /**\n   * Reverse the hit detection instructions.\n   */\n  reverseHitDetectionInstructions() {\n    const hitDetectionInstructions = this.hitDetectionInstructions;\n    // step 1 - reverse array\n    hitDetectionInstructions.reverse();\n    // step 2 - reverse instructions within geometry blocks\n    let i;\n    const n = hitDetectionInstructions.length;\n    let instruction;\n    let type;\n    let begin = -1;\n    for (i = 0; i < n; ++i) {\n      instruction = hitDetectionInstructions[i];\n      type = /** @type {import(\"./Instruction.js\").default} */ (instruction[0]);\n      if (type == CanvasInstruction.END_GEOMETRY) {\n        begin = i;\n      } else if (type == CanvasInstruction.BEGIN_GEOMETRY) {\n        instruction[2] = i;\n        reverseSubArray(this.hitDetectionInstructions, begin, i);\n        begin = -1;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import('../canvas.js').FillStrokeState} [state] State.\n   * @return {import('../canvas.js').FillStrokeState} State.\n   */\n  fillStyleToState(\n    fillStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (fillStyle) {\n      const fillStyleColor = fillStyle.getColor();\n      state.fillPatternScale =\n        fillStyleColor &&\n        typeof fillStyleColor === 'object' &&\n        'src' in fillStyleColor\n          ? this.pixelRatio\n          : 1;\n      state.fillStyle = asColorLike(\n        fillStyleColor ? fillStyleColor : defaultFillStyle,\n      );\n    } else {\n      state.fillStyle = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {import(\"../canvas.js\").FillStrokeState} State.\n   */\n  strokeStyleToState(\n    strokeStyle,\n    state = /** @type {import('../canvas.js').FillStrokeState} */ ({}),\n  ) {\n    if (strokeStyle) {\n      const strokeStyleColor = strokeStyle.getColor();\n      state.strokeStyle = asColorLike(\n        strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n      );\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      state.lineCap =\n        strokeStyleLineCap !== undefined ? strokeStyleLineCap : defaultLineCap;\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      state.lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash.slice()\n        : defaultLineDash;\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      state.lineDashOffset = strokeStyleLineDashOffset\n        ? strokeStyleLineDashOffset\n        : defaultLineDashOffset;\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      state.lineJoin =\n        strokeStyleLineJoin !== undefined\n          ? strokeStyleLineJoin\n          : defaultLineJoin;\n      const strokeStyleWidth = strokeStyle.getWidth();\n      state.lineWidth =\n        strokeStyleWidth !== undefined ? strokeStyleWidth : defaultLineWidth;\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      state.miterLimit =\n        strokeStyleMiterLimit !== undefined\n          ? strokeStyleMiterLimit\n          : defaultMiterLimit;\n\n      if (state.lineWidth > this.maxLineWidth) {\n        this.maxLineWidth = state.lineWidth;\n        // invalidate the buffered max extent cache\n        this.bufferedMaxExtent_ = null;\n      }\n    } else {\n      state.strokeStyle = undefined;\n      state.lineCap = undefined;\n      state.lineDash = null;\n      state.lineDashOffset = undefined;\n      state.lineJoin = undefined;\n      state.lineWidth = undefined;\n      state.miterLimit = undefined;\n    }\n    return state;\n  }\n\n  /**\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    const state = this.state;\n    this.fillStyleToState(fillStyle, state);\n    this.strokeStyleToState(strokeStyle, state);\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Fill instruction.\n   */\n  createFill(state) {\n    const fillStyle = state.fillStyle;\n    /** @type {Array<*>} */\n    const fillInstruction = [CanvasInstruction.SET_FILL_STYLE, fillStyle];\n    if (typeof fillStyle !== 'string') {\n      // Fill is a pattern or gradient - align and scale it!\n      fillInstruction.push(state.fillPatternScale);\n    }\n    return fillInstruction;\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   */\n  applyStroke(state) {\n    this.instructions.push(this.createStroke(state));\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @return {Array<*>} Stroke instruction.\n   */\n  createStroke(state) {\n    return [\n      CanvasInstruction.SET_STROKE_STYLE,\n      state.strokeStyle,\n      state.lineWidth * this.pixelRatio,\n      state.lineCap,\n      state.lineJoin,\n      state.miterLimit,\n      state.lineDash ? this.applyPixelRatio(state.lineDash) : null,\n      state.lineDashOffset * this.pixelRatio,\n    ];\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState):Array<*>} createFill Create fill.\n   */\n  updateFillStyle(state, createFill) {\n    const fillStyle = state.fillStyle;\n    if (typeof fillStyle !== 'string' || state.currentFillStyle != fillStyle) {\n      this.instructions.push(createFill.call(this, state));\n      state.currentFillStyle = fillStyle;\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @param {function(this:CanvasBuilder, import(\"../canvas.js\").FillStrokeState): void} applyStroke Apply stroke.\n   */\n  updateStrokeStyle(state, applyStroke) {\n    const strokeStyle = state.strokeStyle;\n    const lineCap = state.lineCap;\n    const lineDash = state.lineDash;\n    const lineDashOffset = state.lineDashOffset;\n    const lineJoin = state.lineJoin;\n    const lineWidth = state.lineWidth;\n    const miterLimit = state.miterLimit;\n    if (\n      state.currentStrokeStyle != strokeStyle ||\n      state.currentLineCap != lineCap ||\n      (lineDash != state.currentLineDash &&\n        !equals(state.currentLineDash, lineDash)) ||\n      state.currentLineDashOffset != lineDashOffset ||\n      state.currentLineJoin != lineJoin ||\n      state.currentLineWidth != lineWidth ||\n      state.currentMiterLimit != miterLimit\n    ) {\n      applyStroke.call(this, state);\n      state.currentStrokeStyle = strokeStyle;\n      state.currentLineCap = lineCap;\n      state.currentLineDash = lineDash;\n      state.currentLineDashOffset = lineDashOffset;\n      state.currentLineJoin = lineJoin;\n      state.currentLineWidth = lineWidth;\n      state.currentMiterLimit = miterLimit;\n    }\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   */\n  endGeometry(feature) {\n    this.beginGeometryInstruction1_[2] = this.instructions.length;\n    this.beginGeometryInstruction1_ = null;\n    this.beginGeometryInstruction2_[2] = this.hitDetectionInstructions.length;\n    this.beginGeometryInstruction2_ = null;\n    const endGeometryInstruction = [CanvasInstruction.END_GEOMETRY, feature];\n    this.instructions.push(endGeometryInstruction);\n    this.hitDetectionInstructions.push(endGeometryInstruction);\n  }\n\n  /**\n   * Get the buffered rendering extent.  Rendering will be clipped to the extent\n   * provided to the constructor.  To account for symbolizers that may intersect\n   * this extent, we calculate a buffered extent (e.g. based on stroke width).\n   * @return {import(\"../../extent.js\").Extent} The buffered rendering extent.\n   * @protected\n   */\n  getBufferedMaxExtent() {\n    if (!this.bufferedMaxExtent_) {\n      this.bufferedMaxExtent_ = clone(this.maxExtent);\n      if (this.maxLineWidth > 0) {\n        const width = (this.resolution * (this.maxLineWidth + 1)) / 2;\n        buffer(this.bufferedMaxExtent_, width, this.bufferedMaxExtent_);\n      }\n    }\n    return this.bufferedMaxExtent_;\n  }\n}\n\nexport default CanvasBuilder;\n","/**\n * @module ol/render/canvas/PolygonBuilder\n */\nimport {snap} from '../../geom/flat/simplify.js';\nimport {\n  defaultFillStyle,\n  defaultLineDash,\n  defaultLineDashOffset,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  closePathInstruction,\n  fillInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasPolygonBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawFlatCoordinatess_(flatCoordinates, offset, ends, stride) {\n    const state = this.state;\n    const fill = state.fillStyle !== undefined;\n    const stroke = state.strokeStyle !== undefined;\n    const numEnds = ends.length;\n    this.instructions.push(beginPathInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction);\n    for (let i = 0; i < numEnds; ++i) {\n      const end = ends[i];\n      const myBegin = this.coordinates.length;\n      const myEnd = this.appendFlatLineCoordinates(\n        flatCoordinates,\n        offset,\n        end,\n        stride,\n        true,\n        !stroke,\n      );\n      const moveToLineToInstruction = [\n        CanvasInstruction.MOVE_TO_LINE_TO,\n        myBegin,\n        myEnd,\n      ];\n      this.instructions.push(moveToLineToInstruction);\n      this.hitDetectionInstructions.push(moveToLineToInstruction);\n      if (stroke) {\n        // Performance optimization: only call closePath() when we have a stroke.\n        // Otherwise the ring is closed already (see appendFlatLineCoordinates above).\n        this.instructions.push(closePathInstruction);\n        this.hitDetectionInstructions.push(closePathInstruction);\n      }\n      offset = end;\n    }\n    if (fill) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (stroke) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    return offset;\n  }\n\n  /**\n   * @param {import(\"../../geom/Circle.js\").default} circleGeometry Circle geometry.\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawCircle(circleGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(circleGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const flatCoordinates = circleGeometry.getFlatCoordinates();\n    const stride = circleGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    this.appendFlatLineCoordinates(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n      false,\n      false,\n    );\n    const circleInstruction = [CanvasInstruction.CIRCLE, myBegin];\n    this.instructions.push(beginPathInstruction, circleInstruction);\n    this.hitDetectionInstructions.push(beginPathInstruction, circleInstruction);\n    if (state.fillStyle !== undefined) {\n      this.instructions.push(fillInstruction);\n      this.hitDetectionInstructions.push(fillInstruction);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.instructions.push(strokeInstruction);\n      this.hitDetectionInstructions.push(strokeInstruction);\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} polygonGeometry Polygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPolygon(polygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(polygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const ends = polygonGeometry.getEnds();\n    const flatCoordinates = polygonGeometry.getOrientedFlatCoordinates();\n    const stride = polygonGeometry.getStride();\n    this.drawFlatCoordinatess_(\n      flatCoordinates,\n      0,\n      /** @type {Array<number>} */ (ends),\n      stride,\n    );\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPolygon.js\").default} multiPolygonGeometry MultiPolygon geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPolygon(multiPolygonGeometry, feature, index) {\n    const state = this.state;\n    const fillStyle = state.fillStyle;\n    const strokeStyle = state.strokeStyle;\n    if (fillStyle === undefined && strokeStyle === undefined) {\n      return;\n    }\n    this.setFillStrokeStyles_();\n    this.beginGeometry(multiPolygonGeometry, feature, index);\n    if (state.fillStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_FILL_STYLE,\n        defaultFillStyle,\n      ]);\n    }\n    if (state.strokeStyle !== undefined) {\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ]);\n    }\n    const endss = multiPolygonGeometry.getEndss();\n    const flatCoordinates = multiPolygonGeometry.getOrientedFlatCoordinates();\n    const stride = multiPolygonGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = endss.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinatess_(\n        flatCoordinates,\n        offset,\n        endss[i],\n        stride,\n      );\n    }\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    // We want to preserve topology when drawing polygons.  Polygons are\n    // simplified using quantization and point elimination. However, we might\n    // have received a mix of quantized and non-quantized geometries, so ensure\n    // that all are quantized by quantizing all coordinates in the batch.\n    const tolerance = this.tolerance;\n    if (tolerance !== 0) {\n      const coordinates = this.coordinates;\n      for (let i = 0, ii = coordinates.length; i < ii; ++i) {\n        coordinates[i] = snap(coordinates[i], tolerance);\n      }\n    }\n    return super.finish();\n  }\n\n  /**\n   * @private\n   */\n  setFillStrokeStyles_() {\n    const state = this.state;\n    this.updateFillStyle(state, this.createFill);\n    this.updateStrokeStyle(state, this.applyStroke);\n  }\n}\n\nexport default CanvasPolygonBuilder;\n","import {lerp} from '../../math.js';\n\n/**\n * Creates chunks of equal length from a linestring\n * @param {number} chunkLength Length of each chunk.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @return {Array<Array<number>>} Chunks of linestrings with stride 2.\n */\nexport function lineChunk(chunkLength, flatCoordinates, offset, end, stride) {\n  const chunks = [];\n  let cursor = offset;\n  let chunkM = 0;\n  let currentChunk = flatCoordinates.slice(offset, 2);\n  while (chunkM < chunkLength && cursor + stride < end) {\n    const [x1, y1] = currentChunk.slice(-2);\n    const x2 = flatCoordinates[cursor + stride];\n    const y2 = flatCoordinates[cursor + stride + 1];\n    const segmentLength = Math.sqrt(\n      (x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1),\n    );\n    chunkM += segmentLength;\n    if (chunkM >= chunkLength) {\n      const m = (chunkLength - chunkM + segmentLength) / segmentLength;\n      const x = lerp(x1, x2, m);\n      const y = lerp(y1, y2, m);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      if (chunkM == chunkLength) {\n        cursor += stride;\n      }\n      chunkM = 0;\n    } else if (chunkM < chunkLength) {\n      currentChunk.push(\n        flatCoordinates[cursor + stride],\n        flatCoordinates[cursor + stride + 1],\n      );\n      cursor += stride;\n    } else {\n      const missing = segmentLength - chunkM;\n      const x = lerp(x1, x2, missing / segmentLength);\n      const y = lerp(y1, y2, missing / segmentLength);\n      currentChunk.push(x, y);\n      chunks.push(currentChunk);\n      currentChunk = [x, y];\n      chunkM = 0;\n      cursor += stride;\n    }\n  }\n  if (chunkM > 0) {\n    chunks.push(currentChunk);\n  }\n  return chunks;\n}\n","/**\n * @module ol/geom/flat/straightchunk\n */\n\n/**\n * @param {number} maxAngle Maximum acceptable angle delta between segments.\n * @param {Array<number>} flatCoordinates Flat coordinates.\n * @param {number} offset Offset.\n * @param {number} end End.\n * @param {number} stride Stride.\n * @return {Array<number>} Start and end of the first suitable chunk of the\n * given `flatCoordinates`.\n */\nexport function matchingChunk(maxAngle, flatCoordinates, offset, end, stride) {\n  let chunkStart = offset;\n  let chunkEnd = offset;\n  let chunkM = 0;\n  let m = 0;\n  let start = offset;\n  let acos, i, m12, m23, x1, y1, x12, y12, x23, y23;\n  for (i = offset; i < end; i += stride) {\n    const x2 = flatCoordinates[i];\n    const y2 = flatCoordinates[i + 1];\n    if (x1 !== undefined) {\n      x23 = x2 - x1;\n      y23 = y2 - y1;\n      m23 = Math.sqrt(x23 * x23 + y23 * y23);\n      if (x12 !== undefined) {\n        m += m12;\n        acos = Math.acos((x12 * x23 + y12 * y23) / (m12 * m23));\n        if (acos > maxAngle) {\n          if (m > chunkM) {\n            chunkM = m;\n            chunkStart = start;\n            chunkEnd = i;\n          }\n          m = 0;\n          start = i - stride;\n        }\n      }\n      m12 = m23;\n      x12 = x23;\n      y12 = y23;\n    }\n    x1 = x2;\n    y1 = y2;\n  }\n  m += m23;\n  return m > chunkM ? [start, i] : [chunkStart, chunkEnd];\n}\n","/**\n * @module ol/render/canvas/TextBuilder\n */\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {lineChunk} from '../../geom/flat/linechunk.js';\nimport {matchingChunk} from '../../geom/flat/straightchunk.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultPadding,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n  registerFont,\n} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n/**\n * @const\n * @type {{left: 0, center: 0.5, right: 1, top: 0, middle: 0.5, hanging: 0.2, alphabetic: 0.8, ideographic: 0.8, bottom: 1}}\n */\nexport const TEXT_ALIGN = {\n  'left': 0,\n  'center': 0.5,\n  'right': 1,\n  'top': 0,\n  'middle': 0.5,\n  'hanging': 0.2,\n  'alphabetic': 0.8,\n  'ideographic': 0.8,\n  'bottom': 1,\n};\n\nclass CanvasTextBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {Array<HTMLCanvasElement>}\n     */\n    this.labels_ = null;\n\n    /**\n     * @private\n     * @type {string|Array<string>}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textRotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.textKeepUpright_ = undefined;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = {};\n    this.fillStates[defaultFillStyle] = {fillStyle: defaultFillStyle};\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = /** @type {import(\"../canvas.js\").TextState} */ ({});\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.textKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.fillKey_ = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.strokeKey_ = '';\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with an image builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const instructions = super.finish();\n    instructions.textStates = this.textStates;\n    instructions.fillStates = this.fillStates;\n    instructions.strokeStates = this.strokeStates;\n    return instructions;\n  }\n\n  /**\n   * @param {import(\"../../geom/SimpleGeometry.js\").default|import(\"../Feature.js\").default} geometry Geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawText(geometry, feature, index) {\n    const fillState = this.textFillState_;\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    if (this.text_ === '' || !textState || (!fillState && !strokeState)) {\n      return;\n    }\n\n    const coordinates = this.coordinates;\n    let begin = coordinates.length;\n\n    const geometryType = geometry.getType();\n    let flatCoordinates = null;\n    let stride = geometry.getStride();\n\n    if (\n      textState.placement === 'line' &&\n      (geometryType == 'LineString' ||\n        geometryType == 'MultiLineString' ||\n        geometryType == 'Polygon' ||\n        geometryType == 'MultiPolygon')\n    ) {\n      if (!intersects(this.maxExtent, geometry.getExtent())) {\n        return;\n      }\n      let ends;\n      flatCoordinates = geometry.getFlatCoordinates();\n      if (geometryType == 'LineString') {\n        ends = [flatCoordinates.length];\n      } else if (geometryType == 'MultiLineString') {\n        ends = /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry\n        ).getEnds();\n      } else if (geometryType == 'Polygon') {\n        ends = /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry)\n          .getEnds()\n          .slice(0, 1);\n      } else if (geometryType == 'MultiPolygon') {\n        const endss =\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ).getEndss();\n        ends = [];\n        for (let i = 0, ii = endss.length; i < ii; ++i) {\n          ends.push(endss[i][0]);\n        }\n      }\n      this.beginGeometry(geometry, feature, index);\n      const repeat = textState.repeat;\n      const textAlign = repeat ? undefined : textState.textAlign;\n      // No `justify` support for line placement.\n      let flatOffset = 0;\n      for (let o = 0, oo = ends.length; o < oo; ++o) {\n        let chunks;\n        if (repeat) {\n          chunks = lineChunk(\n            repeat * this.resolution,\n            flatCoordinates,\n            flatOffset,\n            ends[o],\n            stride,\n          );\n        } else {\n          chunks = [flatCoordinates.slice(flatOffset, ends[o])];\n        }\n        for (let c = 0, cc = chunks.length; c < cc; ++c) {\n          const chunk = chunks[c];\n          let chunkBegin = 0;\n          let chunkEnd = chunk.length;\n          if (textAlign == undefined) {\n            const range = matchingChunk(\n              textState.maxAngle,\n              chunk,\n              0,\n              chunk.length,\n              2,\n            );\n            chunkBegin = range[0];\n            chunkEnd = range[1];\n          }\n          for (let i = chunkBegin; i < chunkEnd; i += stride) {\n            coordinates.push(chunk[i], chunk[i + 1]);\n          }\n          const end = coordinates.length;\n          flatOffset = ends[o];\n          this.drawChars_(begin, end);\n          begin = end;\n        }\n      }\n      this.endGeometry(feature);\n    } else {\n      let geometryWidths = textState.overflow ? null : [];\n      switch (geometryType) {\n        case 'Point':\n        case 'MultiPoint':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n              geometry\n            ).getFlatCoordinates();\n          break;\n        case 'LineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/LineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoint();\n          break;\n        case 'Circle':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Circle.js\").default} */ (\n              geometry\n            ).getCenter();\n          break;\n        case 'MultiLineString':\n          flatCoordinates =\n            /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n              geometry\n            ).getFlatMidpoints();\n          stride = 2;\n          break;\n        case 'Polygon':\n          flatCoordinates =\n            /** @type {import(\"../../geom/Polygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoint();\n          if (!textState.overflow) {\n            geometryWidths.push(flatCoordinates[2] / this.resolution);\n          }\n          stride = 3;\n          break;\n        case 'MultiPolygon':\n          const interiorPoints =\n            /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n              geometry\n            ).getFlatInteriorPoints();\n          flatCoordinates = [];\n          for (let i = 0, ii = interiorPoints.length; i < ii; i += 3) {\n            if (!textState.overflow) {\n              geometryWidths.push(interiorPoints[i + 2] / this.resolution);\n            }\n            flatCoordinates.push(interiorPoints[i], interiorPoints[i + 1]);\n          }\n          if (flatCoordinates.length === 0) {\n            return;\n          }\n          stride = 2;\n          break;\n        default:\n      }\n      const end = this.appendFlatPointCoordinates(flatCoordinates, stride);\n      if (end === begin) {\n        return;\n      }\n      if (\n        geometryWidths &&\n        (end - begin) / 2 !== flatCoordinates.length / stride\n      ) {\n        let beg = begin / 2;\n        geometryWidths = geometryWidths.filter((w, i) => {\n          const keep =\n            coordinates[(beg + i) * 2] === flatCoordinates[i * stride] &&\n            coordinates[(beg + i) * 2 + 1] === flatCoordinates[i * stride + 1];\n          if (!keep) {\n            --beg;\n          }\n          return keep;\n        });\n      }\n\n      this.saveTextStates_();\n\n      const backgroundFill = textState.backgroundFill\n        ? this.createFill(this.fillStyleToState(textState.backgroundFill))\n        : null;\n      const backgroundStroke = textState.backgroundStroke\n        ? this.createStroke(this.strokeStyleToState(textState.backgroundStroke))\n        : null;\n\n      this.beginGeometry(geometry, feature, index);\n\n      // adjust padding for negative scale\n      let padding = textState.padding;\n      if (\n        padding != defaultPadding &&\n        (textState.scale[0] < 0 || textState.scale[1] < 0)\n      ) {\n        let p0 = textState.padding[0];\n        let p1 = textState.padding[1];\n        let p2 = textState.padding[2];\n        let p3 = textState.padding[3];\n        if (textState.scale[0] < 0) {\n          p1 = -p1;\n          p3 = -p3;\n        }\n        if (textState.scale[1] < 0) {\n          p0 = -p0;\n          p2 = -p2;\n        }\n        padding = [p0, p1, p2, p3];\n      }\n\n      // The image is unknown at this stage so we pass null; it will be computed at render time.\n      // For clarity, we pass NaN for offsetX, offsetY, width and height, which will be computed at\n      // render time.\n      const pixelRatio = this.pixelRatio;\n      this.instructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [1, 1],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding == defaultPadding\n          ? defaultPadding\n          : padding.map(function (p) {\n              return p * pixelRatio;\n            }),\n        backgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n      const scale = 1 / pixelRatio;\n      // Set default fill for hit detection background\n      const hitDetectionBackgroundFill = backgroundFill\n        ? backgroundFill.slice(0)\n        : null;\n      if (hitDetectionBackgroundFill) {\n        hitDetectionBackgroundFill[1] = defaultFillStyle;\n      }\n      this.hitDetectionInstructions.push([\n        CanvasInstruction.DRAW_IMAGE,\n        begin,\n        end,\n        null,\n        NaN,\n        NaN,\n        NaN,\n        1,\n        0,\n        0,\n        this.textRotateWithView_,\n        this.textRotation_,\n        [scale, scale],\n        NaN,\n        this.declutterMode_,\n        this.declutterImageWithText_,\n        padding,\n        hitDetectionBackgroundFill,\n        backgroundStroke,\n        this.text_,\n        this.textKey_,\n        this.strokeKey_,\n        this.fillKey_ ? defaultFillStyle : this.fillKey_,\n        this.textOffsetX_,\n        this.textOffsetY_,\n        geometryWidths,\n      ]);\n\n      this.endGeometry(feature);\n    }\n  }\n\n  /**\n   * @private\n   */\n  saveTextStates_() {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n    const fillState = this.textFillState_;\n\n    const strokeKey = this.strokeKey_;\n    if (strokeState) {\n      if (!(strokeKey in this.strokeStates)) {\n        this.strokeStates[strokeKey] = {\n          strokeStyle: strokeState.strokeStyle,\n          lineCap: strokeState.lineCap,\n          lineDashOffset: strokeState.lineDashOffset,\n          lineWidth: strokeState.lineWidth,\n          lineJoin: strokeState.lineJoin,\n          miterLimit: strokeState.miterLimit,\n          lineDash: strokeState.lineDash,\n        };\n      }\n    }\n    const textKey = this.textKey_;\n    if (!(textKey in this.textStates)) {\n      this.textStates[textKey] = {\n        font: textState.font,\n        textAlign: textState.textAlign || defaultTextAlign,\n        justify: textState.justify,\n        textBaseline: textState.textBaseline || defaultTextBaseline,\n        scale: textState.scale,\n      };\n    }\n    const fillKey = this.fillKey_;\n    if (fillState) {\n      if (!(fillKey in this.fillStates)) {\n        this.fillStates[fillKey] = {\n          fillStyle: fillState.fillStyle,\n        };\n      }\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} begin Begin.\n   * @param {number} end End.\n   */\n  drawChars_(begin, end) {\n    const strokeState = this.textStrokeState_;\n    const textState = this.textState_;\n\n    const strokeKey = this.strokeKey_;\n    const textKey = this.textKey_;\n    const fillKey = this.fillKey_;\n    this.saveTextStates_();\n\n    const pixelRatio = this.pixelRatio;\n    const baseline = TEXT_ALIGN[textState.textBaseline];\n\n    const offsetY = this.textOffsetY_ * pixelRatio;\n    const text = this.text_;\n    const strokeWidth = strokeState\n      ? (strokeState.lineWidth * Math.abs(textState.scale[0])) / 2\n      : 0;\n\n    this.instructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_CHARS,\n      begin,\n      end,\n      baseline,\n      textState.overflow,\n      fillKey ? defaultFillStyle : fillKey,\n      textState.maxAngle,\n      pixelRatio,\n      offsetY,\n      strokeKey,\n      strokeWidth * pixelRatio,\n      text,\n      textKey,\n      1 / pixelRatio,\n      this.declutterMode_,\n      this.textKeepUpright_,\n    ]);\n  }\n\n  /**\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setTextStyle(textStyle, sharedData) {\n    let textState, fillState, strokeState;\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        fillState = null;\n        this.textFillState_ = fillState;\n      } else {\n        fillState = this.textFillState_;\n        if (!fillState) {\n          fillState = /** @type {import(\"../canvas.js\").FillState} */ ({});\n          this.textFillState_ = fillState;\n        }\n        fillState.fillStyle = asColorLike(\n          textFillStyle.getColor() || defaultFillStyle,\n        );\n      }\n\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        strokeState = null;\n        this.textStrokeState_ = strokeState;\n      } else {\n        strokeState = this.textStrokeState_;\n        if (!strokeState) {\n          strokeState = /** @type {import(\"../canvas.js\").StrokeState} */ ({});\n          this.textStrokeState_ = strokeState;\n        }\n        const lineDash = textStrokeStyle.getLineDash();\n        const lineDashOffset = textStrokeStyle.getLineDashOffset();\n        const lineWidth = textStrokeStyle.getWidth();\n        const miterLimit = textStrokeStyle.getMiterLimit();\n        strokeState.lineCap = textStrokeStyle.getLineCap() || defaultLineCap;\n        strokeState.lineDash = lineDash ? lineDash.slice() : defaultLineDash;\n        strokeState.lineDashOffset =\n          lineDashOffset === undefined ? defaultLineDashOffset : lineDashOffset;\n        strokeState.lineJoin = textStrokeStyle.getLineJoin() || defaultLineJoin;\n        strokeState.lineWidth =\n          lineWidth === undefined ? defaultLineWidth : lineWidth;\n        strokeState.miterLimit =\n          miterLimit === undefined ? defaultMiterLimit : miterLimit;\n        strokeState.strokeStyle = asColorLike(\n          textStrokeStyle.getColor() || defaultStrokeStyle,\n        );\n      }\n\n      textState = this.textState_;\n      const font = textStyle.getFont() || defaultFont;\n      registerFont(font);\n      const textScale = textStyle.getScaleArray();\n      textState.overflow = textStyle.getOverflow();\n      textState.font = font;\n      textState.maxAngle = textStyle.getMaxAngle();\n      textState.placement = textStyle.getPlacement();\n      textState.textAlign = textStyle.getTextAlign();\n      textState.repeat = textStyle.getRepeat();\n      textState.justify = textStyle.getJustify();\n      textState.textBaseline =\n        textStyle.getTextBaseline() || defaultTextBaseline;\n      textState.backgroundFill = textStyle.getBackgroundFill();\n      textState.backgroundStroke = textStyle.getBackgroundStroke();\n      textState.padding = textStyle.getPadding() || defaultPadding;\n      textState.scale = textScale === undefined ? [1, 1] : textScale;\n\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textKeepUpright = textStyle.getKeepUpright();\n      const textRotation = textStyle.getRotation();\n      this.text_ = textStyle.getText() || '';\n      this.textOffsetX_ = textOffsetX === undefined ? 0 : textOffsetX;\n      this.textOffsetY_ = textOffsetY === undefined ? 0 : textOffsetY;\n      this.textRotateWithView_ =\n        textRotateWithView === undefined ? false : textRotateWithView;\n      this.textKeepUpright_ =\n        textKeepUpright === undefined ? true : textKeepUpright;\n      this.textRotation_ = textRotation === undefined ? 0 : textRotation;\n\n      this.strokeKey_ = strokeState\n        ? (typeof strokeState.strokeStyle == 'string'\n            ? strokeState.strokeStyle\n            : getUid(strokeState.strokeStyle)) +\n          strokeState.lineCap +\n          strokeState.lineDashOffset +\n          '|' +\n          strokeState.lineWidth +\n          strokeState.lineJoin +\n          strokeState.miterLimit +\n          '[' +\n          strokeState.lineDash.join() +\n          ']'\n        : '';\n      this.textKey_ =\n        textState.font +\n        textState.scale +\n        (textState.textAlign || '?') +\n        (textState.repeat || '?') +\n        (textState.justify || '?') +\n        (textState.textBaseline || '?');\n      this.fillKey_ =\n        fillState && fillState.fillStyle\n          ? typeof fillState.fillStyle == 'string'\n            ? fillState.fillStyle\n            : '|' + getUid(fillState.fillStyle)\n          : '';\n    }\n    this.declutterMode_ = textStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasTextBuilder;\n","/**\n * @module ol/render/canvas/BuilderGroup\n */\n\nimport Builder from './Builder.js';\nimport ImageBuilder from './ImageBuilder.js';\nimport LineStringBuilder from './LineStringBuilder.js';\nimport PolygonBuilder from './PolygonBuilder.js';\nimport TextBuilder from './TextBuilder.js';\n\n/**\n * @type {Object<import(\"../canvas.js\").BuilderType, typeof Builder>}\n */\nconst BATCH_CONSTRUCTORS = {\n  'Circle': PolygonBuilder,\n  'Default': Builder,\n  'Image': ImageBuilder,\n  'LineString': LineStringBuilder,\n  'Polygon': PolygonBuilder,\n  'Text': TextBuilder,\n};\n\nclass BuilderGroup {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tolerance_ = tolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<import(\"../canvas.js\").BuilderType, Builder>>}\n     */\n    this.buildersByZIndex_ = {};\n  }\n\n  /**\n   * @return {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"./Builder.js\").SerializableInstructions>>} The serializable instructions\n   */\n  finish() {\n    const builderInstructions = {};\n    for (const zKey in this.buildersByZIndex_) {\n      builderInstructions[zKey] = builderInstructions[zKey] || {};\n      const builders = this.buildersByZIndex_[zKey];\n      for (const builderKey in builders) {\n        const builderInstruction = builders[builderKey].finish();\n        builderInstructions[zKey][builderKey] = builderInstruction;\n      }\n    }\n    return builderInstructions;\n  }\n\n  /**\n   * @param {number|undefined} zIndex Z index.\n   * @param {import(\"../canvas.js\").BuilderType} builderType Replay type.\n   * @return {import(\"../VectorContext.js\").default} Replay.\n   */\n  getBuilder(zIndex, builderType) {\n    const zIndexKey = zIndex !== undefined ? zIndex.toString() : '0';\n    let replays = this.buildersByZIndex_[zIndexKey];\n    if (replays === undefined) {\n      replays = {};\n      this.buildersByZIndex_[zIndexKey] = replays;\n    }\n    let replay = replays[builderType];\n    if (replay === undefined) {\n      const Constructor = BATCH_CONSTRUCTORS[builderType];\n      replay = new Constructor(\n        this.tolerance_,\n        this.maxExtent_,\n        this.resolution_,\n        this.pixelRatio_,\n      );\n      replays[builderType] = replay;\n    }\n    return replay;\n  }\n}\n\nexport default BuilderGroup;\n","/**\n * @module ol/render/canvas/ImageBuilder\n */\nimport {containsCoordinate} from '../../extent.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction from './Instruction.js';\n\nclass CanvasImageBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.hitDetectionImage_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.imagePixelRatio_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.anchorY_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.height_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.opacity_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originX_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.originY_ = undefined;\n\n    /**\n     * @private\n     * @type {boolean|undefined}\n     */\n    this.rotateWithView_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.rotation_ = undefined;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size|undefined}\n     */\n    this.scale_ = undefined;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.width_ = undefined;\n\n    /**\n     * @private\n     * @type {import('../../style/Style.js').DeclutterMode}\n     */\n    this.declutterMode_ = undefined;\n\n    /**\n     * Data shared with a text builder for combined decluttering.\n     * @private\n     * @type {import(\"../canvas.js\").DeclutterImageWithText}\n     */\n    this.declutterImageWithText_ = undefined;\n  }\n\n  /**\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} pointGeometry Point geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawPoint(pointGeometry, feature, index) {\n    if (\n      !this.image_ ||\n      (this.maxExtent &&\n        !containsCoordinate(this.maxExtent, pointGeometry.getFlatCoordinates()))\n    ) {\n      return;\n    }\n    this.beginGeometry(pointGeometry, feature, index);\n    const flatCoordinates = pointGeometry.getFlatCoordinates();\n    const stride = pointGeometry.getStride();\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(flatCoordinates, stride);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} multiPointGeometry MultiPoint geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiPoint(multiPointGeometry, feature, index) {\n    if (!this.image_) {\n      return;\n    }\n    this.beginGeometry(multiPointGeometry, feature, index);\n    const flatCoordinates = multiPointGeometry.getFlatCoordinates();\n    const filteredFlatCoordinates = [];\n    for (\n      let i = 0, ii = flatCoordinates.length;\n      i < ii;\n      i += multiPointGeometry.getStride()\n    ) {\n      if (\n        !this.maxExtent ||\n        containsCoordinate(this.maxExtent, flatCoordinates.slice(i, i + 2))\n      ) {\n        filteredFlatCoordinates.push(\n          flatCoordinates[i],\n          flatCoordinates[i + 1],\n        );\n      }\n    }\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatPointCoordinates(filteredFlatCoordinates, 2);\n    this.instructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.image_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_ * this.imagePixelRatio_,\n      this.anchorY_ * this.imagePixelRatio_,\n      Math.ceil(this.height_ * this.imagePixelRatio_),\n      this.opacity_,\n      this.originX_ * this.imagePixelRatio_,\n      this.originY_ * this.imagePixelRatio_,\n      this.rotateWithView_,\n      this.rotation_,\n      [\n        (this.scale_[0] * this.pixelRatio) / this.imagePixelRatio_,\n        (this.scale_[1] * this.pixelRatio) / this.imagePixelRatio_,\n      ],\n      Math.ceil(this.width_ * this.imagePixelRatio_),\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.hitDetectionInstructions.push([\n      CanvasInstruction.DRAW_IMAGE,\n      myBegin,\n      myEnd,\n      this.hitDetectionImage_,\n      // Remaining arguments to DRAW_IMAGE are in alphabetical order\n      this.anchorX_,\n      this.anchorY_,\n      this.height_,\n      1,\n      this.originX_,\n      this.originY_,\n      this.rotateWithView_,\n      this.rotation_,\n      this.scale_,\n      this.width_,\n      this.declutterMode_,\n      this.declutterImageWithText_,\n    ]);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    this.reverseHitDetectionInstructions();\n    // FIXME this doesn't really protect us against further calls to draw*Geometry\n    this.anchorX_ = undefined;\n    this.anchorY_ = undefined;\n    this.hitDetectionImage_ = null;\n    this.image_ = null;\n    this.imagePixelRatio_ = undefined;\n    this.height_ = undefined;\n    this.scale_ = undefined;\n    this.opacity_ = undefined;\n    this.originX_ = undefined;\n    this.originY_ = undefined;\n    this.rotateWithView_ = undefined;\n    this.rotation_ = undefined;\n    this.width_ = undefined;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @param {Object} [sharedData] Shared data.\n   * @override\n   */\n  setImageStyle(imageStyle, sharedData) {\n    const anchor = imageStyle.getAnchor();\n    const size = imageStyle.getSize();\n    const origin = imageStyle.getOrigin();\n    this.imagePixelRatio_ = imageStyle.getPixelRatio(this.pixelRatio);\n    this.anchorX_ = anchor[0];\n    this.anchorY_ = anchor[1];\n    this.hitDetectionImage_ = imageStyle.getHitDetectionImage();\n    this.image_ = imageStyle.getImage(this.pixelRatio);\n    this.height_ = size[1];\n    this.opacity_ = imageStyle.getOpacity();\n    this.originX_ = origin[0];\n    this.originY_ = origin[1];\n    this.rotateWithView_ = imageStyle.getRotateWithView();\n    this.rotation_ = imageStyle.getRotation();\n    this.scale_ = imageStyle.getScaleArray();\n    this.width_ = size[0];\n    this.declutterMode_ = imageStyle.getDeclutterMode();\n    this.declutterImageWithText_ = sharedData;\n  }\n}\n\nexport default CanvasImageBuilder;\n","/**\n * @module ol/render/canvas/LineStringBuilder\n */\nimport {defaultLineDash, defaultLineDashOffset} from '../canvas.js';\nimport CanvasBuilder from './Builder.js';\nimport CanvasInstruction, {\n  beginPathInstruction,\n  strokeInstruction,\n} from './Instruction.js';\n\nclass CanvasLineStringBuilder extends CanvasBuilder {\n  /**\n   * @param {number} tolerance Tolerance.\n   * @param {import(\"../../extent.js\").Extent} maxExtent Maximum extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   */\n  constructor(tolerance, maxExtent, resolution, pixelRatio) {\n    super(tolerance, maxExtent, resolution, pixelRatio);\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} end.\n   */\n  drawFlatCoordinates_(flatCoordinates, offset, end, stride) {\n    const myBegin = this.coordinates.length;\n    const myEnd = this.appendFlatLineCoordinates(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      false,\n      false,\n    );\n    const moveToLineToInstruction = [\n      CanvasInstruction.MOVE_TO_LINE_TO,\n      myBegin,\n      myEnd,\n    ];\n    this.instructions.push(moveToLineToInstruction);\n    this.hitDetectionInstructions.push(moveToLineToInstruction);\n    return end;\n  }\n\n  /**\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} lineStringGeometry Line string geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawLineString(lineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(lineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const flatCoordinates = lineStringGeometry.getFlatCoordinates();\n    const stride = lineStringGeometry.getStride();\n    this.drawFlatCoordinates_(\n      flatCoordinates,\n      0,\n      flatCoordinates.length,\n      stride,\n    );\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} multiLineStringGeometry MultiLineString geometry.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @param {number} [index] Render order index.\n   * @override\n   */\n  drawMultiLineString(multiLineStringGeometry, feature, index) {\n    const state = this.state;\n    const strokeStyle = state.strokeStyle;\n    const lineWidth = state.lineWidth;\n    if (strokeStyle === undefined || lineWidth === undefined) {\n      return;\n    }\n    this.updateStrokeStyle(state, this.applyStroke);\n    this.beginGeometry(multiLineStringGeometry, feature, index);\n    this.hitDetectionInstructions.push(\n      [\n        CanvasInstruction.SET_STROKE_STYLE,\n        state.strokeStyle,\n        state.lineWidth,\n        state.lineCap,\n        state.lineJoin,\n        state.miterLimit,\n        defaultLineDash,\n        defaultLineDashOffset,\n      ],\n      beginPathInstruction,\n    );\n    const ends = multiLineStringGeometry.getEnds();\n    const flatCoordinates = multiLineStringGeometry.getFlatCoordinates();\n    const stride = multiLineStringGeometry.getStride();\n    let offset = 0;\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.drawFlatCoordinates_(\n        flatCoordinates,\n        offset,\n        /** @type {number} */ (ends[i]),\n        stride,\n      );\n    }\n    this.hitDetectionInstructions.push(strokeInstruction);\n    this.endGeometry(feature);\n  }\n\n  /**\n   * @return {import(\"../canvas.js\").SerializableInstructions} the serializable instructions.\n   * @override\n   */\n  finish() {\n    const state = this.state;\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n    }\n    this.reverseHitDetectionInstructions();\n    this.state = null;\n    return super.finish();\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillStrokeState} state State.\n   * @override\n   */\n  applyStroke(state) {\n    if (\n      state.lastStroke != undefined &&\n      state.lastStroke != this.coordinates.length\n    ) {\n      this.instructions.push(strokeInstruction);\n      state.lastStroke = this.coordinates.length;\n    }\n    state.lastStroke = 0;\n    super.applyStroke(state);\n    this.instructions.push(beginPathInstruction);\n  }\n}\n\nexport default CanvasLineStringBuilder;\n","/**\n * @module ol/geom/flat/textpath\n */\nimport {lerp} from '../../math.js';\nimport {rotate} from './transform.js';\n\n/**\n * @param {Array<number>} flatCoordinates Path to put text on.\n * @param {number} offset Start offset of the `flatCoordinates`.\n * @param {number} end End offset of the `flatCoordinates`.\n * @param {number} stride Stride.\n * @param {string} text Text to place on the path.\n * @param {number} startM m along the path where the text starts.\n * @param {number} maxAngle Max angle between adjacent chars in radians.\n * @param {number} scale The product of the text scale and the device pixel ratio.\n * @param {function(string, string, Object<string, number>):number} measureAndCacheTextWidth Measure and cache text width.\n * @param {string} font The font.\n * @param {Object<string, number>} cache A cache of measured widths.\n * @param {number} rotation Rotation to apply to the flatCoordinates to determine whether text needs to be reversed.\n * @param {boolean} keepUpright Whether the text needs to be kept upright\n * @return {Array<Array<*>>|null} The result array (or null if `maxAngle` was\n * exceeded). Entries of the array are x, y, anchorX, angle, chunk.\n */\nexport function drawTextOnPath(\n  flatCoordinates,\n  offset,\n  end,\n  stride,\n  text,\n  startM,\n  maxAngle,\n  scale,\n  measureAndCacheTextWidth,\n  font,\n  cache,\n  rotation,\n  keepUpright = true,\n) {\n  let x2 = flatCoordinates[offset];\n  let y2 = flatCoordinates[offset + 1];\n  let x1 = 0;\n  let y1 = 0;\n  let segmentLength = 0;\n  let segmentM = 0;\n\n  function advance() {\n    x1 = x2;\n    y1 = y2;\n    offset += stride;\n    x2 = flatCoordinates[offset];\n    y2 = flatCoordinates[offset + 1];\n    segmentM += segmentLength;\n    segmentLength = Math.sqrt((x2 - x1) * (x2 - x1) + (y2 - y1) * (y2 - y1));\n  }\n  do {\n    advance();\n  } while (offset < end - stride && segmentM + segmentLength < startM);\n\n  let interpolate =\n    segmentLength === 0 ? 0 : (startM - segmentM) / segmentLength;\n  const beginX = lerp(x1, x2, interpolate);\n  const beginY = lerp(y1, y2, interpolate);\n\n  const startOffset = offset - stride;\n  const startLength = segmentM;\n  const endM = startM + scale * measureAndCacheTextWidth(font, text, cache);\n  while (offset < end - stride && segmentM + segmentLength < endM) {\n    advance();\n  }\n  interpolate = segmentLength === 0 ? 0 : (endM - segmentM) / segmentLength;\n  const endX = lerp(x1, x2, interpolate);\n  const endY = lerp(y1, y2, interpolate);\n\n  // Keep text upright if the option is selected\n  let reverse = false;\n  if (keepUpright) {\n    if (rotation) {\n      const flat = [beginX, beginY, endX, endY];\n      rotate(flat, 0, 4, 2, rotation, flat, flat);\n      reverse = flat[0] > flat[2];\n    } else {\n      reverse = beginX > endX;\n    }\n  }\n\n  const PI = Math.PI;\n  const result = [];\n  const singleSegment = startOffset + stride === offset;\n\n  offset = startOffset;\n  segmentLength = 0;\n  segmentM = startLength;\n  x2 = flatCoordinates[offset];\n  y2 = flatCoordinates[offset + 1];\n\n  let previousAngle;\n  // All on the same segment\n  if (singleSegment) {\n    advance();\n\n    previousAngle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      previousAngle += previousAngle > 0 ? -PI : PI;\n    }\n    const x = (endX + beginX) / 2;\n    const y = (endY + beginY) / 2;\n    result[0] = [x, y, (endM - startM) / 2, previousAngle, text];\n    return result;\n  }\n\n  // rendering across line segments\n  text = text.replace(/\\n/g, ' '); // ensure rendering in single-line as all calculations below don't handle multi-lines\n\n  for (let i = 0, ii = text.length; i < ii; ) {\n    advance();\n    let angle = Math.atan2(y2 - y1, x2 - x1);\n    if (reverse) {\n      angle += angle > 0 ? -PI : PI;\n    }\n    if (previousAngle !== undefined) {\n      let delta = angle - previousAngle;\n      delta += delta > PI ? -2 * PI : delta < -PI ? 2 * PI : 0;\n      if (Math.abs(delta) > maxAngle) {\n        return null;\n      }\n    }\n    previousAngle = angle;\n\n    const iStart = i;\n    let charLength = 0;\n    for (; i < ii; ++i) {\n      const index = reverse ? ii - i - 1 : i;\n      const len = scale * measureAndCacheTextWidth(font, text[index], cache);\n      if (\n        offset + stride < end &&\n        segmentM + segmentLength < startM + charLength + len / 2\n      ) {\n        break;\n      }\n      charLength += len;\n    }\n    if (i === iStart) {\n      continue;\n    }\n    const chars = reverse\n      ? text.substring(ii - iStart, ii - i)\n      : text.substring(iStart, i);\n    interpolate =\n      segmentLength === 0\n        ? 0\n        : (startM + charLength / 2 - segmentM) / segmentLength;\n    const x = lerp(x1, x2, interpolate);\n    const y = lerp(y1, y2, interpolate);\n    result.push([x, y, charLength / 2, angle, chars]);\n    startM += charLength;\n  }\n  return result;\n}\n","/**\n * @module ol/render/canvas/Executor\n */\nimport {equals} from '../../array.js';\nimport {createEmpty, createOrUpdate, intersects} from '../../extent.js';\nimport {lineStringLength} from '../../geom/flat/length.js';\nimport {drawTextOnPath} from '../../geom/flat/textpath.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {\n  apply as applyTransform,\n  compose as composeTransform,\n  create as createTransform,\n  setFromArray as transformSetFromArray,\n} from '../../transform.js';\nimport ZIndexContext from '../canvas/ZIndexContext.js';\nimport {\n  defaultPadding,\n  defaultTextAlign,\n  defaultTextBaseline,\n  drawImageOrLabel,\n  getTextDimensions,\n  measureAndCacheTextWidth,\n} from '../canvas.js';\nimport CanvasInstruction from './Instruction.js';\nimport {TEXT_ALIGN} from './TextBuilder.js';\n\n/**\n * @typedef {import('../../structs/RBush.js').Entry<import('../../Feature.js').FeatureLike>} DeclutterEntry\n */\n\n/**\n * @typedef {Object} ImageOrLabelDimensions\n * @property {number} drawImageX DrawImageX.\n * @property {number} drawImageY DrawImageY.\n * @property {number} drawImageW DrawImageW.\n * @property {number} drawImageH DrawImageH.\n * @property {number} originX OriginX.\n * @property {number} originY OriginY.\n * @property {Array<number>} scale Scale.\n * @property {DeclutterEntry} declutterBox DeclutterBox.\n * @property {import(\"../../transform.js\").Transform} canvasTransform CanvasTransform.\n */\n\n/**\n * @typedef {{0: CanvasRenderingContext2D, 1: import('../../size.js').Size, 2: import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement, 3: ImageOrLabelDimensions, 4: number, 5: Array<*>, 6: Array<*>}} ReplayImageOrLabelArgs\n */\n\n/**\n * @template T\n * @typedef {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, import(\"../../style/Style.js\").DeclutterMode): T} FeatureCallback\n */\n\n/**\n * @type {import(\"../../extent.js\").Extent}\n */\nconst tmpExtent = createEmpty();\n\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p1 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p2 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p3 = [];\n/** @type {import(\"../../coordinate.js\").Coordinate} */\nconst p4 = [];\n\n/**\n * @param {ReplayImageOrLabelArgs} replayImageOrLabelArgs Arguments to replayImageOrLabel\n * @return {DeclutterEntry} Declutter rbush entry.\n */\nfunction getDeclutterBox(replayImageOrLabelArgs) {\n  return replayImageOrLabelArgs[3].declutterBox;\n}\n\nconst rtlRegEx = new RegExp(\n  /* eslint-disable prettier/prettier */\n  '[' +\n    String.fromCharCode(0x00591) + '-' + String.fromCharCode(0x008ff) +\n    String.fromCharCode(0x0fb1d) + '-' + String.fromCharCode(0x0fdff) +\n    String.fromCharCode(0x0fe70) + '-' + String.fromCharCode(0x0fefc) +\n    String.fromCharCode(0x10800) + '-' + String.fromCharCode(0x10fff) +\n    String.fromCharCode(0x1e800) + '-' + String.fromCharCode(0x1efff) +\n  ']'\n  /* eslint-enable prettier/prettier */\n);\n\n/**\n * @param {string} text Text.\n * @param {CanvasTextAlign} align Alignment.\n * @return {number} Text alignment.\n */\nfunction horizontalTextAlign(text, align) {\n  if (align === 'start') {\n    align = rtlRegEx.test(text) ? 'right' : 'left';\n  } else if (align === 'end') {\n    align = rtlRegEx.test(text) ? 'left' : 'right';\n  }\n  return TEXT_ALIGN[align];\n}\n\n/**\n * @param {Array<string>} acc Accumulator.\n * @param {string} line Line of text.\n * @param {number} i Index\n * @return {Array<string>} Accumulator.\n */\nfunction createTextChunks(acc, line, i) {\n  if (i > 0) {\n    acc.push('\\n', '');\n  }\n  acc.push(line, '');\n  return acc;\n}\n\n/**\n * Converts rich text to plain text for text along lines.\n * @param {string} result The resulting plain text.\n * @param {string} part Item of the rich text array.\n * @param {number} index Index of the item in the rich text array.\n * @return {string} The resulting plain text.\n */\nfunction richTextToPlainText(result, part, index) {\n  if (index % 2 === 0) {\n    result += part;\n  }\n  return result;\n}\n\nclass Executor {\n  /**\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The replay can have overlapping geometries.\n   * @param {import(\"../canvas.js\").SerializableInstructions} instructions The serializable instructions.\n   * @param {boolean} [deferredRendering] Enable deferred rendering.\n   */\n  constructor(\n    resolution,\n    pixelRatio,\n    overlaps,\n    instructions,\n    deferredRendering,\n  ) {\n    /**\n     * @protected\n     * @type {boolean}\n     */\n    this.overlaps = overlaps;\n\n    /**\n     * @protected\n     * @type {number}\n     */\n    this.pixelRatio = pixelRatio;\n\n    /**\n     * @protected\n     * @const\n     * @type {number}\n     */\n    this.resolution = resolution;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.alignAndScaleFill_;\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.instructions = instructions.instructions;\n\n    /**\n     * @protected\n     * @type {Array<number>}\n     */\n    this.coordinates = instructions.coordinates;\n\n    /**\n     * @private\n     * @type {!Object<number,import(\"../../coordinate.js\").Coordinate|Array<import(\"../../coordinate.js\").Coordinate>|Array<Array<import(\"../../coordinate.js\").Coordinate>>>}\n     */\n    this.coordinateCache_ = {};\n\n    /**\n     * @private\n     * @type {!import(\"../../transform.js\").Transform}\n     */\n    this.renderedTransform_ = createTransform();\n\n    /**\n     * @protected\n     * @type {Array<*>}\n     */\n    this.hitDetectionInstructions = instructions.hitDetectionInstructions;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = 0;\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").FillState>}\n     */\n    this.fillStates = instructions.fillStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").StrokeState>}\n     */\n    this.strokeStates = instructions.strokeStates || {};\n\n    /**\n     * @type {!Object<string, import(\"../canvas.js\").TextState>}\n     */\n    this.textStates = instructions.textStates || {};\n\n    /**\n     * @private\n     * @type {Object<string, Object<string, number>>}\n     */\n    this.widths_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, import(\"../canvas.js\").Label>}\n     */\n    this.labels_ = {};\n\n    /**\n     * @private\n     * @type {import(\"../canvas/ZIndexContext.js\").default}\n     */\n    this.zIndexContext_ = deferredRendering ? new ZIndexContext() : null;\n  }\n\n  /**\n   * @return {ZIndexContext} ZIndex context.\n   */\n  getZIndexContext() {\n    return this.zIndexContext_;\n  }\n\n  /**\n   * @param {string|Array<string>} text Text.\n   * @param {string} textKey Text style key.\n   * @param {string} fillKey Fill style key.\n   * @param {string} strokeKey Stroke style key.\n   * @return {import(\"../canvas.js\").Label} Label.\n   */\n  createLabel(text, textKey, fillKey, strokeKey) {\n    const key = text + textKey + fillKey + strokeKey;\n    if (this.labels_[key]) {\n      return this.labels_[key];\n    }\n    const strokeState = strokeKey ? this.strokeStates[strokeKey] : null;\n    const fillState = fillKey ? this.fillStates[fillKey] : null;\n    const textState = this.textStates[textKey];\n    const pixelRatio = this.pixelRatio;\n    const scale = [\n      textState.scale[0] * pixelRatio,\n      textState.scale[1] * pixelRatio,\n    ];\n    const align = textState.justify\n      ? TEXT_ALIGN[textState.justify]\n      : horizontalTextAlign(\n          Array.isArray(text) ? text[0] : text,\n          textState.textAlign || defaultTextAlign,\n        );\n    const strokeWidth =\n      strokeKey && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    const chunks = Array.isArray(text)\n      ? text\n      : String(text).split('\\n').reduce(createTextChunks, []);\n\n    const {width, height, widths, heights, lineWidths} = getTextDimensions(\n      textState,\n      chunks,\n    );\n    const renderWidth = width + strokeWidth;\n    const contextInstructions = [];\n    // make canvas 2 pixels wider to account for italic text width measurement errors\n    const w = (renderWidth + 2) * scale[0];\n    const h = (height + strokeWidth) * scale[1];\n    /** @type {import(\"../canvas.js\").Label} */\n    const label = {\n      width: w < 0 ? Math.floor(w) : Math.ceil(w),\n      height: h < 0 ? Math.floor(h) : Math.ceil(h),\n      contextInstructions: contextInstructions,\n    };\n    if (scale[0] != 1 || scale[1] != 1) {\n      contextInstructions.push('scale', scale);\n    }\n    if (strokeKey) {\n      contextInstructions.push('strokeStyle', strokeState.strokeStyle);\n      contextInstructions.push('lineWidth', strokeWidth);\n      contextInstructions.push('lineCap', strokeState.lineCap);\n      contextInstructions.push('lineJoin', strokeState.lineJoin);\n      contextInstructions.push('miterLimit', strokeState.miterLimit);\n      contextInstructions.push('setLineDash', [strokeState.lineDash]);\n      contextInstructions.push('lineDashOffset', strokeState.lineDashOffset);\n    }\n    if (fillKey) {\n      contextInstructions.push('fillStyle', fillState.fillStyle);\n    }\n    contextInstructions.push('textBaseline', 'middle');\n    contextInstructions.push('textAlign', 'center');\n    const leftRight = 0.5 - align;\n    let x = align * renderWidth + leftRight * strokeWidth;\n    const strokeInstructions = [];\n    const fillInstructions = [];\n    let lineHeight = 0;\n    let lineOffset = 0;\n    let widthHeightIndex = 0;\n    let lineWidthIndex = 0;\n    let previousFont;\n    for (let i = 0, ii = chunks.length; i < ii; i += 2) {\n      const text = chunks[i];\n      if (text === '\\n') {\n        lineOffset += lineHeight;\n        lineHeight = 0;\n        x = align * renderWidth + leftRight * strokeWidth;\n        ++lineWidthIndex;\n        continue;\n      }\n      const font = chunks[i + 1] || textState.font;\n      if (font !== previousFont) {\n        if (strokeKey) {\n          strokeInstructions.push('font', font);\n        }\n        if (fillKey) {\n          fillInstructions.push('font', font);\n        }\n        previousFont = font;\n      }\n      lineHeight = Math.max(lineHeight, heights[widthHeightIndex]);\n      const fillStrokeArgs = [\n        text,\n        x +\n          leftRight * widths[widthHeightIndex] +\n          align * (widths[widthHeightIndex] - lineWidths[lineWidthIndex]),\n        0.5 * (strokeWidth + lineHeight) + lineOffset,\n      ];\n      x += widths[widthHeightIndex];\n      if (strokeKey) {\n        strokeInstructions.push('strokeText', fillStrokeArgs);\n      }\n      if (fillKey) {\n        fillInstructions.push('fillText', fillStrokeArgs);\n      }\n      ++widthHeightIndex;\n    }\n    Array.prototype.push.apply(contextInstructions, strokeInstructions);\n    Array.prototype.push.apply(contextInstructions, fillInstructions);\n    this.labels_[key] = label;\n    return label;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../coordinate.js\").Coordinate} p1 1st point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p2 2nd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p3 3rd point of the background box.\n   * @param {import(\"../../coordinate.js\").Coordinate} p4 4th point of the background box.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   */\n  replayTextBackground_(\n    context,\n    p1,\n    p2,\n    p3,\n    p4,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    context.beginPath();\n    context.moveTo.apply(context, p1);\n    context.lineTo.apply(context, p2);\n    context.lineTo.apply(context, p3);\n    context.lineTo.apply(context, p4);\n    context.lineTo.apply(context, p1);\n    if (fillInstruction) {\n      this.alignAndScaleFill_ = /** @type {number} */ (fillInstruction[2]);\n      context.fillStyle = /** @type {string} */ (fillInstruction[1]);\n      this.fill_(context);\n    }\n    if (strokeInstruction) {\n      this.setStrokeStyle_(\n        context,\n        /** @type {Array<*>} */ (strokeInstruction),\n      );\n      context.stroke();\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} sheetWidth Width of the sprite sheet.\n   * @param {number} sheetHeight Height of the sprite sheet.\n   * @param {number} centerX X.\n   * @param {number} centerY Y.\n   * @param {number} width Width.\n   * @param {number} height Height.\n   * @param {number} anchorX Anchor X.\n   * @param {number} anchorY Anchor Y.\n   * @param {number} originX Origin X.\n   * @param {number} originY Origin Y.\n   * @param {number} rotation Rotation.\n   * @param {import(\"../../size.js\").Size} scale Scale.\n   * @param {boolean} snapToPixel Snap to pixel.\n   * @param {Array<number>} padding Padding.\n   * @param {boolean} fillStroke Background fill or stroke.\n   * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n   * @return {ImageOrLabelDimensions} Dimensions for positioning and decluttering the image or label.\n   */\n  calculateImageOrLabelDimensions_(\n    sheetWidth,\n    sheetHeight,\n    centerX,\n    centerY,\n    width,\n    height,\n    anchorX,\n    anchorY,\n    originX,\n    originY,\n    rotation,\n    scale,\n    snapToPixel,\n    padding,\n    fillStroke,\n    feature,\n  ) {\n    anchorX *= scale[0];\n    anchorY *= scale[1];\n    let x = centerX - anchorX;\n    let y = centerY - anchorY;\n\n    const w = width + originX > sheetWidth ? sheetWidth - originX : width;\n    const h = height + originY > sheetHeight ? sheetHeight - originY : height;\n    const boxW = padding[3] + w * scale[0] + padding[1];\n    const boxH = padding[0] + h * scale[1] + padding[2];\n    const boxX = x - padding[3];\n    const boxY = y - padding[0];\n\n    if (fillStroke || rotation !== 0) {\n      p1[0] = boxX;\n      p4[0] = boxX;\n      p1[1] = boxY;\n      p2[1] = boxY;\n      p2[0] = boxX + boxW;\n      p3[0] = p2[0];\n      p3[1] = boxY + boxH;\n      p4[1] = p3[1];\n    }\n\n    let transform;\n    if (rotation !== 0) {\n      transform = composeTransform(\n        createTransform(),\n        centerX,\n        centerY,\n        1,\n        1,\n        rotation,\n        -centerX,\n        -centerY,\n      );\n\n      applyTransform(transform, p1);\n      applyTransform(transform, p2);\n      applyTransform(transform, p3);\n      applyTransform(transform, p4);\n      createOrUpdate(\n        Math.min(p1[0], p2[0], p3[0], p4[0]),\n        Math.min(p1[1], p2[1], p3[1], p4[1]),\n        Math.max(p1[0], p2[0], p3[0], p4[0]),\n        Math.max(p1[1], p2[1], p3[1], p4[1]),\n        tmpExtent,\n      );\n    } else {\n      createOrUpdate(\n        Math.min(boxX, boxX + boxW),\n        Math.min(boxY, boxY + boxH),\n        Math.max(boxX, boxX + boxW),\n        Math.max(boxY, boxY + boxH),\n        tmpExtent,\n      );\n    }\n    if (snapToPixel) {\n      x = Math.round(x);\n      y = Math.round(y);\n    }\n    return {\n      drawImageX: x,\n      drawImageY: y,\n      drawImageW: w,\n      drawImageH: h,\n      originX: originX,\n      originY: originY,\n      declutterBox: {\n        minX: tmpExtent[0],\n        minY: tmpExtent[1],\n        maxX: tmpExtent[2],\n        maxY: tmpExtent[3],\n        value: feature,\n      },\n      canvasTransform: transform,\n      scale: scale,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../canvas.js\").Label|HTMLImageElement|HTMLCanvasElement|HTMLVideoElement} imageOrLabel Image.\n   * @param {ImageOrLabelDimensions} dimensions Dimensions.\n   * @param {number} opacity Opacity.\n   * @param {Array<*>} fillInstruction Fill instruction.\n   * @param {Array<*>} strokeInstruction Stroke instruction.\n   * @return {boolean} The image or label was rendered.\n   */\n  replayImageOrLabel_(\n    context,\n    scaledCanvasSize,\n    imageOrLabel,\n    dimensions,\n    opacity,\n    fillInstruction,\n    strokeInstruction,\n  ) {\n    const fillStroke = !!(fillInstruction || strokeInstruction);\n\n    const box = dimensions.declutterBox;\n    const strokePadding = strokeInstruction\n      ? (strokeInstruction[2] * dimensions.scale[0]) / 2\n      : 0;\n    const intersects =\n      box.minX - strokePadding <= scaledCanvasSize[0] &&\n      box.maxX + strokePadding >= 0 &&\n      box.minY - strokePadding <= scaledCanvasSize[1] &&\n      box.maxY + strokePadding >= 0;\n\n    if (intersects) {\n      if (fillStroke) {\n        this.replayTextBackground_(\n          context,\n          p1,\n          p2,\n          p3,\n          p4,\n          /** @type {Array<*>} */ (fillInstruction),\n          /** @type {Array<*>} */ (strokeInstruction),\n        );\n      }\n      drawImageOrLabel(\n        context,\n        dimensions.canvasTransform,\n        opacity,\n        imageOrLabel,\n        dimensions.originX,\n        dimensions.originY,\n        dimensions.drawImageW,\n        dimensions.drawImageH,\n        dimensions.drawImageX,\n        dimensions.drawImageY,\n        dimensions.scale,\n      );\n    }\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   */\n  fill_(context) {\n    const alignAndScale = this.alignAndScaleFill_;\n    if (alignAndScale) {\n      const origin = applyTransform(this.renderedTransform_, [0, 0]);\n      const repeatSize = 512 * this.pixelRatio;\n      context.save();\n      context.translate(origin[0] % repeatSize, origin[1] % repeatSize);\n      if (alignAndScale !== 1) {\n        context.scale(alignAndScale, alignAndScale);\n      }\n      context.rotate(this.viewRotation_);\n    }\n    context.fill();\n    if (alignAndScale) {\n      context.restore();\n    }\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {Array<*>} instruction Instruction.\n   */\n  setStrokeStyle_(context, instruction) {\n    context.strokeStyle =\n      /** @type {import(\"../../colorlike.js\").ColorLike} */ (instruction[1]);\n    if (!instruction[1]) {\n      return;\n    }\n    context.lineWidth = /** @type {number} */ (instruction[2]);\n    context.lineCap = /** @type {CanvasLineCap} */ (instruction[3]);\n    context.lineJoin = /** @type {CanvasLineJoin} */ (instruction[4]);\n    context.miterLimit = /** @type {number} */ (instruction[5]);\n    context.lineDashOffset = /** @type {number} */ (instruction[7]);\n    context.setLineDash(/** @type {Array<number>} */ (instruction[6]));\n  }\n\n  /**\n   * @private\n   * @param {string|Array<string>} text The text to draw.\n   * @param {string} textKey The key of the text state.\n   * @param {string} strokeKey The key for the stroke state.\n   * @param {string} fillKey The key for the fill state.\n   * @return {{label: import(\"../canvas.js\").Label, anchorX: number, anchorY: number}} The text image and its anchor.\n   */\n  drawLabelWithPointPlacement_(text, textKey, strokeKey, fillKey) {\n    const textState = this.textStates[textKey];\n\n    const label = this.createLabel(text, textKey, fillKey, strokeKey);\n\n    const strokeState = this.strokeStates[strokeKey];\n    const pixelRatio = this.pixelRatio;\n    const align = horizontalTextAlign(\n      Array.isArray(text) ? text[0] : text,\n      textState.textAlign || defaultTextAlign,\n    );\n    const baseline = TEXT_ALIGN[textState.textBaseline || defaultTextBaseline];\n    const strokeWidth =\n      strokeState && strokeState.lineWidth ? strokeState.lineWidth : 0;\n\n    // Remove the 2 pixels we added in createLabel() for the anchor\n    const width = label.width / pixelRatio - 2 * textState.scale[0];\n    const anchorX = align * width + 2 * (0.5 - align) * strokeWidth;\n    const anchorY =\n      (baseline * label.height) / pixelRatio +\n      2 * (0.5 - baseline) * strokeWidth;\n\n    return {\n      label: label,\n      anchorX: anchorX,\n      anchorY: anchorY,\n    };\n  }\n\n  /**\n   * @private\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {Array<*>} instructions Instructions array.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  execute_(\n    context,\n    scaledCanvasSize,\n    transform,\n    instructions,\n    snapToPixel,\n    featureCallback,\n    hitExtent,\n    declutterTree,\n  ) {\n    const zIndexContext = this.zIndexContext_;\n    /** @type {Array<number>} */\n    let pixelCoordinates;\n    if (this.pixelCoordinates_ && equals(transform, this.renderedTransform_)) {\n      pixelCoordinates = this.pixelCoordinates_;\n    } else {\n      if (!this.pixelCoordinates_) {\n        this.pixelCoordinates_ = [];\n      }\n      pixelCoordinates = transform2D(\n        this.coordinates,\n        0,\n        this.coordinates.length,\n        2,\n        transform,\n        this.pixelCoordinates_,\n      );\n      transformSetFromArray(this.renderedTransform_, transform);\n    }\n    let i = 0; // instruction index\n    const ii = instructions.length; // end of instructions\n    let d = 0; // data index\n    let dd; // end of per-instruction data\n    let anchorX,\n      anchorY,\n      /** @type {import('../../style/Style.js').DeclutterMode} */\n      declutterMode,\n      prevX,\n      prevY,\n      roundX,\n      roundY,\n      image,\n      text,\n      textKey,\n      strokeKey,\n      fillKey;\n    let pendingFill = 0;\n    let pendingStroke = 0;\n    const coordinateCache = this.coordinateCache_;\n    const viewRotation = this.viewRotation_;\n    const viewRotationFromTransform =\n      Math.round(Math.atan2(-transform[1], transform[0]) * 1e12) / 1e12;\n\n    const state = /** @type {import(\"../../render.js\").State} */ ({\n      context: context,\n      pixelRatio: this.pixelRatio,\n      resolution: this.resolution,\n      rotation: viewRotation,\n    });\n\n    // When the batch size gets too big, performance decreases. 200 is a good\n    // balance between batch size and number of fill/stroke instructions.\n    const batchSize =\n      this.instructions != instructions || this.overlaps ? 0 : 200;\n    let /** @type {import(\"../../Feature.js\").FeatureLike} */ feature;\n    let x, y, currentGeometry;\n    while (i < ii) {\n      const instruction = instructions[i];\n      const type = /** @type {import(\"./Instruction.js\").default} */ (\n        instruction[0]\n      );\n      switch (type) {\n        case CanvasInstruction.BEGIN_GEOMETRY:\n          feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n            instruction[1]\n          );\n          currentGeometry = instruction[3];\n          if (!feature.getGeometry()) {\n            i = /** @type {number} */ (instruction[2]);\n          } else if (\n            hitExtent !== undefined &&\n            !intersects(hitExtent, currentGeometry.getExtent())\n          ) {\n            i = /** @type {number} */ (instruction[2]) + 1;\n          } else {\n            ++i;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[4];\n          }\n          break;\n        case CanvasInstruction.BEGIN_PATH:\n          if (pendingFill > batchSize) {\n            this.fill_(context);\n            pendingFill = 0;\n          }\n          if (pendingStroke > batchSize) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          if (!pendingFill && !pendingStroke) {\n            context.beginPath();\n            prevX = NaN;\n            prevY = NaN;\n          }\n          ++i;\n          break;\n        case CanvasInstruction.CIRCLE:\n          d = /** @type {number} */ (instruction[1]);\n          const x1 = pixelCoordinates[d];\n          const y1 = pixelCoordinates[d + 1];\n          const x2 = pixelCoordinates[d + 2];\n          const y2 = pixelCoordinates[d + 3];\n          const dx = x2 - x1;\n          const dy = y2 - y1;\n          const r = Math.sqrt(dx * dx + dy * dy);\n          context.moveTo(x1 + r, y1);\n          context.arc(x1, y1, r, 0, 2 * Math.PI, true);\n          ++i;\n          break;\n        case CanvasInstruction.CLOSE_PATH:\n          context.closePath();\n          ++i;\n          break;\n        case CanvasInstruction.CUSTOM:\n          d = /** @type {number} */ (instruction[1]);\n          dd = instruction[2];\n          const geometry =\n            /** @type {import(\"../../geom/SimpleGeometry.js\").default} */ (\n              instruction[3]\n            );\n          const renderer = instruction[4];\n          const fn = instruction[5];\n          state.geometry = geometry;\n          state.feature = feature;\n          if (!(i in coordinateCache)) {\n            coordinateCache[i] = [];\n          }\n          const coords = coordinateCache[i];\n          if (fn) {\n            fn(pixelCoordinates, d, dd, 2, coords);\n          } else {\n            coords[0] = pixelCoordinates[d];\n            coords[1] = pixelCoordinates[d + 1];\n            coords.length = 2;\n          }\n          if (zIndexContext) {\n            zIndexContext.zIndex = instruction[6];\n          }\n          renderer(coords, state);\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_IMAGE:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          image =\n            /** @type {HTMLCanvasElement|HTMLVideoElement|HTMLImageElement} */ (\n              instruction[3]\n            );\n\n          // Remaining arguments in DRAW_IMAGE are in alphabetical order\n          anchorX = /** @type {number} */ (instruction[4]);\n          anchorY = /** @type {number} */ (instruction[5]);\n          let height = /** @type {number} */ (instruction[6]);\n          const opacity = /** @type {number} */ (instruction[7]);\n          const originX = /** @type {number} */ (instruction[8]);\n          const originY = /** @type {number} */ (instruction[9]);\n          const rotateWithView = /** @type {boolean} */ (instruction[10]);\n          let rotation = /** @type {number} */ (instruction[11]);\n          const scale = /** @type {import(\"../../size.js\").Size} */ (\n            instruction[12]\n          );\n          let width = /** @type {number} */ (instruction[13]);\n          declutterMode = instruction[14] || 'declutter';\n          const declutterImageWithText =\n            /** @type {{args: import(\"../canvas.js\").DeclutterImageWithText, declutterMode: import('../../style/Style.js').DeclutterMode}} */ (\n              instruction[15]\n            );\n\n          if (!image && instruction.length >= 20) {\n            // create label images\n            text = /** @type {string} */ (instruction[19]);\n            textKey = /** @type {string} */ (instruction[20]);\n            strokeKey = /** @type {string} */ (instruction[21]);\n            fillKey = /** @type {string} */ (instruction[22]);\n            const labelWithAnchor = this.drawLabelWithPointPlacement_(\n              text,\n              textKey,\n              strokeKey,\n              fillKey,\n            );\n            image = labelWithAnchor.label;\n            instruction[3] = image;\n            const textOffsetX = /** @type {number} */ (instruction[23]);\n            anchorX = (labelWithAnchor.anchorX - textOffsetX) * this.pixelRatio;\n            instruction[4] = anchorX;\n            const textOffsetY = /** @type {number} */ (instruction[24]);\n            anchorY = (labelWithAnchor.anchorY - textOffsetY) * this.pixelRatio;\n            instruction[5] = anchorY;\n            height = image.height;\n            instruction[6] = height;\n            width = image.width;\n            instruction[13] = width;\n          }\n\n          let geometryWidths;\n          if (instruction.length > 25) {\n            geometryWidths = /** @type {number} */ (instruction[25]);\n          }\n\n          let padding, backgroundFillInstruction, backgroundStrokeInstruction;\n          if (instruction.length > 17) {\n            padding = /** @type {Array<number>} */ (instruction[16]);\n            backgroundFillInstruction = /** @type {Array<*>} */ (\n              instruction[17]\n            );\n            backgroundStrokeInstruction = /** @type {Array<*>} */ (\n              instruction[18]\n            );\n          } else {\n            padding = defaultPadding;\n            backgroundFillInstruction = null;\n            backgroundStrokeInstruction = null;\n          }\n\n          if (rotateWithView && viewRotationFromTransform) {\n            // Canvas is expected to be rotated to reverse view rotation.\n            rotation += viewRotation;\n          } else if (!rotateWithView && !viewRotationFromTransform) {\n            // Canvas is not rotated, images need to be rotated back to be north-up.\n            rotation -= viewRotation;\n          }\n          let widthIndex = 0;\n          for (; d < dd; d += 2) {\n            if (\n              geometryWidths &&\n              geometryWidths[widthIndex++] < width / this.pixelRatio\n            ) {\n              continue;\n            }\n            const dimensions = this.calculateImageOrLabelDimensions_(\n              image.width,\n              image.height,\n              pixelCoordinates[d],\n              pixelCoordinates[d + 1],\n              width,\n              height,\n              anchorX,\n              anchorY,\n              originX,\n              originY,\n              rotation,\n              scale,\n              snapToPixel,\n              padding,\n              !!backgroundFillInstruction || !!backgroundStrokeInstruction,\n              feature,\n            );\n            /** @type {ReplayImageOrLabelArgs} */\n            const args = [\n              context,\n              scaledCanvasSize,\n              image,\n              dimensions,\n              opacity,\n              backgroundFillInstruction,\n              backgroundStrokeInstruction,\n            ];\n            if (declutterTree) {\n              let imageArgs, imageDeclutterMode, imageDeclutterBox;\n              if (declutterImageWithText) {\n                const index = dd - d;\n                if (!declutterImageWithText[index]) {\n                  // We now have the image for an image+text combination.\n                  declutterImageWithText[index] = {args, declutterMode};\n                  // Don't render anything for now, wait for the text.\n                  continue;\n                }\n                const imageDeclutter = declutterImageWithText[index];\n                imageArgs = imageDeclutter.args;\n                imageDeclutterMode = imageDeclutter.declutterMode;\n                delete declutterImageWithText[index];\n                imageDeclutterBox = getDeclutterBox(imageArgs);\n              }\n              // We now have image and text for an image+text combination.\n              let renderImage, renderText;\n              if (\n                imageArgs &&\n                (imageDeclutterMode !== 'declutter' ||\n                  !declutterTree.collides(imageDeclutterBox))\n              ) {\n                renderImage = true;\n              }\n              if (\n                declutterMode !== 'declutter' ||\n                !declutterTree.collides(dimensions.declutterBox)\n              ) {\n                renderText = true;\n              }\n              if (\n                imageDeclutterMode === 'declutter' &&\n                declutterMode === 'declutter'\n              ) {\n                const render = renderImage && renderText;\n                renderImage = render;\n                renderText = render;\n              }\n              if (renderImage) {\n                if (imageDeclutterMode !== 'none') {\n                  declutterTree.insert(imageDeclutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, imageArgs);\n              }\n              if (renderText) {\n                if (declutterMode !== 'none') {\n                  declutterTree.insert(dimensions.declutterBox);\n                }\n                this.replayImageOrLabel_.apply(this, args);\n              }\n            } else {\n              this.replayImageOrLabel_.apply(this, args);\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.DRAW_CHARS:\n          const begin = /** @type {number} */ (instruction[1]);\n          const end = /** @type {number} */ (instruction[2]);\n          const baseline = /** @type {number} */ (instruction[3]);\n          const overflow = /** @type {number} */ (instruction[4]);\n          fillKey = /** @type {string} */ (instruction[5]);\n          const maxAngle = /** @type {number} */ (instruction[6]);\n          const measurePixelRatio = /** @type {number} */ (instruction[7]);\n          const offsetY = /** @type {number} */ (instruction[8]);\n          strokeKey = /** @type {string} */ (instruction[9]);\n          const strokeWidth = /** @type {number} */ (instruction[10]);\n          text = /** @type {string|Array<string>} */ (instruction[11]);\n          if (Array.isArray(text)) {\n            //FIXME Add support for rich text along lines\n            text = text.reduce(richTextToPlainText, '');\n          }\n          textKey = /** @type {string} */ (instruction[12]);\n          const pixelRatioScale = [\n            /** @type {number} */ (instruction[13]),\n            /** @type {number} */ (instruction[13]),\n          ];\n          declutterMode = instruction[14] || 'declutter';\n\n          const textKeepUpright = /** @type {boolean} */ (instruction[15]);\n          const textState = this.textStates[textKey];\n          const font = textState.font;\n          const textScale = [\n            textState.scale[0] * measurePixelRatio,\n            textState.scale[1] * measurePixelRatio,\n          ];\n\n          let cachedWidths;\n          if (font in this.widths_) {\n            cachedWidths = this.widths_[font];\n          } else {\n            cachedWidths = {};\n            this.widths_[font] = cachedWidths;\n          }\n\n          const pathLength = lineStringLength(pixelCoordinates, begin, end, 2);\n          const textLength =\n            Math.abs(textScale[0]) *\n            measureAndCacheTextWidth(font, text, cachedWidths);\n          if (overflow || textLength <= pathLength) {\n            const textAlign = this.textStates[textKey].textAlign;\n            const startM =\n              (pathLength - textLength) * horizontalTextAlign(text, textAlign);\n            const parts = drawTextOnPath(\n              pixelCoordinates,\n              begin,\n              end,\n              2,\n              text,\n              startM,\n              maxAngle,\n              Math.abs(textScale[0]),\n              measureAndCacheTextWidth,\n              font,\n              cachedWidths,\n              viewRotationFromTransform ? 0 : this.viewRotation_,\n              textKeepUpright,\n            );\n            drawChars: if (parts) {\n              /** @type {Array<ReplayImageOrLabelArgs>} */\n              const replayImageOrLabelArgs = [];\n              let c, cc, chars, label, part;\n              if (strokeKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, '', strokeKey);\n                  anchorX =\n                    /** @type {number} */ (part[2]) +\n                    (textScale[0] < 0 ? -strokeWidth : strokeWidth);\n                  anchorY =\n                    baseline * label.height +\n                    ((0.5 - baseline) * 2 * strokeWidth * textScale[1]) /\n                      textScale[0] -\n                    offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (fillKey) {\n                for (c = 0, cc = parts.length; c < cc; ++c) {\n                  part = parts[c]; // x, y, anchorX, rotation, chunk\n                  chars = /** @type {string} */ (part[4]);\n                  label = this.createLabel(chars, textKey, fillKey, '');\n                  anchorX = /** @type {number} */ (part[2]);\n                  anchorY = baseline * label.height - offsetY;\n                  const dimensions = this.calculateImageOrLabelDimensions_(\n                    label.width,\n                    label.height,\n                    part[0],\n                    part[1],\n                    label.width,\n                    label.height,\n                    anchorX,\n                    anchorY,\n                    0,\n                    0,\n                    part[3],\n                    pixelRatioScale,\n                    false,\n                    defaultPadding,\n                    false,\n                    feature,\n                  );\n                  if (\n                    declutterTree &&\n                    declutterMode === 'declutter' &&\n                    declutterTree.collides(dimensions.declutterBox)\n                  ) {\n                    break drawChars;\n                  }\n                  replayImageOrLabelArgs.push([\n                    context,\n                    scaledCanvasSize,\n                    label,\n                    dimensions,\n                    1,\n                    null,\n                    null,\n                  ]);\n                }\n              }\n              if (declutterTree && declutterMode !== 'none') {\n                declutterTree.load(replayImageOrLabelArgs.map(getDeclutterBox));\n              }\n              for (let i = 0, ii = replayImageOrLabelArgs.length; i < ii; ++i) {\n                this.replayImageOrLabel_.apply(this, replayImageOrLabelArgs[i]);\n              }\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.END_GEOMETRY:\n          if (featureCallback !== undefined) {\n            feature = /** @type {import(\"../../Feature.js\").FeatureLike} */ (\n              instruction[1]\n            );\n            const result = featureCallback(\n              feature,\n              currentGeometry,\n              declutterMode,\n            );\n            if (result) {\n              return result;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.FILL:\n          if (batchSize) {\n            pendingFill++;\n          } else {\n            this.fill_(context);\n          }\n          ++i;\n          break;\n        case CanvasInstruction.MOVE_TO_LINE_TO:\n          d = /** @type {number} */ (instruction[1]);\n          dd = /** @type {number} */ (instruction[2]);\n          x = pixelCoordinates[d];\n          y = pixelCoordinates[d + 1];\n          context.moveTo(x, y);\n          prevX = (x + 0.5) | 0;\n          prevY = (y + 0.5) | 0;\n          for (d += 2; d < dd; d += 2) {\n            x = pixelCoordinates[d];\n            y = pixelCoordinates[d + 1];\n            roundX = (x + 0.5) | 0;\n            roundY = (y + 0.5) | 0;\n            if (d == dd - 2 || roundX !== prevX || roundY !== prevY) {\n              context.lineTo(x, y);\n              prevX = roundX;\n              prevY = roundY;\n            }\n          }\n          ++i;\n          break;\n        case CanvasInstruction.SET_FILL_STYLE:\n          this.alignAndScaleFill_ = instruction[2];\n\n          if (pendingFill) {\n            this.fill_(context);\n            pendingFill = 0;\n            if (pendingStroke) {\n              context.stroke();\n              pendingStroke = 0;\n            }\n          }\n\n          /** @type {import(\"../../colorlike.js\").ColorLike} */\n          context.fillStyle = instruction[1];\n          ++i;\n          break;\n        case CanvasInstruction.SET_STROKE_STYLE:\n          if (pendingStroke) {\n            context.stroke();\n            pendingStroke = 0;\n          }\n          this.setStrokeStyle_(context, /** @type {Array<*>} */ (instruction));\n          ++i;\n          break;\n        case CanvasInstruction.STROKE:\n          if (batchSize) {\n            pendingStroke++;\n          } else {\n            context.stroke();\n          }\n          ++i;\n          break;\n        default: // consume the instruction anyway, to avoid an infinite loop\n          ++i;\n          break;\n      }\n    }\n    if (pendingFill) {\n      this.fill_(context);\n    }\n    if (pendingStroke) {\n      context.stroke();\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scaled canvas size.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and text to integer pixels.\n   * @param {import(\"rbush\").default<DeclutterEntry>} [declutterTree] Declutter tree.\n   */\n  execute(\n    context,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    declutterTree,\n  ) {\n    this.viewRotation_ = viewRotation;\n    this.execute_(\n      context,\n      scaledCanvasSize,\n      transform,\n      this.instructions,\n      snapToPixel,\n      undefined,\n      undefined,\n      declutterTree,\n    );\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {FeatureCallback<T>} [featureCallback] Feature callback.\n   * @param {import(\"../../extent.js\").Extent} [hitExtent] Only check\n   *     features that intersect this extent.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  executeHitDetection(\n    context,\n    transform,\n    viewRotation,\n    featureCallback,\n    hitExtent,\n  ) {\n    this.viewRotation_ = viewRotation;\n    return this.execute_(\n      context,\n      [context.canvas.width, context.canvas.height],\n      transform,\n      this.hitDetectionInstructions,\n      true,\n      featureCallback,\n      hitExtent,\n    );\n  }\n}\n\nexport default Executor;\n","/**\n * @module ol/render/canvas/ExecutorGroup\n */\n\nimport {ascending, descending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {buffer, createEmpty, extendCoordinate} from '../../extent.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {isEmpty} from '../../obj.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport Executor from './Executor.js';\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const ALL = [\n  'Polygon',\n  'Circle',\n  'LineString',\n  'Image',\n  'Text',\n  'Default',\n];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const DECLUTTER = ['Image', 'Text'];\n\n/**\n * @const\n * @type {Array<import(\"../canvas.js\").BuilderType>}\n */\nexport const NON_DECLUTTER = ALL.filter(\n  (builderType) => !DECLUTTER.includes(builderType),\n);\n\nclass ExecutorGroup {\n  /**\n   * @param {import(\"../../extent.js\").Extent} maxExtent Max extent for clipping. When a\n   * `maxExtent` was set on the Builder for this executor group, the same `maxExtent`\n   * should be set here, unless the target context does not exceed that extent (which\n   * can be the case when rendering to tiles).\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {boolean} overlaps The executor group can have overlapping geometries.\n   * @param {!Object<string, !Object<import(\"../canvas.js\").BuilderType, import(\"../canvas.js\").SerializableInstructions>>} allInstructions\n   * The serializable instructions.\n   * @param {number} [renderBuffer] Optional rendering buffer.\n   * @param {boolean} [deferredRendering] Enable deferred rendering with renderDeferred().\n   */\n  constructor(\n    maxExtent,\n    resolution,\n    pixelRatio,\n    overlaps,\n    allInstructions,\n    renderBuffer,\n    deferredRendering,\n  ) {\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.maxExtent_ = maxExtent;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = overlaps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.resolution_ = resolution;\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.renderBuffer_ = renderBuffer;\n\n    /**\n     * @private\n     * @type {!Object<string, !Object<string, import(\"./Executor\").default>>}\n     */\n    this.executorsByZIndex_ = {};\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.hitDetectionContext_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.hitDetectionTransform_ = createTransform();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.renderedContext_ = null;\n\n    /**\n     * @private\n     * @type {Object<number, Array<import(\"./ZIndexContext.js\").default>>}\n     */\n    this.deferredZIndexContexts_ = {};\n\n    this.createExecutors_(allInstructions, deferredRendering);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  clip(context, transform) {\n    const flatClipCoords = this.getClipCoords(transform);\n    context.beginPath();\n    context.moveTo(flatClipCoords[0], flatClipCoords[1]);\n    context.lineTo(flatClipCoords[2], flatClipCoords[3]);\n    context.lineTo(flatClipCoords[4], flatClipCoords[5]);\n    context.lineTo(flatClipCoords[6], flatClipCoords[7]);\n    context.clip();\n  }\n\n  /**\n   * Create executors and populate them using the provided instructions.\n   * @private\n   * @param {!Object<string, !Object<string, import(\"../canvas.js\").SerializableInstructions>>} allInstructions The serializable instructions\n   * @param {boolean} deferredRendering Enable deferred rendering.\n   */\n  createExecutors_(allInstructions, deferredRendering) {\n    for (const zIndex in allInstructions) {\n      let executors = this.executorsByZIndex_[zIndex];\n      if (executors === undefined) {\n        executors = {};\n        this.executorsByZIndex_[zIndex] = executors;\n      }\n      const instructionByZindex = allInstructions[zIndex];\n      for (const builderType in instructionByZindex) {\n        const instructions = instructionByZindex[builderType];\n        executors[builderType] = new Executor(\n          this.resolution_,\n          this.pixelRatio_,\n          this.overlaps_,\n          instructions,\n          deferredRendering,\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {Array<import(\"../canvas.js\").BuilderType>} executors Executors.\n   * @return {boolean} Has executors of the provided types.\n   */\n  hasExecutors(executors) {\n    for (const zIndex in this.executorsByZIndex_) {\n      const candidates = this.executorsByZIndex_[zIndex];\n      for (let i = 0, ii = executors.length; i < ii; ++i) {\n        if (executors[i] in candidates) {\n          return true;\n        }\n      }\n    }\n    return false;\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {number} rotation Rotation.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {function(import(\"../../Feature.js\").FeatureLike, import(\"../../geom/SimpleGeometry.js\").default, number): T} callback Feature callback.\n   * @param {Array<import(\"../../Feature.js\").FeatureLike>} declutteredFeatures Decluttered features.\n   * @return {T|undefined} Callback result.\n   * @template T\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    resolution,\n    rotation,\n    hitTolerance,\n    callback,\n    declutteredFeatures,\n  ) {\n    hitTolerance = Math.round(hitTolerance);\n    const contextSize = hitTolerance * 2 + 1;\n    const transform = composeTransform(\n      this.hitDetectionTransform_,\n      hitTolerance + 0.5,\n      hitTolerance + 0.5,\n      1 / resolution,\n      -1 / resolution,\n      -rotation,\n      -coordinate[0],\n      -coordinate[1],\n    );\n\n    const newContext = !this.hitDetectionContext_;\n    if (newContext) {\n      // Refrain from adding a 'willReadFrequently' hint in the options here.\n      // While it will remove the \"Canvas2D: Multiple readback operations using\n      // getImageData are faster with the willReadFrequently attribute set\n      // to true\" warnings in the console, it makes hitDetection extremely\n      // slow in Chrome when there are many features on the map\n      this.hitDetectionContext_ = createCanvasContext2D(\n        contextSize,\n        contextSize,\n      );\n    }\n    const context = this.hitDetectionContext_;\n\n    if (\n      context.canvas.width !== contextSize ||\n      context.canvas.height !== contextSize\n    ) {\n      context.canvas.width = contextSize;\n      context.canvas.height = contextSize;\n    } else if (!newContext) {\n      context.clearRect(0, 0, contextSize, contextSize);\n    }\n\n    /** @type {import(\"../../extent.js\").Extent|undefined} */\n    let hitExtent;\n    if (this.renderBuffer_ !== undefined) {\n      hitExtent = createEmpty();\n      extendCoordinate(hitExtent, coordinate);\n      buffer(\n        hitExtent,\n        resolution * (this.renderBuffer_ + hitTolerance),\n        hitExtent,\n      );\n    }\n\n    const indexes = getPixelIndexArray(hitTolerance);\n\n    /** @type {import(\"../canvas.js\").BuilderType} */\n    let builderType;\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {import('../../style/Style.js').DeclutterMode} declutterMode Declutter mode.\n     * @return {T|undefined} Callback result.\n     */\n    function featureCallback(feature, geometry, declutterMode) {\n      const imageData = context.getImageData(\n        0,\n        0,\n        contextSize,\n        contextSize,\n      ).data;\n      for (let i = 0, ii = indexes.length; i < ii; i++) {\n        if (imageData[indexes[i]] > 0) {\n          if (\n            !declutteredFeatures ||\n            declutterMode === 'none' ||\n            (builderType !== 'Image' && builderType !== 'Text') ||\n            declutteredFeatures.includes(feature)\n          ) {\n            const idx = (indexes[i] - 3) / 4;\n            const x = hitTolerance - (idx % contextSize);\n            const y = hitTolerance - ((idx / contextSize) | 0);\n            const result = callback(feature, geometry, x * x + y * y);\n            if (result) {\n              return result;\n            }\n          }\n          context.clearRect(0, 0, contextSize, contextSize);\n          break;\n        }\n      }\n      return undefined;\n    }\n\n    /** @type {Array<number>} */\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(ascending);\n\n    let i, j, executors, executor, result;\n    for (i = zs.length - 1; i >= 0; --i) {\n      const zIndexKey = zs[i].toString();\n      executors = this.executorsByZIndex_[zIndexKey];\n      for (j = ALL.length - 1; j >= 0; --j) {\n        builderType = ALL[j];\n        executor = executors[builderType];\n        if (executor !== undefined) {\n          result = executor.executeHitDetection(\n            context,\n            transform,\n            rotation,\n            featureCallback,\n            hitExtent,\n          );\n          if (result) {\n            return result;\n          }\n        }\n      }\n    }\n    return undefined;\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @return {Array<number>|null} Clip coordinates.\n   */\n  getClipCoords(transform) {\n    const maxExtent = this.maxExtent_;\n    if (!maxExtent) {\n      return null;\n    }\n    const minX = maxExtent[0];\n    const minY = maxExtent[1];\n    const maxX = maxExtent[2];\n    const maxY = maxExtent[3];\n    const flatClipCoords = [minX, minY, minX, maxY, maxX, maxY, maxX, minY];\n    transform2D(flatClipCoords, 0, 8, 2, transform, flatClipCoords);\n    return flatClipCoords;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.executorsByZIndex_);\n  }\n\n  /**\n   * @param {CanvasRenderingContext2D} targetContext Context.\n   * @param {import('../../size.js').Size} scaledCanvasSize Scale of the context.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {boolean} snapToPixel Snap point symbols and test to integer pixel.\n   * @param {Array<import(\"../canvas.js\").BuilderType>} [builderTypes] Ordered replay types to replay.\n   *     Default is {@link module:ol/render/replay~ALL}\n   * @param {import(\"rbush\").default<import('./Executor.js').DeclutterEntry>|null} [declutterTree] Declutter tree.\n   *     When set to null, no decluttering is done, even when the executor group has a `ZIndexContext`.\n   */\n  execute(\n    targetContext,\n    scaledCanvasSize,\n    transform,\n    viewRotation,\n    snapToPixel,\n    builderTypes,\n    declutterTree,\n  ) {\n    const zs = Object.keys(this.executorsByZIndex_).map(Number);\n    zs.sort(declutterTree ? descending : ascending);\n\n    builderTypes = builderTypes ? builderTypes : ALL;\n    const maxBuilderTypes = ALL.length;\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      const zIndexKey = zs[i].toString();\n      const replays = this.executorsByZIndex_[zIndexKey];\n      for (let j = 0, jj = builderTypes.length; j < jj; ++j) {\n        const builderType = builderTypes[j];\n        const replay = replays[builderType];\n        if (replay !== undefined) {\n          const zIndexContext =\n            declutterTree === null ? undefined : replay.getZIndexContext();\n          const context = zIndexContext\n            ? zIndexContext.getContext()\n            : targetContext;\n          const requireClip =\n            this.maxExtent_ &&\n            builderType !== 'Image' &&\n            builderType !== 'Text';\n          if (requireClip) {\n            context.save();\n            // setup clipping so that the parts of over-simplified geometries are not\n            // visible outside the current extent when panning\n            this.clip(context, transform);\n          }\n          if (\n            !zIndexContext ||\n            builderType === 'Text' ||\n            builderType === 'Image'\n          ) {\n            replay.execute(\n              context,\n              scaledCanvasSize,\n              transform,\n              viewRotation,\n              snapToPixel,\n              declutterTree,\n            );\n          } else {\n            zIndexContext.pushFunction((context) =>\n              replay.execute(\n                context,\n                scaledCanvasSize,\n                transform,\n                viewRotation,\n                snapToPixel,\n                declutterTree,\n              ),\n            );\n          }\n          if (requireClip) {\n            context.restore();\n          }\n          if (zIndexContext) {\n            zIndexContext.offset();\n            const index = zs[i] * maxBuilderTypes + ALL.indexOf(builderType);\n            if (!this.deferredZIndexContexts_[index]) {\n              this.deferredZIndexContexts_[index] = [];\n            }\n            this.deferredZIndexContexts_[index].push(zIndexContext);\n          }\n        }\n      }\n    }\n\n    this.renderedContext_ = targetContext;\n  }\n\n  getDeferredZIndexContexts() {\n    return this.deferredZIndexContexts_;\n  }\n\n  getRenderedContext() {\n    return this.renderedContext_;\n  }\n\n  renderDeferred() {\n    const deferredZIndexContexts = this.deferredZIndexContexts_;\n    const zs = Object.keys(deferredZIndexContexts).map(Number).sort(ascending);\n    for (let i = 0, ii = zs.length; i < ii; ++i) {\n      deferredZIndexContexts[zs[i]].forEach((zIndexContext) => {\n        zIndexContext.draw(this.renderedContext_); // FIXME Pass clip to replay for temporarily enabling clip\n        zIndexContext.clear();\n      });\n      deferredZIndexContexts[zs[i]].length = 0;\n    }\n  }\n}\n\n/**\n * This cache is used to store arrays of indexes for calculated pixel circles\n * to increase performance.\n * It is a static property to allow each Replaygroup to access it.\n * @type {Object<number, Array<number>>}\n */\nconst circlePixelIndexArrayCache = {};\n\n/**\n * This methods creates an array with indexes of all pixels within a circle,\n * ordered by how close they are to the center.\n * A cache is used to increase performance.\n * @param {number} radius Radius.\n * @return {Array<number>} An array with indexes within a circle.\n */\nexport function getPixelIndexArray(radius) {\n  if (circlePixelIndexArrayCache[radius] !== undefined) {\n    return circlePixelIndexArrayCache[radius];\n  }\n\n  const size = radius * 2 + 1;\n  const maxDistanceSq = radius * radius;\n  const distances = new Array(maxDistanceSq + 1);\n  for (let i = 0; i <= radius; ++i) {\n    for (let j = 0; j <= radius; ++j) {\n      const distanceSq = i * i + j * j;\n      if (distanceSq > maxDistanceSq) {\n        break;\n      }\n      let distance = distances[distanceSq];\n      if (!distance) {\n        distance = [];\n        distances[distanceSq] = distance;\n      }\n      distance.push(((radius + i) * size + (radius + j)) * 4 + 3);\n      if (i > 0) {\n        distance.push(((radius - i) * size + (radius + j)) * 4 + 3);\n      }\n      if (j > 0) {\n        distance.push(((radius + i) * size + (radius - j)) * 4 + 3);\n        if (i > 0) {\n          distance.push(((radius - i) * size + (radius - j)) * 4 + 3);\n        }\n      }\n    }\n  }\n\n  const pixelIndex = [];\n  for (let i = 0, ii = distances.length; i < ii; ++i) {\n    if (distances[i]) {\n      pixelIndex.push(...distances[i]);\n    }\n  }\n\n  circlePixelIndexArrayCache[radius] = pixelIndex;\n  return pixelIndex;\n}\n\nexport default ExecutorGroup;\n","/**\n * @module ol/render/canvas/Immediate\n */\n// FIXME test, especially polygons with holes and multipolygons\n// FIXME need to handle large thick features (where pixel size matters)\n// FIXME add offset and end to ol/geom/flat/transform~transform2D?\n\nimport {equals} from '../../array.js';\nimport {asColorLike} from '../../colorlike.js';\nimport {intersects} from '../../extent.js';\nimport {transformGeom2D} from '../../geom/SimpleGeometry.js';\nimport {transform2D} from '../../geom/flat/transform.js';\nimport {toFixed} from '../../math.js';\nimport {\n  compose as composeTransform,\n  create as createTransform,\n} from '../../transform.js';\nimport VectorContext from '../VectorContext.js';\nimport {\n  defaultFillStyle,\n  defaultFont,\n  defaultLineCap,\n  defaultLineDash,\n  defaultLineDashOffset,\n  defaultLineJoin,\n  defaultLineWidth,\n  defaultMiterLimit,\n  defaultStrokeStyle,\n  defaultTextAlign,\n  defaultTextBaseline,\n} from '../canvas.js';\n\n/**\n * @classdesc\n * A concrete subclass of {@link module:ol/render/VectorContext~VectorContext} that implements\n * direct rendering of features and geometries to an HTML5 Canvas context.\n * Instances of this class are created internally by the library and\n * provided to application code as vectorContext member of the\n * {@link module:ol/render/Event~RenderEvent} object associated with postcompose, precompose and\n * render events emitted by layers and maps.\n */\nclass CanvasImmediateRenderer extends VectorContext {\n  /**\n   * @param {CanvasRenderingContext2D} context Context.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../../extent.js\").Extent} extent Extent.\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   * @param {number} viewRotation View rotation.\n   * @param {number} [squaredTolerance] Optional squared tolerance for simplification.\n   * @param {import(\"../../proj.js\").TransformFunction} [userTransform] Transform from user to view projection.\n   */\n  constructor(\n    context,\n    pixelRatio,\n    extent,\n    transform,\n    viewRotation,\n    squaredTolerance,\n    userTransform,\n  ) {\n    super();\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.context_ = context;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.pixelRatio_ = pixelRatio;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.extent_ = extent;\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.transform_ = transform;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.transformRotation_ = transform\n      ? toFixed(Math.atan2(transform[1], transform[0]), 10)\n      : 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.viewRotation_ = viewRotation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.squaredTolerance_ = squaredTolerance;\n\n    /**\n     * @private\n     * @type {import(\"../../proj.js\").TransformFunction}\n     */\n    this.userTransform_ = userTransform;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.contextFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.contextStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.contextTextState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.fillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.strokeState_ = null;\n\n    /**\n     * @private\n     * @type {import('../../DataTile.js').ImageLike}\n     */\n    this.image_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageAnchorY_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageHeight_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOpacity_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageOriginY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.imageRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.imageScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.imageWidth_ = 0;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.text_ = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetX_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textOffsetY_ = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.textRotateWithView_ = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.textRotation_ = 0;\n\n    /**\n     * @private\n     * @type {import(\"../../size.js\").Size}\n     */\n    this.textScale_ = [0, 0];\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").FillState}\n     */\n    this.textFillState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").StrokeState}\n     */\n    this.textStrokeState_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../canvas.js\").TextState}\n     */\n    this.textState_ = null;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.pixelCoordinates_ = [];\n\n    /**\n     * @private\n     * @type {import(\"../../transform.js\").Transform}\n     */\n    this.tmpLocalTransform_ = createTransform();\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawImages_(flatCoordinates, offset, end, stride) {\n    if (!this.image_) {\n      return;\n    }\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    const localTransform = this.tmpLocalTransform_;\n    const alpha = context.globalAlpha;\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha * this.imageOpacity_;\n    }\n    let rotation = this.imageRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.imageRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (let i = 0, ii = pixelCoordinates.length; i < ii; i += 2) {\n      const x = pixelCoordinates[i] - this.imageAnchorX_;\n      const y = pixelCoordinates[i + 1] - this.imageAnchorY_;\n      if (\n        rotation !== 0 ||\n        this.imageScale_[0] != 1 ||\n        this.imageScale_[1] != 1\n      ) {\n        const centerX = x + this.imageAnchorX_;\n        const centerY = y + this.imageAnchorY_;\n        composeTransform(\n          localTransform,\n          centerX,\n          centerY,\n          1,\n          1,\n          rotation,\n          -centerX,\n          -centerY,\n        );\n        context.save();\n        context.transform.apply(context, localTransform);\n        context.translate(centerX, centerY);\n        context.scale(this.imageScale_[0], this.imageScale_[1]);\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          -this.imageAnchorX_,\n          -this.imageAnchorY_,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n        context.restore();\n      } else {\n        context.drawImage(\n          this.image_,\n          this.imageOriginX_,\n          this.imageOriginY_,\n          this.imageWidth_,\n          this.imageHeight_,\n          x,\n          y,\n          this.imageWidth_,\n          this.imageHeight_,\n        );\n      }\n    }\n    if (this.imageOpacity_ != 1) {\n      context.globalAlpha = alpha;\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @private\n   */\n  drawText_(flatCoordinates, offset, end, stride) {\n    if (!this.textState_ || this.text_ === '') {\n      return;\n    }\n    if (this.textFillState_) {\n      this.setContextFillState_(this.textFillState_);\n    }\n    if (this.textStrokeState_) {\n      this.setContextStrokeState_(this.textStrokeState_);\n    }\n    this.setContextTextState_(this.textState_);\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    const context = this.context_;\n    let rotation = this.textRotation_;\n    if (this.transformRotation_ === 0) {\n      rotation -= this.viewRotation_;\n    }\n    if (this.textRotateWithView_) {\n      rotation += this.viewRotation_;\n    }\n    for (; offset < end; offset += stride) {\n      const x = pixelCoordinates[offset] + this.textOffsetX_;\n      const y = pixelCoordinates[offset + 1] + this.textOffsetY_;\n      if (\n        rotation !== 0 ||\n        this.textScale_[0] != 1 ||\n        this.textScale_[1] != 1\n      ) {\n        context.save();\n        context.translate(x - this.textOffsetX_, y - this.textOffsetY_);\n        context.rotate(rotation);\n        context.translate(this.textOffsetX_, this.textOffsetY_);\n        context.scale(this.textScale_[0], this.textScale_[1]);\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, 0, 0);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, 0, 0);\n        }\n        context.restore();\n      } else {\n        if (this.textStrokeState_) {\n          context.strokeText(this.text_, x, y);\n        }\n        if (this.textFillState_) {\n          context.fillText(this.text_, x, y);\n        }\n      }\n    }\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {number} end End.\n   * @param {number} stride Stride.\n   * @param {boolean} close Close.\n   * @private\n   * @return {number} end End.\n   */\n  moveToLineTo_(flatCoordinates, offset, end, stride, close) {\n    const context = this.context_;\n    const pixelCoordinates = transform2D(\n      flatCoordinates,\n      offset,\n      end,\n      stride,\n      this.transform_,\n      this.pixelCoordinates_,\n    );\n    context.moveTo(pixelCoordinates[0], pixelCoordinates[1]);\n    let length = pixelCoordinates.length;\n    if (close) {\n      length -= 2;\n    }\n    for (let i = 2; i < length; i += 2) {\n      context.lineTo(pixelCoordinates[i], pixelCoordinates[i + 1]);\n    }\n    if (close) {\n      context.closePath();\n    }\n    return end;\n  }\n\n  /**\n   * @param {Array<number>} flatCoordinates Flat coordinates.\n   * @param {number} offset Offset.\n   * @param {Array<number>} ends Ends.\n   * @param {number} stride Stride.\n   * @private\n   * @return {number} End.\n   */\n  drawRings_(flatCoordinates, offset, ends, stride) {\n    for (let i = 0, ii = ends.length; i < ii; ++i) {\n      offset = this.moveToLineTo_(\n        flatCoordinates,\n        offset,\n        ends[i],\n        stride,\n        true,\n      );\n    }\n    return offset;\n  }\n\n  /**\n   * Render a circle geometry into the canvas.  Rendering is immediate and uses\n   * the current fill and stroke styles.\n   *\n   * @param {import(\"../../geom/Circle.js\").default} geometry Circle geometry.\n   * @api\n   * @override\n   */\n  drawCircle(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Circle.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.fillState_ || this.strokeState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const pixelCoordinates = transformGeom2D(\n        geometry,\n        this.transform_,\n        this.pixelCoordinates_,\n      );\n      const dx = pixelCoordinates[2] - pixelCoordinates[0];\n      const dy = pixelCoordinates[3] - pixelCoordinates[1];\n      const radius = Math.sqrt(dx * dx + dy * dy);\n      const context = this.context_;\n      context.beginPath();\n      context.arc(\n        pixelCoordinates[0],\n        pixelCoordinates[1],\n        radius,\n        0,\n        2 * Math.PI,\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      this.drawText_(geometry.getCenter(), 0, 2, 2);\n    }\n  }\n\n  /**\n   * Set the rendering style.  Note that since this is an immediate rendering API,\n   * any `zIndex` on the provided style will be ignored.\n   *\n   * @param {import(\"../../style/Style.js\").default} style The rendering style.\n   * @api\n   * @override\n   */\n  setStyle(style) {\n    this.setFillStrokeStyle(style.getFill(), style.getStroke());\n    this.setImageStyle(style.getImage());\n    this.setTextStyle(style.getText());\n  }\n\n  /**\n   * @param {import(\"../../transform.js\").Transform} transform Transform.\n   */\n  setTransform(transform) {\n    this.transform_ = transform;\n  }\n\n  /**\n   * Render a geometry into the canvas.  Call\n   * {@link module:ol/render/canvas/Immediate~CanvasImmediateRenderer#setStyle renderer.setStyle()} first to set the rendering style.\n   *\n   * @param {import(\"../../geom/Geometry.js\").default|import(\"../Feature.js\").default} geometry The geometry to render.\n   * @api\n   * @override\n   */\n  drawGeometry(geometry) {\n    const type = geometry.getType();\n    switch (type) {\n      case 'Point':\n        this.drawPoint(\n          /** @type {import(\"../../geom/Point.js\").default} */ (geometry),\n        );\n        break;\n      case 'LineString':\n        this.drawLineString(\n          /** @type {import(\"../../geom/LineString.js\").default} */ (geometry),\n        );\n        break;\n      case 'Polygon':\n        this.drawPolygon(\n          /** @type {import(\"../../geom/Polygon.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiPoint':\n        this.drawMultiPoint(\n          /** @type {import(\"../../geom/MultiPoint.js\").default} */ (geometry),\n        );\n        break;\n      case 'MultiLineString':\n        this.drawMultiLineString(\n          /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'MultiPolygon':\n        this.drawMultiPolygon(\n          /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'GeometryCollection':\n        this.drawGeometryCollection(\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ),\n        );\n        break;\n      case 'Circle':\n        this.drawCircle(\n          /** @type {import(\"../../geom/Circle.js\").default} */ (geometry),\n        );\n        break;\n      default:\n    }\n  }\n\n  /**\n   * Render a feature into the canvas.  Note that any `zIndex` on the provided\n   * style will be ignored - features are rendered immediately in the order that\n   * this method is called.  If you need `zIndex` support, you should be using an\n   * {@link module:ol/layer/Vector~VectorLayer} instead.\n   *\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {import(\"../../style/Style.js\").default} style Style.\n   * @api\n   * @override\n   */\n  drawFeature(feature, style) {\n    const geometry = style.getGeometryFunction()(feature);\n    if (!geometry) {\n      return;\n    }\n    this.setStyle(style);\n    this.drawGeometry(geometry);\n  }\n\n  /**\n   * Render a GeometryCollection to the canvas.  Rendering is immediate and\n   * uses the current styles appropriate for each geometry in the collection.\n   *\n   * @param {import(\"../../geom/GeometryCollection.js\").default} geometry Geometry collection.\n   * @override\n   */\n  drawGeometryCollection(geometry) {\n    const geometries = geometry.getGeometriesArray();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      this.drawGeometry(geometries[i]);\n    }\n  }\n\n  /**\n   * Render a Point geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Point.js\").default|import(\"../Feature.js\").default} geometry Point geometry.\n   * @override\n   */\n  drawPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Point.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a MultiPoint geometry  into the canvas.  Rendering is immediate and\n   * uses the current style.\n   *\n   * @param {import(\"../../geom/MultiPoint.js\").default|import(\"../Feature.js\").default} geometry MultiPoint geometry.\n   * @override\n   */\n  drawMultiPoint(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPoint.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    const flatCoordinates = geometry.getFlatCoordinates();\n    const stride = geometry.getStride();\n    if (this.image_) {\n      this.drawImages_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n    if (this.text_ !== '') {\n      this.drawText_(flatCoordinates, 0, flatCoordinates.length, stride);\n    }\n  }\n\n  /**\n   * Render a LineString into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/LineString.js\").default|import(\"../Feature.js\").default} geometry LineString geometry.\n   * @override\n   */\n  drawLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/LineString.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      context.beginPath();\n      this.moveToLineTo_(\n        flatCoordinates,\n        0,\n        flatCoordinates.length,\n        geometry.getStride(),\n        false,\n      );\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoint = geometry.getFlatMidpoint();\n      this.drawText_(flatMidpoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render a MultiLineString geometry into the canvas.  Rendering is immediate\n   * and uses the current style.\n   *\n   * @param {import(\"../../geom/MultiLineString.js\").default|import(\"../Feature.js\").default} geometry MultiLineString geometry.\n   * @override\n   */\n  drawMultiLineString(geometry) {\n    if (this.squaredTolerance_) {\n      geometry =\n        /** @type {import(\"../../geom/MultiLineString.js\").default} */ (\n          geometry.simplifyTransformed(\n            this.squaredTolerance_,\n            this.userTransform_,\n          )\n        );\n    }\n    const geometryExtent = geometry.getExtent();\n    if (!intersects(this.extent_, geometryExtent)) {\n      return;\n    }\n    if (this.strokeState_) {\n      this.setContextStrokeState_(this.strokeState_);\n      const context = this.context_;\n      const flatCoordinates = geometry.getFlatCoordinates();\n      let offset = 0;\n      const ends = /** @type {Array<number>} */ (geometry.getEnds());\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = ends.length; i < ii; ++i) {\n        offset = this.moveToLineTo_(\n          flatCoordinates,\n          offset,\n          ends[i],\n          stride,\n          false,\n        );\n      }\n      context.stroke();\n    }\n    if (this.text_ !== '') {\n      const flatMidpoints = geometry.getFlatMidpoints();\n      this.drawText_(flatMidpoints, 0, flatMidpoints.length, 2);\n    }\n  }\n\n  /**\n   * Render a Polygon geometry into the canvas.  Rendering is immediate and uses\n   * the current style.\n   *\n   * @param {import(\"../../geom/Polygon.js\").default|import(\"../Feature.js\").default} geometry Polygon geometry.\n   * @override\n   */\n  drawPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/Polygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      context.beginPath();\n      this.drawRings_(\n        geometry.getOrientedFlatCoordinates(),\n        0,\n        /** @type {Array<number>} */ (geometry.getEnds()),\n        geometry.getStride(),\n      );\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoint = geometry.getFlatInteriorPoint();\n      this.drawText_(flatInteriorPoint, 0, 2, 2);\n    }\n  }\n\n  /**\n   * Render MultiPolygon geometry into the canvas.  Rendering is immediate and\n   * uses the current style.\n   * @param {import(\"../../geom/MultiPolygon.js\").default} geometry MultiPolygon geometry.\n   * @override\n   */\n  drawMultiPolygon(geometry) {\n    if (this.squaredTolerance_) {\n      geometry = /** @type {import(\"../../geom/MultiPolygon.js\").default} */ (\n        geometry.simplifyTransformed(\n          this.squaredTolerance_,\n          this.userTransform_,\n        )\n      );\n    }\n    if (!intersects(this.extent_, geometry.getExtent())) {\n      return;\n    }\n    if (this.strokeState_ || this.fillState_) {\n      if (this.fillState_) {\n        this.setContextFillState_(this.fillState_);\n      }\n      if (this.strokeState_) {\n        this.setContextStrokeState_(this.strokeState_);\n      }\n      const context = this.context_;\n      const flatCoordinates = geometry.getOrientedFlatCoordinates();\n      let offset = 0;\n      const endss = geometry.getEndss();\n      const stride = geometry.getStride();\n      context.beginPath();\n      for (let i = 0, ii = endss.length; i < ii; ++i) {\n        const ends = endss[i];\n        offset = this.drawRings_(flatCoordinates, offset, ends, stride);\n      }\n      if (this.fillState_) {\n        context.fill();\n      }\n      if (this.strokeState_) {\n        context.stroke();\n      }\n    }\n    if (this.text_ !== '') {\n      const flatInteriorPoints = geometry.getFlatInteriorPoints();\n      this.drawText_(flatInteriorPoints, 0, flatInteriorPoints.length, 2);\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").FillState} fillState Fill state.\n   * @private\n   */\n  setContextFillState_(fillState) {\n    const context = this.context_;\n    const contextFillState = this.contextFillState_;\n    if (!contextFillState) {\n      context.fillStyle = fillState.fillStyle;\n      this.contextFillState_ = {\n        fillStyle: fillState.fillStyle,\n      };\n    } else {\n      if (contextFillState.fillStyle != fillState.fillStyle) {\n        contextFillState.fillStyle = fillState.fillStyle;\n        context.fillStyle = fillState.fillStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").StrokeState} strokeState Stroke state.\n   * @private\n   */\n  setContextStrokeState_(strokeState) {\n    const context = this.context_;\n    const contextStrokeState = this.contextStrokeState_;\n    if (!contextStrokeState) {\n      context.lineCap = strokeState.lineCap;\n      context.setLineDash(strokeState.lineDash);\n      context.lineDashOffset = strokeState.lineDashOffset;\n      context.lineJoin = strokeState.lineJoin;\n      context.lineWidth = strokeState.lineWidth;\n      context.miterLimit = strokeState.miterLimit;\n      context.strokeStyle = strokeState.strokeStyle;\n      this.contextStrokeState_ = {\n        lineCap: strokeState.lineCap,\n        lineDash: strokeState.lineDash,\n        lineDashOffset: strokeState.lineDashOffset,\n        lineJoin: strokeState.lineJoin,\n        lineWidth: strokeState.lineWidth,\n        miterLimit: strokeState.miterLimit,\n        strokeStyle: strokeState.strokeStyle,\n      };\n    } else {\n      if (contextStrokeState.lineCap != strokeState.lineCap) {\n        contextStrokeState.lineCap = strokeState.lineCap;\n        context.lineCap = strokeState.lineCap;\n      }\n      if (!equals(contextStrokeState.lineDash, strokeState.lineDash)) {\n        context.setLineDash(\n          (contextStrokeState.lineDash = strokeState.lineDash),\n        );\n      }\n      if (contextStrokeState.lineDashOffset != strokeState.lineDashOffset) {\n        contextStrokeState.lineDashOffset = strokeState.lineDashOffset;\n        context.lineDashOffset = strokeState.lineDashOffset;\n      }\n      if (contextStrokeState.lineJoin != strokeState.lineJoin) {\n        contextStrokeState.lineJoin = strokeState.lineJoin;\n        context.lineJoin = strokeState.lineJoin;\n      }\n      if (contextStrokeState.lineWidth != strokeState.lineWidth) {\n        contextStrokeState.lineWidth = strokeState.lineWidth;\n        context.lineWidth = strokeState.lineWidth;\n      }\n      if (contextStrokeState.miterLimit != strokeState.miterLimit) {\n        contextStrokeState.miterLimit = strokeState.miterLimit;\n        context.miterLimit = strokeState.miterLimit;\n      }\n      if (contextStrokeState.strokeStyle != strokeState.strokeStyle) {\n        contextStrokeState.strokeStyle = strokeState.strokeStyle;\n        context.strokeStyle = strokeState.strokeStyle;\n      }\n    }\n  }\n\n  /**\n   * @param {import(\"../canvas.js\").TextState} textState Text state.\n   * @private\n   */\n  setContextTextState_(textState) {\n    const context = this.context_;\n    const contextTextState = this.contextTextState_;\n    const textAlign = textState.textAlign\n      ? textState.textAlign\n      : defaultTextAlign;\n    if (!contextTextState) {\n      context.font = textState.font;\n      context.textAlign = textAlign;\n      context.textBaseline = textState.textBaseline;\n      this.contextTextState_ = {\n        font: textState.font,\n        textAlign: textAlign,\n        textBaseline: textState.textBaseline,\n      };\n    } else {\n      if (contextTextState.font != textState.font) {\n        contextTextState.font = textState.font;\n        context.font = textState.font;\n      }\n      if (contextTextState.textAlign != textAlign) {\n        contextTextState.textAlign = textAlign;\n        context.textAlign = textAlign;\n      }\n      if (contextTextState.textBaseline != textState.textBaseline) {\n        contextTextState.textBaseline = textState.textBaseline;\n        context.textBaseline = textState.textBaseline;\n      }\n    }\n  }\n\n  /**\n   * Set the fill and stroke style for subsequent draw operations.  To clear\n   * either fill or stroke styles, pass null for the appropriate parameter.\n   *\n   * @param {import(\"../../style/Fill.js\").default} fillStyle Fill style.\n   * @param {import(\"../../style/Stroke.js\").default} strokeStyle Stroke style.\n   * @override\n   */\n  setFillStrokeStyle(fillStyle, strokeStyle) {\n    if (!fillStyle) {\n      this.fillState_ = null;\n    } else {\n      const fillStyleColor = fillStyle.getColor();\n      this.fillState_ = {\n        fillStyle: asColorLike(\n          fillStyleColor ? fillStyleColor : defaultFillStyle,\n        ),\n      };\n    }\n    if (!strokeStyle) {\n      this.strokeState_ = null;\n    } else {\n      const strokeStyleColor = strokeStyle.getColor();\n      const strokeStyleLineCap = strokeStyle.getLineCap();\n      const strokeStyleLineDash = strokeStyle.getLineDash();\n      const strokeStyleLineDashOffset = strokeStyle.getLineDashOffset();\n      const strokeStyleLineJoin = strokeStyle.getLineJoin();\n      const strokeStyleWidth = strokeStyle.getWidth();\n      const strokeStyleMiterLimit = strokeStyle.getMiterLimit();\n      const lineDash = strokeStyleLineDash\n        ? strokeStyleLineDash\n        : defaultLineDash;\n      this.strokeState_ = {\n        lineCap:\n          strokeStyleLineCap !== undefined\n            ? strokeStyleLineCap\n            : defaultLineCap,\n        lineDash:\n          this.pixelRatio_ === 1\n            ? lineDash\n            : lineDash.map((n) => n * this.pixelRatio_),\n        lineDashOffset:\n          (strokeStyleLineDashOffset\n            ? strokeStyleLineDashOffset\n            : defaultLineDashOffset) * this.pixelRatio_,\n        lineJoin:\n          strokeStyleLineJoin !== undefined\n            ? strokeStyleLineJoin\n            : defaultLineJoin,\n        lineWidth:\n          (strokeStyleWidth !== undefined\n            ? strokeStyleWidth\n            : defaultLineWidth) * this.pixelRatio_,\n        miterLimit:\n          strokeStyleMiterLimit !== undefined\n            ? strokeStyleMiterLimit\n            : defaultMiterLimit,\n        strokeStyle: asColorLike(\n          strokeStyleColor ? strokeStyleColor : defaultStrokeStyle,\n        ),\n      };\n    }\n  }\n\n  /**\n   * Set the image style for subsequent draw operations.  Pass null to remove\n   * the image style.\n   *\n   * @param {import(\"../../style/Image.js\").default} imageStyle Image style.\n   * @override\n   */\n  setImageStyle(imageStyle) {\n    let imageSize;\n    if (!imageStyle || !(imageSize = imageStyle.getSize())) {\n      this.image_ = null;\n      return;\n    }\n    const imagePixelRatio = imageStyle.getPixelRatio(this.pixelRatio_);\n    const imageAnchor = imageStyle.getAnchor();\n    const imageOrigin = imageStyle.getOrigin();\n    this.image_ = imageStyle.getImage(this.pixelRatio_);\n    this.imageAnchorX_ = imageAnchor[0] * imagePixelRatio;\n    this.imageAnchorY_ = imageAnchor[1] * imagePixelRatio;\n    this.imageHeight_ = imageSize[1] * imagePixelRatio;\n    this.imageOpacity_ = imageStyle.getOpacity();\n    this.imageOriginX_ = imageOrigin[0];\n    this.imageOriginY_ = imageOrigin[1];\n    this.imageRotateWithView_ = imageStyle.getRotateWithView();\n    this.imageRotation_ = imageStyle.getRotation();\n    const imageScale = imageStyle.getScaleArray();\n    this.imageScale_ = [\n      (imageScale[0] * this.pixelRatio_) / imagePixelRatio,\n      (imageScale[1] * this.pixelRatio_) / imagePixelRatio,\n    ];\n    this.imageWidth_ = imageSize[0] * imagePixelRatio;\n  }\n\n  /**\n   * Set the text style for subsequent draw operations.  Pass null to\n   * remove the text style.\n   *\n   * @param {import(\"../../style/Text.js\").default} textStyle Text style.\n   * @override\n   */\n  setTextStyle(textStyle) {\n    if (!textStyle) {\n      this.text_ = '';\n    } else {\n      const textFillStyle = textStyle.getFill();\n      if (!textFillStyle) {\n        this.textFillState_ = null;\n      } else {\n        const textFillStyleColor = textFillStyle.getColor();\n        this.textFillState_ = {\n          fillStyle: asColorLike(\n            textFillStyleColor ? textFillStyleColor : defaultFillStyle,\n          ),\n        };\n      }\n      const textStrokeStyle = textStyle.getStroke();\n      if (!textStrokeStyle) {\n        this.textStrokeState_ = null;\n      } else {\n        const textStrokeStyleColor = textStrokeStyle.getColor();\n        const textStrokeStyleLineCap = textStrokeStyle.getLineCap();\n        const textStrokeStyleLineDash = textStrokeStyle.getLineDash();\n        const textStrokeStyleLineDashOffset =\n          textStrokeStyle.getLineDashOffset();\n        const textStrokeStyleLineJoin = textStrokeStyle.getLineJoin();\n        const textStrokeStyleWidth = textStrokeStyle.getWidth();\n        const textStrokeStyleMiterLimit = textStrokeStyle.getMiterLimit();\n        this.textStrokeState_ = {\n          lineCap:\n            textStrokeStyleLineCap !== undefined\n              ? textStrokeStyleLineCap\n              : defaultLineCap,\n          lineDash: textStrokeStyleLineDash\n            ? textStrokeStyleLineDash\n            : defaultLineDash,\n          lineDashOffset: textStrokeStyleLineDashOffset\n            ? textStrokeStyleLineDashOffset\n            : defaultLineDashOffset,\n          lineJoin:\n            textStrokeStyleLineJoin !== undefined\n              ? textStrokeStyleLineJoin\n              : defaultLineJoin,\n          lineWidth:\n            textStrokeStyleWidth !== undefined\n              ? textStrokeStyleWidth\n              : defaultLineWidth,\n          miterLimit:\n            textStrokeStyleMiterLimit !== undefined\n              ? textStrokeStyleMiterLimit\n              : defaultMiterLimit,\n          strokeStyle: asColorLike(\n            textStrokeStyleColor ? textStrokeStyleColor : defaultStrokeStyle,\n          ),\n        };\n      }\n      const textFont = textStyle.getFont();\n      const textOffsetX = textStyle.getOffsetX();\n      const textOffsetY = textStyle.getOffsetY();\n      const textRotateWithView = textStyle.getRotateWithView();\n      const textRotation = textStyle.getRotation();\n      const textScale = textStyle.getScaleArray();\n      const textText = textStyle.getText();\n      const textTextAlign = textStyle.getTextAlign();\n      const textTextBaseline = textStyle.getTextBaseline();\n      this.textState_ = {\n        font: textFont !== undefined ? textFont : defaultFont,\n        textAlign:\n          textTextAlign !== undefined ? textTextAlign : defaultTextAlign,\n        textBaseline:\n          textTextBaseline !== undefined\n            ? textTextBaseline\n            : defaultTextBaseline,\n      };\n      this.text_ =\n        textText !== undefined\n          ? Array.isArray(textText)\n            ? textText.reduce((acc, t, i) => (acc += i % 2 ? ' ' : t), '')\n            : textText\n          : '';\n      this.textOffsetX_ =\n        textOffsetX !== undefined ? this.pixelRatio_ * textOffsetX : 0;\n      this.textOffsetY_ =\n        textOffsetY !== undefined ? this.pixelRatio_ * textOffsetY : 0;\n      this.textRotateWithView_ =\n        textRotateWithView !== undefined ? textRotateWithView : false;\n      this.textRotation_ = textRotation !== undefined ? textRotation : 0;\n      this.textScale_ = [\n        this.pixelRatio_ * textScale[0],\n        this.pixelRatio_ * textScale[1],\n      ];\n    }\n  }\n}\n\nexport default CanvasImmediateRenderer;\n","/**\n * @module ol/render/canvas/hitdetect\n */\n\nimport {ascending} from '../../array.js';\nimport {createCanvasContext2D} from '../../dom.js';\nimport {intersects} from '../../extent.js';\nimport {clamp} from '../../math.js';\nimport {\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n} from '../../proj.js';\nimport {Icon} from '../../style.js';\nimport CanvasImmediateRenderer from './Immediate.js';\n\nexport const HIT_DETECT_RESOLUTION = 0.5;\n\n/**\n * @param {import(\"../../size.js\").Size} size Canvas size in css pixels.\n * @param {Array<import(\"../../transform.js\").Transform>} transforms Transforms\n * for rendering features to all worlds of the viewport, from coordinates to css\n * pixels.\n * @param {Array<import(\"../../Feature.js\").FeatureLike>} features\n * Features to consider for hit detection.\n * @param {import(\"../../style/Style.js\").StyleFunction|undefined} styleFunction\n * Layer style function.\n * @param {import(\"../../extent.js\").Extent} extent Extent in render projection.\n * @param {number} resolution Resolution.\n * @param {number} rotation Rotation.\n * @param {number} [squaredTolerance] Squared tolerance.\n * @param {import(\"../../proj/Projection.js\").default} [projection] Render projection.\n * @return {ImageData} Hit detection image data.\n */\nexport function createHitDetectionImageData(\n  size,\n  transforms,\n  features,\n  styleFunction,\n  extent,\n  resolution,\n  rotation,\n  squaredTolerance,\n  projection,\n) {\n  const userExtent = projection ? toUserExtent(extent, projection) : extent;\n  const width = size[0] * HIT_DETECT_RESOLUTION;\n  const height = size[1] * HIT_DETECT_RESOLUTION;\n  const context = createCanvasContext2D(width, height);\n  context.imageSmoothingEnabled = false;\n  const canvas = context.canvas;\n  const renderer = new CanvasImmediateRenderer(\n    context,\n    HIT_DETECT_RESOLUTION,\n    extent,\n    null,\n    rotation,\n    squaredTolerance,\n    projection\n      ? getTransformFromProjections(getUserProjection(), projection)\n      : null,\n  );\n  const featureCount = features.length;\n  // Stretch hit detection index to use the whole available color range\n  const indexFactor = Math.floor((256 * 256 * 256 - 1) / featureCount);\n  const featuresByZIndex = {};\n  for (let i = 1; i <= featureCount; ++i) {\n    const feature = features[i - 1];\n    const featureStyleFunction = feature.getStyleFunction() || styleFunction;\n    if (!featureStyleFunction) {\n      continue;\n    }\n    let styles = featureStyleFunction(feature, resolution);\n    if (!styles) {\n      continue;\n    }\n    if (!Array.isArray(styles)) {\n      styles = [styles];\n    }\n    const index = i * indexFactor;\n    const color = index.toString(16).padStart(7, '#00000');\n    for (let j = 0, jj = styles.length; j < jj; ++j) {\n      const originalStyle = styles[j];\n      const geometry = originalStyle.getGeometryFunction()(feature);\n      if (!geometry || !intersects(userExtent, geometry.getExtent())) {\n        continue;\n      }\n      const style = originalStyle.clone();\n      const fill = style.getFill();\n      if (fill) {\n        fill.setColor(color);\n      }\n      const stroke = style.getStroke();\n      if (stroke) {\n        stroke.setColor(color);\n        stroke.setLineDash(null);\n      }\n      style.setText(undefined);\n      const image = originalStyle.getImage();\n      if (image) {\n        const imgSize = image.getImageSize();\n        if (!imgSize) {\n          continue;\n        }\n\n        const imgContext = createCanvasContext2D(\n          imgSize[0],\n          imgSize[1],\n          undefined,\n          {alpha: false},\n        );\n        const img = imgContext.canvas;\n        imgContext.fillStyle = color;\n        imgContext.fillRect(0, 0, img.width, img.height);\n        style.setImage(\n          new Icon({\n            img: img,\n            anchor: image.getAnchor(),\n            anchorXUnits: 'pixels',\n            anchorYUnits: 'pixels',\n            offset: image.getOrigin(),\n            opacity: 1,\n            size: image.getSize(),\n            scale: image.getScale(),\n            rotation: image.getRotation(),\n            rotateWithView: image.getRotateWithView(),\n          }),\n        );\n      }\n      const zIndex = style.getZIndex() || 0;\n      let byGeometryType = featuresByZIndex[zIndex];\n      if (!byGeometryType) {\n        byGeometryType = {};\n        featuresByZIndex[zIndex] = byGeometryType;\n        byGeometryType['Polygon'] = [];\n        byGeometryType['Circle'] = [];\n        byGeometryType['LineString'] = [];\n        byGeometryType['Point'] = [];\n      }\n      const type = geometry.getType();\n      if (type === 'GeometryCollection') {\n        const geometries =\n          /** @type {import(\"../../geom/GeometryCollection.js\").default} */ (\n            geometry\n          ).getGeometriesArrayRecursive();\n        for (let i = 0, ii = geometries.length; i < ii; ++i) {\n          const geometry = geometries[i];\n          byGeometryType[geometry.getType().replace('Multi', '')].push(\n            geometry,\n            style,\n          );\n        }\n      } else {\n        byGeometryType[type.replace('Multi', '')].push(geometry, style);\n      }\n    }\n  }\n\n  const zIndexKeys = Object.keys(featuresByZIndex).map(Number).sort(ascending);\n  for (let i = 0, ii = zIndexKeys.length; i < ii; ++i) {\n    const byGeometryType = featuresByZIndex[zIndexKeys[i]];\n    for (const type in byGeometryType) {\n      const geomAndStyle = byGeometryType[type];\n      for (let j = 0, jj = geomAndStyle.length; j < jj; j += 2) {\n        renderer.setStyle(geomAndStyle[j + 1]);\n        for (let k = 0, kk = transforms.length; k < kk; ++k) {\n          renderer.setTransform(transforms[k]);\n          renderer.drawGeometry(geomAndStyle[j]);\n        }\n      }\n    }\n  }\n  return context.getImageData(0, 0, canvas.width, canvas.height);\n}\n\n/**\n * @param {import(\"../../pixel\").Pixel} pixel Pixel coordinate on the hit\n * detection canvas in css pixels.\n * @param {Array<F>} features Features. Has to\n * match the `features` array that was passed to `createHitDetectionImageData()`.\n * @param {ImageData} imageData Hit detection image data generated by\n * `createHitDetectionImageData()`.\n * @return {Array<F>} Features.\n * @template {import(\"../../Feature.js\").FeatureLike} F\n */\nexport function hitDetect(pixel, features, imageData) {\n  /** @type {Array<F>} */\n  const resultFeatures = [];\n  if (imageData) {\n    const x = Math.floor(Math.round(pixel[0]) * HIT_DETECT_RESOLUTION);\n    const y = Math.floor(Math.round(pixel[1]) * HIT_DETECT_RESOLUTION);\n    // The pixel coordinate is clamped down to the hit-detect canvas' size to account\n    // for browsers returning coordinates slightly larger than the actual canvas size\n    // due to a non-integer pixel ratio.\n    const index =\n      (clamp(x, 0, imageData.width - 1) +\n        clamp(y, 0, imageData.height - 1) * imageData.width) *\n      4;\n    const r = imageData.data[index];\n    const g = imageData.data[index + 1];\n    const b = imageData.data[index + 2];\n    const i = b + 256 * (g + 256 * r);\n    const indexFactor = Math.floor((256 * 256 * 256 - 1) / features.length);\n    if (i && i % indexFactor === 0) {\n      resultFeatures.push(features[i / indexFactor - 1]);\n    }\n  }\n  return resultFeatures;\n}\n","/**\n * @module ol/renderer/vector\n */\nimport ImageState from '../ImageState.js';\nimport {getUid} from '../util.js';\n\n/**\n * Feature callback. The callback will be called with three arguments. The first\n * argument is one {@link module:ol/Feature~Feature feature} or {@link module:ol/render/Feature~RenderFeature render feature}\n * at the pixel, the second is the {@link module:ol/layer/Layer~Layer layer} of the feature and will be null for\n * unmanaged layers. The third is the {@link module:ol/geom/SimpleGeometry~SimpleGeometry} of the feature. For features\n * with a GeometryCollection geometry, it will be the first detected geometry from the collection.\n * @template T\n * @typedef {function(import(\"../Feature.js\").FeatureLike, import(\"../layer/Layer.js\").default<import(\"../source/Source\").default>, import(\"../geom/SimpleGeometry.js\").default): T} FeatureCallback\n */\n\n/**\n * Tolerance for geometry simplification in device pixels.\n * @type {number}\n */\nconst SIMPLIFY_TOLERANCE = 0.5;\n\n/**\n * @const\n * @type {Object<import(\"../geom/Geometry.js\").Type,\n *                function(import(\"../render/canvas/BuilderGroup.js\").default, import(\"../geom/Geometry.js\").default,\n *                         import(\"../style/Style.js\").default, Object): void>}\n */\nconst GEOMETRY_RENDERERS = {\n  'Point': renderPointGeometry,\n  'LineString': renderLineStringGeometry,\n  'Polygon': renderPolygonGeometry,\n  'MultiPoint': renderMultiPointGeometry,\n  'MultiLineString': renderMultiLineStringGeometry,\n  'MultiPolygon': renderMultiPolygonGeometry,\n  'GeometryCollection': renderGeometryCollectionGeometry,\n  'Circle': renderCircleGeometry,\n};\n\n/**\n * @param {import(\"../Feature.js\").FeatureLike} feature1 Feature 1.\n * @param {import(\"../Feature.js\").FeatureLike} feature2 Feature 2.\n * @return {number} Order.\n */\nexport function defaultOrder(feature1, feature2) {\n  return parseInt(getUid(feature1), 10) - parseInt(getUid(feature2), 10);\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Squared pixel tolerance.\n */\nexport function getSquaredTolerance(resolution, pixelRatio) {\n  const tolerance = getTolerance(resolution, pixelRatio);\n  return tolerance * tolerance;\n}\n\n/**\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @return {number} Pixel tolerance.\n */\nexport function getTolerance(resolution, pixelRatio) {\n  return (SIMPLIFY_TOLERANCE * resolution) / pixelRatio;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n * @param {import(\"../geom/Circle.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderCircleGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const circleReplay = builderGroup.getBuilder(style.getZIndex(), 'Circle');\n    circleReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    circleReplay.drawCircle(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {function(import(\"../events/Event.js\").default): void} listener Listener function.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n * @return {boolean} `true` if style is loading.\n */\nexport function renderFeature(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  listener,\n  transform,\n  declutter,\n  index,\n) {\n  const loadingPromises = [];\n  const imageStyle = style.getImage();\n  if (imageStyle) {\n    let loading = true;\n    const imageState = imageStyle.getImageState();\n    if (imageState == ImageState.LOADED || imageState == ImageState.ERROR) {\n      loading = false;\n    } else {\n      if (imageState == ImageState.IDLE) {\n        imageStyle.load();\n      }\n    }\n    if (loading) {\n      loadingPromises.push(imageStyle.ready());\n    }\n  }\n  const fillStyle = style.getFill();\n  if (fillStyle && fillStyle.loading()) {\n    loadingPromises.push(fillStyle.ready());\n  }\n  const loading = loadingPromises.length > 0;\n  if (loading) {\n    Promise.all(loadingPromises).then(() => listener(null));\n  }\n  renderFeatureInternal(\n    replayGroup,\n    feature,\n    style,\n    squaredTolerance,\n    transform,\n    declutter,\n    index,\n  );\n\n  return loading;\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {number} squaredTolerance Squared tolerance.\n * @param {import(\"../proj.js\").TransformFunction} [transform] Optional transform function.\n * @param {boolean} [declutter] Enable decluttering.\n * @param {number} [index] Render order index..\n */\nfunction renderFeatureInternal(\n  replayGroup,\n  feature,\n  style,\n  squaredTolerance,\n  transform,\n  declutter,\n  index,\n) {\n  const geometry = style.getGeometryFunction()(feature);\n  if (!geometry) {\n    return;\n  }\n  const simplifiedGeometry = geometry.simplifyTransformed(\n    squaredTolerance,\n    transform,\n  );\n  const renderer = style.getRenderer();\n  if (renderer) {\n    renderGeometry(replayGroup, simplifiedGeometry, style, feature, index);\n  } else {\n    const geometryRenderer = GEOMETRY_RENDERERS[simplifiedGeometry.getType()];\n    geometryRenderer(\n      replayGroup,\n      simplifiedGeometry,\n      style,\n      feature,\n      index,\n      declutter,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/Geometry.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometry(replayGroup, geometry, style, feature, index) {\n  if (geometry.getType() == 'GeometryCollection') {\n    const geometries =\n      /** @type {import(\"../geom/GeometryCollection.js\").default} */ (\n        geometry\n      ).getGeometries();\n    for (let i = 0, ii = geometries.length; i < ii; ++i) {\n      renderGeometry(replayGroup, geometries[i], style, feature, index);\n    }\n    return;\n  }\n  const replay = replayGroup.getBuilder(style.getZIndex(), 'Default');\n  replay.drawCustom(\n    /** @type {import(\"../geom/SimpleGeometry.js\").default} */ (geometry),\n    feature,\n    style.getRenderer(),\n    style.getHitDetectionRenderer(),\n    index,\n  );\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} replayGroup Replay group.\n * @param {import(\"../geom/GeometryCollection.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} [declutterBuilderGroup] Builder for decluttering.\n * @param {number} [index] Render order index.\n */\nfunction renderGeometryCollectionGeometry(\n  replayGroup,\n  geometry,\n  style,\n  feature,\n  declutterBuilderGroup,\n  index,\n) {\n  const geometries = geometry.getGeometriesArray();\n  let i, ii;\n  for (i = 0, ii = geometries.length; i < ii; ++i) {\n    const geometryRenderer = GEOMETRY_RENDERERS[geometries[i].getType()];\n    geometryRenderer(\n      replayGroup,\n      geometries[i],\n      style,\n      feature,\n      declutterBuilderGroup,\n      index,\n    );\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/LineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiLineString.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiLineStringGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const strokeStyle = style.getStroke();\n  if (strokeStyle) {\n    const lineStringReplay = builderGroup.getBuilder(\n      style.getZIndex(),\n      'LineString',\n    );\n    lineStringReplay.setFillStrokeStyle(null, strokeStyle);\n    lineStringReplay.drawMultiLineString(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPolygon.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").default} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderMultiPolygonGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (strokeStyle || fillStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawMultiPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Point.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && imageStyle && hasText ? {} : undefined;\n  if (imageStyle) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/MultiPoint.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n * @param {boolean} [declutter] Enable decluttering.\n */\nfunction renderMultiPointGeometry(\n  builderGroup,\n  geometry,\n  style,\n  feature,\n  index,\n  declutter,\n) {\n  const imageStyle = style.getImage();\n  const hasImage = imageStyle && imageStyle.getOpacity() !== 0;\n  const textStyle = style.getText();\n  const hasText = textStyle && textStyle.getText();\n  /** @type {import(\"../render/canvas.js\").DeclutterImageWithText} */\n  const declutterImageWithText =\n    declutter && hasImage && hasText ? {} : undefined;\n  if (hasImage) {\n    if (imageStyle.getImageState() != ImageState.LOADED) {\n      return;\n    }\n    const imageReplay = builderGroup.getBuilder(style.getZIndex(), 'Image');\n    imageReplay.setImageStyle(imageStyle, declutterImageWithText);\n    imageReplay.drawMultiPoint(geometry, feature, index);\n  }\n  if (hasText) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle, declutterImageWithText);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n\n/**\n * @param {import(\"../render/canvas/BuilderGroup.js\").default} builderGroup Replay group.\n * @param {import(\"../geom/Polygon.js\").default|import(\"../render/Feature.js\").default} geometry Geometry.\n * @param {import(\"../style/Style.js\").default} style Style.\n * @param {import(\"../Feature.js\").FeatureLike} feature Feature.\n * @param {number} [index] Render order index.\n */\nfunction renderPolygonGeometry(builderGroup, geometry, style, feature, index) {\n  const fillStyle = style.getFill();\n  const strokeStyle = style.getStroke();\n  if (fillStyle || strokeStyle) {\n    const polygonReplay = builderGroup.getBuilder(style.getZIndex(), 'Polygon');\n    polygonReplay.setFillStrokeStyle(fillStyle, strokeStyle);\n    polygonReplay.drawPolygon(geometry, feature, index);\n  }\n  const textStyle = style.getText();\n  if (textStyle && textStyle.getText()) {\n    const textReplay = builderGroup.getBuilder(style.getZIndex(), 'Text');\n    textReplay.setTextStyle(textStyle);\n    textReplay.drawText(geometry, feature, index);\n  }\n}\n","/**\n * @module ol/renderer/canvas/VectorLayer\n */\nimport ViewHint from '../../ViewHint.js';\nimport {equals} from '../../array.js';\nimport {wrapX as wrapCoordinateX} from '../../coordinate.js';\nimport {createCanvasContext2D, releaseCanvas} from '../../dom.js';\nimport {\n  buffer,\n  containsExtent,\n  createEmpty,\n  getHeight,\n  getWidth,\n  intersects as intersectsExtent,\n  wrapX as wrapExtentX,\n} from '../../extent.js';\nimport {\n  fromUserExtent,\n  getTransformFromProjections,\n  getUserProjection,\n  toUserExtent,\n  toUserResolution,\n} from '../../proj.js';\nimport RenderEventType from '../../render/EventType.js';\nimport CanvasBuilderGroup from '../../render/canvas/BuilderGroup.js';\nimport ExecutorGroup, {\n  ALL,\n  DECLUTTER,\n  NON_DECLUTTER,\n} from '../../render/canvas/ExecutorGroup.js';\nimport {\n  HIT_DETECT_RESOLUTION,\n  createHitDetectionImageData,\n  hitDetect,\n} from '../../render/canvas/hitdetect.js';\nimport {getUid} from '../../util.js';\nimport {\n  defaultOrder as defaultRenderOrder,\n  getSquaredTolerance as getSquaredRenderTolerance,\n  getTolerance as getRenderTolerance,\n  renderFeature,\n} from '../vector.js';\nimport CanvasLayerRenderer, {canvasPool} from './Layer.js';\n\n/**\n * @classdesc\n * Canvas renderer for vector layers.\n * @api\n */\nclass CanvasVectorLayerRenderer extends CanvasLayerRenderer {\n  /**\n   * @param {import(\"../../layer/BaseVector.js\").default} vectorLayer Vector layer.\n   */\n  constructor(vectorLayer) {\n    super(vectorLayer);\n\n    /** @private */\n    this.boundHandleStyleImageChange_ = this.handleStyleImageChange_.bind(this);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.animatingOrInteracting_;\n\n    /**\n     * @private\n     * @type {ImageData|null}\n     */\n    this.hitDetectionImageData_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.clipped_ = false;\n\n    /**\n     * @private\n     * @type {Array<import(\"../../Feature.js\").default>}\n     */\n    this.renderedFeatures_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = -1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedResolution_ = NaN;\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.renderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {import(\"../../extent.js\").Extent}\n     */\n    this.wrappedRenderedExtent_ = createEmpty();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRotation_;\n\n    /**\n     * @private\n     * @type {import(\"../../coordinate\").Coordinate}\n     */\n    this.renderedCenter_ = null;\n\n    /**\n     * @private\n     * @type {import(\"../../proj/Projection\").default}\n     */\n    this.renderedProjection_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedPixelRatio_ = 1;\n\n    /**\n     * @private\n     * @type {import(\"../../render.js\").OrderFunction|null}\n     */\n    this.renderedRenderOrder_ = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderedFrameDeclutter_;\n\n    /**\n     * @private\n     * @type {import(\"../../render/canvas/ExecutorGroup\").default}\n     */\n    this.replayGroup_ = null;\n\n    /**\n     * A new replay group had to be created by `prepareFrame()`\n     * @type {boolean}\n     */\n    this.replayGroupChanged = true;\n\n    /**\n     * Clipping to be performed by `renderFrame()`\n     * @type {boolean}\n     */\n    this.clipping = true;\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D}\n     */\n    this.targetContext_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.opacity_ = 1;\n  }\n\n  /**\n   * @param {ExecutorGroup} executorGroup Executor group.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {boolean} [declutterable] `true` to only render declutterable items,\n   *     `false` to only render non-declutterable items, `undefined` to render all.\n   */\n  renderWorlds(executorGroup, frameState, declutterable) {\n    const extent = frameState.extent;\n    const viewState = frameState.viewState;\n    const center = viewState.center;\n    const resolution = viewState.resolution;\n    const projection = viewState.projection;\n    const rotation = viewState.rotation;\n    const projectionExtent = projection.getExtent();\n    const vectorSource = this.getLayer().getSource();\n    const declutter = this.getLayer().getDeclutter();\n    const pixelRatio = frameState.pixelRatio;\n    const viewHints = frameState.viewHints;\n    const snapToPixel = !(\n      viewHints[ViewHint.ANIMATING] || viewHints[ViewHint.INTERACTING]\n    );\n    const context = this.context;\n    const width = Math.round((getWidth(extent) / resolution) * pixelRatio);\n    const height = Math.round((getHeight(extent) / resolution) * pixelRatio);\n\n    const multiWorld = vectorSource.getWrapX() && projection.canWrapX();\n    const worldWidth = multiWorld ? getWidth(projectionExtent) : null;\n    const endWorld = multiWorld\n      ? Math.ceil((extent[2] - projectionExtent[2]) / worldWidth) + 1\n      : 1;\n    let world = multiWorld\n      ? Math.floor((extent[0] - projectionExtent[0]) / worldWidth)\n      : 0;\n    do {\n      let transform = this.getRenderTransform(\n        center,\n        resolution,\n        0,\n        pixelRatio,\n        width,\n        height,\n        world * worldWidth,\n      );\n      if (frameState.declutter) {\n        transform = transform.slice(0);\n      }\n      executorGroup.execute(\n        context,\n        [context.canvas.width, context.canvas.height],\n        transform,\n        rotation,\n        snapToPixel,\n        declutterable === undefined\n          ? ALL\n          : declutterable\n            ? DECLUTTER\n            : NON_DECLUTTER,\n        declutterable\n          ? declutter && frameState.declutter[declutter]\n          : undefined,\n      );\n    } while (++world < endWorld);\n  }\n\n  /**\n   * @private\n   */\n  setDrawContext_() {\n    if (this.opacity_ !== 1) {\n      this.targetContext_ = this.context;\n      this.context = createCanvasContext2D(\n        this.context.canvas.width,\n        this.context.canvas.height,\n        canvasPool,\n      );\n    }\n  }\n\n  /**\n   * @private\n   */\n  resetDrawContext_() {\n    if (this.opacity_ !== 1 && this.targetContext_) {\n      const alpha = this.targetContext_.globalAlpha;\n      this.targetContext_.globalAlpha = this.opacity_;\n      this.targetContext_.drawImage(this.context.canvas, 0, 0);\n      this.targetContext_.globalAlpha = alpha;\n      releaseCanvas(this.context);\n      canvasPool.push(this.context.canvas);\n      this.context = this.targetContext_;\n      this.targetContext_ = null;\n    }\n  }\n\n  /**\n   * Render declutter items for this layer\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   */\n  renderDeclutter(frameState) {\n    if (!this.replayGroup_ || !this.getLayer().getDeclutter()) {\n      return;\n    }\n    this.renderWorlds(this.replayGroup_, frameState, true);\n  }\n\n  /**\n   * Render deferred instructions.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @override\n   */\n  renderDeferredInternal(frameState) {\n    if (!this.replayGroup_) {\n      return;\n    }\n    this.replayGroup_.renderDeferred();\n    if (this.clipped_) {\n      this.context.restore();\n    }\n    this.resetDrawContext_();\n  }\n\n  /**\n   * Render the layer.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {HTMLElement|null} target Target that may be used to render content to.\n   * @return {HTMLElement} The rendered element.\n   * @override\n   */\n  renderFrame(frameState, target) {\n    const layerState = frameState.layerStatesArray[frameState.layerIndex];\n    this.opacity_ = layerState.opacity;\n    const viewState = frameState.viewState;\n\n    this.prepareContainer(frameState, target);\n    const context = this.context;\n\n    const replayGroup = this.replayGroup_;\n    let render = replayGroup && !replayGroup.isEmpty();\n    if (!render) {\n      const hasRenderListeners =\n        this.getLayer().hasListener(RenderEventType.PRERENDER) ||\n        this.getLayer().hasListener(RenderEventType.POSTRENDER);\n      if (!hasRenderListeners) {\n        return this.container;\n      }\n    }\n\n    this.setDrawContext_();\n\n    this.preRender(context, frameState);\n\n    const projection = viewState.projection;\n\n    // clipped rendering if layer extent is set\n    this.clipped_ = false;\n    if (render && layerState.extent && this.clipping) {\n      const layerExtent = fromUserExtent(layerState.extent, projection);\n      render = intersectsExtent(layerExtent, frameState.extent);\n      this.clipped_ = render && !containsExtent(layerExtent, frameState.extent);\n      if (this.clipped_) {\n        this.clipUnrotated(context, frameState, layerExtent);\n      }\n    }\n\n    if (render) {\n      this.renderWorlds(\n        replayGroup,\n        frameState,\n        this.getLayer().getDeclutter() ? false : undefined,\n      );\n    }\n\n    if (!frameState.declutter && this.clipped_) {\n      context.restore();\n    }\n\n    this.postRender(context, frameState);\n\n    if (this.renderedRotation_ !== viewState.rotation) {\n      this.renderedRotation_ = viewState.rotation;\n      this.hitDetectionImageData_ = null;\n    }\n    if (!frameState.declutter) {\n      this.resetDrawContext_();\n    }\n    return this.container;\n  }\n\n  /**\n   * Asynchronous layer level hit detection.\n   * @param {import(\"../../pixel.js\").Pixel} pixel Pixel.\n   * @return {Promise<Array<import(\"../../Feature\").default>>} Promise\n   * that resolves with an array of features.\n   * @override\n   */\n  getFeatures(pixel) {\n    return new Promise((resolve) => {\n      if (\n        this.frameState &&\n        !this.hitDetectionImageData_ &&\n        !this.animatingOrInteracting_\n      ) {\n        const size = this.frameState.size.slice();\n        const center = this.renderedCenter_;\n        const resolution = this.renderedResolution_;\n        const rotation = this.renderedRotation_;\n        const projection = this.renderedProjection_;\n        const extent = this.wrappedRenderedExtent_;\n        const layer = this.getLayer();\n        const transforms = [];\n        const width = size[0] * HIT_DETECT_RESOLUTION;\n        const height = size[1] * HIT_DETECT_RESOLUTION;\n        transforms.push(\n          this.getRenderTransform(\n            center,\n            resolution,\n            rotation,\n            HIT_DETECT_RESOLUTION,\n            width,\n            height,\n            0,\n          ).slice(),\n        );\n        const source = layer.getSource();\n        const projectionExtent = projection.getExtent();\n        if (\n          source.getWrapX() &&\n          projection.canWrapX() &&\n          !containsExtent(projectionExtent, extent)\n        ) {\n          let startX = extent[0];\n          const worldWidth = getWidth(projectionExtent);\n          let world = 0;\n          let offsetX;\n          while (startX < projectionExtent[0]) {\n            --world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX += worldWidth;\n          }\n          world = 0;\n          startX = extent[2];\n          while (startX > projectionExtent[2]) {\n            ++world;\n            offsetX = worldWidth * world;\n            transforms.push(\n              this.getRenderTransform(\n                center,\n                resolution,\n                rotation,\n                HIT_DETECT_RESOLUTION,\n                width,\n                height,\n                offsetX,\n              ).slice(),\n            );\n            startX -= worldWidth;\n          }\n        }\n        const userProjection = getUserProjection();\n        this.hitDetectionImageData_ = createHitDetectionImageData(\n          size,\n          transforms,\n          this.renderedFeatures_,\n          layer.getStyleFunction(),\n          extent,\n          resolution,\n          rotation,\n          getSquaredRenderTolerance(resolution, this.renderedPixelRatio_),\n          userProjection ? projection : null,\n        );\n      }\n      resolve(\n        hitDetect(pixel, this.renderedFeatures_, this.hitDetectionImageData_),\n      );\n    });\n  }\n\n  /**\n   * @param {import(\"../../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @param {number} hitTolerance Hit tolerance in pixels.\n   * @param {import(\"../vector.js\").FeatureCallback<T>} callback Feature callback.\n   * @param {Array<import(\"../Map.js\").HitMatch<T>>} matches The hit detected matches with tolerance.\n   * @return {T|undefined} Callback result.\n   * @template T\n   * @override\n   */\n  forEachFeatureAtCoordinate(\n    coordinate,\n    frameState,\n    hitTolerance,\n    callback,\n    matches,\n  ) {\n    if (!this.replayGroup_) {\n      return undefined;\n    }\n    const resolution = frameState.viewState.resolution;\n    const rotation = frameState.viewState.rotation;\n    const layer = this.getLayer();\n\n    /** @type {!Object<string, import(\"../Map.js\").HitMatch<T>|true>} */\n    const features = {};\n\n    /**\n     * @param {import(\"../../Feature.js\").FeatureLike} feature Feature.\n     * @param {import(\"../../geom/SimpleGeometry.js\").default} geometry Geometry.\n     * @param {number} distanceSq The squared distance to the click position\n     * @return {T|undefined} Callback result.\n     */\n    const featureCallback = function (feature, geometry, distanceSq) {\n      const key = getUid(feature);\n      const match = features[key];\n      if (!match) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          return callback(feature, layer, geometry);\n        }\n        matches.push(\n          (features[key] = {\n            feature: feature,\n            layer: layer,\n            geometry: geometry,\n            distanceSq: distanceSq,\n            callback: callback,\n          }),\n        );\n      } else if (match !== true && distanceSq < match.distanceSq) {\n        if (distanceSq === 0) {\n          features[key] = true;\n          matches.splice(matches.lastIndexOf(match), 1);\n          return callback(feature, layer, geometry);\n        }\n        match.geometry = geometry;\n        match.distanceSq = distanceSq;\n      }\n      return undefined;\n    };\n\n    const declutter = this.getLayer().getDeclutter();\n    return this.replayGroup_.forEachFeatureAtCoordinate(\n      coordinate,\n      resolution,\n      rotation,\n      hitTolerance,\n      featureCallback,\n      declutter\n        ? frameState.declutter?.[declutter]?.all().map((item) => item.value)\n        : null,\n    );\n  }\n\n  /**\n   * Perform action necessary to get the layer rendered after new fonts have loaded\n   * @override\n   */\n  handleFontsChanged() {\n    const layer = this.getLayer();\n    if (layer.getVisible() && this.replayGroup_) {\n      layer.changed();\n    }\n  }\n\n  /**\n   * Handle changes in image style state.\n   * @param {import(\"../../events/Event.js\").default} event Image style change event.\n   * @private\n   */\n  handleStyleImageChange_(event) {\n    this.renderIfReadyAndVisible();\n  }\n\n  /**\n   * Determine whether render should be called.\n   * @param {import(\"../../Map.js\").FrameState} frameState Frame state.\n   * @return {boolean} Layer is ready to be rendered.\n   * @override\n   */\n  prepareFrame(frameState) {\n    const vectorLayer = this.getLayer();\n    const vectorSource = vectorLayer.getSource();\n    if (!vectorSource) {\n      return false;\n    }\n\n    const animating = frameState.viewHints[ViewHint.ANIMATING];\n    const interacting = frameState.viewHints[ViewHint.INTERACTING];\n    const updateWhileAnimating = vectorLayer.getUpdateWhileAnimating();\n    const updateWhileInteracting = vectorLayer.getUpdateWhileInteracting();\n\n    if (\n      (this.ready && !updateWhileAnimating && animating) ||\n      (!updateWhileInteracting && interacting)\n    ) {\n      this.animatingOrInteracting_ = true;\n      return true;\n    }\n    this.animatingOrInteracting_ = false;\n\n    const frameStateExtent = frameState.extent;\n    const viewState = frameState.viewState;\n    const projection = viewState.projection;\n    const resolution = viewState.resolution;\n    const pixelRatio = frameState.pixelRatio;\n    const vectorLayerRevision = vectorLayer.getRevision();\n    const vectorLayerRenderBuffer = vectorLayer.getRenderBuffer();\n    let vectorLayerRenderOrder = vectorLayer.getRenderOrder();\n\n    if (vectorLayerRenderOrder === undefined) {\n      vectorLayerRenderOrder = defaultRenderOrder;\n    }\n\n    const center = viewState.center.slice();\n    const extent = buffer(\n      frameStateExtent,\n      vectorLayerRenderBuffer * resolution,\n    );\n    const renderedExtent = extent.slice();\n    const loadExtents = [extent.slice()];\n    const projectionExtent = projection.getExtent();\n\n    if (\n      vectorSource.getWrapX() &&\n      projection.canWrapX() &&\n      !containsExtent(projectionExtent, frameState.extent)\n    ) {\n      // For the replay group, we need an extent that intersects the real world\n      // (-180° to +180°). To support geometries in a coordinate range from -540°\n      // to +540°, we add at least 1 world width on each side of the projection\n      // extent. If the viewport is wider than the world, we need to add half of\n      // the viewport width to make sure we cover the whole viewport.\n      const worldWidth = getWidth(projectionExtent);\n      const gutter = Math.max(getWidth(extent) / 2, worldWidth);\n      extent[0] = projectionExtent[0] - gutter;\n      extent[2] = projectionExtent[2] + gutter;\n      wrapCoordinateX(center, projection);\n      const loadExtent = wrapExtentX(loadExtents[0], projection);\n      // If the extent crosses the date line, we load data for both edges of the worlds\n      if (\n        loadExtent[0] < projectionExtent[0] &&\n        loadExtent[2] < projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] + worldWidth,\n          loadExtent[1],\n          loadExtent[2] + worldWidth,\n          loadExtent[3],\n        ]);\n      } else if (\n        loadExtent[0] > projectionExtent[0] &&\n        loadExtent[2] > projectionExtent[2]\n      ) {\n        loadExtents.push([\n          loadExtent[0] - worldWidth,\n          loadExtent[1],\n          loadExtent[2] - worldWidth,\n          loadExtent[3],\n        ]);\n      }\n    }\n\n    if (\n      this.ready &&\n      this.renderedResolution_ == resolution &&\n      this.renderedRevision_ == vectorLayerRevision &&\n      this.renderedRenderOrder_ == vectorLayerRenderOrder &&\n      this.renderedFrameDeclutter_ === !!frameState.declutter &&\n      containsExtent(this.wrappedRenderedExtent_, extent)\n    ) {\n      if (!equals(this.renderedExtent_, renderedExtent)) {\n        this.hitDetectionImageData_ = null;\n        this.renderedExtent_ = renderedExtent;\n      }\n      this.renderedCenter_ = center;\n      this.replayGroupChanged = false;\n      return true;\n    }\n\n    this.replayGroup_ = null;\n\n    const replayGroup = new CanvasBuilderGroup(\n      getRenderTolerance(resolution, pixelRatio),\n      extent,\n      resolution,\n      pixelRatio,\n    );\n\n    const userProjection = getUserProjection();\n    let userTransform;\n    if (userProjection) {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        const extent = loadExtents[i];\n        const userExtent = toUserExtent(extent, projection);\n        vectorSource.loadFeatures(\n          userExtent,\n          toUserResolution(resolution, projection),\n          userProjection,\n        );\n      }\n      userTransform = getTransformFromProjections(userProjection, projection);\n    } else {\n      for (let i = 0, ii = loadExtents.length; i < ii; ++i) {\n        vectorSource.loadFeatures(loadExtents[i], resolution, projection);\n      }\n    }\n\n    const squaredTolerance = getSquaredRenderTolerance(resolution, pixelRatio);\n    let ready = true;\n    const render =\n      /**\n       * @param {import(\"../../Feature.js\").default} feature Feature.\n       * @param {number} index Index.\n       */\n      (feature, index) => {\n        let styles;\n        const styleFunction =\n          feature.getStyleFunction() || vectorLayer.getStyleFunction();\n        if (styleFunction) {\n          styles = styleFunction(feature, resolution);\n        }\n        if (styles) {\n          const dirty = this.renderFeature(\n            feature,\n            squaredTolerance,\n            styles,\n            replayGroup,\n            userTransform,\n            this.getLayer().getDeclutter(),\n            index,\n          );\n          ready = ready && !dirty;\n        }\n      };\n\n    const userExtent = toUserExtent(extent, projection);\n    /** @type {Array<import(\"../../Feature.js\").default>} */\n    const features = vectorSource.getFeaturesInExtent(userExtent);\n    if (vectorLayerRenderOrder) {\n      features.sort(vectorLayerRenderOrder);\n    }\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      render(features[i], i);\n    }\n    this.renderedFeatures_ = features;\n    this.ready = ready;\n\n    const replayGroupInstructions = replayGroup.finish();\n    const executorGroup = new ExecutorGroup(\n      extent,\n      resolution,\n      pixelRatio,\n      vectorSource.getOverlaps(),\n      replayGroupInstructions,\n      vectorLayer.getRenderBuffer(),\n      !!frameState.declutter,\n    );\n\n    this.renderedResolution_ = resolution;\n    this.renderedRevision_ = vectorLayerRevision;\n    this.renderedRenderOrder_ = vectorLayerRenderOrder;\n    this.renderedFrameDeclutter_ = !!frameState.declutter;\n    this.renderedExtent_ = renderedExtent;\n    this.wrappedRenderedExtent_ = extent;\n    this.renderedCenter_ = center;\n    this.renderedProjection_ = projection;\n    this.renderedPixelRatio_ = pixelRatio;\n    this.replayGroup_ = executorGroup;\n    this.hitDetectionImageData_ = null;\n\n    this.replayGroupChanged = true;\n    return true;\n  }\n\n  /**\n   * @param {import(\"../../Feature.js\").default} feature Feature.\n   * @param {number} squaredTolerance Squared render tolerance.\n   * @param {import(\"../../style/Style.js\").default|Array<import(\"../../style/Style.js\").default>} styles The style or array of styles.\n   * @param {import(\"../../render/canvas/BuilderGroup.js\").default} builderGroup Builder group.\n   * @param {import(\"../../proj.js\").TransformFunction} [transform] Transform from user to view projection.\n   * @param {boolean} [declutter] Enable decluttering.\n   * @param {number} [index] Render order index.\n   * @return {boolean} `true` if an image is loading.\n   */\n  renderFeature(\n    feature,\n    squaredTolerance,\n    styles,\n    builderGroup,\n    transform,\n    declutter,\n    index,\n  ) {\n    if (!styles) {\n      return false;\n    }\n    let loading = false;\n    if (Array.isArray(styles)) {\n      for (let i = 0, ii = styles.length; i < ii; ++i) {\n        loading =\n          renderFeature(\n            builderGroup,\n            feature,\n            styles[i],\n            squaredTolerance,\n            this.boundHandleStyleImageChange_,\n            transform,\n            declutter,\n            index,\n          ) || loading;\n      }\n    } else {\n      loading = renderFeature(\n        builderGroup,\n        feature,\n        styles,\n        squaredTolerance,\n        this.boundHandleStyleImageChange_,\n        transform,\n        declutter,\n        index,\n      );\n    }\n    return loading;\n  }\n}\n\nexport default CanvasVectorLayerRenderer;\n","/**\n * @module ol/layer/Vector\n */\nimport CanvasVectorLayerRenderer from '../renderer/canvas/VectorLayer.js';\nimport BaseVectorLayer from './BaseVector.js';\n\n/**\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @typedef {Object} Options\n * @property {string} [className='ol-layer'] A CSS class name to set to the layer element.\n * @property {number} [opacity=1] Opacity (0, 1).\n * @property {boolean} [visible=true] Visibility.\n * @property {import(\"../extent.js\").Extent} [extent] The bounding extent for layer rendering.  The layer will not be\n * rendered outside of this extent.\n * @property {number} [zIndex] The z-index for layer rendering.  At rendering time, the layers\n * will be ordered, first by Z-index and then by position. When `undefined`, a `zIndex` of 0 is assumed\n * for layers that are added to the map's `layers` collection, or `Infinity` when the layer's `setMap()`\n * method was used.\n * @property {number} [minResolution] The minimum resolution (inclusive) at which this layer will be\n * visible.\n * @property {number} [maxResolution] The maximum resolution (exclusive) below which this layer will\n * be visible.\n * @property {number} [minZoom] The minimum view zoom level (exclusive) above which this layer will be\n * visible.\n * @property {number} [maxZoom] The maximum view zoom level (inclusive) at which this layer will\n * be visible.\n * @property {import(\"../render.js\").OrderFunction} [renderOrder] Render order. Function to be used when sorting\n * features before rendering. By default features are drawn in the order that they are created. Use\n * `null` to avoid the sort, but get an undefined draw order.\n * @property {number} [renderBuffer=100] The buffer in pixels around the viewport extent used by the\n * renderer when getting features from the vector source for the rendering or hit-detection.\n * Recommended value: the size of the largest symbol, line width or label.\n * @property {VectorSourceType} [source] Source.\n * @property {import(\"../Map.js\").default} [map] Sets the layer as overlay on a map. The map will not manage\n * this layer in its layers collection, and the layer will be rendered on top. This is useful for\n * temporary layers. The standard way to add a layer to a map and have it managed by the map is to\n * use [map.addLayer()]{@link import(\"../Map.js\").default#addLayer}.\n * @property {boolean|string|number} [declutter=false] Declutter images and text. Any truthy value will enable\n * decluttering. Within a layer, a feature rendered before another has higher priority. All layers with the\n * same `declutter` value will be decluttered together. The priority is determined by the drawing order of the\n * layers with the same `declutter` value. Higher in the layer stack means higher priority. To declutter distinct\n * layers or groups of layers separately, use different truthy values for `declutter`.\n * @property {import(\"../style/Style.js\").StyleLike|import(\"../style/flat.js\").FlatStyleLike|null} [style] Layer style. When set to `null`, only\n * features that have their own style will be rendered. See {@link module:ol/style/Style~Style} for the default style\n * which will be used if this is not set.\n * @property {import(\"./Base.js\").BackgroundColor} [background] Background color for the layer. If not specified, no background\n * will be rendered.\n * @property {boolean} [updateWhileAnimating=false] When set to `true`, feature batches will\n * be recreated during animations. This means that no vectors will be shown clipped, but the\n * setting will have a performance impact for large amounts of vector data. When set to `false`,\n * batches will be recreated when no animation is active.\n * @property {boolean} [updateWhileInteracting=false] When set to `true`, feature batches will\n * be recreated during interactions. See also `updateWhileAnimating`.\n * @property {Object<string, *>} [properties] Arbitrary observable properties. Can be accessed with `#get()` and `#set()`.\n */\n\n/**\n * @classdesc\n * Vector data is rendered client-side, as vectors. This layer type provides most accurate rendering\n * even during animations. Points and labels stay upright on rotated views. For very large\n * amounts of vector data, performance may suffer during pan and zoom animations. In this case,\n * try {@link module:ol/layer/VectorImage~VectorImageLayer}.\n *\n * Note that any property set in the options is set as a {@link module:ol/Object~BaseObject}\n * property on the layer object; for example, setting `title: 'My Title'` in the\n * options means that `title` is observable, and has get/set accessors.\n *\n * @template {import(\"../source/Vector.js\").default<FeatureType>} [VectorSourceType=import(\"../source/Vector.js\").default<*>]\n * @template {import('../Feature.js').FeatureLike} [FeatureType=import(\"./BaseVector.js\").ExtractedFeatureType<VectorSourceType>]\n * @extends {BaseVectorLayer<FeatureType, VectorSourceType, CanvasVectorLayerRenderer>}\n * @api\n */\nclass VectorLayer extends BaseVectorLayer {\n  /**\n   * @param {Options<VectorSourceType, FeatureType>} [options] Options.\n   */\n  constructor(options) {\n    super(options);\n  }\n\n  /**\n   * @override\n   */\n  createRenderer() {\n    return new CanvasVectorLayerRenderer(this);\n  }\n}\n\nexport default VectorLayer;\n","/**\n * @module ol/resolution\n */\n\n/**\n * @typedef {number|Array<number>} ResolutionLike\n */\n\n/**\n * @param {ResolutionLike} resolution Resolution.\n * @return {number} Resolution.\n */\nexport function fromResolutionLike(resolution) {\n  if (Array.isArray(resolution)) {\n    return Math.min(...resolution);\n  }\n  return resolution;\n}\n","/**\n * @module ol/reproj/Image\n */\n\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {\n  getCenter,\n  getHeight,\n  getIntersection,\n  getWidth,\n  isEmpty,\n} from '../extent.js';\nimport {\n  calculateSourceResolution,\n  render as renderReprojected,\n} from '../reproj.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Triangulation from './Triangulation.js';\nimport {ERROR_THRESHOLD} from './common.js';\n\n/**\n * @typedef {function(import(\"../extent.js\").Extent, number, number) : import(\"../Image.js\").default} FunctionType\n */\n\n/**\n * @classdesc\n * Class encapsulating single reprojected image.\n * See {@link module:ol/source/Image~ImageSource}.\n */\nclass ReprojImage extends ImageWrapper {\n  /**\n   * @param {import(\"../proj/Projection.js\").default} sourceProj Source projection (of the data).\n   * @param {import(\"../proj/Projection.js\").default} targetProj Target projection.\n   * @param {import(\"../extent.js\").Extent} targetExtent Target extent.\n   * @param {number} targetResolution Target resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {FunctionType} getImageFunction\n   *     Function returning source images (extent, resolution, pixelRatio).\n   * @param {boolean} interpolate Use linear interpolation when resampling.\n   */\n  constructor(\n    sourceProj,\n    targetProj,\n    targetExtent,\n    targetResolution,\n    pixelRatio,\n    getImageFunction,\n    interpolate,\n  ) {\n    let maxSourceExtent = sourceProj.getExtent();\n    if (maxSourceExtent && sourceProj.canWrapX()) {\n      maxSourceExtent = maxSourceExtent.slice();\n      maxSourceExtent[0] = -Infinity;\n      maxSourceExtent[2] = Infinity;\n    }\n    let maxTargetExtent = targetProj.getExtent();\n    if (maxTargetExtent && targetProj.canWrapX()) {\n      maxTargetExtent = maxTargetExtent.slice();\n      maxTargetExtent[0] = -Infinity;\n      maxTargetExtent[2] = Infinity;\n    }\n\n    const limitedTargetExtent = maxTargetExtent\n      ? getIntersection(targetExtent, maxTargetExtent)\n      : targetExtent;\n\n    const targetCenter = getCenter(limitedTargetExtent);\n    const sourceResolution = calculateSourceResolution(\n      sourceProj,\n      targetProj,\n      targetCenter,\n      targetResolution,\n    );\n\n    const errorThresholdInPixels = ERROR_THRESHOLD;\n\n    const triangulation = new Triangulation(\n      sourceProj,\n      targetProj,\n      limitedTargetExtent,\n      maxSourceExtent,\n      sourceResolution * errorThresholdInPixels,\n      targetResolution,\n    );\n\n    const sourceExtent = triangulation.calculateSourceExtent();\n    const sourceImage = isEmpty(sourceExtent)\n      ? null\n      : getImageFunction(sourceExtent, sourceResolution, pixelRatio);\n    const state = sourceImage ? ImageState.IDLE : ImageState.EMPTY;\n    const sourcePixelRatio = sourceImage ? sourceImage.getPixelRatio() : 1;\n\n    super(targetExtent, targetResolution, sourcePixelRatio, state);\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.targetProj_ = targetProj;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.maxSourceExtent_ = maxSourceExtent;\n\n    /**\n     * @private\n     * @type {!import(\"./Triangulation.js\").default}\n     */\n    this.triangulation_ = triangulation;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.targetResolution_ = targetResolution;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.targetExtent_ = targetExtent;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").default}\n     */\n    this.sourceImage_ = sourceImage;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.sourcePixelRatio_ = sourcePixelRatio;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = interpolate;\n\n    /**\n     * @private\n     * @type {HTMLCanvasElement}\n     */\n    this.canvas_ = null;\n\n    /**\n     * @private\n     * @type {?import(\"../events.js\").EventsKey}\n     */\n    this.sourceListenerKey_ = null;\n  }\n\n  /**\n   * Clean up.\n   * @override\n   */\n  disposeInternal() {\n    if (this.state == ImageState.LOADING) {\n      this.unlistenSource_();\n    }\n    super.disposeInternal();\n  }\n\n  /**\n   * @return {HTMLCanvasElement} Image.\n   * @override\n   */\n  getImage() {\n    return this.canvas_;\n  }\n\n  /**\n   * @return {import(\"../proj/Projection.js\").default} Projection.\n   */\n  getProjection() {\n    return this.targetProj_;\n  }\n\n  /**\n   * @private\n   */\n  reproject_() {\n    const sourceState = this.sourceImage_.getState();\n    if (sourceState == ImageState.LOADED) {\n      const width = getWidth(this.targetExtent_) / this.targetResolution_;\n      const height = getHeight(this.targetExtent_) / this.targetResolution_;\n      this.canvas_ = renderReprojected(\n        width,\n        height,\n        this.sourcePixelRatio_,\n        fromResolutionLike(this.sourceImage_.getResolution()),\n        this.maxSourceExtent_,\n        this.targetResolution_,\n        this.targetExtent_,\n        this.triangulation_,\n        [\n          {\n            extent: this.sourceImage_.getExtent(),\n            image: this.sourceImage_.getImage(),\n          },\n        ],\n        0,\n        undefined,\n        this.interpolate_,\n        true,\n      );\n    }\n    this.state = sourceState;\n    this.changed();\n  }\n\n  /**\n   * Load not yet loaded URI.\n   * @override\n   */\n  load() {\n    if (this.state == ImageState.IDLE) {\n      this.state = ImageState.LOADING;\n      this.changed();\n\n      const sourceState = this.sourceImage_.getState();\n      if (sourceState == ImageState.LOADED || sourceState == ImageState.ERROR) {\n        this.reproject_();\n      } else {\n        this.sourceListenerKey_ = listen(\n          this.sourceImage_,\n          EventType.CHANGE,\n          (e) => {\n            const sourceState = this.sourceImage_.getState();\n            if (\n              sourceState == ImageState.LOADED ||\n              sourceState == ImageState.ERROR\n            ) {\n              this.unlistenSource_();\n              this.reproject_();\n            }\n          },\n        );\n        this.sourceImage_.load();\n      }\n    }\n  }\n\n  /**\n   * @private\n   */\n  unlistenSource_() {\n    unlistenByKey(\n      /** @type {!import(\"../events.js\").EventsKey} */ (\n        this.sourceListenerKey_\n      ),\n    );\n    this.sourceListenerKey_ = null;\n  }\n}\n\nexport default ReprojImage;\n","/**\n * @module ol/source/Source\n */\nimport BaseObject from '../Object.js';\nimport {get as getProjection} from '../proj.js';\n\n/**\n * @typedef {'undefined' | 'loading' | 'ready' | 'error'} State\n * State of the source, one of 'undefined', 'loading', 'ready' or 'error'.\n */\n\n/**\n * A function that takes a {@link import(\"../View.js\").ViewStateLayerStateExtent} and returns a string or\n * an array of strings representing source attributions.\n *\n * @typedef {function(import(\"../View.js\").ViewStateLayerStateExtent): (string|Array<string>)} Attribution\n */\n\n/**\n * A type that can be used to provide attribution information for data sources.\n *\n * It represents either\n * a simple string (e.g. `'© Acme Inc.'`)\n * an array of simple strings (e.g. `['© Acme Inc.', '© Bacme Inc.']`)\n * a function that returns a string or array of strings ({@link module:ol/source/Source~Attribution})\n *\n * @typedef {string|Array<string>|Attribution} AttributionLike\n */\n\n/**\n * @typedef {Object} Options\n * @property {AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {import(\"./Source.js\").State} [state='ready'] State.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for {@link module:ol/layer/Layer~Layer} sources.\n *\n * A generic `change` event is triggered when the state of the source changes.\n * @abstract\n * @api\n */\nclass Source extends BaseObject {\n  /**\n   * @param {Options} options Source options.\n   */\n  constructor(options) {\n    super();\n\n    /**\n     * @protected\n     * @type {import(\"../proj/Projection.js\").default|null}\n     */\n    this.projection = getProjection(options.projection);\n\n    /**\n     * @private\n     * @type {?Attribution}\n     */\n    this.attributions_ = adaptAttributions(options.attributions);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.attributionsCollapsible_ = options.attributionsCollapsible ?? true;\n\n    /**\n     * This source is currently loading data. Sources that defer loading to the\n     * map's tile queue never set this to `true`.\n     * @type {boolean}\n     */\n    this.loading = false;\n\n    /**\n     * @private\n     * @type {import(\"./Source.js\").State}\n     */\n    this.state_ = options.state !== undefined ? options.state : 'ready';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.wrapX_ = options.wrapX !== undefined ? options.wrapX : false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.interpolate_ = !!options.interpolate;\n\n    /**\n     * @protected\n     * @type {function(import(\"../View.js\").ViewOptions):void}\n     */\n    this.viewResolver = null;\n\n    /**\n     * @protected\n     * @type {function(Error):void}\n     */\n    this.viewRejector = null;\n\n    const self = this;\n    /**\n     * @private\n     * @type {Promise<import(\"../View.js\").ViewOptions>}\n     */\n    this.viewPromise_ = new Promise(function (resolve, reject) {\n      self.viewResolver = resolve;\n      self.viewRejector = reject;\n    });\n  }\n\n  /**\n   * Get the attribution function for the source.\n   * @return {?Attribution} Attribution function.\n   * @api\n   */\n  getAttributions() {\n    return this.attributions_;\n  }\n\n  /**\n   * @return {boolean} Attributions are collapsible.\n   * @api\n   */\n  getAttributionsCollapsible() {\n    return this.attributionsCollapsible_;\n  }\n\n  /**\n   * Get the projection of the source.\n   * @return {import(\"../proj/Projection.js\").default|null} Projection.\n   * @api\n   */\n  getProjection() {\n    return this.projection;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   */\n  getResolutions(projection) {\n    return null;\n  }\n\n  /**\n   * @return {Promise<import(\"../View.js\").ViewOptions>} A promise for view-related properties.\n   */\n  getView() {\n    return this.viewPromise_;\n  }\n\n  /**\n   * Get the state of the source, see {@link import(\"./Source.js\").State} for possible states.\n   * @return {import(\"./Source.js\").State} State.\n   * @api\n   */\n  getState() {\n    return this.state_;\n  }\n\n  /**\n   * @return {boolean|undefined} Wrap X.\n   */\n  getWrapX() {\n    return this.wrapX_;\n  }\n\n  /**\n   * @return {boolean} Use linear interpolation when resampling.\n   */\n  getInterpolate() {\n    return this.interpolate_;\n  }\n\n  /**\n   * Refreshes the source. The source will be cleared, and data from the server will be reloaded.\n   * @api\n   */\n  refresh() {\n    this.changed();\n  }\n\n  /**\n   * Set the attributions of the source.\n   * @param {AttributionLike|undefined} attributions Attributions.\n   *     Can be passed as `string`, `Array<string>`, {@link module:ol/source/Source~Attribution},\n   *     or `undefined`.\n   * @api\n   */\n  setAttributions(attributions) {\n    this.attributions_ = adaptAttributions(attributions);\n    this.changed();\n  }\n\n  /**\n   * Set the state of the source.\n   * @param {import(\"./Source.js\").State} state State.\n   */\n  setState(state) {\n    this.state_ = state;\n    this.changed();\n  }\n}\n\n/**\n * Turns the attributions option into an attributions function.\n * @param {AttributionLike|undefined} attributionLike The attribution option.\n * @return {Attribution|null} An attribution function (or null).\n */\nfunction adaptAttributions(attributionLike) {\n  if (!attributionLike) {\n    return null;\n  }\n  if (typeof attributionLike === 'function') {\n    return attributionLike;\n  }\n  if (!Array.isArray(attributionLike)) {\n    attributionLike = [attributionLike];\n  }\n  return (frameState) => attributionLike;\n}\n\nexport default Source;\n","/**\n * @module ol/source/Image\n */\nimport ImageWrapper from '../Image.js';\nimport ImageState from '../ImageState.js';\nimport {linearFindNearest} from '../array.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {\n  containsExtent,\n  equals,\n  getCenter,\n  getForViewAndSize,\n  getHeight,\n  getWidth,\n} from '../extent.js';\nimport {ceil} from '../math.js';\nimport {equivalent} from '../proj.js';\nimport ReprojImage from '../reproj/Image.js';\nimport {fromResolutionLike} from '../resolution.js';\nimport Source from './Source.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * @enum {string}\n */\nexport const ImageSourceEventType = {\n  /**\n   * Triggered when an image starts loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadstart\n   * @api\n   */\n  IMAGELOADSTART: 'imageloadstart',\n\n  /**\n   * Triggered when an image finishes loading.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloadend\n   * @api\n   */\n  IMAGELOADEND: 'imageloadend',\n\n  /**\n   * Triggered if image loading results in an error.\n   * @event module:ol/source/Image.ImageSourceEvent#imageloaderror\n   * @api\n   */\n  IMAGELOADERROR: 'imageloaderror',\n};\n\n/**\n * @typedef {'imageloadend'|'imageloaderror'|'imageloadstart'} ImageSourceEventTypes\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Image~ImageSource} instances are instances of this\n * type.\n */\nexport class ImageSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Image.js\").default} image The image.\n   */\n  constructor(type, image) {\n    super(type);\n\n    /**\n     * The image related to the event.\n     * @type {import(\"../Image.js\").default}\n     * @api\n     */\n    this.image = image;\n  }\n}\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<ImageSourceEventTypes, ImageSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types\n *     |ImageSourceEventTypes, Return>} ImageSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../Image.js\").Loader} [loader] Loader. Can either be a custom loader, or one of the\n * loaders created with a `createLoader()` function ({@link module:ol/source/wms.createLoader wms},\n * {@link module:ol/source/arcgisRest.createLoader arcgisRest}, {@link module:ol/source/mapguide.createLoader mapguide},\n * {@link module:ol/source/static.createLoader static}).\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {Array<number>} [resolutions] Resolutions.\n * @property {import(\"./Source.js\").State} [state] State.\n */\n\n/**\n * @classdesc\n * Base class for sources providing a single image.\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageSource extends Source {\n  /**\n   * @param {Options} options Single image source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      projection: options.projection,\n      state: options.state,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n    });\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {ImageSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {ImageSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").Loader}\n     */\n    this.loader = options.loader || null;\n\n    /**\n     * @private\n     * @type {Array<number>|null}\n     */\n    this.resolutions_ =\n      options.resolutions !== undefined ? options.resolutions : null;\n\n    /**\n     * @private\n     * @type {import(\"../reproj/Image.js\").default}\n     */\n    this.reprojectedImage_ = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.reprojectedRevision_ = 0;\n\n    /**\n     * @protected\n     * @type {import(\"../Image.js\").default}\n     */\n    this.image = null;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.wantedExtent_;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.wantedResolution_;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.static_ = options.loader ? options.loader.length === 0 : false;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.wantedProjection_ = null;\n  }\n\n  /**\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions() {\n    return this.resolutions_;\n  }\n\n  /**\n   * @param {Array<number>|null} resolutions Resolutions.\n   */\n  setResolutions(resolutions) {\n    this.resolutions_ = resolutions;\n  }\n\n  /**\n   * @protected\n   * @param {number} resolution Resolution.\n   * @return {number} Resolution.\n   */\n  findNearestResolution(resolution) {\n    const resolutions = this.getResolutions();\n    if (resolutions) {\n      const idx = linearFindNearest(resolutions, resolution, 0);\n      resolution = resolutions[idx];\n    }\n    return resolution;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   */\n  getImage(extent, resolution, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      if (sourceProjection) {\n        projection = sourceProjection;\n      }\n\n      return this.getImageInternal(extent, resolution, pixelRatio, projection);\n    }\n    if (this.reprojectedImage_) {\n      if (\n        this.reprojectedRevision_ == this.getRevision() &&\n        equivalent(this.reprojectedImage_.getProjection(), projection) &&\n        this.reprojectedImage_.getResolution() == resolution &&\n        equals(this.reprojectedImage_.getExtent(), extent)\n      ) {\n        return this.reprojectedImage_;\n      }\n      this.reprojectedImage_.dispose();\n      this.reprojectedImage_ = null;\n    }\n\n    this.reprojectedImage_ = new ReprojImage(\n      sourceProjection,\n      projection,\n      extent,\n      resolution,\n      pixelRatio,\n      (extent, resolution, pixelRatio) =>\n        this.getImageInternal(extent, resolution, pixelRatio, sourceProjection),\n      this.getInterpolate(),\n    );\n    this.reprojectedRevision_ = this.getRevision();\n\n    return this.reprojectedImage_;\n  }\n\n  /**\n   * @abstract\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @protected\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.loader) {\n      const requestExtent = getRequestExtent(extent, resolution, pixelRatio, 1);\n      const requestResolution = this.findNearestResolution(resolution);\n      if (\n        this.image &&\n        (this.static_ ||\n          (this.wantedProjection_ === projection &&\n            ((this.wantedExtent_ &&\n              containsExtent(this.wantedExtent_, requestExtent)) ||\n              containsExtent(this.image.getExtent(), requestExtent)) &&\n            ((this.wantedResolution_ &&\n              fromResolutionLike(this.wantedResolution_) ===\n                requestResolution) ||\n              fromResolutionLike(this.image.getResolution()) ===\n                requestResolution)))\n      ) {\n        return this.image;\n      }\n      this.wantedProjection_ = projection;\n      this.wantedExtent_ = requestExtent;\n      this.wantedResolution_ = requestResolution;\n      this.image = new ImageWrapper(\n        requestExtent,\n        requestResolution,\n        pixelRatio,\n        this.loader,\n      );\n      this.image.addEventListener(\n        EventType.CHANGE,\n        this.handleImageChange.bind(this),\n      );\n    }\n    return this.image;\n  }\n\n  /**\n   * Handle image change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleImageChange(event) {\n    const image = /** @type {import(\"../Image.js\").default} */ (event.target);\n    let type;\n    switch (image.getState()) {\n      case ImageState.LOADING:\n        this.loading = true;\n        type = ImageSourceEventType.IMAGELOADSTART;\n        break;\n      case ImageState.LOADED:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADEND;\n        break;\n      case ImageState.ERROR:\n        this.loading = false;\n        type = ImageSourceEventType.IMAGELOADERROR;\n        break;\n      default:\n        return;\n    }\n    if (this.hasListener(type)) {\n      this.dispatchEvent(new ImageSourceEvent(type, image));\n    }\n  }\n}\n\n/**\n * Default image load function for image sources that use import(\"../Image.js\").Image image\n * instances.\n * @param {import(\"../Image.js\").default} image Image.\n * @param {string} src Source.\n */\nexport function defaultImageLoadFunction(image, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (image.getImage()).src = src;\n}\n\n/**\n * Adjusts the extent so it aligns with pixel boundaries.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Reolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {number} ratio Ratio between request size and view size.\n * @return {import(\"../extent.js\").Extent} Request extent.\n */\nexport function getRequestExtent(extent, resolution, pixelRatio, ratio) {\n  const imageResolution = resolution / pixelRatio;\n  const center = getCenter(extent);\n  const viewWidth = ceil(getWidth(extent) / imageResolution, DECIMALS);\n  const viewHeight = ceil(getHeight(extent) / imageResolution, DECIMALS);\n  const marginWidth = ceil(((ratio - 1) * viewWidth) / 2, DECIMALS);\n  const requestWidth = viewWidth + 2 * marginWidth;\n  const marginHeight = ceil(((ratio - 1) * viewHeight) / 2, DECIMALS);\n  const requestHeight = viewHeight + 2 * marginHeight;\n  return getForViewAndSize(center, imageResolution, 0, [\n    requestWidth,\n    requestHeight,\n  ]);\n}\n\nexport default ImageSource;\n","/**\n * @module ol/source/common\n */\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_WMS_VERSION = '1.3.0';\n\n/**\n * Number of decimal digits to consider in integer values when rounding.\n * @type {number}\n */\nexport const DECIMALS = 4;\n","/**\n * @module ol/uri\n */\n\nimport {modulo} from './math.js';\nimport {hashZXY} from './tilecoord.js';\n\n/**\n * Appends query parameters to a URI.\n *\n * @param {string} uri The original URI, which may already have query data.\n * @param {!Object} params An object where keys are URI-encoded parameter keys,\n *     and the values are arbitrary types or arrays.\n * @return {string} The new URI.\n */\nexport function appendParams(uri, params) {\n  /** @type {Array<string>} */\n  const keyParams = [];\n  // Skip any null or undefined parameter values\n  Object.keys(params).forEach(function (k) {\n    if (params[k] !== null && params[k] !== undefined) {\n      keyParams.push(k + '=' + encodeURIComponent(params[k]));\n    }\n  });\n  const qs = keyParams.join('&');\n  // remove any trailing ? or &\n  uri = uri.replace(/[?&]$/, '');\n  // append ? or & depending on whether uri has existing parameters\n  uri += uri.includes('?') ? '&' : '?';\n  return uri + qs;\n}\n\nconst zRegEx = /\\{z\\}/g;\nconst xRegEx = /\\{x\\}/g;\nconst yRegEx = /\\{y\\}/g;\nconst dashYRegEx = /\\{-y\\}/g;\n\n/**\n * @param {string} template The URL template.  Should have `{x}`, `{y}`, and `{z}` placeholders.  If\n * the template has a `{-y}` placeholder, the `maxY` parameter must be supplied.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @param {number} [maxY] The maximum y coordinate at the given z level.\n * @return {string} The URL.\n */\nexport function renderXYZTemplate(template, z, x, y, maxY) {\n  return template\n    .replace(zRegEx, z.toString())\n    .replace(xRegEx, x.toString())\n    .replace(yRegEx, y.toString())\n    .replace(dashYRegEx, function () {\n      if (maxY === undefined) {\n        throw new Error(\n          'If the URL template has a {-y} placeholder, the grid extent must be known',\n        );\n      }\n      return (maxY - y).toString();\n    });\n}\n\n/**\n * @param {Array<string>} urls List of URLs.\n * @param {number} z The tile z coordinate.\n * @param {number} x The tile x coordinate.\n * @param {number} y The tile y coordinate.\n * @return {string} The chosen URL.\n */\nexport function pickUrl(urls, z, x, y) {\n  const hash = hashZXY(z, x, y);\n  const index = modulo(hash, urls.length);\n  return urls[index];\n}\n\n/**\n * @param {string} url URL.\n * @return {Array<string>} Array of urls.\n */\nexport function expandUrl(url) {\n  const urls = [];\n  let match = /\\{([a-z])-([a-z])\\}/.exec(url);\n  if (match) {\n    // char range\n    const startCharCode = match[1].charCodeAt(0);\n    const stopCharCode = match[2].charCodeAt(0);\n    let charCode;\n    for (charCode = startCharCode; charCode <= stopCharCode; ++charCode) {\n      urls.push(url.replace(match[0], String.fromCharCode(charCode)));\n    }\n    return urls;\n  }\n  match = /\\{(\\d+)-(\\d+)\\}/.exec(url);\n  if (match) {\n    // number range\n    const stop = parseInt(match[2], 10);\n    for (let i = parseInt(match[1], 10); i <= stop; i++) {\n      urls.push(url.replace(match[0], i.toString()));\n    }\n    return urls;\n  }\n  urls.push(url);\n  return urls;\n}\n","/**\n * @module ol/source/ImageArcGISRest\n */\n\nimport {decode} from '../Image.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader} from './arcgisRest.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given\n * a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {Array<number>} [resolutions] Resolutions. If specified, requests will be made for\n * these resolutions only.\n * @property {string} [url] ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n */\n\n/**\n * @classdesc\n * Source for data from ArcGIS Rest services providing single, untiled images.\n * Useful when underlying map service has labels.\n *\n * If underlying map service is not using labels,\n * take advantage of ol image caching and use\n * {@link module:ol/source/TileArcGISRest~TileArcGISRest} data source.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageArcGISRest extends ImageSource {\n  /**\n   * @param {Options} [options] Image ArcGIS Rest Options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"../size.js\").Size}\n     */\n    this.imageSize_ = [0, 0];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @override\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this ArcGIS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  setParams(params) {\n    this.params_ = Object.assign({}, params);\n    this.changed();\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageArcGISRest;\n","/**\n * @module ol/source/arcgisRest\n */\n\nimport {decode} from '../Image.js';\nimport {getHeight, getWidth} from '../extent.js';\nimport {round} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport {appendParams} from '../uri.js';\nimport {getRequestExtent} from './Image.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * @param {string} baseUrl Base URL for the ArcGIS Rest service.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params Params.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(\n  baseUrl,\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  params,\n) {\n  // ArcGIS Server only wants the numeric portion of the projection ID.\n  // (if there is no numeric portion the entire projection code must\n  // form a valid ArcGIS SpatialReference definition).\n  const srid = projection\n    .getCode()\n    .split(/:(?=\\d+$)/)\n    .pop();\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  params['SIZE'] = imageSize[0] + ',' + imageSize[1];\n  params['BBOX'] = extent.join(',');\n  params['BBOXSR'] = srid;\n  params['IMAGESR'] = srid;\n  params['DPI'] = Math.round(\n    params['DPI'] ? params['DPI'] * pixelRatio : 90 * pixelRatio,\n  );\n\n  const modifiedUrl = baseUrl\n    .replace(/MapServer\\/?$/, 'MapServer/export')\n    .replace(/ImageServer\\/?$/, 'ImageServer/exportImage');\n  return appendParams(modifiedUrl, params);\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting the image from\n * the remote server.\n * @property {Object<string,*>} [params] ArcGIS Rest parameters. This field is optional. Service\n * defaults will be used for any fields not specified. `FORMAT` is `PNG32` by default. `F` is\n * `IMAGE` by default. `TRANSPARENT` is `true` by default.  `BBOX`, `SIZE`, `BBOXSR`, and `IMAGESR`\n * will be set dynamically. Set `LAYERS` to override the default service layer visibility. See\n * https://developers.arcgis.com/rest/services-reference/export-map.htm\n * for further reference.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * The projection code must contain a numeric end portion separated by :\n * or the entire code must form a valid ArcGIS SpatialReference definition.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport,\n * `2` means twice the size of the map viewport, and so on.\n * @property {string} url ArcGIS Rest service URL for a Map Service or Image Service. The url\n * should include /MapServer or /ImageServer.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for ArcGIS Rest images.\n * @param {LoaderOptions} options Image ArcGIS Rest Options.\n * @return {import('../Image.js').ImageObjectPromiseLoader} ArcGIS Rest image.\n * @api\n */\nexport function createLoader(options) {\n  const load = options.load ? options.load : decode;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio ?? 1.5;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  return function (extent, resolution, pixelRatio) {\n    pixelRatio = options.hidpi ? pixelRatio : 1;\n\n    const params = {\n      'F': 'image',\n      'FORMAT': 'PNG32',\n      'TRANSPARENT': true,\n    };\n    Object.assign(params, options.params);\n\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n\n    const src = getRequestUrl(\n      options.url,\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      params,\n    );\n\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n\n    return load(image, src).then((image) => {\n      // Update resolution, because the server may return a smaller size than requested\n      const resolution = (getWidth(extent) / image.width) * pixelRatio;\n      return {image, extent, resolution, pixelRatio};\n    });\n  };\n}\n","/**\n * @module ol/string\n */\n\n/**\n * @param {number} number Number to be formatted\n * @param {number} width The desired width\n * @param {number} [precision] Precision of the output string (i.e. number of decimal places)\n * @return {string} Formatted string\n */\nexport function padNumber(number, width, precision) {\n  const numberString =\n    precision !== undefined ? number.toFixed(precision) : '' + number;\n  let decimal = numberString.indexOf('.');\n  decimal = decimal === -1 ? numberString.length : decimal;\n  return decimal > width\n    ? numberString\n    : new Array(1 + width - decimal).join('0') + numberString;\n}\n\n/**\n * Adapted from https://github.com/omichelsen/compare-versions/blob/master/index.js\n * @param {string|number} v1 First version\n * @param {string|number} v2 Second version\n * @return {number} Value\n */\nexport function compareVersions(v1, v2) {\n  const s1 = ('' + v1).split('.');\n  const s2 = ('' + v2).split('.');\n\n  for (let i = 0; i < Math.max(s1.length, s2.length); i++) {\n    const n1 = parseInt(s1[i] || '0', 10);\n    const n2 = parseInt(s2[i] || '0', 10);\n\n    if (n1 > n2) {\n      return 1;\n    }\n    if (n2 > n1) {\n      return -1;\n    }\n  }\n\n  return 0;\n}\n","/**\n * @module ol/source/wms\n */\n\nimport {decode} from '../Image.js';\nimport {getForViewAndSize, getHeight, getWidth} from '../extent.js';\nimport {floor, round} from '../math.js';\nimport {get as getProjection} from '../proj.js';\nimport {compareVersions} from '../string.js';\nimport {appendParams} from '../uri.js';\nimport {getRequestExtent} from './Image.js';\nimport {DECIMALS} from './common.js';\n\n/**\n * Default WMS version.\n * @type {string}\n */\nexport const DEFAULT_VERSION = '1.3.0';\n\n/**\n * @const\n * @type {import(\"../size.js\").Size}\n */\nconst GETFEATUREINFO_IMAGE_SIZE = [101, 101];\n\n/**\n * @api\n * @typedef {'carmentaserver' | 'geoserver' | 'mapserver' | 'qgis'} ServerType\n * Set the server type to use implementation-specific parameters beyond the WMS specification.\n *  - `'carmentaserver'`: HiDPI support for [Carmenta Server](https://www.carmenta.com/en/products/carmenta-server)\n *  - `'geoserver'`: HiDPI support for [GeoServer](https://geoserver.org/)\n *  - `'mapserver'`: HiDPI support for [MapServer](https://mapserver.org/)\n *  - `'qgis'`: HiDPI support for [QGIS](https://qgis.org/)\n */\n\n/**\n * @param {string} baseUrl Base URL.\n * @param {import(\"../extent.js\").Extent} extent Extent.\n * @param {import(\"../size.js\").Size} size Size.\n * @param {import(\"../proj/Projection.js\").default} projection Projection.\n * @param {Object} params WMS params. Will be modified in place.\n * @return {string} Request URL.\n */\nexport function getRequestUrl(baseUrl, extent, size, projection, params) {\n  params['WIDTH'] = size[0];\n  params['HEIGHT'] = size[1];\n\n  const axisOrientation = projection.getAxisOrientation();\n  const v13 = compareVersions(params['VERSION'], '1.3') >= 0;\n  params[v13 ? 'CRS' : 'SRS'] = projection.getCode();\n  const bbox =\n    v13 && axisOrientation.startsWith('ne')\n      ? [extent[1], extent[0], extent[3], extent[2]]\n      : extent;\n  params['BBOX'] = bbox.join(',');\n\n  return appendParams(baseUrl, params);\n}\n\n/**\n * @param {import(\"../extent\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {number} pixelRatio pixel ratio.\n * @param {import(\"../proj.js\").Projection} projection Projection.\n * @param {string} url WMS service url.\n * @param {Object} params WMS params.\n * @param {import(\"./wms.js\").ServerType} serverType The type of the remote WMS server.\n * @return {string} Image src.\n */\nexport function getImageSrc(\n  extent,\n  resolution,\n  pixelRatio,\n  projection,\n  url,\n  params,\n  serverType,\n) {\n  params = Object.assign({REQUEST: 'GetMap'}, params);\n\n  const imageResolution = resolution / pixelRatio;\n\n  const imageSize = [\n    round(getWidth(extent) / imageResolution, DECIMALS),\n    round(getHeight(extent) / imageResolution, DECIMALS),\n  ];\n\n  if (pixelRatio != 1) {\n    switch (serverType) {\n      case 'geoserver':\n        const dpi = (90 * pixelRatio + 0.5) | 0;\n        if ('FORMAT_OPTIONS' in params) {\n          params['FORMAT_OPTIONS'] += ';dpi:' + dpi;\n        } else {\n          params['FORMAT_OPTIONS'] = 'dpi:' + dpi;\n        }\n        break;\n      case 'mapserver':\n        params['MAP_RESOLUTION'] = 90 * pixelRatio;\n        break;\n      case 'carmentaserver':\n      case 'qgis':\n        params['DPI'] = 90 * pixelRatio;\n        break;\n      default:\n        throw new Error('Unknown `serverType` configured');\n    }\n  }\n\n  const src = getRequestUrl(url, extent, imageSize, projection, params);\n  return src;\n}\n\n/**\n * @param {Object} params WMS params.\n * @param {string} request WMS `REQUEST`.\n * @return {Object} WMS params with required properties set.\n */\nexport function getRequestParams(params, request) {\n  return Object.assign(\n    {\n      'REQUEST': request,\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'FORMAT': 'image/png',\n      'STYLES': '',\n      'TRANSPARENT': 'TRUE',\n    },\n    params,\n  );\n}\n\n/**\n * @typedef {Object} LoaderOptions\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT` and `BBOX` will be set\n * dynamically. `CRS` (`SRS` for WMS version < 1.3.0) will is derived from the `proection` config.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is 'EPSG:3857'.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {string} url WMS service URL.\n * @property {function(HTMLImageElement, string): Promise<import('../DataTile.js').ImageLike>} [load] Function\n * to perform loading of the image. Receives the created `HTMLImageElement` and the desired `src` as argument and\n * returns a promise resolving to the loaded or decoded image. Default is {@link module:ol/Image.decode}.\n */\n\n/**\n * Creates a loader for WMS images.\n * @param {LoaderOptions} options Loader options.\n * @return {import(\"../Image.js\").ImageObjectPromiseLoader} Loader.\n * @api\n */\nexport function createLoader(options) {\n  const hidpi = options.hidpi === undefined ? true : options.hidpi;\n  const projection = getProjection(options.projection || 'EPSG:3857');\n  const ratio = options.ratio || 1.5;\n  const load = options.load || decode;\n  const crossOrigin = options.crossOrigin ?? null;\n\n  return (extent, resolution, pixelRatio) => {\n    extent = getRequestExtent(extent, resolution, pixelRatio, ratio);\n    if (pixelRatio != 1 && (!hidpi || options.serverType === undefined)) {\n      pixelRatio = 1;\n    }\n    const src = getImageSrc(\n      extent,\n      resolution,\n      pixelRatio,\n      projection,\n      options.url,\n      getRequestParams(options.params, 'GetMap'),\n      options.serverType,\n    );\n    const image = new Image();\n    image.crossOrigin = crossOrigin;\n    return load(image, src).then((image) => ({image, extent, pixelRatio}));\n  };\n}\n\n/**\n * Get the GetFeatureInfo URL for the passed coordinate and resolution. Returns `undefined` if the\n * GetFeatureInfo URL cannot be constructed.\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function. In addition to\n * the params required by the loader, `INFO_FORMAT` should be specified, it defaults to\n * `application/json`. If `QUERY_LAYERS` is not provided, then the layers specified in the `LAYERS`\n * parameter will be used.\n * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n * @param {number} resolution Resolution.\n * @return {string|undefined} GetFeatureInfo URL.\n * @api\n */\nexport function getFeatureInfoUrl(options, coordinate, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const projectionObj = getProjection(options.projection || 'EPSG:3857');\n\n  const extent = getForViewAndSize(\n    coordinate,\n    resolution,\n    0,\n    GETFEATUREINFO_IMAGE_SIZE,\n  );\n\n  const baseParams = {\n    'QUERY_LAYERS': options.params['LAYERS'],\n    'INFO_FORMAT': 'application/json',\n  };\n  Object.assign(\n    baseParams,\n    getRequestParams(options.params, 'GetFeatureInfo'),\n    options.params,\n  );\n\n  const x = floor((coordinate[0] - extent[0]) / resolution, DECIMALS);\n  const y = floor((extent[3] - coordinate[1]) / resolution, DECIMALS);\n  const v13 = compareVersions(baseParams['VERSION'], '1.3') >= 0;\n  baseParams[v13 ? 'I' : 'X'] = x;\n  baseParams[v13 ? 'J' : 'Y'] = y;\n\n  return getRequestUrl(\n    options.url,\n    extent,\n    GETFEATUREINFO_IMAGE_SIZE,\n    projectionObj,\n    baseParams,\n  );\n}\n\n/**\n * Get the GetLegendGraphic URL, optionally optimized for the passed resolution and possibly\n * including any passed specific parameters. Returns `undefined` if the GetLegendGraphic URL\n * cannot be constructed.\n *\n * @param {LoaderOptions} options Options passed the `createWMSLoader()` function.\n * @param {number} [resolution] Resolution. If not provided, `SCALE` will not be calculated and\n * included in URL.\n * @return {string|undefined} GetLegendGraphic URL.\n * @api\n */\nexport function getLegendUrl(options, resolution) {\n  if (options.url === undefined) {\n    return undefined;\n  }\n\n  const baseParams = {\n    'SERVICE': 'WMS',\n    'VERSION': DEFAULT_VERSION,\n    'REQUEST': 'GetLegendGraphic',\n    'FORMAT': 'image/png',\n  };\n\n  if (resolution !== undefined) {\n    const mpu =\n      getProjection(options.projection || 'EPSG:3857').getMetersPerUnit() || 1;\n    const pixelSize = 0.00028;\n    baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n  }\n\n  Object.assign(baseParams, options.params);\n\n  if (options.params !== undefined && baseParams['LAYER'] === undefined) {\n    const layers = baseParams['LAYERS'];\n    const isSingleLayer = !Array.isArray(layers) || layers.length !== 1;\n    if (!isSingleLayer) {\n      return undefined;\n    }\n    baseParams['LAYER'] = layers;\n  }\n\n  return appendParams(options.url, baseParams);\n}\n","/**\n * @module ol/source/ImageWMS\n */\n\nimport {decode} from '../Image.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport ImageSource, {defaultImageLoadFunction} from './Image.js';\nimport {createLoader, getFeatureInfoUrl, getLegendUrl} from './wms.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Image.js\").LoadFunction} [imageLoadFunction] Optional function to load an image given a URL.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} [params] WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [ratio=1.5] Ratio. `1` means image requests are the size of the map viewport, `2` means\n * twice the width and height of the map viewport, and so on. Must be `1` or higher.\n * @property {Array<number>} [resolutions] Resolutions.\n * If specified, requests will be made for these resolutions only.\n * @property {string} [url] WMS service URL.\n */\n\n/**\n * @classdesc\n * Source for WMS servers providing single, untiled images.\n *\n * @fires module:ol/source/Image.ImageSourceEvent\n * @api\n */\nclass ImageWMS extends ImageSource {\n  /**\n   * @param {Options} [options] ImageWMS options.\n   */\n  constructor(options) {\n    options = options ? options : {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      resolutions: options.resolutions,\n    });\n\n    /**\n     * @private\n     * @type {?string}\n     */\n    this.crossOrigin_ =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.url_ = options.url;\n\n    /**\n     * @private\n     * @type {import(\"../Image.js\").LoadFunction}\n     */\n    this.imageLoadFunction_ =\n      options.imageLoadFunction !== undefined\n        ? options.imageLoadFunction\n        : defaultImageLoadFunction;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = Object.assign({}, options.params);\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.renderedRevision_ = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.ratio_ = options.ratio !== undefined ? options.ratio : 1.5;\n\n    /**\n     * @private\n     * @type {import(\"../proj/Projection.js\").default}\n     */\n    this.loaderProjection_ = null;\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection();\n\n    if (sourceProjectionObj && sourceProjectionObj !== projectionObj) {\n      resolution = calculateSourceResolution(\n        sourceProjectionObj,\n        projectionObj,\n        coordinate,\n        resolution,\n      );\n      coordinate = transform(coordinate, projectionObj, sourceProjectionObj);\n    }\n\n    const options = {\n      url: this.url_,\n      params: {\n        ...this.params_,\n        ...params,\n      },\n      projection: sourceProjectionObj || projectionObj,\n    };\n    return getFeatureInfoUrl(options, coordinate, resolution);\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    return getLegendUrl(\n      {\n        url: this.url_,\n        params: {\n          ...this.params_,\n          ...params,\n        },\n      },\n      resolution,\n    );\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../Image.js\").default} Single image.\n   * @override\n   */\n  getImageInternal(extent, resolution, pixelRatio, projection) {\n    if (this.url_ === undefined) {\n      return null;\n    }\n    if (!this.loader || this.loaderProjection_ !== projection) {\n      // Lazily create loader to pick up the view projection and to allow `params` updates\n      this.loaderProjection_ = projection;\n      this.loader = createLoader({\n        crossOrigin: this.crossOrigin_,\n        params: this.params_,\n        projection: projection,\n        serverType: this.serverType_,\n        hidpi: this.hidpi_,\n        url: this.url_,\n        ratio: this.ratio_,\n        load: (image, src) => {\n          this.image.setImage(image);\n          this.imageLoadFunction_(this.image, src);\n          return decode(image);\n        },\n      });\n    }\n\n    return super.getImageInternal(extent, resolution, pixelRatio, projection);\n  }\n\n  /**\n   * Return the image load function of the source.\n   * @return {import(\"../Image.js\").LoadFunction} The image load function.\n   * @api\n   */\n  getImageLoadFunction() {\n    return this.imageLoadFunction_;\n  }\n\n  /**\n   * Return the URL used for this WMS source.\n   * @return {string|undefined} URL.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * Set the image load function of the source.\n   * @param {import(\"../Image.js\").LoadFunction} imageLoadFunction Image load function.\n   * @api\n   */\n  setImageLoadFunction(imageLoadFunction) {\n    this.imageLoadFunction_ = imageLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string|undefined} url URL.\n   * @api\n   */\n  setUrl(url) {\n    if (url != this.url_) {\n      this.url_ = url;\n      this.loader = null;\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  setParams(params) {\n    this.params_ = Object.assign({}, params);\n    this.changed();\n  }\n\n  /**\n   * Update the user-provided params.\n   * @param {Object} params Params.\n   * @api\n   */\n  updateParams(params) {\n    Object.assign(this.params_, params);\n    this.changed();\n  }\n\n  /**\n   * @override\n   */\n  changed() {\n    this.image = null;\n    super.changed();\n  }\n}\n\nexport default ImageWMS;\n","/**\n * @module ol/tilegrid\n */\nimport {\n  containsCoordinate,\n  createOrUpdate,\n  getCorner,\n  getHeight,\n  getWidth,\n} from './extent.js';\nimport {METERS_PER_UNIT, get as getProjection} from './proj.js';\nimport {toSize} from './size.js';\nimport TileGrid from './tilegrid/TileGrid.js';\nimport {DEFAULT_MAX_ZOOM, DEFAULT_TILE_SIZE} from './tilegrid/common.js';\n\nexport {TileGrid};\nexport {default as WMTS} from './tilegrid/WMTS.js';\n\n/**\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {!TileGrid} Default tile grid for the\n * passed projection.\n */\nexport function getForProjection(projection) {\n  let tileGrid = projection.getDefaultTileGrid();\n  if (!tileGrid) {\n    tileGrid = createForProjection(projection);\n    projection.setDefaultTileGrid(tileGrid);\n  }\n  return tileGrid;\n}\n\n/**\n * @param {TileGrid} tileGrid Tile grid.\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {import(\"./tilecoord.js\").TileCoord} Tile coordinate.\n */\nexport function wrapX(tileGrid, tileCoord, projection) {\n  const z = tileCoord[0];\n  const center = tileGrid.getTileCoordCenter(tileCoord);\n  const projectionExtent = extentFromProjection(projection);\n  if (!containsCoordinate(projectionExtent, center)) {\n    const worldWidth = getWidth(projectionExtent);\n    const worldsAway = Math.ceil(\n      (projectionExtent[0] - center[0]) / worldWidth,\n    );\n    center[0] += worldWidth * worldsAway;\n    return tileGrid.getTileCoordForCoordAndZ(center, z);\n  }\n  return tileCoord;\n}\n\n/**\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForExtent(extent, maxZoom, tileSize, corner) {\n  corner = corner !== undefined ? corner : 'top-left';\n\n  const resolutions = resolutionsFromExtent(extent, maxZoom, tileSize);\n\n  return new TileGrid({\n    extent: extent,\n    origin: getCorner(extent, corner),\n    resolutions: resolutions,\n    tileSize: tileSize,\n  });\n}\n\n/**\n * @typedef {Object} XYZOptions\n * @property {import(\"./extent.js\").Extent} [extent] Extent for the tile grid. The origin for an XYZ tile grid is the\n * top-left corner of the extent. If `maxResolution` is not provided the zero level of the grid is defined by the resolution\n * at which one tile fits in the provided extent. If not provided, the extent of the EPSG:3857 projection is used.\n * @property {number} [maxResolution] Resolution at level zero.\n * @property {number} [maxZoom] Maximum zoom. The default is `42`. This determines the number of levels\n * in the grid set. For example, a `maxZoom` of 21 means there are 22 levels in the grid set.\n * @property {number} [minZoom=0] Minimum zoom.\n * @property {number|import(\"./size.js\").Size} [tileSize=[256, 256]] Tile size in pixels.\n */\n\n/**\n * Creates a tile grid with a standard XYZ tiling scheme.\n * @param {XYZOptions} [options] Tile grid options.\n * @return {!TileGrid} Tile grid instance.\n * @api\n */\nexport function createXYZ(options) {\n  const xyzOptions = options || {};\n\n  const extent = xyzOptions.extent || getProjection('EPSG:3857').getExtent();\n\n  const gridOptions = {\n    extent: extent,\n    minZoom: xyzOptions.minZoom,\n    tileSize: xyzOptions.tileSize,\n    resolutions: resolutionsFromExtent(\n      extent,\n      xyzOptions.maxZoom,\n      xyzOptions.tileSize,\n      xyzOptions.maxResolution,\n    ),\n  };\n  return new TileGrid(gridOptions);\n}\n\n/**\n * Create a resolutions array from an extent.  A zoom factor of 2 is assumed.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {number} [maxResolution] Resolution at level zero.\n * @return {!Array<number>} Resolutions array.\n */\nfunction resolutionsFromExtent(extent, maxZoom, tileSize, maxResolution) {\n  maxZoom = maxZoom !== undefined ? maxZoom : DEFAULT_MAX_ZOOM;\n  tileSize = toSize(tileSize !== undefined ? tileSize : DEFAULT_TILE_SIZE);\n\n  const height = getHeight(extent);\n  const width = getWidth(extent);\n\n  maxResolution =\n    maxResolution > 0\n      ? maxResolution\n      : Math.max(width / tileSize[0], height / tileSize[1]);\n\n  const length = maxZoom + 1;\n  const resolutions = new Array(length);\n  for (let z = 0; z < length; ++z) {\n    resolutions[z] = maxResolution / Math.pow(2, z);\n  }\n  return resolutions;\n}\n\n/**\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @param {number} [maxZoom] Maximum zoom level (default is\n *     DEFAULT_MAX_ZOOM).\n * @param {number|import(\"./size.js\").Size} [tileSize] Tile size (default uses\n *     DEFAULT_TILE_SIZE).\n * @param {import(\"./extent.js\").Corner} [corner] Extent corner (default is `'top-left'`).\n * @return {!TileGrid} TileGrid instance.\n */\nexport function createForProjection(projection, maxZoom, tileSize, corner) {\n  const extent = extentFromProjection(projection);\n  return createForExtent(extent, maxZoom, tileSize, corner);\n}\n\n/**\n * Generate a tile grid extent from a projection.  If the projection has an\n * extent, it is used.  If not, a global extent is assumed.\n * @param {import(\"./proj.js\").ProjectionLike} projection Projection.\n * @return {import(\"./extent.js\").Extent} Extent.\n */\nexport function extentFromProjection(projection) {\n  projection = getProjection(projection);\n  let extent = projection.getExtent();\n  if (!extent) {\n    const half =\n      (180 * METERS_PER_UNIT.degrees) / projection.getMetersPerUnit();\n    extent = createOrUpdate(-half, -half, half, half);\n  }\n  return extent;\n}\n","/**\n * @module ol/tileurlfunction\n */\nimport {modulo} from './math.js';\nimport {hash as tileCoordHash} from './tilecoord.js';\nimport {renderXYZTemplate} from './uri.js';\n\n/**\n * @param {string} template Template.\n * @param {import(\"./tilegrid/TileGrid.js\").default|null} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplate(template, tileGrid) {\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      let maxY;\n      const z = tileCoord[0];\n      if (tileGrid) {\n        // The `{-y}` placeholder only works for sources that have a tile grid at construction\n        const range = tileGrid.getFullTileRange(z);\n        if (range) {\n          maxY = range.getHeight() - 1;\n        }\n      }\n      return renderXYZTemplate(template, z, tileCoord[1], tileCoord[2], maxY);\n    }\n  );\n}\n\n/**\n * @param {Array<string>} templates Templates.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTemplates(templates, tileGrid) {\n  const len = templates.length;\n  const tileUrlFunctions = new Array(len);\n  for (let i = 0; i < len; ++i) {\n    tileUrlFunctions[i] = createFromTemplate(templates[i], tileGrid);\n  }\n  return createFromTileUrlFunctions(tileUrlFunctions);\n}\n\n/**\n * @param {Array<import(\"./Tile.js\").UrlFunction>} tileUrlFunctions Tile URL Functions.\n * @return {import(\"./Tile.js\").UrlFunction} Tile URL function.\n */\nexport function createFromTileUrlFunctions(tileUrlFunctions) {\n  if (tileUrlFunctions.length === 1) {\n    return tileUrlFunctions[0];\n  }\n  return (\n    /**\n     * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile Coordinate.\n     * @param {number} pixelRatio Pixel ratio.\n     * @param {import(\"./proj/Projection.js\").default} projection Projection.\n     * @return {string|undefined} Tile URL.\n     */\n    function (tileCoord, pixelRatio, projection) {\n      if (!tileCoord) {\n        return undefined;\n      }\n      const h = tileCoordHash(tileCoord);\n      const index = modulo(h, tileUrlFunctions.length);\n      return tileUrlFunctions[index](tileCoord, pixelRatio, projection);\n    }\n  );\n}\n\n/**\n * @param {import(\"./tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n * @param {number} pixelRatio Pixel ratio.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @return {string|undefined} Tile URL.\n */\nexport function nullTileUrlFunction(tileCoord, pixelRatio, projection) {\n  return undefined;\n}\n","/**\n * @module ol/source/Tile\n */\nimport Event from '../events/Event.js';\nimport {scale as scaleSize, toSize} from '../size.js';\nimport {withinExtentAndZ} from '../tilecoord.js';\nimport {\n  getForProjection as getTileGridForProjection,\n  wrapX,\n} from '../tilegrid.js';\nimport {abstract, getUid} from '../util.js';\nimport Source from './Source.js';\n\n/***\n * @template Return\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./TileEventType\").TileSourceEventTypes, TileSourceEvent, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./TileEventType\").TileSourceEventTypes, Return>} TileSourceOnSignature\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {boolean} [wrapX=false] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @classdesc\n * Abstract base class; normally only used for creating subclasses and not\n * instantiated in apps.\n * Base class for sources providing images divided into a tile grid.\n *\n * @template {import(\"../Tile.js\").default} [TileType=import(\"../Tile.js\").default]\n * @abstract\n * @api\n */\nclass TileSource extends Source {\n  /**\n   * @param {Options} options SourceTile source options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      projection: options.projection,\n      state: options.state,\n      wrapX: options.wrapX,\n      interpolate: options.interpolate,\n    });\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.on;\n\n    /***\n     * @type {TileSourceOnSignature<import(\"../events\").EventsKey>}\n     */\n    this.once;\n\n    /***\n     * @type {TileSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.tilePixelRatio_ =\n      options.tilePixelRatio !== undefined ? options.tilePixelRatio : 1;\n\n    /**\n     * @type {import(\"../tilegrid/TileGrid.js\").default|null}\n     * @protected\n     */\n    this.tileGrid = options.tileGrid !== undefined ? options.tileGrid : null;\n\n    const tileSize = [256, 256];\n    if (this.tileGrid) {\n      toSize(this.tileGrid.getTileSize(this.tileGrid.getMinZoom()), tileSize);\n    }\n\n    /**\n     * @protected\n     * @type {import(\"../size.js\").Size}\n     */\n    this.tmpSize = [0, 0];\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.key_ = options.key || getUid(this);\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").Options}\n     */\n    this.tileOptions = {\n      transition: options.transition,\n      interpolate: options.interpolate,\n    };\n\n    /**\n     * zDirection hint, read by the renderer. Indicates which resolution should be used\n     * by a renderer if the views resolution does not match any resolution of the tile source.\n     * If 0, the nearest resolution will be used. If 1, the nearest lower resolution\n     * will be used. If -1, the nearest higher resolution will be used.\n     * @type {number|import(\"../array.js\").NearestDirectionFunction}\n     */\n    this.zDirection = options.zDirection ? options.zDirection : 0;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   */\n  getGutterForProjection(projection) {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   */\n  getKey() {\n    return this.key_;\n  }\n\n  /**\n   * Set the value to be used as the key for all tiles in the source.\n   * @param {string} key The key for tiles.\n   * @protected\n   */\n  setKey(key) {\n    if (this.key_ !== key) {\n      this.key_ = key;\n      this.changed();\n    }\n  }\n\n  /**\n   * @param {import(\"../proj/Projection\").default} [projection] Projection.\n   * @return {Array<number>|null} Resolutions.\n   * @override\n   */\n  getResolutions(projection) {\n    const tileGrid = projection\n      ? this.getTileGridForProjection(projection)\n      : this.tileGrid;\n    if (!tileGrid) {\n      return null;\n    }\n    return tileGrid.getResolutions();\n  }\n\n  /**\n   * @abstract\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {TileType|null} Tile.\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    return abstract();\n  }\n\n  /**\n   * Return the tile grid of the tile source.\n   * @return {import(\"../tilegrid/TileGrid.js\").default|null} Tile grid.\n   * @api\n   */\n  getTileGrid() {\n    return this.tileGrid;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   */\n  getTileGridForProjection(projection) {\n    if (!this.tileGrid) {\n      return getTileGridForProjection(projection);\n    }\n    return this.tileGrid;\n  }\n\n  /**\n   * Get the tile pixel ratio for this source. Subclasses may override this\n   * method, which is meant to return a supported pixel ratio that matches the\n   * provided `pixelRatio` as close as possible.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   */\n  getTilePixelRatio(pixelRatio) {\n    return this.tilePixelRatio_;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {import(\"../size.js\").Size} Tile size.\n   */\n  getTilePixelSize(z, pixelRatio, projection) {\n    const tileGrid = this.getTileGridForProjection(projection);\n    const tilePixelRatio = this.getTilePixelRatio(pixelRatio);\n    const tileSize = toSize(tileGrid.getTileSize(z), this.tmpSize);\n    if (tilePixelRatio == 1) {\n      return tileSize;\n    }\n    return scaleSize(tileSize, tilePixelRatio, this.tmpSize);\n  }\n\n  /**\n   * Returns a tile coordinate wrapped around the x-axis. When the tile coordinate\n   * is outside the resolution and extent range of the tile grid, `null` will be\n   * returned.\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Projection.\n   * @return {import(\"../tilecoord.js\").TileCoord} Tile coordinate to be passed to the tileUrlFunction or\n   *     null if no tile URL should be created for the passed `tileCoord`.\n   */\n  getTileCoordForTileUrlFunction(tileCoord, projection) {\n    const gridProjection =\n      projection !== undefined ? projection : this.getProjection();\n    const tileGrid =\n      projection !== undefined\n        ? this.getTileGridForProjection(gridProjection)\n        : this.tileGrid || this.getTileGridForProjection(gridProjection);\n    if (this.getWrapX() && gridProjection.isGlobal()) {\n      tileCoord = wrapX(tileGrid, tileCoord, gridProjection);\n    }\n    return withinExtentAndZ(tileCoord, tileGrid) ? tileCoord : null;\n  }\n\n  /**\n   * Remove all cached reprojected tiles from the source. The next render cycle will create new tiles.\n   * @api\n   */\n  clear() {}\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear();\n    super.refresh();\n  }\n}\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Tile~TileSource} instances are instances of this\n * type.\n */\nexport class TileSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {import(\"../Tile.js\").default} tile The tile.\n   */\n  constructor(type, tile) {\n    super(type);\n\n    /**\n     * The tile related to the event.\n     * @type {import(\"../Tile.js\").default}\n     * @api\n     */\n    this.tile = tile;\n  }\n}\n\nexport default TileSource;\n","/**\n * @module ol/source/UrlTile\n */\nimport TileState from '../TileState.js';\nimport {createFromTemplates} from '../tileurlfunction.js';\nimport {expandUrl} from '../uri.js';\nimport {getUid} from '../util.js';\nimport TileSource, {TileSourceEvent} from './Tile.js';\nimport TileEventType from './TileEventType.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection.\n * @property {import(\"./Source.js\").State} [state] State.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] TileGrid.\n * @property {import(\"../Tile.js\").LoadFunction} tileLoadFunction TileLoadFunction.\n * @property {number} [tilePixelRatio] TilePixelRatio.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] Url.\n * @property {Array<string>} [urls] Urls.\n * @property {boolean} [wrapX=true] WrapX.\n * @property {number} [transition] Transition.\n * @property {string} [key] Key.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0] ZDirection.\n * @property {boolean} [interpolate=false] Use interpolated values when resampling.  By default,\n * the nearest neighbor is used when resampling.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n */\nclass UrlTile extends TileSource {\n  /**\n   * @param {Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tilePixelRatio: options.tilePixelRatio,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate: options.interpolate,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.generateTileUrlFunction_ =\n      this.tileUrlFunction === UrlTile.prototype.tileUrlFunction;\n\n    /**\n     * @protected\n     * @type {import(\"../Tile.js\").LoadFunction}\n     */\n    this.tileLoadFunction = options.tileLoadFunction;\n\n    if (options.tileUrlFunction) {\n      this.tileUrlFunction = options.tileUrlFunction;\n    }\n\n    /**\n     * @protected\n     * @type {!Array<string>|null}\n     */\n    this.urls = null;\n\n    if (options.urls) {\n      this.setUrls(options.urls);\n    } else if (options.url) {\n      this.setUrl(options.url);\n    }\n\n    /**\n     * @private\n     * @type {!Object<string, boolean>}\n     */\n    this.tileLoadingKeys_ = {};\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile load function of the source.\n   * @return {import(\"../Tile.js\").LoadFunction} TileLoadFunction\n   * @api\n   */\n  getTileLoadFunction() {\n    return this.tileLoadFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the tile URL function of the source.\n   * @return {import(\"../Tile.js\").UrlFunction} TileUrlFunction\n   * @api\n   */\n  getTileUrlFunction() {\n    return Object.getPrototypeOf(this).tileUrlFunction === this.tileUrlFunction\n      ? this.tileUrlFunction.bind(this)\n      : this.tileUrlFunction;\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Return the URLs used for this source.\n   * When a tileUrlFunction is used instead of url or urls,\n   * null will be returned.\n   * @return {!Array<string>|null} URLs.\n   * @api\n   */\n  getUrls() {\n    return this.urls;\n  }\n\n  /**\n   * Handle tile change events.\n   * @param {import(\"../events/Event.js\").default} event Event.\n   * @protected\n   */\n  handleTileChange(event) {\n    const tile = /** @type {import(\"../Tile.js\").default} */ (event.target);\n    const uid = getUid(tile);\n    const tileState = tile.getState();\n    let type;\n    if (tileState == TileState.LOADING) {\n      this.tileLoadingKeys_[uid] = true;\n      type = TileEventType.TILELOADSTART;\n    } else if (uid in this.tileLoadingKeys_) {\n      delete this.tileLoadingKeys_[uid];\n      type =\n        tileState == TileState.ERROR\n          ? TileEventType.TILELOADERROR\n          : tileState == TileState.LOADED\n            ? TileEventType.TILELOADEND\n            : undefined;\n    }\n    if (type != undefined) {\n      this.dispatchEvent(new TileSourceEvent(type, tile));\n    }\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile load function of the source.\n   * @param {import(\"../Tile.js\").LoadFunction} tileLoadFunction Tile load function.\n   * @api\n   */\n  setTileLoadFunction(tileLoadFunction) {\n    this.tileLoadFunction = tileLoadFunction;\n    this.changed();\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the tile URL function of the source.\n   * @param {import(\"../Tile.js\").UrlFunction} tileUrlFunction Tile URL function.\n   * @param {string} [key] Optional new tile key for the source.\n   * @api\n   */\n  setTileUrlFunction(tileUrlFunction, key) {\n    this.tileUrlFunction = tileUrlFunction;\n    if (typeof key !== 'undefined') {\n      this.setKey(key);\n    } else {\n      this.changed();\n    }\n  }\n\n  /**\n   * Set the URL to use for requests.\n   * @param {string} url URL.\n   * @api\n   */\n  setUrl(url) {\n    const urls = expandUrl(url);\n    this.urls = urls;\n    this.setUrls(urls);\n  }\n\n  /**\n   * Deprecated.  Use an ImageTile source instead.\n   * Set the URLs to use for requests.\n   * @param {Array<string>} urls URLs.\n   * @api\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    if (this.generateTileUrlFunction_) {\n      this.setTileUrlFunction(createFromTemplates(urls, this.tileGrid), key);\n    } else {\n      this.setKey(key);\n    }\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {string|undefined} Tile URL.\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    return undefined;\n  }\n}\n\nexport default UrlTile;\n","/**\n * @module ol/source/TileEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a tile starts loading.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadstart\n   * @api\n   */\n  TILELOADSTART: 'tileloadstart',\n\n  /**\n   * Triggered when a tile finishes loading, either when its data is loaded,\n   * or when loading was aborted because the tile is no longer needed.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloadend\n   * @api\n   */\n  TILELOADEND: 'tileloadend',\n\n  /**\n   * Triggered if tile loading results in an error. Note that this is not the\n   * right place to re-fetch tiles. See {@link module:ol/ImageTile~ImageTile#load}\n   * for details.\n   * @event module:ol/source/Tile.TileSourceEvent#tileloaderror\n   * @api\n   */\n  TILELOADERROR: 'tileloaderror',\n};\n\n/**\n * @typedef {'tileloadstart'|'tileloadend'|'tileloaderror'} TileSourceEventTypes\n */\n","/**\n * @module ol/source/TileImage\n */\nimport ImageTile from '../ImageTile.js';\nimport TileState from '../TileState.js';\nimport EventType from '../events/EventType.js';\nimport {equivalent, get as getProjection} from '../proj.js';\nimport ReprojTile from '../reproj/Tile.js';\nimport {getForProjection as getTileGridForProjection} from '../tilegrid.js';\nimport {getUid} from '../util.js';\nimport UrlTile from './UrlTile.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {import(\"./Source.js\").State} [state] Source state.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service. For example, if the tile\n * service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`, and `{z}` placeholders.\n * A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`, may be\n * used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] An array of URL templates.\n * @property {boolean} [wrapX] Whether to wrap the world horizontally. The default, is to\n * request out-of-bounds tiles from the server. When set to `false`, only one\n * world will be rendered. When set to `true`, tiles will be requested for one\n * world only, but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {string} [key] Optional tile key for proper cache fetching\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @deprecated Use the ol/source/ImageTile.js instead.\n *\n * @fires import(\"./Tile.js\").TileSourceEvent\n * @api\n */\nclass TileImage extends UrlTile {\n  /**\n   * @param {!Options} options Image tile options.\n   */\n  constructor(options) {\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      projection: options.projection,\n      state: options.state,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction\n        ? options.tileLoadFunction\n        : defaultTileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX,\n      transition: options.transition,\n      interpolate:\n        options.interpolate !== undefined ? options.interpolate : true,\n      key: options.key,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @protected\n     * @type {?string}\n     */\n    this.crossOrigin =\n      options.crossOrigin !== undefined ? options.crossOrigin : null;\n\n    /**\n     * @protected\n     * @type {typeof ImageTile}\n     */\n    this.tileClass =\n      options.tileClass !== undefined ? options.tileClass : ImageTile;\n\n    /**\n     * @protected\n     * @type {!Object<string, import(\"../tilegrid/TileGrid.js\").default>}\n     */\n    this.tileGridForProjection = {};\n\n    /**\n     * @private\n     * @type {number|undefined}\n     */\n    this.reprojectionErrorThreshold_ = options.reprojectionErrorThreshold;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.renderReprojectionEdges_ = false;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutterForProjection(projection) {\n    if (\n      this.getProjection() &&\n      projection &&\n      !equivalent(this.getProjection(), projection)\n    ) {\n      return 0;\n    }\n    return this.getGutter();\n  }\n\n  /**\n   * @return {number} Gutter.\n   */\n  getGutter() {\n    return 0;\n  }\n\n  /**\n   * Return the key to be used for all tiles in the source.\n   * @return {string} The key for all tiles.\n   * @override\n   */\n  getKey() {\n    let key = super.getKey();\n    if (!this.getInterpolate()) {\n      key += ':disable-interpolation';\n    }\n    return key;\n  }\n\n  /**\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!import(\"../tilegrid/TileGrid.js\").default} Tile grid.\n   * @override\n   */\n  getTileGridForProjection(projection) {\n    const thisProj = this.getProjection();\n    if (this.tileGrid && (!thisProj || equivalent(thisProj, projection))) {\n      return this.tileGrid;\n    }\n    const projKey = getUid(projection);\n    if (!(projKey in this.tileGridForProjection)) {\n      this.tileGridForProjection[projKey] =\n        getTileGridForProjection(projection);\n    }\n    return this.tileGridForProjection[projKey];\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {string} key The key set on the tile.\n   * @return {!ImageTile} Tile.\n   * @private\n   */\n  createTile_(z, x, y, pixelRatio, projection, key) {\n    const tileCoord = [z, x, y];\n    const urlTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tileUrl = urlTileCoord\n      ? this.tileUrlFunction(urlTileCoord, pixelRatio, projection)\n      : undefined;\n    const tile = new this.tileClass(\n      tileCoord,\n      tileUrl !== undefined ? TileState.IDLE : TileState.EMPTY,\n      tileUrl !== undefined ? tileUrl : '',\n      this.crossOrigin,\n      this.tileLoadFunction,\n      this.tileOptions,\n    );\n    tile.key = key;\n    tile.addEventListener(EventType.CHANGE, this.handleTileChange.bind(this));\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!(ImageTile|ReprojTile)} Tile.\n   * @override\n   */\n  getTile(z, x, y, pixelRatio, projection) {\n    const sourceProjection = this.getProjection();\n    if (\n      !sourceProjection ||\n      !projection ||\n      equivalent(sourceProjection, projection)\n    ) {\n      return this.getTileInternal(\n        z,\n        x,\n        y,\n        pixelRatio,\n        sourceProjection || projection,\n      );\n    }\n    const tileCoord = [z, x, y];\n    const key = this.getKey();\n    const sourceTileGrid = this.getTileGridForProjection(sourceProjection);\n    const targetTileGrid = this.getTileGridForProjection(projection);\n    const wrappedTileCoord = this.getTileCoordForTileUrlFunction(\n      tileCoord,\n      projection,\n    );\n    const tile = new ReprojTile(\n      sourceProjection,\n      sourceTileGrid,\n      projection,\n      targetTileGrid,\n      tileCoord,\n      wrappedTileCoord,\n      this.getTilePixelRatio(pixelRatio),\n      this.getGutter(),\n      (z, x, y, pixelRatio) =>\n        this.getTileInternal(z, x, y, pixelRatio, sourceProjection),\n      this.reprojectionErrorThreshold_,\n      this.renderReprojectionEdges_,\n      this.tileOptions,\n    );\n    tile.key = key;\n    return tile;\n  }\n\n  /**\n   * @param {number} z Tile coordinate z.\n   * @param {number} x Tile coordinate x.\n   * @param {number} y Tile coordinate y.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {!import(\"../proj/Projection.js\").default} projection Projection.\n   * @return {!ImageTile} Tile.\n   * @protected\n   */\n  getTileInternal(z, x, y, pixelRatio, projection) {\n    const key = this.getKey();\n    return this.createTile_(z, x, y, pixelRatio, projection, key);\n  }\n\n  /**\n   * Sets whether to render reprojection edges or not (usually for debugging).\n   * @param {boolean} render Render the edges.\n   * @api\n   */\n  setRenderReprojectionEdges(render) {\n    if (this.renderReprojectionEdges_ == render) {\n      return;\n    }\n    this.renderReprojectionEdges_ = render;\n    this.changed();\n  }\n\n  /**\n   * Sets the tile grid to use when reprojecting the tiles to the given\n   * projection instead of the default tile grid for the projection.\n   *\n   * This can be useful when the default tile grid cannot be created\n   * (e.g. projection has no extent defined) or\n   * for optimization reasons (custom tile size, resolutions, ...).\n   *\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {import(\"../tilegrid/TileGrid.js\").default} tilegrid Tile grid to use for the projection.\n   * @api\n   */\n  setTileGridForProjection(projection, tilegrid) {\n    const proj = getProjection(projection);\n    if (proj) {\n      const projKey = getUid(proj);\n      if (!(projKey in this.tileGridForProjection)) {\n        this.tileGridForProjection[projKey] = tilegrid;\n      }\n    }\n  }\n}\n\n/**\n * @param {ImageTile} imageTile Image tile.\n * @param {string} src Source.\n */\nfunction defaultTileLoadFunction(imageTile, src) {\n  /** @type {HTMLImageElement|HTMLVideoElement} */ (imageTile.getImage()).src =\n    src;\n}\n\nexport default TileImage;\n","/**\n * @module ol/source/TileWMS\n */\n\nimport {buffer, createEmpty} from '../extent.js';\nimport {modulo} from '../math.js';\nimport {get as getProjection, transform} from '../proj.js';\nimport {calculateSourceResolution} from '../reproj.js';\nimport {compareVersions} from '../string.js';\nimport {hash as tileCoordHash} from '../tilecoord.js';\nimport {appendParams} from '../uri.js';\nimport TileImage from './TileImage.js';\nimport {DEFAULT_VERSION, getImageSrc, getRequestParams} from './wms.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {Object<string,*>} params WMS request parameters.\n * At least a `LAYERS` param is required. `STYLES` is\n * `''` by default. `VERSION` is `1.3.0` by default. `WIDTH`, `HEIGHT`, `BBOX`\n * and `CRS` (`SRS` for WMS version < 1.3.0) will be set dynamically.\n * @property {number} [gutter=0]\n * The size in pixels of the gutter around image tiles to ignore. By setting\n * this property to a non-zero value, images will be requested that are wider\n * and taller than the tile size by a value of `2 x gutter`.\n * Using a non-zero value allows artifacts of rendering at tile edges to be\n * ignored. If you control the WMS service it is recommended to address\n * \"artifacts at tile edges\" issues by properly configuring the WMS service. For\n * example, MapServer has a `tile_map_edge_buffer` configuration parameter for\n * this. See https://mapserver.org/output/tile_mode.html.\n * @property {boolean} [hidpi=true] Use the `ol/Map#pixelRatio` value when requesting\n * the image from the remote server.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass] Class used to instantiate image tiles.\n * Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid. Base this on the resolutions,\n * tilesize and extent supported by the server.\n * If this is not defined, a default grid will be used: if there is a projection\n * extent, the grid will be based on that; if not, a grid based on a global\n * extent with origin at 0,0 will be used.\n * @property {import(\"./wms.js\").ServerType} [serverType] The type of\n * the remote WMS server: `mapserver`, `geoserver`, `carmentaserver`, or `qgis`.\n * Only needed if `hidpi` is `true`.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {string} [url] WMS service URL.\n * @property {Array<string>} [urls] WMS service urls.\n * Use this instead of `url` when the WMS supports multiple urls for GetMap requests.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * When set to `false`, only one world\n * will be rendered. When `true`, tiles will be requested for one world only,\n * but they will be wrapped horizontally to render multiple worlds.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMS servers.\n * @api\n */\nclass TileWMS extends TileImage {\n  /**\n   * @param {Options} [options] Tile WMS options.\n   */\n  constructor(options) {\n    options = options ? options : /** @type {Options} */ ({});\n\n    const params = Object.assign({}, options.params);\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: options.tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.params_ = params;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.v13_ = true;\n\n    /**\n     * @private\n     * @type {import(\"./wms.js\").ServerType}\n     */\n    this.serverType_ = options.serverType;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.hidpi_ = options.hidpi !== undefined ? options.hidpi : true;\n\n    /**\n     * @private\n     * @type {import(\"../extent.js\").Extent}\n     */\n    this.tmpExtent_ = createEmpty();\n\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Return the GetFeatureInfo URL for the passed coordinate, resolution, and\n   * projection. Return `undefined` if the GetFeatureInfo URL cannot be\n   * constructed.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj.js\").ProjectionLike} projection Projection.\n   * @param {!Object} params GetFeatureInfo params. `INFO_FORMAT` at least should\n   *     be provided. If `QUERY_LAYERS` is not provided then the layers specified\n   *     in the `LAYERS` parameter will be used. `VERSION` should not be\n   *     specified here.\n   * @return {string|undefined} GetFeatureInfo URL.\n   * @api\n   */\n  getFeatureInfoUrl(coordinate, resolution, projection, params) {\n    const projectionObj = getProjection(projection);\n    const sourceProjectionObj = this.getProjection() || projectionObj;\n\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(sourceProjectionObj);\n    }\n\n    const sourceProjCoord = transform(\n      coordinate,\n      projectionObj,\n      sourceProjectionObj,\n    );\n    const sourceResolution = calculateSourceResolution(\n      sourceProjectionObj,\n      projectionObj,\n      coordinate,\n      resolution,\n    );\n\n    const z = tileGrid.getZForResolution(sourceResolution, this.zDirection);\n    const tileResolution = tileGrid.getResolution(z);\n    const tileCoord = tileGrid.getTileCoordForCoordAndZ(sourceProjCoord, z);\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = {\n      'QUERY_LAYERS': this.params_['LAYERS'],\n    };\n    Object.assign(\n      baseParams,\n      getRequestParams(this.params_, 'GetFeatureInfo'),\n      params,\n    );\n\n    const x = Math.floor((sourceProjCoord[0] - tileExtent[0]) / tileResolution);\n    const y = Math.floor((tileExtent[3] - sourceProjCoord[1]) / tileResolution);\n\n    baseParams[this.v13_ ? 'I' : 'X'] = x;\n    baseParams[this.v13_ ? 'J' : 'Y'] = y;\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      1,\n      sourceProjectionObj || projectionObj,\n      baseParams,\n    );\n  }\n\n  /**\n   * Return the GetLegendGraphic URL, optionally optimized for the passed\n   * resolution and possibly including any passed specific parameters. Returns\n   * `undefined` if the GetLegendGraphic URL cannot be constructed.\n   *\n   * @param {number} [resolution] Resolution. If set to undefined, `SCALE`\n   *     will not be calculated and included in URL.\n   * @param {Object} [params] GetLegendGraphic params. If `LAYER` is set, the\n   *     request is generated for this wms layer, else it will try to use the\n   *     configured wms layer. Default `FORMAT` is `image/png`.\n   *     `VERSION` should not be specified here.\n   * @return {string|undefined} GetLegendGraphic URL.\n   * @api\n   */\n  getLegendUrl(resolution, params) {\n    if (this.urls[0] === undefined) {\n      return undefined;\n    }\n\n    const baseParams = {\n      'SERVICE': 'WMS',\n      'VERSION': DEFAULT_VERSION,\n      'REQUEST': 'GetLegendGraphic',\n      'FORMAT': 'image/png',\n    };\n\n    if (params === undefined || params['LAYER'] === undefined) {\n      const layers = this.params_.LAYERS;\n      const isSingleLayer = !Array.isArray(layers) || layers.length === 1;\n      if (!isSingleLayer) {\n        return undefined;\n      }\n      baseParams['LAYER'] = layers;\n    }\n\n    if (resolution !== undefined) {\n      const mpu = this.getProjection()\n        ? this.getProjection().getMetersPerUnit()\n        : 1;\n      const pixelSize = 0.00028;\n      baseParams['SCALE'] = (resolution * mpu) / pixelSize;\n    }\n\n    Object.assign(baseParams, params);\n\n    return appendParams(/** @type {string} */ (this.urls[0]), baseParams);\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n\n  /**\n   * Get the user-provided params, i.e. those passed to the constructor through\n   * the \"params\" option, and possibly updated using the updateParams method.\n   * @return {Object} Params.\n   * @api\n   */\n  getParams() {\n    return this.params_;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n   * @param {import(\"../extent.js\").Extent} tileExtent Tile extent.\n   * @param {number} pixelRatio Pixel ratio.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   * @param {Object} params Params.\n   * @return {string|undefined} Request URL.\n   * @private\n   */\n  getRequestUrl_(tileCoord, tileExtent, pixelRatio, projection, params) {\n    const urls = this.urls;\n    if (!urls) {\n      return undefined;\n    }\n    let url;\n    if (urls.length == 1) {\n      url = urls[0];\n    } else {\n      const index = modulo(tileCoordHash(tileCoord), urls.length);\n      url = urls[index];\n    }\n\n    return getImageSrc(\n      tileExtent,\n      (\n        this.tileGrid || this.getTileGridForProjection(projection)\n      ).getResolution(tileCoord[0]),\n      pixelRatio,\n      projection,\n      url,\n      params,\n      this.serverType_,\n    );\n  }\n\n  /**\n   * Get the tile pixel ratio for this source.\n   * @param {number} pixelRatio Pixel ratio.\n   * @return {number} Tile pixel ratio.\n   * @override\n   */\n  getTilePixelRatio(pixelRatio) {\n    return !this.hidpi_ || this.serverType_ === undefined ? 1 : pixelRatio;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current params.\n   */\n  getKeyForParams_() {\n    let i = 0;\n    const res = [];\n    for (const key in this.params_) {\n      res[i++] = key + '-' + this.params_[key];\n    }\n    return res.join('/');\n  }\n\n  /**\n   * @param {Object} params New URL paremeters.\n   * @private\n   */\n  setParams_(params) {\n    this.params_ = params;\n    this.updateV13_();\n    this.setKey(this.getKeyForParams_());\n  }\n\n  /**\n   * Set the URL parameters passed to the WMS source.\n   * @param {Object} params New URL paremeters.\n   * @api\n   */\n  setParams(params) {\n    this.setParams_(Object.assign({}, params));\n  }\n\n  /**\n   * Update the URL parameters. This method can be used to update a subset of the WMS\n   * parameters. Call `setParams` to set all of the parameters.\n   * @param {Object} params Updated URL parameters.\n   * @api\n   */\n  updateParams(params) {\n    this.setParams_(Object.assign(this.params_, params));\n  }\n\n  /**\n   * @private\n   */\n  updateV13_() {\n    const version = this.params_['VERSION'] || DEFAULT_VERSION;\n    this.v13_ = compareVersions(version, '1.3') >= 0;\n  }\n\n  /**\n   * @param {import(\"../tilecoord.js\").TileCoord} tileCoord The tile coordinate\n   * @param {number} pixelRatio The pixel ratio\n   * @param {import(\"../proj/Projection.js\").default} projection The projection\n   * @return {string|undefined} The tile URL\n   * @override\n   */\n  tileUrlFunction(tileCoord, pixelRatio, projection) {\n    let tileGrid = this.getTileGrid();\n    if (!tileGrid) {\n      tileGrid = this.getTileGridForProjection(projection);\n    }\n\n    if (tileGrid.getResolutions().length <= tileCoord[0]) {\n      return undefined;\n    }\n\n    if (pixelRatio != 1 && (!this.hidpi_ || this.serverType_ === undefined)) {\n      pixelRatio = 1;\n    }\n\n    const tileResolution = tileGrid.getResolution(tileCoord[0]);\n    let tileExtent = tileGrid.getTileCoordExtent(tileCoord, this.tmpExtent_);\n\n    const gutter = this.gutter_;\n    if (gutter !== 0) {\n      tileExtent = buffer(tileExtent, tileResolution * gutter, tileExtent);\n    }\n\n    const baseParams = Object.assign(\n      {},\n      getRequestParams(this.params_, 'GetMap'),\n    );\n\n    return this.getRequestUrl_(\n      tileCoord,\n      tileExtent,\n      pixelRatio,\n      projection,\n      baseParams,\n    );\n  }\n}\n\nexport default TileWMS;\n","/**\n * @module ol/featureloader\n */\n\n/**\n *\n * @type {boolean}\n * @private\n */\nlet withCredentials = false;\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * load features.\n *\n * This function takes up to 5 arguments. These are an {@link module:ol/extent~Extent} representing\n * the area to be loaded, a `{number}` representing the resolution (map units per pixel), a\n * {@link module:ol/proj/Projection~Projection} for the projection, an optional success callback that should get\n * the loaded features passed as an argument and an optional failure callback with no arguments. If\n * the callbacks are not used, the corresponding vector source will not fire `'featuresloadend'` and\n * `'featuresloaderror'` events. `this` within the function is bound to the\n * {@link module:ol/source/Vector~VectorSource} it's called from.\n *\n * The function is responsible for loading the features and adding them to the\n * source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").FeatureLike]\n * @typedef {(\n *           extent: import(\"./extent.js\").Extent,\n *           resolution: number,\n *           projection: import(\"./proj/Projection.js\").default,\n *           success?: (features: Array<FeatureType>) => void,\n *           failure?: () => void) => void} FeatureLoader\n * @api\n */\n\n/**\n * {@link module:ol/source/Vector~VectorSource} sources use a function of this type to\n * get the url to load features from.\n *\n * This function takes an {@link module:ol/extent~Extent} representing the area\n * to be loaded, a `{number}` representing the resolution (map units per pixel)\n * and an {@link module:ol/proj/Projection~Projection} for the projection  as\n * arguments and returns a `{string}` representing the URL.\n * @typedef {function(import(\"./extent.js\").Extent, number, import(\"./proj/Projection.js\").default): string} FeatureUrlFunction\n * @api\n */\n\n/**\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @param {import(\"./proj/Projection.js\").default} projection Projection.\n * @param {function(Array<FeatureType>, import(\"./proj/Projection.js\").default): void} success Success\n *      Function called with the loaded features and optionally with the data projection.\n * @param {function(): void} failure Failure\n *      Function called when loading failed.\n */\nexport function loadFeaturesXhr(\n  url,\n  format,\n  extent,\n  resolution,\n  projection,\n  success,\n  failure,\n) {\n  const xhr = new XMLHttpRequest();\n  xhr.open(\n    'GET',\n    typeof url === 'function' ? url(extent, resolution, projection) : url,\n    true,\n  );\n  if (format.getType() == 'arraybuffer') {\n    xhr.responseType = 'arraybuffer';\n  }\n  xhr.withCredentials = withCredentials;\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  xhr.onload = function (event) {\n    // status will be 0 for file:// urls\n    if (!xhr.status || (xhr.status >= 200 && xhr.status < 300)) {\n      const type = format.getType();\n      try {\n        /** @type {Document|Node|Object|string|undefined} */\n        let source;\n        if (type == 'text' || type == 'json') {\n          source = xhr.responseText;\n        } else if (type == 'xml') {\n          source = xhr.responseXML || xhr.responseText;\n        } else if (type == 'arraybuffer') {\n          source = /** @type {ArrayBuffer} */ (xhr.response);\n        }\n        if (source) {\n          success(\n            /** @type {Array<FeatureType>} */\n            (\n              format.readFeatures(source, {\n                extent: extent,\n                featureProjection: projection,\n              })\n            ),\n            format.readProjection(source),\n          );\n        } else {\n          failure();\n        }\n      } catch {\n        failure();\n      }\n    } else {\n      failure();\n    }\n  };\n  /**\n   * @private\n   */\n  xhr.onerror = failure;\n  xhr.send();\n}\n\n/**\n * Create an XHR feature loader for a `url` and `format`. The feature loader\n * loads features (with XHR), parses the features, and adds them to the\n * vector source.\n *\n * @template {import(\"./Feature.js\").FeatureLike} [FeatureType=import(\"./Feature.js\").default]\n * @param {string|FeatureUrlFunction} url Feature URL service.\n * @param {import(\"./format/Feature.js\").default<FeatureType>} format Feature format.\n * @return {FeatureLoader<FeatureType>} The feature loader.\n * @api\n */\nexport function xhr(url, format) {\n  /**\n   * @param {import(\"./extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"./proj/Projection.js\").default} projection Projection.\n   * @param {function(Array<FeatureType>): void} [success] Success\n   *      Function called when loading succeeded.\n   * @param {function(): void} [failure] Failure\n   *      Function called when loading failed.\n   * @this {import(\"./source/Vector.js\").default<FeatureType>}\n   */\n  return function (extent, resolution, projection, success, failure) {\n    loadFeaturesXhr(\n      url,\n      format,\n      extent,\n      resolution,\n      projection,\n      /**\n       * @param {Array<FeatureType>} features The loaded features.\n       * @param {import(\"./proj/Projection.js\").default} dataProjection Data\n       * projection.\n       */\n      (features, dataProjection) => {\n        this.addFeatures(features);\n        if (success !== undefined) {\n          success(features);\n        }\n      },\n      () => {\n        this.changed();\n        if (failure !== undefined) {\n          failure();\n        }\n      },\n    );\n  };\n}\n\n/**\n * Setter for the withCredentials configuration for the XHR.\n *\n * @param {boolean} xhrWithCredentials The value of withCredentials to set.\n * Compare https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest/\n * @api\n */\nexport function setWithCredentials(xhrWithCredentials) {\n  withCredentials = xhrWithCredentials;\n}\n","/**\n * @module ol/loadingstrategy\n */\n\nimport {fromUserExtent, fromUserResolution, toUserExtent} from './proj.js';\n\n/**\n * Strategy function for loading all features with a single request.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function all(extent, resolution) {\n  return [[-Infinity, -Infinity, Infinity, Infinity]];\n}\n\n/**\n * Strategy function for loading features based on the view's extent and\n * resolution.\n * @param {import(\"./extent.js\").Extent} extent Extent.\n * @param {number} resolution Resolution.\n * @return {Array<import(\"./extent.js\").Extent>} Extents.\n * @api\n */\nexport function bbox(extent, resolution) {\n  return [extent];\n}\n\n/**\n * Creates a strategy function for loading features based on a tile grid.\n * @param {import(\"./tilegrid/TileGrid.js\").default} tileGrid Tile grid.\n * @return {function(import(\"./extent.js\").Extent, number, import(\"./proj.js\").Projection): Array<import(\"./extent.js\").Extent>} Loading strategy.\n * @api\n */\nexport function tile(tileGrid) {\n  return (\n    /**\n     * @param {import(\"./extent.js\").Extent} extent Extent.\n     * @param {number} resolution Resolution.\n     * @param {import(\"./proj.js\").Projection} projection Projection.\n     * @return {Array<import(\"./extent.js\").Extent>} Extents.\n     */\n    function (extent, resolution, projection) {\n      const z = tileGrid.getZForResolution(\n        fromUserResolution(resolution, projection),\n      );\n      const tileRange = tileGrid.getTileRangeForExtentAndZ(\n        fromUserExtent(extent, projection),\n        z,\n      );\n      /** @type {Array<import(\"./extent.js\").Extent>} */\n      const extents = [];\n      /** @type {import(\"./tilecoord.js\").TileCoord} */\n      const tileCoord = [z, 0, 0];\n      for (\n        tileCoord[1] = tileRange.minX;\n        tileCoord[1] <= tileRange.maxX;\n        ++tileCoord[1]\n      ) {\n        for (\n          tileCoord[2] = tileRange.minY;\n          tileCoord[2] <= tileRange.maxY;\n          ++tileCoord[2]\n        ) {\n          extents.push(\n            toUserExtent(tileGrid.getTileCoordExtent(tileCoord), projection),\n          );\n        }\n      }\n      return extents;\n    }\n  );\n}\n","/**\n * @module ol/structs/RBush\n */\nimport RBush_ from 'rbush';\nimport {createOrUpdate, equals} from '../extent.js';\nimport {isEmpty} from '../obj.js';\nimport {getUid} from '../util.js';\n\n/**\n * @typedef {import(\"rbush\").BBox & {value: T}} Entry\n * @template T\n */\n\n/**\n * @classdesc\n * Wrapper around the RBush by Vladimir Agafonkin.\n * See https://github.com/mourner/rbush.\n *\n * @template {Object} T\n */\nclass RBush {\n  /**\n   * @param {number} [maxEntries] Max entries.\n   */\n  constructor(maxEntries) {\n    /**\n     * @private\n     * @type {RBush_<Entry<T>>}\n     */\n    this.rbush_ = new RBush_(maxEntries);\n\n    /**\n     * A mapping between the objects added to this rbush wrapper\n     * and the objects that are actually added to the internal rbush.\n     * @private\n     * @type {Object<string, Entry<T>>}\n     */\n    this.items_ = {};\n  }\n\n  /**\n   * Insert a value into the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  insert(extent, value) {\n    /** @type {Entry<T>} */\n    const item = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n      value: value,\n    };\n\n    this.rbush_.insert(item);\n    this.items_[getUid(value)] = item;\n  }\n\n  /**\n   * Bulk-insert values into the RBush.\n   * @param {Array<import(\"../extent.js\").Extent>} extents Extents.\n   * @param {Array<T>} values Values.\n   */\n  load(extents, values) {\n    const items = new Array(values.length);\n    for (let i = 0, l = values.length; i < l; i++) {\n      const extent = extents[i];\n      const value = values[i];\n\n      /** @type {Entry<T>} */\n      const item = {\n        minX: extent[0],\n        minY: extent[1],\n        maxX: extent[2],\n        maxY: extent[3],\n        value: value,\n      };\n      items[i] = item;\n      this.items_[getUid(value)] = item;\n    }\n    this.rbush_.load(items);\n  }\n\n  /**\n   * Remove a value from the RBush.\n   * @param {T} value Value.\n   * @return {boolean} Removed.\n   */\n  remove(value) {\n    const uid = getUid(value);\n\n    // get the object in which the value was wrapped when adding to the\n    // internal rbush. then use that object to do the removal.\n    const item = this.items_[uid];\n    delete this.items_[uid];\n    return this.rbush_.remove(item) !== null;\n  }\n\n  /**\n   * Update the extent of a value in the RBush.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {T} value Value.\n   */\n  update(extent, value) {\n    const item = this.items_[getUid(value)];\n    const bbox = [item.minX, item.minY, item.maxX, item.maxY];\n    if (!equals(bbox, extent)) {\n      this.remove(value);\n      this.insert(extent, value);\n    }\n  }\n\n  /**\n   * Return all values in the RBush.\n   * @return {Array<T>} All.\n   */\n  getAll() {\n    const items = this.rbush_.all();\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Return all values in the given extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @return {Array<T>} All in extent.\n   */\n  getInExtent(extent) {\n    /** @type {import(\"rbush\").BBox} */\n    const bbox = {\n      minX: extent[0],\n      minY: extent[1],\n      maxX: extent[2],\n      maxY: extent[3],\n    };\n    const items = this.rbush_.search(bbox);\n    return items.map(function (item) {\n      return item.value;\n    });\n  }\n\n  /**\n   * Calls a callback function with each value in the tree.\n   * If the callback returns a truthy value, this value is returned without\n   * checking the rest of the tree.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEach(callback) {\n    return this.forEach_(this.getAll(), callback);\n  }\n\n  /**\n   * Calls a callback function with each value in the provided extent.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   */\n  forEachInExtent(extent, callback) {\n    return this.forEach_(this.getInExtent(extent), callback);\n  }\n\n  /**\n   * @param {Array<T>} values Values.\n   * @param {function(T): R} callback Callback.\n   * @return {R|undefined} Callback return value.\n   * @template R\n   * @private\n   */\n  forEach_(values, callback) {\n    let result;\n    for (let i = 0, l = values.length; i < l; i++) {\n      result = callback(values[i]);\n      if (result) {\n        return result;\n      }\n    }\n    return result;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    return isEmpty(this.items_);\n  }\n\n  /**\n   * Remove all values from the RBush.\n   */\n  clear() {\n    this.rbush_.clear();\n    this.items_ = {};\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} [extent] Extent.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   */\n  getExtent(extent) {\n    const data = this.rbush_.toJSON();\n    return createOrUpdate(data.minX, data.minY, data.maxX, data.maxY, extent);\n  }\n\n  /**\n   * @param {RBush<T>} rbush R-Tree.\n   */\n  concat(rbush) {\n    this.rbush_.load(rbush.rbush_.all());\n    for (const i in rbush.items_) {\n      this.items_[i] = rbush.items_[i];\n    }\n  }\n}\n\nexport default RBush;\n","/**\n * @module ol/source/VectorEventType\n */\n\n/**\n * @enum {string}\n */\nexport default {\n  /**\n   * Triggered when a feature is added to the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#addfeature\n   * @api\n   */\n  ADDFEATURE: 'addfeature',\n\n  /**\n   * Triggered when a feature is updated.\n   * @event module:ol/source/Vector.VectorSourceEvent#changefeature\n   * @api\n   */\n  CHANGEFEATURE: 'changefeature',\n\n  /**\n   * Triggered when the clear method is called on the source.\n   * @event module:ol/source/Vector.VectorSourceEvent#clear\n   * @api\n   */\n  CLEAR: 'clear',\n\n  /**\n   * Triggered when a feature is removed from the source.\n   * See {@link module:ol/source/Vector~VectorSource#clear source.clear()} for exceptions.\n   * @event module:ol/source/Vector.VectorSourceEvent#removefeature\n   * @api\n   */\n  REMOVEFEATURE: 'removefeature',\n\n  /**\n   * Triggered when features starts loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadstart\n   * @api\n   */\n  FEATURESLOADSTART: 'featuresloadstart',\n\n  /**\n   * Triggered when features finishes loading.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloadend\n   * @api\n   */\n  FEATURESLOADEND: 'featuresloadend',\n\n  /**\n   * Triggered if feature loading results in an error.\n   * @event module:ol/source/Vector.VectorSourceEvent#featuresloaderror\n   * @api\n   */\n  FEATURESLOADERROR: 'featuresloaderror',\n};\n\n/**\n * @typedef {'addfeature'|'changefeature'|'clear'|'removefeature'|'featuresloadstart'|'featuresloadend'|'featuresloaderror'} VectorSourceEventTypes\n */\n","/**\n * @module ol/source/Vector\n */\n\nimport Collection from '../Collection.js';\nimport CollectionEventType from '../CollectionEventType.js';\nimport ObjectEventType from '../ObjectEventType.js';\nimport {extend} from '../array.js';\nimport {assert} from '../asserts.js';\nimport Event from '../events/Event.js';\nimport EventType from '../events/EventType.js';\nimport {listen, unlistenByKey} from '../events.js';\nimport {containsExtent, equals, wrapAndSliceX} from '../extent.js';\nimport {xhr} from '../featureloader.js';\nimport {TRUE, VOID} from '../functions.js';\nimport {all as allStrategy} from '../loadingstrategy.js';\nimport {isEmpty} from '../obj.js';\nimport RenderFeature from '../render/Feature.js';\nimport RBush from '../structs/RBush.js';\nimport {getUid} from '../util.js';\nimport Source from './Source.js';\nimport VectorEventType from './VectorEventType.js';\n\n/**\n * A function that takes an {@link module:ol/extent~Extent} and a resolution as arguments, and\n * returns an array of {@link module:ol/extent~Extent} with the extents to load. Usually this\n * is one of the standard {@link module:ol/loadingstrategy} strategies.\n *\n * @typedef {function(import(\"../extent.js\").Extent, number, import(\"../proj/Projection.js\").default): Array<import(\"../extent.js\").Extent>} LoadingStrategy\n * @api\n */\n\n/**\n * @classdesc\n * Events emitted by {@link module:ol/source/Vector~VectorSource} instances are instances of this\n * type.\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nexport class VectorSourceEvent extends Event {\n  /**\n   * @param {string} type Type.\n   * @param {FeatureType} [feature] Feature.\n   * @param {Array<FeatureType>} [features] Features.\n   */\n  constructor(type, feature, features) {\n    super(type);\n\n    /**\n     * The added or removed feature for the `ADDFEATURE` and `REMOVEFEATURE` events, `undefined` otherwise.\n     * @type {FeatureType|undefined}\n     * @api\n     */\n    this.feature = feature;\n\n    /**\n     * The loaded features for the `FEATURESLOADED` event, `undefined` otherwise.\n     * @type {Array<FeatureType>|undefined}\n     * @api\n     */\n    this.features = features;\n  }\n}\n\n/***\n * @template {import(\"../Feature.js\").FeatureLike} [T=import(\"../Feature.js\").default]\n * @typedef {T extends RenderFeature ? T|Array<T> : T} FeatureClassOrArrayOfRenderFeatures\n */\n\n/***\n * @template Return\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {import(\"../Observable\").OnSignature<import(\"../Observable\").EventTypes, import(\"../events/Event.js\").default, Return> &\n *   import(\"../Observable\").OnSignature<import(\"../ObjectEventType\").Types, import(\"../Object\").ObjectEvent, Return> &\n *   import(\"../Observable\").OnSignature<import(\"./VectorEventType\").VectorSourceEventTypes, VectorSourceEvent<FeatureType>, Return> &\n *   import(\"../Observable\").CombinedOnSignature<import(\"../Observable\").EventTypes|import(\"../ObjectEventType\").Types|\n *     import(\"./VectorEventType\").VectorSourceEventTypes, Return>} VectorSourceOnSignature\n */\n\n/**\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {Array<FeatureType>|Collection<FeatureType>} [features]\n * Features. If provided as {@link module:ol/Collection~Collection}, the features in the source\n * and the collection will stay in sync.\n * @property {import(\"../format/Feature.js\").default<FeatureType>} [format] The feature format used by the XHR\n * feature loader when `url` is set. Required if `url` is set, otherwise ignored.\n * @property {import(\"../featureloader.js\").FeatureLoader<FeatureType>} [loader]\n * The loader function used to load features, from a remote source for example.\n * If this is not set and `url` is set, the source will create and use an XHR\n * feature loader. The `'featuresloadend'` and `'featuresloaderror'` events\n * will only fire if the `success` and `failure` callbacks are used.\n *\n * Example:\n *\n * ```js\n * import Vector from 'ol/source/Vector.js';\n * import GeoJSON from 'ol/format/GeoJSON.js';\n * import {bbox} from 'ol/loadingstrategy.js';\n *\n * const vectorSource = new Vector({\n *   format: new GeoJSON(),\n *   loader: function(extent, resolution, projection, success, failure) {\n *      const proj = projection.getCode();\n *      const url = 'https://ahocevar.com/geoserver/wfs?service=WFS&' +\n *          'version=1.1.0&request=GetFeature&typename=osm:water_areas&' +\n *          'outputFormat=application/json&srsname=' + proj + '&' +\n *          'bbox=' + extent.join(',') + ',' + proj;\n *      const xhr = new XMLHttpRequest();\n *      xhr.open('GET', url);\n *      const onError = function() {\n *        vectorSource.removeLoadedExtent(extent);\n *        failure();\n *      }\n *      xhr.onerror = onError;\n *      xhr.onload = function() {\n *        if (xhr.status == 200) {\n *          const features = vectorSource.getFormat().readFeatures(xhr.responseText);\n *          vectorSource.addFeatures(features);\n *          success(features);\n *        } else {\n *          onError();\n *        }\n *      }\n *      xhr.send();\n *    },\n *    strategy: bbox,\n *  });\n * ```\n * @property {boolean} [overlaps=true] This source may have overlapping geometries.\n * Setting this to `false` (e.g. for sources with polygons that represent administrative\n * boundaries or TopoJSON sources) allows the renderer to optimise fill and\n * stroke operations.\n * @property {LoadingStrategy} [strategy] The loading strategy to use.\n * By default an {@link module:ol/loadingstrategy.all}\n * strategy is used, a one-off strategy which loads all features at once.\n * @property {string|import(\"../featureloader.js\").FeatureUrlFunction} [url]\n * Setting this option instructs the source to load features using an XHR loader\n * (see {@link module:ol/featureloader.xhr}). Use a `string` and an\n * {@link module:ol/loadingstrategy.all} for a one-off download of all features from\n * the given URL. Use a {@link module:ol/featureloader~FeatureUrlFunction} to generate the url with\n * other loading strategies.\n * Requires `format` to be set as well.\n * When default XHR feature loader is provided, the features will\n * be transformed from the data projection to the view projection\n * during parsing. If your remote data source does not advertise its projection\n * properly, this transformation will be incorrect. For some formats, the\n * default projection (usually EPSG:4326) can be overridden by setting the\n * dataProjection constructor option on the format.\n * Note that if a source contains non-feature data, such as a GeoJSON geometry\n * or a KML NetworkLink, these will be ignored. Use a custom loader to load these.\n * @property {boolean} [useSpatialIndex=true]\n * By default, an RTree is used as spatial index. When features are removed and\n * added frequently, and the total number of features is low, setting this to\n * `false` may improve performance.\n *\n * Note that\n * {@link module:ol/source/Vector~VectorSource#getFeaturesInExtent},\n * {@link module:ol/source/Vector~VectorSource#getClosestFeatureToCoordinate} and\n * {@link module:ol/source/Vector~VectorSource#getExtent} cannot be used when `useSpatialIndex` is\n * set to `false`, and {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent} will loop\n * through all features.\n *\n * When set to `false`, the features will be maintained in an\n * {@link module:ol/Collection~Collection}, which can be retrieved through\n * {@link module:ol/source/Vector~VectorSource#getFeaturesCollection}.\n * @property {boolean} [wrapX=true] Wrap the world horizontally. For vector editing across the\n * -180° and 180° meridians to work properly, this should be set to `false`. The\n * resulting geometry coordinates will then exceed the world bounds.\n */\n\n/**\n * @classdesc\n * Provides a source of features for vector layers. Vector features provided\n * by this source are suitable for editing. See {@link module:ol/source/VectorTile~VectorTile} for\n * vector data that is optimized for rendering.\n *\n * @fires VectorSourceEvent\n * @api\n * @template {import(\"../Feature.js\").FeatureLike} [FeatureType=import(\"../Feature.js\").default]\n */\nclass VectorSource extends Source {\n  /**\n   * @param {Options<FeatureType>} [options] Vector source options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    super({\n      attributions: options.attributions,\n      interpolate: true,\n      projection: undefined,\n      state: 'ready',\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n    });\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.on;\n\n    /***\n     * @type {VectorSourceOnSignature<import(\"../events\").EventsKey, FeatureType>}\n     */\n    this.once;\n\n    /***\n     * @type {VectorSourceOnSignature<void>}\n     */\n    this.un;\n\n    /**\n     * @private\n     * @type {import(\"../featureloader.js\").FeatureLoader<import(\"../Feature.js\").FeatureLike>}\n     */\n    this.loader_ = VOID;\n\n    /**\n     * @private\n     * @type {import(\"../format/Feature.js\").default<FeatureType>|null}\n     */\n    this.format_ = options.format || null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.overlaps_ = options.overlaps === undefined ? true : options.overlaps;\n\n    /**\n     * @private\n     * @type {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined}\n     */\n    this.url_ = options.url;\n\n    if (options.loader !== undefined) {\n      this.loader_ = options.loader;\n    } else if (this.url_ !== undefined) {\n      assert(this.format_, '`format` must be set when `url` is set');\n      // create a XHR feature loader for \"url\" and \"format\"\n      this.loader_ = xhr(this.url_, this.format_);\n    }\n\n    /**\n     * @private\n     * @type {LoadingStrategy}\n     */\n    this.strategy_ =\n      options.strategy !== undefined ? options.strategy : allStrategy;\n\n    const useSpatialIndex =\n      options.useSpatialIndex !== undefined ? options.useSpatialIndex : true;\n\n    /**\n     * @private\n     * @type {RBush<FeatureType>}\n     */\n    this.featuresRtree_ = useSpatialIndex ? new RBush() : null;\n\n    /**\n     * @private\n     * @type {RBush<{extent: import(\"../extent.js\").Extent}>}\n     */\n    this.loadedExtentsRtree_ = new RBush();\n\n    /**\n     * @type {number}\n     * @private\n     */\n    this.loadingExtentsCount_ = 0;\n\n    /**\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.nullGeometryFeatures_ = {};\n\n    /**\n     * A lookup of features by id (the return from feature.getId()).\n     * @private\n     * @type {!Object<string, import('../Feature.js').FeatureLike|Array<import('../Feature.js').FeatureLike>>}\n     */\n    this.idIndex_ = {};\n\n    /**\n     * A lookup of features by uid (using getUid(feature)).\n     * @private\n     * @type {!Object<string, FeatureType>}\n     */\n    this.uidIndex_ = {};\n\n    /**\n     * @private\n     * @type {Object<string, Array<import(\"../events.js\").EventsKey>>}\n     */\n    this.featureChangeKeys_ = {};\n\n    /**\n     * @private\n     * @type {Collection<FeatureType>|null}\n     */\n    this.featuresCollection_ = null;\n\n    /** @type {Collection<FeatureType>} */\n    let collection;\n    /** @type {Array<FeatureType>} */\n    let features;\n    if (Array.isArray(options.features)) {\n      features = options.features;\n    } else if (options.features) {\n      collection = options.features;\n      features = collection.getArray();\n    }\n    if (!useSpatialIndex && collection === undefined) {\n      collection = new Collection(features);\n    }\n    if (features !== undefined) {\n      this.addFeaturesInternal(features);\n    }\n    if (collection !== undefined) {\n      this.bindFeaturesCollection_(collection);\n    }\n  }\n\n  /**\n   * Add a single feature to the source.  If you want to add a batch of features\n   * at once, call {@link module:ol/source/Vector~VectorSource#addFeatures #addFeatures()}\n   * instead. A feature will not be added to the source if feature with\n   * the same id is already there. The reason for this behavior is to avoid\n   * feature duplication when using bbox or tile loading strategies.\n   * Note: this also applies if a {@link module:ol/Collection~Collection} is used for features,\n   * meaning that if a feature with a duplicate id is added in the collection, it will\n   * be removed from it right away.\n   * @param {FeatureType} feature Feature to add.\n   * @api\n   */\n  addFeature(feature) {\n    this.addFeatureInternal(feature);\n    this.changed();\n  }\n\n  /**\n   * Add a feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @protected\n   */\n  addFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n\n    if (!this.addToIndex_(featureKey, feature)) {\n      if (this.featuresCollection_) {\n        this.featuresCollection_.remove(feature);\n      }\n      return;\n    }\n\n    this.setupChangeEvents_(featureKey, feature);\n\n    const geometry = feature.getGeometry();\n    if (geometry) {\n      const extent = geometry.getExtent();\n      if (this.featuresRtree_) {\n        this.featuresRtree_.insert(extent, feature);\n      }\n    } else {\n      this.nullGeometryFeatures_[featureKey] = feature;\n    }\n\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.ADDFEATURE, feature),\n    );\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  setupChangeEvents_(featureKey, feature) {\n    if (feature instanceof RenderFeature) {\n      return;\n    }\n    this.featureChangeKeys_[featureKey] = [\n      listen(feature, EventType.CHANGE, this.handleFeatureChange_, this),\n      listen(\n        feature,\n        ObjectEventType.PROPERTYCHANGE,\n        this.handleFeatureChange_,\n        this,\n      ),\n    ];\n  }\n\n  /**\n   * @param {string} featureKey Unique identifier for the feature.\n   * @param {FeatureType} feature The feature.\n   * @return {boolean} The feature is \"valid\", in the sense that it is also a\n   *     candidate for insertion into the Rtree.\n   * @private\n   */\n  addToIndex_(featureKey, feature) {\n    let valid = true;\n    if (feature.getId() !== undefined) {\n      const id = String(feature.getId());\n      if (!(id in this.idIndex_)) {\n        this.idIndex_[id] = feature;\n      } else if (feature instanceof RenderFeature) {\n        const indexedFeature = this.idIndex_[id];\n        if (!(indexedFeature instanceof RenderFeature)) {\n          valid = false;\n        } else if (!Array.isArray(indexedFeature)) {\n          this.idIndex_[id] = [indexedFeature, feature];\n        } else {\n          indexedFeature.push(feature);\n        }\n      } else {\n        valid = false;\n      }\n    }\n    if (valid) {\n      assert(\n        !(featureKey in this.uidIndex_),\n        'The passed `feature` was already added to the source',\n      );\n      this.uidIndex_[featureKey] = feature;\n    }\n    return valid;\n  }\n\n  /**\n   * Add a batch of features to the source.\n   * @param {Array<FeatureType>} features Features to add.\n   * @api\n   */\n  addFeatures(features) {\n    this.addFeaturesInternal(features);\n    this.changed();\n  }\n\n  /**\n   * Add features without firing a `change` event.\n   * @param {Array<FeatureType>} features Features.\n   * @protected\n   */\n  addFeaturesInternal(features) {\n    const extents = [];\n    /** @type {Array<FeatureType>} */\n    const newFeatures = [];\n    /** @type {Array<FeatureType>} */\n    const geometryFeatures = [];\n\n    for (let i = 0, length = features.length; i < length; i++) {\n      const feature = features[i];\n      const featureKey = getUid(feature);\n      if (this.addToIndex_(featureKey, feature)) {\n        newFeatures.push(feature);\n      }\n    }\n\n    for (let i = 0, length = newFeatures.length; i < length; i++) {\n      const feature = newFeatures[i];\n      const featureKey = getUid(feature);\n      this.setupChangeEvents_(featureKey, feature);\n\n      const geometry = feature.getGeometry();\n      if (geometry) {\n        const extent = geometry.getExtent();\n        extents.push(extent);\n        geometryFeatures.push(feature);\n      } else {\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    }\n    if (this.featuresRtree_) {\n      this.featuresRtree_.load(extents, geometryFeatures);\n    }\n\n    if (this.hasListener(VectorEventType.ADDFEATURE)) {\n      for (let i = 0, length = newFeatures.length; i < length; i++) {\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.ADDFEATURE, newFeatures[i]),\n        );\n      }\n    }\n  }\n\n  /**\n   * @param {!Collection<FeatureType>} collection Collection.\n   * @private\n   */\n  bindFeaturesCollection_(collection) {\n    let modifyingCollection = false;\n    this.addEventListener(\n      VectorEventType.ADDFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.push(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.addEventListener(\n      VectorEventType.REMOVEFEATURE,\n      /**\n       * @param {VectorSourceEvent<FeatureType>} evt The vector source event\n       */\n      function (evt) {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          collection.remove(evt.feature);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.ADD,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.addFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    collection.addEventListener(\n      CollectionEventType.REMOVE,\n      /**\n       * @param {import(\"../Collection.js\").CollectionEvent<FeatureType>} evt The collection event\n       */\n      (evt) => {\n        if (!modifyingCollection) {\n          modifyingCollection = true;\n          this.removeFeature(evt.element);\n          modifyingCollection = false;\n        }\n      },\n    );\n    this.featuresCollection_ = collection;\n  }\n\n  /**\n   * Remove all features from the source.\n   * @param {boolean} [fast] Skip dispatching of {@link module:ol/source/Vector.VectorSourceEvent#event:removefeature} events.\n   * @api\n   */\n  clear(fast) {\n    if (fast) {\n      for (const featureId in this.featureChangeKeys_) {\n        const keys = this.featureChangeKeys_[featureId];\n        keys.forEach(unlistenByKey);\n      }\n      if (!this.featuresCollection_) {\n        this.featureChangeKeys_ = {};\n        this.idIndex_ = {};\n        this.uidIndex_ = {};\n      }\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.forEach((feature) => {\n          this.removeFeatureInternal(feature);\n        });\n        for (const id in this.nullGeometryFeatures_) {\n          this.removeFeatureInternal(this.nullGeometryFeatures_[id]);\n        }\n      }\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.clear();\n    }\n\n    if (this.featuresRtree_) {\n      this.featuresRtree_.clear();\n    }\n    this.nullGeometryFeatures_ = {};\n\n    const clearEvent = new VectorSourceEvent(VectorEventType.CLEAR);\n    this.dispatchEvent(clearEvent);\n    this.changed();\n  }\n\n  /**\n   * Iterate through all features on the source, calling the provided callback\n   * with each one.  If the callback returns any \"truthy\" value, iteration will\n   * stop and the function will return the same value.\n   * Note: this function only iterate through the feature that have a defined geometry.\n   *\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     on the source.  Return a truthy value to stop iteration.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeature(callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEach(callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometries contain the provided\n   * coordinate, calling the callback with each feature.  If the callback returns\n   * a \"truthy\" value, iteration will stop and the function will return the same\n   * value.\n   *\n   * For {@link module:ol/render/Feature~RenderFeature} features, the callback will be\n   * called for all features.\n   *\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose goemetry contains the provided coordinate.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   */\n  forEachFeatureAtCoordinateDirect(coordinate, callback) {\n    const extent = [coordinate[0], coordinate[1], coordinate[0], coordinate[1]];\n    return this.forEachFeatureInExtent(extent, function (feature) {\n      const geometry = feature.getGeometry();\n      if (\n        geometry instanceof RenderFeature ||\n        geometry.intersectsCoordinate(coordinate)\n      ) {\n        return callback(feature);\n      }\n      return undefined;\n    });\n  }\n\n  /**\n   * Iterate through all features whose bounding box intersects the provided\n   * extent (note that the feature's geometry may not intersect the extent),\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you are interested in features whose geometry intersects an extent, call\n   * the {@link module:ol/source/Vector~VectorSource#forEachFeatureIntersectingExtent #forEachFeatureIntersectingExtent()} method instead.\n   *\n   * When `useSpatialIndex` is set to false, this method will loop through all\n   * features, equivalent to {@link module:ol/source/Vector~VectorSource#forEachFeature #forEachFeature()}.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose bounding box intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureInExtent(extent, callback) {\n    if (this.featuresRtree_) {\n      return this.featuresRtree_.forEachInExtent(extent, callback);\n    }\n    if (this.featuresCollection_) {\n      this.featuresCollection_.forEach(callback);\n    }\n  }\n\n  /**\n   * Iterate through all features whose geometry intersects the provided extent,\n   * calling the callback with each feature.  If the callback returns a \"truthy\"\n   * value, iteration will stop and the function will return the same value.\n   *\n   * If you only want to test for bounding box intersection, call the\n   * {@link module:ol/source/Vector~VectorSource#forEachFeatureInExtent #forEachFeatureInExtent()} method instead.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {function(FeatureType): T} callback Called with each feature\n   *     whose geometry intersects the provided extent.\n   * @return {T|undefined} The return value from the last call to the callback.\n   * @template T\n   * @api\n   */\n  forEachFeatureIntersectingExtent(extent, callback) {\n    return this.forEachFeatureInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       * @return {T|undefined} The return value from the last call to the callback.\n       */\n      function (feature) {\n        const geometry = feature.getGeometry();\n        if (\n          geometry instanceof RenderFeature ||\n          geometry.intersectsExtent(extent)\n        ) {\n          const result = callback(feature);\n          if (result) {\n            return result;\n          }\n        }\n      },\n    );\n  }\n\n  /**\n   * Get the features collection associated with this source. Will be `null`\n   * unless the source was configured with `useSpatialIndex` set to `false`, or\n   * with a {@link module:ol/Collection~Collection} as `features`.\n   * @return {Collection<FeatureType>|null} The collection of features.\n   * @api\n   */\n  getFeaturesCollection() {\n    return this.featuresCollection_;\n  }\n\n  /**\n   * Get a snapshot of the features currently on the source in random order. The returned array\n   * is a copy, the features are references to the features in the source.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeatures() {\n    let features;\n    if (this.featuresCollection_) {\n      features = this.featuresCollection_.getArray().slice(0);\n    } else if (this.featuresRtree_) {\n      features = this.featuresRtree_.getAll();\n      if (!isEmpty(this.nullGeometryFeatures_)) {\n        extend(features, Object.values(this.nullGeometryFeatures_));\n      }\n    }\n    return features;\n  }\n\n  /**\n   * Get all features whose geometry intersects the provided coordinate.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesAtCoordinate(coordinate) {\n    /** @type {Array<FeatureType>} */\n    const features = [];\n    this.forEachFeatureAtCoordinateDirect(coordinate, function (feature) {\n      features.push(feature);\n    });\n    return features;\n  }\n\n  /**\n   * Get all features whose bounding box intersects the provided extent.  Note that this returns an array of\n   * all features intersecting the given extent in random order (so it may include\n   * features whose geometries do not intersect the extent).\n   *\n   * When `useSpatialIndex` is set to false, this method will return all\n   * features.\n   *\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {import(\"../proj/Projection.js\").default} [projection] Include features\n   * where `extent` exceeds the x-axis bounds of `projection` and wraps around the world.\n   * @return {Array<FeatureType>} Features.\n   * @api\n   */\n  getFeaturesInExtent(extent, projection) {\n    if (this.featuresRtree_) {\n      const multiWorld = projection && projection.canWrapX() && this.getWrapX();\n\n      if (!multiWorld) {\n        return this.featuresRtree_.getInExtent(extent);\n      }\n\n      const extents = wrapAndSliceX(extent, projection);\n\n      return [].concat(\n        ...extents.map((anExtent) => this.featuresRtree_.getInExtent(anExtent)),\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getArray().slice(0);\n    }\n    return [];\n  }\n\n  /**\n   * Get the closest feature to the provided coordinate.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false` and the features in this source are of type\n   * {@link module:ol/Feature~Feature}.\n   * @param {import(\"../coordinate.js\").Coordinate} coordinate Coordinate.\n   * @param {function(FeatureType):boolean} [filter] Feature filter function.\n   *     The filter function will receive one argument, the {@link module:ol/Feature~Feature feature}\n   *     and it should return a boolean value. By default, no filtering is made.\n   * @return {FeatureType|null} Closest feature (or `null` if none found).\n   * @api\n   */\n  getClosestFeatureToCoordinate(coordinate, filter) {\n    // Find the closest feature using branch and bound.  We start searching an\n    // infinite extent, and find the distance from the first feature found.  This\n    // becomes the closest feature.  We then compute a smaller extent which any\n    // closer feature must intersect.  We continue searching with this smaller\n    // extent, trying to find a closer feature.  Every time we find a closer\n    // feature, we update the extent being searched so that any even closer\n    // feature must intersect it.  We continue until we run out of features.\n    const x = coordinate[0];\n    const y = coordinate[1];\n    let closestFeature = null;\n    const closestPoint = [NaN, NaN];\n    let minSquaredDistance = Infinity;\n    const extent = [-Infinity, -Infinity, Infinity, Infinity];\n    filter = filter ? filter : TRUE;\n    this.featuresRtree_.forEachInExtent(\n      extent,\n      /**\n       * @param {FeatureType} feature Feature.\n       */\n      function (feature) {\n        if (filter(feature)) {\n          const geometry = feature.getGeometry();\n          const previousMinSquaredDistance = minSquaredDistance;\n          minSquaredDistance =\n            geometry instanceof RenderFeature\n              ? 0\n              : geometry.closestPointXY(x, y, closestPoint, minSquaredDistance);\n          if (minSquaredDistance < previousMinSquaredDistance) {\n            closestFeature = feature;\n            // This is sneaky.  Reduce the extent that it is currently being\n            // searched while the R-Tree traversal using this same extent object\n            // is still in progress.  This is safe because the new extent is\n            // strictly contained by the old extent.\n            const minDistance = Math.sqrt(minSquaredDistance);\n            extent[0] = x - minDistance;\n            extent[1] = y - minDistance;\n            extent[2] = x + minDistance;\n            extent[3] = y + minDistance;\n          }\n        }\n      },\n    );\n    return closestFeature;\n  }\n\n  /**\n   * Get the extent of the features currently in the source.\n   *\n   * This method is not available when the source is configured with\n   * `useSpatialIndex` set to `false`.\n   * @param {import(\"../extent.js\").Extent} [extent] Destination extent. If provided, no new extent\n   *     will be created. Instead, that extent's coordinates will be overwritten.\n   * @return {import(\"../extent.js\").Extent} Extent.\n   * @api\n   */\n  getExtent(extent) {\n    return this.featuresRtree_.getExtent(extent);\n  }\n\n  /**\n   * Get a feature by its identifier (the value returned by feature.getId()). When `RenderFeature`s\n   * are used, `getFeatureById()` can return an array of `RenderFeature`s. This allows for handling\n   * of `GeometryCollection` geometries, where format readers create one `RenderFeature` per\n   * `GeometryCollection` member.\n   * Note that the index treats string and numeric identifiers as the same.  So\n   * `source.getFeatureById(2)` will return a feature with id `'2'` or `2`.\n   *\n   * @param {string|number} id Feature identifier.\n   * @return {FeatureClassOrArrayOfRenderFeatures<FeatureType>|null} The feature (or `null` if not found).\n   * @api\n   */\n  getFeatureById(id) {\n    const feature = this.idIndex_[id.toString()];\n    return feature !== undefined\n      ? /** @type {FeatureClassOrArrayOfRenderFeatures<FeatureType>} */ (\n          feature\n        )\n      : null;\n  }\n\n  /**\n   * Get a feature by its internal unique identifier (using `getUid`).\n   *\n   * @param {string} uid Feature identifier.\n   * @return {FeatureType|null} The feature (or `null` if not found).\n   */\n  getFeatureByUid(uid) {\n    const feature = this.uidIndex_[uid];\n    return feature !== undefined ? feature : null;\n  }\n\n  /**\n   * Get the format associated with this source.\n   *\n   * @return {import(\"../format/Feature.js\").default<FeatureType>|null}} The feature format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * @return {boolean} The source can have overlapping geometries.\n   */\n  getOverlaps() {\n    return this.overlaps_;\n  }\n\n  /**\n   * Get the url associated with this source.\n   *\n   * @return {string|import(\"../featureloader.js\").FeatureUrlFunction|undefined} The url.\n   * @api\n   */\n  getUrl() {\n    return this.url_;\n  }\n\n  /**\n   * @param {Event} event Event.\n   * @private\n   */\n  handleFeatureChange_(event) {\n    const feature = /** @type {FeatureType} */ (event.target);\n    const featureKey = getUid(feature);\n    const geometry = feature.getGeometry();\n    if (!geometry) {\n      if (!(featureKey in this.nullGeometryFeatures_)) {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.remove(feature);\n        }\n        this.nullGeometryFeatures_[featureKey] = feature;\n      }\n    } else {\n      const extent = geometry.getExtent();\n      if (featureKey in this.nullGeometryFeatures_) {\n        delete this.nullGeometryFeatures_[featureKey];\n        if (this.featuresRtree_) {\n          this.featuresRtree_.insert(extent, feature);\n        }\n      } else {\n        if (this.featuresRtree_) {\n          this.featuresRtree_.update(extent, feature);\n        }\n      }\n    }\n    const id = feature.getId();\n    if (id !== undefined) {\n      const sid = id.toString();\n      if (this.idIndex_[sid] !== feature) {\n        this.removeFromIdIndex_(feature);\n        this.idIndex_[sid] = feature;\n      }\n    } else {\n      this.removeFromIdIndex_(feature);\n      this.uidIndex_[featureKey] = feature;\n    }\n    this.changed();\n    this.dispatchEvent(\n      new VectorSourceEvent(VectorEventType.CHANGEFEATURE, feature),\n    );\n  }\n\n  /**\n   * Returns true if the feature is contained within the source.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} Has feature.\n   * @api\n   */\n  hasFeature(feature) {\n    const id = feature.getId();\n    if (id !== undefined) {\n      return id in this.idIndex_;\n    }\n    return getUid(feature) in this.uidIndex_;\n  }\n\n  /**\n   * @return {boolean} Is empty.\n   */\n  isEmpty() {\n    if (this.featuresRtree_) {\n      return (\n        this.featuresRtree_.isEmpty() && isEmpty(this.nullGeometryFeatures_)\n      );\n    }\n    if (this.featuresCollection_) {\n      return this.featuresCollection_.getLength() === 0;\n    }\n    return true;\n  }\n\n  /**\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @param {number} resolution Resolution.\n   * @param {import(\"../proj/Projection.js\").default} projection Projection.\n   */\n  loadFeatures(extent, resolution, projection) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const extentsToLoad = this.strategy_(extent, resolution, projection);\n    for (let i = 0, ii = extentsToLoad.length; i < ii; ++i) {\n      const extentToLoad = extentsToLoad[i];\n      const alreadyLoaded = loadedExtentsRtree.forEachInExtent(\n        extentToLoad,\n        /**\n         * @param {{extent: import(\"../extent.js\").Extent}} object Object.\n         * @return {boolean} Contains.\n         */\n        function (object) {\n          return containsExtent(object.extent, extentToLoad);\n        },\n      );\n      if (!alreadyLoaded) {\n        ++this.loadingExtentsCount_;\n        this.dispatchEvent(\n          new VectorSourceEvent(VectorEventType.FEATURESLOADSTART),\n        );\n        this.loader_.call(\n          this,\n          extentToLoad,\n          resolution,\n          projection,\n          /**\n           * @param {Array<FeatureType>} features Loaded features\n           */\n          (features) => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(\n                VectorEventType.FEATURESLOADEND,\n                undefined,\n                features,\n              ),\n            );\n          },\n          () => {\n            --this.loadingExtentsCount_;\n            this.dispatchEvent(\n              new VectorSourceEvent(VectorEventType.FEATURESLOADERROR),\n            );\n          },\n        );\n        loadedExtentsRtree.insert(extentToLoad, {extent: extentToLoad.slice()});\n      }\n    }\n    this.loading =\n      this.loader_.length < 4 ? false : this.loadingExtentsCount_ > 0;\n  }\n\n  /**\n   * @override\n   */\n  refresh() {\n    this.clear(true);\n    this.loadedExtentsRtree_.clear();\n    super.refresh();\n  }\n\n  /**\n   * Remove an extent from the list of loaded extents.\n   * @param {import(\"../extent.js\").Extent} extent Extent.\n   * @api\n   */\n  removeLoadedExtent(extent) {\n    const loadedExtentsRtree = this.loadedExtentsRtree_;\n    const obj = loadedExtentsRtree.forEachInExtent(extent, function (object) {\n      if (equals(object.extent, extent)) {\n        return object;\n      }\n    });\n    if (obj) {\n      loadedExtentsRtree.remove(obj);\n    }\n  }\n\n  /**\n   * Batch remove features from the source.  If you want to remove all features\n   * at once, use the {@link module:ol/source/Vector~VectorSource#clear #clear()} method\n   * instead.\n   * @param {Array<FeatureType>} features Features to remove.\n   * @api\n   */\n  removeFeatures(features) {\n    let removed = false;\n    for (let i = 0, ii = features.length; i < ii; ++i) {\n      removed = this.removeFeatureInternal(features[i]) || removed;\n    }\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove a single feature from the source. If you want to batch remove\n   * features, use the {@link module:ol/source/Vector~VectorSource#removeFeatures #removeFeatures()} method\n   * instead.\n   * @param {FeatureType} feature Feature to remove.\n   * @api\n   */\n  removeFeature(feature) {\n    if (!feature) {\n      return;\n    }\n    const removed = this.removeFeatureInternal(feature);\n    if (removed) {\n      this.changed();\n    }\n  }\n\n  /**\n   * Remove feature without firing a `change` event.\n   * @param {FeatureType} feature Feature.\n   * @return {boolean} True if the feature was removed, false if it was not found.\n   * @protected\n   */\n  removeFeatureInternal(feature) {\n    const featureKey = getUid(feature);\n    if (!(featureKey in this.uidIndex_)) {\n      return false;\n    }\n\n    if (featureKey in this.nullGeometryFeatures_) {\n      delete this.nullGeometryFeatures_[featureKey];\n    } else {\n      if (this.featuresRtree_) {\n        this.featuresRtree_.remove(feature);\n      }\n    }\n\n    const featureChangeKeys = this.featureChangeKeys_[featureKey];\n    featureChangeKeys?.forEach(unlistenByKey);\n    delete this.featureChangeKeys_[featureKey];\n\n    const id = feature.getId();\n    if (id !== undefined) {\n      const idString = id.toString();\n      const indexedFeature = this.idIndex_[idString];\n      if (indexedFeature === feature) {\n        delete this.idIndex_[idString];\n      } else if (Array.isArray(indexedFeature)) {\n        indexedFeature.splice(indexedFeature.indexOf(feature), 1);\n        if (indexedFeature.length === 1) {\n          this.idIndex_[idString] = indexedFeature[0];\n        }\n      }\n    }\n    delete this.uidIndex_[featureKey];\n    if (this.hasListener(VectorEventType.REMOVEFEATURE)) {\n      this.dispatchEvent(\n        new VectorSourceEvent(VectorEventType.REMOVEFEATURE, feature),\n      );\n    }\n    return true;\n  }\n\n  /**\n   * Remove a feature from the id index.  Called internally when the feature id\n   * may have changed.\n   * @param {FeatureType} feature The feature.\n   * @private\n   */\n  removeFromIdIndex_(feature) {\n    for (const id in this.idIndex_) {\n      if (this.idIndex_[id] === feature) {\n        delete this.idIndex_[id];\n        break;\n      }\n    }\n  }\n\n  /**\n   * Set the new loader of the source. The next render cycle will use the\n   * new loader.\n   * @param {import(\"../featureloader.js\").FeatureLoader} loader The loader to set.\n   * @api\n   */\n  setLoader(loader) {\n    this.loader_ = loader;\n  }\n\n  /**\n   * Points the source to a new url. The next render cycle will use the new url.\n   * @param {string|import(\"../featureloader.js\").FeatureUrlFunction} url Url.\n   * @api\n   */\n  setUrl(url) {\n    assert(this.format_, '`format` must be set when `url` is set');\n    this.url_ = url;\n    this.setLoader(xhr(url, this.format_));\n  }\n\n  /**\n   * @param {boolean} overlaps The source can have overlapping geometries.\n   */\n  setOverlaps(overlaps) {\n    this.overlaps_ = overlaps;\n    this.changed();\n  }\n}\n\nexport default VectorSource;\n","/**\n * @module ol/source/XYZ\n */\n\nimport {createXYZ, extentFromProjection} from '../tilegrid.js';\nimport TileImage from './TileImage.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../proj.js\").ProjectionLike} [projection='EPSG:3857'] Projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {number} [maxZoom=42] Optional max zoom level. Not used if `tileGrid` is provided.\n * @property {number} [minZoom=0] Optional min zoom level. Not used if `tileGrid` is provided.\n * @property {number} [maxResolution] Optional tile grid resolution at level zero. Not used if `tileGrid` is provided.\n * @property {import(\"../tilegrid/TileGrid.js\").default} [tileGrid] Tile grid.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Deprecated.  Use an ImageTile source with a loader\n * instead.  Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {number|import(\"../size.js\").Size} [tileSize=[256, 256]] The tile size used by the tile service.\n * Not used if `tileGrid` is provided.\n * @property {number} [gutter=0] The size in pixels of the gutter around image tiles to ignore.\n * This allows artifacts of rendering at tile edges to be ignored.\n * Supported images should be wider and taller than the tile size by a value of `2 x gutter`.\n * @property {import(\"../Tile.js\").UrlFunction} [tileUrlFunction] Deprecated.  Use an ImageTile source and provide a function\n * for the url option instead.\n * @property {string} [url] URL template. Must include `{x}`, `{y}` or `{-y}`,\n * and `{z}` placeholders. A `{?-?}` template pattern, for example `subdomain{a-f}.domain.com`,\n * may be used instead of defining each one separately in the `urls` option.\n * @property {Array<string>} [urls] Deprecated.  Use an ImageTile source and provide an array of URLs for the\n * url option instead.\n * @property {boolean} [wrapX=true] Whether to wrap the world horizontally.\n * @property {number} [transition=250] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data with URLs in a set XYZ format that are\n * defined in a URL template. By default, this follows the widely-used\n * Google grid where `x` 0 and `y` 0 are in the top left. Grids like\n * TMS where `x` 0 and `y` 0 are in the bottom left can be used by\n * using the `{-y}` placeholder in the URL template, so long as the\n * source does not have a custom tile grid. In this case\n * a `tileUrlFunction` can be used, such as:\n * ```js\n *  tileUrlFunction: function(coordinate) {\n *    return 'http://mapserver.com/' + coordinate[0] + '/' +\n *      coordinate[1] + '/' + (-coordinate[2] - 1) + '.png';\n *  }\n * ```\n * @api\n */\nclass XYZ extends TileImage {\n  /**\n   * @param {Options} [options] XYZ options.\n   */\n  constructor(options) {\n    options = options || {};\n\n    const projection =\n      options.projection !== undefined ? options.projection : 'EPSG:3857';\n\n    const tileGrid =\n      options.tileGrid !== undefined\n        ? options.tileGrid\n        : createXYZ({\n            extent: extentFromProjection(projection),\n            maxResolution: options.maxResolution,\n            maxZoom: options.maxZoom,\n            minZoom: options.minZoom,\n            tileSize: options.tileSize,\n          });\n\n    super({\n      attributions: options.attributions,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      tileUrlFunction: options.tileUrlFunction,\n      url: options.url,\n      urls: options.urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : true,\n      transition: options.transition,\n      attributionsCollapsible: options.attributionsCollapsible,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.gutter_ = options.gutter !== undefined ? options.gutter : 0;\n  }\n\n  /**\n   * @return {number} Gutter.\n   * @override\n   */\n  getGutter() {\n    return this.gutter_;\n  }\n}\n\nexport default XYZ;\n","/**\n * @module ol/tilegrid/WMTS\n */\n\nimport {get as getProjection} from '../proj.js';\nimport TileGrid from './TileGrid.js';\n\n/**\n * @typedef {Object} Options\n * @property {import(\"../extent.js\").Extent} [extent] Extent for the tile grid. No tiles\n * outside this extent will be requested by {@link module:ol/source/Tile~TileSource} sources.\n * When no `origin` or `origins` are configured, the `origin` will be set to the\n * top-left corner of the extent.\n * @property {import(\"../coordinate.js\").Coordinate} [origin] The tile grid origin, i.e.\n * where the `x` and `y` axes meet (`[z, 0, 0]`). Tile coordinates increase left\n * to right and downwards. If not specified, `extent` or `origins` must be provided.\n * @property {Array<import(\"../coordinate.js\").Coordinate>} [origins] Tile grid origins,\n * i.e. where the `x` and `y` axes meet (`[z, 0, 0]`), for each zoom level. If\n * given, the array length should match the length of the `resolutions` array, i.e.\n * each resolution can have a different origin. Tile coordinates increase left to\n * right and downwards. If not specified, `extent` or `origin` must be provided.\n * @property {!Array<number>} resolutions Resolutions. The array index of each\n * resolution needs to match the zoom level. This means that even if a `minZoom`\n * is configured, the resolutions array will have a length of `maxZoom + 1`\n * @property {!Array<string>} matrixIds matrix IDs. The length of this array needs\n * to match the length of the `resolutions` array.\n * @property {Array<import(\"../size.js\").Size>} [sizes] Number of tile rows and columns\n * of the grid for each zoom level. The values here are the `TileMatrixWidth` and\n * `TileMatrixHeight` advertised in the GetCapabilities response of the WMTS, and\n * define each zoom level's extent together with the `origin` or `origins`.\n * A grid `extent` can be configured in addition, and will further limit the extent for\n * which tile requests are made by sources. If the bottom-left corner of\n * an extent is used as `origin` or `origins`, then the `y` value must be\n * negative because OpenLayers tile coordinates use the top left as the origin.\n * @property {number|import(\"../size.js\").Size} [tileSize] Tile size.\n * @property {Array<number|import(\"../size.js\").Size>} [tileSizes] Tile sizes. The length of\n * this array needs to match the length of the `resolutions` array.\n */\n\n/**\n * @classdesc\n * Set the grid pattern for sources accessing WMTS tiled-image servers.\n * @api\n */\nclass WMTSTileGrid extends TileGrid {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    super({\n      extent: options.extent,\n      origin: options.origin,\n      origins: options.origins,\n      resolutions: options.resolutions,\n      tileSize: options.tileSize,\n      tileSizes: options.tileSizes,\n      sizes: options.sizes,\n    });\n\n    /**\n     * @private\n     * @type {!Array<string>}\n     */\n    this.matrixIds_ = options.matrixIds;\n  }\n\n  /**\n   * @param {number} z Z.\n   * @return {string} MatrixId..\n   */\n  getMatrixId(z) {\n    return this.matrixIds_[z];\n  }\n\n  /**\n   * Get the list of matrix identifiers.\n   * @return {Array<string>} MatrixIds.\n   * @api\n   */\n  getMatrixIds() {\n    return this.matrixIds_;\n  }\n}\n\nexport default WMTSTileGrid;\n\n/**\n * Create a tile grid from a WMTS capabilities matrix set and an\n * optional TileMatrixSetLimits.\n * @param {Object} matrixSet An object representing a matrixSet in the\n *     capabilities document.\n * @param {import(\"../extent.js\").Extent} [extent] An optional extent to restrict the tile\n *     ranges the server provides.\n * @param {Array<Object>} [matrixLimits] An optional object representing\n *     the available matrices for tileGrid.\n * @return {WMTSTileGrid} WMTS tileGrid instance.\n * @api\n */\nexport function createFromCapabilitiesMatrixSet(\n  matrixSet,\n  extent,\n  matrixLimits,\n) {\n  /** @type {!Array<number>} */\n  const resolutions = [];\n  /** @type {!Array<string>} */\n  const matrixIds = [];\n  /** @type {!Array<import(\"../coordinate.js\").Coordinate>} */\n  const origins = [];\n  /** @type {!Array<number|import(\"../size.js\").Size>} */\n  const tileSizes = [];\n  /** @type {!Array<import(\"../size.js\").Size>} */\n  const sizes = [];\n\n  matrixLimits = matrixLimits !== undefined ? matrixLimits : [];\n\n  const supportedCRSPropName = 'SupportedCRS';\n  const matrixIdsPropName = 'TileMatrix';\n  const identifierPropName = 'Identifier';\n  const scaleDenominatorPropName = 'ScaleDenominator';\n  const topLeftCornerPropName = 'TopLeftCorner';\n  const tileWidthPropName = 'TileWidth';\n  const tileHeightPropName = 'TileHeight';\n\n  const code = matrixSet[supportedCRSPropName];\n  const projection = getProjection(code);\n  const metersPerUnit = projection.getMetersPerUnit();\n  // swap origin x and y coordinates if axis orientation is lat/long\n  const switchOriginXY = projection.getAxisOrientation().startsWith('ne');\n\n  matrixSet[matrixIdsPropName].sort(function (a, b) {\n    return b[scaleDenominatorPropName] - a[scaleDenominatorPropName];\n  });\n\n  matrixSet[matrixIdsPropName].forEach(function (elt) {\n    let matrixAvailable;\n    // use of matrixLimits to filter TileMatrices from GetCapabilities\n    // TileMatrixSet from unavailable matrix levels.\n    if (matrixLimits.length > 0) {\n      matrixAvailable = matrixLimits.find(function (elt_ml) {\n        if (elt[identifierPropName] == elt_ml[matrixIdsPropName]) {\n          return true;\n        }\n        // Fallback for tileMatrix identifiers that don't get prefixed\n        // by their tileMatrixSet identifiers.\n        if (!elt[identifierPropName].includes(':')) {\n          return (\n            matrixSet[identifierPropName] + ':' + elt[identifierPropName] ===\n            elt_ml[matrixIdsPropName]\n          );\n        }\n        return false;\n      });\n    } else {\n      matrixAvailable = true;\n    }\n\n    if (matrixAvailable) {\n      matrixIds.push(elt[identifierPropName]);\n      const resolution =\n        (elt[scaleDenominatorPropName] * 0.28e-3) / metersPerUnit;\n      const tileWidth = elt[tileWidthPropName];\n      const tileHeight = elt[tileHeightPropName];\n      if (switchOriginXY) {\n        origins.push([\n          elt[topLeftCornerPropName][1],\n          elt[topLeftCornerPropName][0],\n        ]);\n      } else {\n        origins.push(elt[topLeftCornerPropName]);\n      }\n      resolutions.push(resolution);\n      tileSizes.push(\n        tileWidth == tileHeight ? tileWidth : [tileWidth, tileHeight],\n      );\n      sizes.push([elt['MatrixWidth'], elt['MatrixHeight']]);\n    }\n  });\n\n  return new WMTSTileGrid({\n    extent: extent,\n    origins: origins,\n    resolutions: resolutions,\n    matrixIds: matrixIds,\n    tileSizes: tileSizes,\n    sizes: sizes,\n  });\n}\n","/**\n * @module ol/source/WMTS\n */\n\nimport {containsExtent} from '../extent.js';\nimport {equivalent, get as getProjection, transformExtent} from '../proj.js';\nimport {createFromCapabilitiesMatrixSet} from '../tilegrid/WMTS.js';\nimport {createFromTileUrlFunctions} from '../tileurlfunction.js';\nimport {appendParams, expandUrl} from '../uri.js';\nimport TileImage from './TileImage.js';\n\n/**\n * Request encoding. One of 'KVP', 'REST'.\n * @typedef {'KVP' | 'REST'} RequestEncoding\n */\n\n/**\n * @typedef {Object} Options\n * @property {import(\"./Source.js\").AttributionLike} [attributions] Attributions.\n * @property {boolean} [attributionsCollapsible=true] Attributions are collapsible.\n * @property {number} [cacheSize] Deprecated.  Use the cacheSize option on the layer instead.\n * @property {null|string} [crossOrigin] The `crossOrigin` attribute for loaded images.  Note that\n * you must provide a `crossOrigin` value if you want to access pixel data with the Canvas renderer.\n * See https://developer.mozilla.org/en-US/docs/Web/HTML/CORS_enabled_image for more detail.\n * @property {boolean} [interpolate=true] Use interpolated values when resampling.  By default,\n * linear interpolation is used when resampling.  Set to false to use the nearest neighbor instead.\n * @property {import(\"../tilegrid/WMTS.js\").default} tileGrid Tile grid.\n * @property {import(\"../proj.js\").ProjectionLike} [projection] Projection. Default is the view projection.\n * @property {number} [reprojectionErrorThreshold=0.5] Maximum allowed reprojection error (in pixels).\n * Higher values can increase reprojection performance, but decrease precision.\n * @property {RequestEncoding} [requestEncoding='KVP'] Request encoding.\n * @property {string} layer Layer name as advertised in the WMTS capabilities.\n * @property {string} style Style name as advertised in the WMTS capabilities.\n * @property {typeof import(\"../ImageTile.js\").default} [tileClass]  Class used to instantiate image tiles. Default is {@link module:ol/ImageTile~ImageTile}.\n * @property {number} [tilePixelRatio=1] The pixel ratio used by the tile service.\n * For example, if the tile service advertizes 256px by 256px tiles but actually sends 512px\n * by 512px images (for retina/hidpi devices) then `tilePixelRatio`\n * should be set to `2`.\n * @property {string} [format='image/jpeg'] Image format. Only used when `requestEncoding` is `'KVP'`.\n * @property {string} [version='1.0.0'] WMTS version.\n * @property {string} matrixSet Matrix set.\n * @property {!Object} [dimensions] Additional \"dimensions\" for tile requests.\n * This is an object with properties named like the advertised WMTS dimensions.\n * @property {string} [url]  A URL for the service.\n * For the RESTful request encoding, this is a URL\n * template.  For KVP encoding, it is normal URL. A `{?-?}` template pattern,\n * for example `subdomain{a-f}.domain.com`, may be used instead of defining\n * each one separately in the `urls` option.\n * @property {import(\"../Tile.js\").LoadFunction} [tileLoadFunction] Optional function to load a tile given a URL. The default is\n * ```js\n * function(imageTile, src) {\n *   imageTile.getImage().src = src;\n * };\n * ```\n * @property {Array<string>} [urls] An array of URLs.\n * Requests will be distributed among the URLs in this array.\n * @property {boolean} [wrapX=false] Whether to wrap the world horizontally.\n * @property {number} [transition] Duration of the opacity transition for rendering.\n * To disable the opacity transition, pass `transition: 0`.\n * @property {number|import(\"../array.js\").NearestDirectionFunction} [zDirection=0]\n * Choose whether to use tiles with a higher or lower zoom level when between integer\n * zoom levels. See {@link module:ol/tilegrid/TileGrid~TileGrid#getZForResolution}.\n */\n\n/**\n * @classdesc\n * Layer source for tile data from WMTS servers.\n * @api\n */\nclass WMTS extends TileImage {\n  /**\n   * @param {Options} options WMTS options.\n   */\n  constructor(options) {\n    // TODO: add support for TileMatrixLimits\n\n    const requestEncoding =\n      options.requestEncoding !== undefined ? options.requestEncoding : 'KVP';\n\n    // FIXME: should we create a default tileGrid?\n    // we could issue a getCapabilities xhr to retrieve missing configuration\n    const tileGrid = options.tileGrid;\n\n    let urls = options.urls;\n    if (urls === undefined && options.url !== undefined) {\n      urls = expandUrl(options.url);\n    }\n\n    super({\n      attributions: options.attributions,\n      attributionsCollapsible: options.attributionsCollapsible,\n      cacheSize: options.cacheSize,\n      crossOrigin: options.crossOrigin,\n      interpolate: options.interpolate,\n      projection: options.projection,\n      reprojectionErrorThreshold: options.reprojectionErrorThreshold,\n      tileClass: options.tileClass,\n      tileGrid: tileGrid,\n      tileLoadFunction: options.tileLoadFunction,\n      tilePixelRatio: options.tilePixelRatio,\n      urls: urls,\n      wrapX: options.wrapX !== undefined ? options.wrapX : false,\n      transition: options.transition,\n      zDirection: options.zDirection,\n    });\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.version_ = options.version !== undefined ? options.version : '1.0.0';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.format_ = options.format !== undefined ? options.format : 'image/jpeg';\n\n    /**\n     * @private\n     * @type {!Object}\n     */\n    this.dimensions_ =\n      options.dimensions !== undefined ? options.dimensions : {};\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.layer_ = options.layer;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.matrixSet_ = options.matrixSet;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.style_ = options.style;\n\n    // FIXME: should we guess this requestEncoding from options.url(s)\n    //        structure? that would mean KVP only if a template is not provided.\n\n    /**\n     * @private\n     * @type {RequestEncoding}\n     */\n    this.requestEncoding_ = requestEncoding;\n\n    this.setKey(this.getKeyForDimensions_());\n\n    if (urls && urls.length > 0) {\n      this.tileUrlFunction = createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      );\n    }\n  }\n\n  /**\n   * Set the URLs to use for requests.\n   * URLs may contain OGC conform URL Template Variables: {TileMatrix}, {TileRow}, {TileCol}.\n   * @param {Array<string>} urls URLs.\n   * @override\n   */\n  setUrls(urls) {\n    this.urls = urls;\n    const key = urls.join('\\n');\n    this.setTileUrlFunction(\n      createFromTileUrlFunctions(\n        urls.map(this.createFromWMTSTemplate.bind(this)),\n      ),\n      key,\n    );\n  }\n\n  /**\n   * Get the dimensions, i.e. those passed to the constructor through the\n   * \"dimensions\" option, and possibly updated using the updateDimensions\n   * method.\n   * @return {!Object} Dimensions.\n   * @api\n   */\n  getDimensions() {\n    return this.dimensions_;\n  }\n\n  /**\n   * Return the image format of the WMTS source.\n   * @return {string} Format.\n   * @api\n   */\n  getFormat() {\n    return this.format_;\n  }\n\n  /**\n   * Return the layer of the WMTS source.\n   * @return {string} Layer.\n   * @api\n   */\n  getLayer() {\n    return this.layer_;\n  }\n\n  /**\n   * Return the matrix set of the WMTS source.\n   * @return {string} MatrixSet.\n   * @api\n   */\n  getMatrixSet() {\n    return this.matrixSet_;\n  }\n\n  /**\n   * Return the request encoding, either \"KVP\" or \"REST\".\n   * @return {RequestEncoding} Request encoding.\n   * @api\n   */\n  getRequestEncoding() {\n    return this.requestEncoding_;\n  }\n\n  /**\n   * Return the style of the WMTS source.\n   * @return {string} Style.\n   * @api\n   */\n  getStyle() {\n    return this.style_;\n  }\n\n  /**\n   * Return the version of the WMTS source.\n   * @return {string} Version.\n   * @api\n   */\n  getVersion() {\n    return this.version_;\n  }\n\n  /**\n   * @private\n   * @return {string} The key for the current dimensions.\n   */\n  getKeyForDimensions_() {\n    const res = this.urls ? this.urls.slice(0) : [];\n    for (const key in this.dimensions_) {\n      res.push(key + '-' + this.dimensions_[key]);\n    }\n    return res.join('/');\n  }\n\n  /**\n   * Update the dimensions.\n   * @param {Object} dimensions Dimensions.\n   * @api\n   */\n  updateDimensions(dimensions) {\n    Object.assign(this.dimensions_, dimensions);\n    this.setKey(this.getKeyForDimensions_());\n  }\n\n  /**\n   * @param {string} template Template.\n   * @return {import(\"../Tile.js\").UrlFunction} Tile URL function.\n   */\n  createFromWMTSTemplate(template) {\n    const requestEncoding = this.requestEncoding_;\n\n    // context property names are lower case to allow for a case insensitive\n    // replacement as some services use different naming conventions\n    const context = {\n      'layer': this.layer_,\n      'style': this.style_,\n      'tilematrixset': this.matrixSet_,\n    };\n\n    if (requestEncoding == 'KVP') {\n      Object.assign(context, {\n        'Service': 'WMTS',\n        'Request': 'GetTile',\n        'Version': this.version_,\n        'Format': this.format_,\n      });\n    }\n\n    // TODO: we may want to create our own appendParams function so that params\n    // order conforms to wmts spec guidance, and so that we can avoid to escape\n    // special template params\n\n    template =\n      requestEncoding == 'KVP'\n        ? appendParams(template, context)\n        : template.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return p.toLowerCase() in context ? context[p.toLowerCase()] : m;\n          });\n\n    const tileGrid = /** @type {import(\"../tilegrid/WMTS.js\").default} */ (\n      this.tileGrid\n    );\n    const dimensions = this.dimensions_;\n\n    return (\n      /**\n       * @param {import(\"../tilecoord.js\").TileCoord} tileCoord Tile coordinate.\n       * @param {number} pixelRatio Pixel ratio.\n       * @param {import(\"../proj/Projection.js\").default} projection Projection.\n       * @return {string|undefined} Tile URL.\n       */\n      function (tileCoord, pixelRatio, projection) {\n        if (!tileCoord) {\n          return undefined;\n        }\n        const localContext = {\n          'TileMatrix': tileGrid.getMatrixId(tileCoord[0]),\n          'TileCol': tileCoord[1],\n          'TileRow': tileCoord[2],\n        };\n        Object.assign(localContext, dimensions);\n        let url = template;\n        if (requestEncoding == 'KVP') {\n          url = appendParams(url, localContext);\n        } else {\n          url = url.replace(/\\{(\\w+?)\\}/g, function (m, p) {\n            return encodeURIComponent(localContext[p]);\n          });\n        }\n        return url;\n      }\n    );\n  }\n}\n\nexport default WMTS;\n\n/**\n * Generate source options from a capabilities object.\n * @param {Object} wmtsCap An object representing the capabilities document.\n * @param {!Object} config Configuration properties for the layer.  Defaults for\n *                  the layer will apply if not provided.\n *\n * Required config properties:\n *  - layer - {string} The layer identifier.\n *\n * Optional config properties:\n *  - matrixSet - {string} The matrix set identifier, required if there is\n *       more than one matrix set in the layer capabilities.\n *  - projection - {string} The desired CRS when no matrixSet is specified.\n *       eg: \"EPSG:3857\". If the desired projection is not available,\n *       an error is thrown.\n *  - requestEncoding - {string} url encoding format for the layer. Default is\n *       the first tile url format found in the GetCapabilities response.\n *  - style - {string} The name of the style\n *  - format - {string} Image format for the layer. Default is the first\n *       format returned in the GetCapabilities response.\n *  - crossOrigin - {string|null|undefined} Cross origin. Default is `undefined`.\n * @return {Options|null} WMTS source options object or `null` if the layer was not found.\n * @api\n */\nexport function optionsFromCapabilities(wmtsCap, config) {\n  const layers = wmtsCap['Contents']['Layer'];\n  const l = layers?.find(function (elt) {\n    return elt['Identifier'] == config['layer'];\n  });\n  if (!l) {\n    return null;\n  }\n  const tileMatrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  let idx;\n  if (l['TileMatrixSetLink'].length > 1) {\n    if ('projection' in config) {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        const tileMatrixSet = tileMatrixSets.find(function (el) {\n          return el['Identifier'] == elt['TileMatrixSet'];\n        });\n        const supportedCRS = tileMatrixSet['SupportedCRS'];\n        const proj1 = getProjection(supportedCRS);\n        const proj2 = getProjection(config['projection']);\n        if (proj1 && proj2) {\n          return equivalent(proj1, proj2);\n        }\n        return supportedCRS == config['projection'];\n      });\n    } else {\n      idx = l['TileMatrixSetLink'].findIndex(function (elt) {\n        return elt['TileMatrixSet'] == config['matrixSet'];\n      });\n    }\n  } else {\n    idx = 0;\n  }\n  if (idx < 0) {\n    idx = 0;\n  }\n  const matrixSet =\n    /** @type {string} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSet']);\n  const matrixLimits =\n    /** @type {Array<Object>} */\n    (l['TileMatrixSetLink'][idx]['TileMatrixSetLimits']);\n\n  let format = /** @type {string} */ (l['Format'][0]);\n  if ('format' in config) {\n    format = config['format'];\n  }\n  idx = l['Style'].findIndex(function (elt) {\n    if ('style' in config) {\n      return elt['Title'] == config['style'];\n    }\n    return elt['isDefault'];\n  });\n  if (idx < 0) {\n    idx = 0;\n  }\n  const style = /** @type {string} */ (l['Style'][idx]['Identifier']);\n\n  const dimensions = {};\n  if ('Dimension' in l) {\n    l['Dimension'].forEach(function (elt, index, array) {\n      const key = elt['Identifier'];\n      let value = elt['Default'];\n      if (value === undefined) {\n        value = elt['Value'][0];\n      }\n      dimensions[key] = value;\n    });\n  }\n\n  const matrixSets = wmtsCap['Contents']['TileMatrixSet'];\n  const matrixSetObj = matrixSets.find(function (elt) {\n    return elt['Identifier'] == matrixSet;\n  });\n\n  let projection;\n  const code = matrixSetObj['SupportedCRS'];\n  if (code) {\n    projection = getProjection(code);\n  }\n  if ('projection' in config) {\n    const projConfig = getProjection(config['projection']);\n    if (projConfig) {\n      if (!projection || equivalent(projConfig, projection)) {\n        projection = projConfig;\n      }\n    }\n  }\n\n  let wrapX = false;\n  const switchXY = projection.getAxisOrientation().startsWith('ne');\n\n  let matrix = matrixSetObj.TileMatrix[0];\n\n  // create default matrixLimit\n  let selectedMatrixLimit = {\n    MinTileCol: 0,\n    MinTileRow: 0,\n    // subtract one to end up at tile top left\n    MaxTileCol: matrix.MatrixWidth - 1,\n    MaxTileRow: matrix.MatrixHeight - 1,\n  };\n\n  //in case of matrix limits, use matrix limits to calculate extent\n  if (matrixLimits) {\n    selectedMatrixLimit = matrixLimits[matrixLimits.length - 1];\n    const m = matrixSetObj.TileMatrix.find(\n      (tileMatrixValue) =>\n        tileMatrixValue.Identifier === selectedMatrixLimit.TileMatrix ||\n        matrixSetObj.Identifier + ':' + tileMatrixValue.Identifier ===\n          selectedMatrixLimit.TileMatrix,\n    );\n    if (m) {\n      matrix = m;\n    }\n  }\n\n  const resolution =\n    (matrix.ScaleDenominator * 0.00028) / projection.getMetersPerUnit(); // WMTS 1.0.0: standardized rendering pixel size\n  const origin = switchXY\n    ? [matrix.TopLeftCorner[1], matrix.TopLeftCorner[0]]\n    : matrix.TopLeftCorner;\n  const tileSpanX = matrix.TileWidth * resolution;\n  const tileSpanY = matrix.TileHeight * resolution;\n  let matrixSetExtent = matrixSetObj['BoundingBox'];\n  if (matrixSetExtent && switchXY) {\n    matrixSetExtent = [\n      matrixSetExtent[1],\n      matrixSetExtent[0],\n      matrixSetExtent[3],\n      matrixSetExtent[2],\n    ];\n  }\n  let extent = [\n    origin[0] + tileSpanX * selectedMatrixLimit.MinTileCol,\n    // add one to get proper bottom/right coordinate\n    origin[1] - tileSpanY * (1 + selectedMatrixLimit.MaxTileRow),\n    origin[0] + tileSpanX * (1 + selectedMatrixLimit.MaxTileCol),\n    origin[1] - tileSpanY * selectedMatrixLimit.MinTileRow,\n  ];\n\n  if (\n    matrixSetExtent !== undefined &&\n    !containsExtent(matrixSetExtent, extent)\n  ) {\n    const wgs84BoundingBox = l['WGS84BoundingBox'];\n    const wgs84ProjectionExtent = getProjection('EPSG:4326').getExtent();\n    extent = matrixSetExtent;\n    if (wgs84BoundingBox) {\n      wrapX =\n        wgs84BoundingBox[0] === wgs84ProjectionExtent[0] &&\n        wgs84BoundingBox[2] === wgs84ProjectionExtent[2];\n    } else {\n      const wgs84MatrixSetExtent = transformExtent(\n        matrixSetExtent,\n        matrixSetObj['SupportedCRS'],\n        'EPSG:4326',\n      );\n      // Ignore slight deviation from the correct x limits\n      wrapX =\n        wgs84MatrixSetExtent[0] - 1e-10 <= wgs84ProjectionExtent[0] &&\n        wgs84MatrixSetExtent[2] + 1e-10 >= wgs84ProjectionExtent[2];\n    }\n  }\n\n  const tileGrid = createFromCapabilitiesMatrixSet(\n    matrixSetObj,\n    extent,\n    matrixLimits,\n  );\n\n  /** @type {!Array<string>} */\n  const urls = [];\n  let requestEncoding = config['requestEncoding'];\n  requestEncoding = requestEncoding !== undefined ? requestEncoding : '';\n\n  if (\n    'OperationsMetadata' in wmtsCap &&\n    'GetTile' in wmtsCap['OperationsMetadata']\n  ) {\n    const gets = wmtsCap['OperationsMetadata']['GetTile']['DCP']['HTTP']['Get'];\n\n    for (let i = 0, ii = gets.length; i < ii; ++i) {\n      if (gets[i]['Constraint']) {\n        const constraint = gets[i]['Constraint'].find(function (element) {\n          return element['name'] == 'GetEncoding';\n        });\n        const encodings = constraint['AllowedValues']['Value'];\n\n        if (requestEncoding === '') {\n          // requestEncoding not provided, use the first encoding from the list\n          requestEncoding = encodings[0];\n        }\n        if (requestEncoding === 'KVP') {\n          if (encodings.includes('KVP')) {\n            urls.push(/** @type {string} */ (gets[i]['href']));\n          }\n        } else {\n          break;\n        }\n      } else if (gets[i]['href']) {\n        requestEncoding = 'KVP';\n        urls.push(/** @type {string} */ (gets[i]['href']));\n      }\n    }\n  }\n  if (urls.length === 0) {\n    requestEncoding = 'REST';\n    l['ResourceURL'].forEach(function (element) {\n      if (element['resourceType'] === 'tile') {\n        format = element['format'];\n        urls.push(/** @type {string} */ (element['template']));\n      }\n    });\n  }\n\n  return {\n    urls: urls,\n    layer: config['layer'],\n    matrixSet: matrixSet,\n    format: format,\n    projection: projection,\n    requestEncoding: requestEncoding,\n    tileGrid: tileGrid,\n    style: style,\n    dimensions: dimensions,\n    wrapX: wrapX,\n    crossOrigin: config['crossOrigin'],\n  };\n}\n","/**\n * @module ol/proj/proj4\n */\nimport {\n  addCoordinateTransforms,\n  addEquivalentProjections,\n  addProjection,\n  createSafeCoordinateTransform,\n} from '../proj.js';\nimport Projection from './Projection.js';\nimport {get as getCachedProjection} from './projections.js';\nimport {get as getTransform} from './transforms.js';\n\n/**\n * @type {import(\"proj4\")|null}\n */\nlet registered = null;\n\n/**\n * @return {boolean} Proj4 has been registered.\n */\nexport function isRegistered() {\n  return !!registered;\n}\n\n/**\n * Unsets the shared proj4 previously set with register.\n */\nexport function unregister() {\n  registered = null;\n}\n\n/**\n * Make projections defined in proj4 (with `proj4.defs()`) available in\n * OpenLayers. Requires proj4 >= 2.8.0.\n *\n * This function should be called whenever changes are made to the proj4\n * registry, e.g. after calling `proj4.defs()`. Existing transforms will not be\n * modified by this function.\n *\n * @param {import(\"proj4\")} proj4 Proj4.\n * @api\n */\nexport function register(proj4) {\n  registered = proj4;\n\n  const projCodes = Object.keys(proj4.defs);\n  const len = projCodes.length;\n  let i, j;\n  for (i = 0; i < len; ++i) {\n    const code = projCodes[i];\n    if (!getCachedProjection(code)) {\n      const def = proj4.defs(code);\n      let units = /** @type {import(\"./Units.js\").Units} */ (def.units);\n      if (!units && def.projName === 'longlat') {\n        units = 'degrees';\n      }\n      addProjection(\n        new Projection({\n          code: code,\n          axisOrientation: def.axis,\n          metersPerUnit: def.to_meter,\n          units,\n        }),\n      );\n    }\n  }\n  for (i = 0; i < len; ++i) {\n    const code1 = projCodes[i];\n    const proj1 = getCachedProjection(code1);\n    for (j = 0; j < len; ++j) {\n      const code2 = projCodes[j];\n      const proj2 = getCachedProjection(code2);\n      if (!getTransform(code1, code2)) {\n        if (proj4.defs[code1] === proj4.defs[code2]) {\n          addEquivalentProjections([proj1, proj2]);\n        } else {\n          const transform = proj4(code1, code2);\n          addCoordinateTransforms(\n            proj1,\n            proj2,\n            createSafeCoordinateTransform(proj1, proj2, transform.forward),\n            createSafeCoordinateTransform(proj2, proj1, transform.inverse),\n          );\n        }\n      }\n    }\n  }\n}\n\n/**\n * @param {number} code The EPSG code.\n * @return {Promise<string>} The proj4 definition.\n */\nlet epsgLookup = async function (code) {\n  const response = await fetch(`https://epsg.io/${code}.proj4`);\n  if (!response.ok) {\n    throw new Error(`Unexpected response from epsg.io: ${response.status}`);\n  }\n  return response.text();\n};\n\n/**\n * Set the lookup function for getting proj4 definitions given an EPSG code.\n * By default, the {@link module:ol/proj/proj4.fromEPSGCode} function uses the\n * epsg.io website for proj4 definitions.  This can be changed by providing a\n * different lookup function.\n *\n * @param {function(number):Promise<string>} func The lookup function.\n * @api\n */\nexport function setEPSGLookup(func) {\n  epsgLookup = func;\n}\n\n/**\n * Get the current EPSG lookup function.\n *\n * @return {function(number):Promise<string>} The EPSG lookup function.\n */\nexport function getEPSGLookup() {\n  return epsgLookup;\n}\n\n/**\n * Get a projection from an EPSG code.  This function fetches the projection\n * definition from the epsg.io website, registers this definition for use with\n * proj4, and returns a configured projection.  You must call import proj4 and\n * call {@link module:ol/proj/proj4.register} before using this function.\n *\n * If the projection definition is already registered with proj4, it will not\n * be fetched again (so it is ok to call this function multiple times with the\n * same code).\n *\n * @param {number|string} code The EPSG code (e.g. 4326 or 'EPSG:4326').\n * @return {Promise<Projection>} The projection.\n * @api\n */\nexport async function fromEPSGCode(code) {\n  if (typeof code === 'string') {\n    code = parseInt(code.split(':').pop(), 10);\n  }\n\n  const proj4 = registered;\n  if (!proj4) {\n    throw new Error('Proj4 must be registered first with register(proj4)');\n  }\n\n  const epsgCode = 'EPSG:' + code;\n  if (proj4.defs(epsgCode)) {\n    return getCachedProjection(epsgCode);\n  }\n\n  proj4.defs(epsgCode, await epsgLookup(code));\n  register(proj4);\n\n  return getCachedProjection(epsgCode);\n}\n\n/**\n * Generate an EPSG lookup function which uses the MapTiler Coordinates API to find projection\n * definitions which do not require proj4 to be configured to handle `+nadgrids` parameters.\n * Call {@link module:ol/proj/proj4.setEPSGLookup} use the function for lookups\n * `setEPSGLookup(epsgLookupMapTiler('{YOUR_MAPTILER_API_KEY_HERE}'))`.\n *\n * @param {string} key MapTiler API key.  Get your own API key at https://www.maptiler.com/cloud/.\n * @return {function(number):Promise<string>} The EPSG lookup function.\n * @api\n */\nexport function epsgLookupMapTiler(key) {\n  return async function (code) {\n    const response = await fetch(\n      `https://api.maptiler.com/coordinates/search/code:${code}.json?transformations=true&exports=true&key=${key}`,\n    );\n    if (!response.ok) {\n      throw new Error(\n        `Unexpected response from maptiler.com: ${response.status}`,\n      );\n    }\n    return response.json().then((json) => {\n      const results = json['results'];\n      if (results?.length > 0) {\n        const result = results.filter(\n          (r) =>\n            r['id']?.['authority'] === 'EPSG' && r['id']?.['code'] === code,\n        )[0];\n        if (result) {\n          const transforms = result['transformations'];\n          if (transforms?.length > 0) {\n            // use default transform if it does not require grids\n            const defaultTransform = result['default_transformation'];\n            if (\n              transforms.filter(\n                (t) =>\n                  t['id']?.['authority'] === defaultTransform?.['authority'] &&\n                  t['id']?.['code'] === defaultTransform?.['code'] &&\n                  t['grids']?.length === 0,\n              ).length > 0\n            ) {\n              return result['exports']?.['proj4'];\n            }\n            // otherwise use most accurate alternative without grids\n            const transform = transforms\n              .filter(\n                (t) =>\n                  t['grids']?.length === 0 &&\n                  t['target_crs']?.['authority'] === 'EPSG' &&\n                  t['target_crs']?.['code'] === 4326 &&\n                  t['deprecated'] === false &&\n                  t['usable'] === true,\n              )\n              .sort((t1, t2) => t1['accuracy'] - t2['accuracy'])[0]?.[\n              'exports'\n            ]?.['proj4'];\n            if (transform) {\n              return transform;\n            }\n          }\n          // fallback to default\n          return result['exports']?.['proj4'];\n        }\n      }\n    });\n  };\n}\n","export var PJD_3PARAM = 1;\nexport var PJD_7PARAM = 2;\nexport var PJD_GRIDSHIFT = 3;\nexport var PJD_WGS84 = 4; // WGS84 or equivalent\nexport var PJD_NODATUM = 5; // WGS84 or equivalent\nexport var SRS_WGS84_SEMIMAJOR = 6378137.0; // only used in grid shift transforms\nexport var SRS_WGS84_SEMIMINOR = 6356752.314; // only used in grid shift transforms\nexport var SRS_WGS84_ESQUARED = 0.0066943799901413165; // only used in grid shift transforms\nexport var SEC_TO_RAD = 4.84813681109535993589914102357e-6;\nexport var HALF_PI = Math.PI / 2;\n// ellipoid pj_set_ell.c\nexport var SIXTH = 0.1666666666666666667;\n/* 1/6 */\nexport var RA4 = 0.04722222222222222222;\n/* 17/360 */\nexport var RA6 = 0.02215608465608465608;\nexport var EPSLN = 1.0e-10;\n// you'd think you could use Number.EPSILON above but that makes\n// Mollweide get into an infinate loop.\n\nexport var D2R = 0.01745329251994329577;\nexport var R2D = 57.29577951308232088;\nexport var FORTPI = Math.PI / 4;\nexport var TWO_PI = Math.PI * 2;\n// SPI is slightly greater than Math.PI, so values that exceed the -180..180\n// degree range by a tiny amount don't get wrapped. This prevents points that\n// have drifted from their original location along the 180th meridian (due to\n// floating point error) from changing their sign.\nexport var SPI = 3.14159265359;\n","var primeMeridian = {};\n\nprimeMeridian.greenwich = 0.0; // \"0dE\",\nprimeMeridian.lisbon = -9.131906111111; // \"9d07'54.862\\\"W\",\nprimeMeridian.paris = 2.337229166667; // \"2d20'14.025\\\"E\",\nprimeMeridian.bogota = -74.080916666667; // \"74d04'51.3\\\"W\",\nprimeMeridian.madrid = -3.687938888889; // \"3d41'16.58\\\"W\",\nprimeMeridian.rome = 12.452333333333; // \"12d27'8.4\\\"E\",\nprimeMeridian.bern = 7.439583333333; // \"7d26'22.5\\\"E\",\nprimeMeridian.jakarta = 106.807719444444; // \"106d48'27.79\\\"E\",\nprimeMeridian.ferro = -17.666666666667; // \"17d40'W\",\nprimeMeridian.brussels = 4.367975; // \"4d22'4.71\\\"E\",\nprimeMeridian.stockholm = 18.058277777778; // \"18d3'29.8\\\"E\",\nprimeMeridian.athens = 23.7163375; // \"23d42'58.815\\\"E\",\nprimeMeridian.oslo = 10.722916666667; // \"10d43'22.5\\\"E\"\n\nexport default primeMeridian;\n","export default {\n  mm: { to_meter: 0.001 },\n  cm: { to_meter: 0.01 },\n  ft: { to_meter: 0.3048 },\n  'us-ft': { to_meter: 1200 / 3937 },\n  fath: { to_meter: 1.8288 },\n  kmi: { to_meter: 1852 },\n  'us-ch': { to_meter: 20.1168402336805 },\n  'us-mi': { to_meter: 1609.34721869444 },\n  km: { to_meter: 1000 },\n  'ind-ft': { to_meter: 0.30479841 },\n  'ind-yd': { to_meter: 0.91439523 },\n  mi: { to_meter: 1609.344 },\n  yd: { to_meter: 0.9144 },\n  ch: { to_meter: 20.1168 },\n  link: { to_meter: 0.201168 },\n  dm: { to_meter: 0.1 },\n  in: { to_meter: 0.0254 },\n  'ind-ch': { to_meter: 20.11669506 },\n  'us-in': { to_meter: 0.025400050800101 },\n  'us-yd': { to_meter: 0.914401828803658 }\n};\n","var ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nexport default function match(obj, key) {\n  if (obj[key]) {\n    return obj[key];\n  }\n  var keys = Object.keys(obj);\n  var lkey = key.toLowerCase().replace(ignoredChar, '');\n  var i = -1;\n  var testkey, processedKey;\n  while (++i < keys.length) {\n    testkey = keys[i];\n    processedKey = testkey.toLowerCase().replace(ignoredChar, '');\n    if (processedKey === lkey) {\n      return obj[testkey];\n    }\n  }\n}\n","import { D2R } from './constants/values';\nimport PrimeMeridian from './constants/PrimeMeridian';\nimport units from './constants/units';\nimport match from './match';\n\n/**\n * @param {string} defData\n * @returns {import('./defs').ProjectionDefinition}\n */\nexport default function (defData) {\n  /** @type {import('./defs').ProjectionDefinition} */\n  var self = {};\n  var paramObj = defData.split('+').map(function (v) {\n    return v.trim();\n  }).filter(function (a) {\n    return a;\n  }).reduce(function (p, a) {\n    /** @type {Array<?>} */\n    var split = a.split('=');\n    split.push(true);\n    p[split[0].toLowerCase()] = split[1];\n    return p;\n  }, {});\n  var paramName, paramVal, paramOutname;\n  var params = {\n    proj: 'projName',\n    datum: 'datumCode',\n    rf: function (v) {\n      self.rf = parseFloat(v);\n    },\n    lat_0: function (v) {\n      self.lat0 = v * D2R;\n    },\n    lat_1: function (v) {\n      self.lat1 = v * D2R;\n    },\n    lat_2: function (v) {\n      self.lat2 = v * D2R;\n    },\n    lat_ts: function (v) {\n      self.lat_ts = v * D2R;\n    },\n    lon_0: function (v) {\n      self.long0 = v * D2R;\n    },\n    lon_1: function (v) {\n      self.long1 = v * D2R;\n    },\n    lon_2: function (v) {\n      self.long2 = v * D2R;\n    },\n    alpha: function (v) {\n      self.alpha = parseFloat(v) * D2R;\n    },\n    gamma: function (v) {\n      self.rectified_grid_angle = parseFloat(v) * D2R;\n    },\n    lonc: function (v) {\n      self.longc = v * D2R;\n    },\n    x_0: function (v) {\n      self.x0 = parseFloat(v);\n    },\n    y_0: function (v) {\n      self.y0 = parseFloat(v);\n    },\n    k_0: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    k: function (v) {\n      self.k0 = parseFloat(v);\n    },\n    a: function (v) {\n      self.a = parseFloat(v);\n    },\n    b: function (v) {\n      self.b = parseFloat(v);\n    },\n    r: function (v) {\n      self.a = self.b = parseFloat(v);\n    },\n    r_a: function () {\n      self.R_A = true;\n    },\n    zone: function (v) {\n      self.zone = parseInt(v, 10);\n    },\n    south: function () {\n      self.utmSouth = true;\n    },\n    towgs84: function (v) {\n      self.datum_params = v.split(',').map(function (a) {\n        return parseFloat(a);\n      });\n    },\n    to_meter: function (v) {\n      self.to_meter = parseFloat(v);\n    },\n    units: function (v) {\n      self.units = v;\n      var unit = match(units, v);\n      if (unit) {\n        self.to_meter = unit.to_meter;\n      }\n    },\n    from_greenwich: function (v) {\n      self.from_greenwich = v * D2R;\n    },\n    pm: function (v) {\n      var pm = match(PrimeMeridian, v);\n      self.from_greenwich = (pm ? pm : parseFloat(v)) * D2R;\n    },\n    nadgrids: function (v) {\n      if (v === '@null') {\n        self.datumCode = 'none';\n      } else {\n        self.nadgrids = v;\n      }\n    },\n    axis: function (v) {\n      var legalAxis = 'ewnsud';\n      if (v.length === 3 && legalAxis.indexOf(v.substr(0, 1)) !== -1 && legalAxis.indexOf(v.substr(1, 1)) !== -1 && legalAxis.indexOf(v.substr(2, 1)) !== -1) {\n        self.axis = v;\n      }\n    },\n    approx: function () {\n      self.approx = true;\n    }\n  };\n  for (paramName in paramObj) {\n    paramVal = paramObj[paramName];\n    if (paramName in params) {\n      paramOutname = params[paramName];\n      if (typeof paramOutname === 'function') {\n        paramOutname(paramVal);\n      } else {\n        self[paramOutname] = paramVal;\n      }\n    } else {\n      self[paramName] = paramVal;\n    }\n  }\n  if (typeof self.datumCode === 'string' && self.datumCode !== 'WGS84') {\n    self.datumCode = self.datumCode.toLowerCase();\n  }\n  return self;\n}\n","class PROJJSONBuilderBase {\n  static getId(node) {\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    if (idNode && idNode.length >= 3) {\n      return {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      };\n    }\n    return null;\n  }\n\n  static convertUnit(node, type = 'unit') {\n    if (!node || node.length < 3) {\n      return { type, name: 'unknown', conversion_factor: null };\n    }\n\n    const name = node[1];\n    const conversionFactor = parseFloat(node[2]) || null;\n\n    const idNode = node.find((child) => Array.isArray(child) && child[0] === 'ID');\n    const id = idNode\n      ? {\n        authority: idNode[1],\n        code: parseInt(idNode[2], 10),\n      }\n      : null;\n\n    return {\n      type,\n      name,\n      conversion_factor: conversionFactor,\n      id,\n    };\n  }\n\n  static convertAxis(node) {\n    const name = node[1] || 'Unknown';\n\n    // Determine the direction\n    let direction;\n    const abbreviationMatch = name.match(/^\\((.)\\)$/); // Match abbreviations like \"(E)\" or \"(N)\"\n    if (abbreviationMatch) {\n      // Use the abbreviation to determine the direction\n      const abbreviation = abbreviationMatch[1].toUpperCase();\n      if (abbreviation === 'E') direction = 'east';\n      else if (abbreviation === 'N') direction = 'north';\n      else if (abbreviation === 'U') direction = 'up';\n      else throw new Error(`Unknown axis abbreviation: ${abbreviation}`);\n    } else {\n      // Use the explicit direction provided in the AXIS node\n      direction = node[2] ? node[2].toLowerCase() : 'unknown';\n    }\n\n    const orderNode = node.find((child) => Array.isArray(child) && child[0] === 'ORDER');\n    const order = orderNode ? parseInt(orderNode[1], 10) : null;\n\n    const unitNode = node.find(\n      (child) =>\n        Array.isArray(child) &&\n        (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n    );\n    const unit = this.convertUnit(unitNode);\n\n    return {\n      name,\n      direction, // Use the valid PROJJSON direction value\n      unit,\n      order,\n    };\n  }\n\n  static extractAxes(node) {\n    return node\n      .filter((child) => Array.isArray(child) && child[0] === 'AXIS')\n      .map((axis) => this.convertAxis(axis))\n      .sort((a, b) => (a.order || 0) - (b.order || 0)); // Sort by the \"order\" property\n  }\n\n  static convert(node, result = {}) {\n\n    switch (node[0]) {\n      case 'PROJCRS':\n        result.type = 'ProjectedCRS';\n        result.name = node[1];\n        result.base_crs = node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'BASEGEOGCRS'))\n          : null;\n        result.conversion = node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'CONVERSION'))\n          : null;\n\n        const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n        if (csNode) {\n          result.coordinate_system = {\n            type: csNode[1],\n            axis: this.extractAxes(node),\n          };\n        }\n\n        const lengthUnitNode = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT');\n        if (lengthUnitNode) {\n          const unit = this.convertUnit(lengthUnitNode);\n          result.coordinate_system.unit = unit; // Add unit to coordinate_system\n        }\n\n        result.id = this.getId(node);\n        break;\n\n      case 'BASEGEOGCRS':\n      case 'GEOGCRS':\n        result.type = 'GeographicCRS';\n        result.name = node[1];\n      \n        // Handle DATUM or ENSEMBLE\n        const datumOrEnsembleNode = node.find(\n          (child) => Array.isArray(child) && (child[0] === 'DATUM' || child[0] === 'ENSEMBLE')\n        );\n        if (datumOrEnsembleNode) {\n          const datumOrEnsemble = this.convert(datumOrEnsembleNode);\n          if (datumOrEnsembleNode[0] === 'ENSEMBLE') {\n            result.datum_ensemble = datumOrEnsemble;\n          } else {\n            result.datum = datumOrEnsemble;\n          }\n          const primem = node.find((child) => Array.isArray(child) && child[0] === 'PRIMEM');\n          if (primem && primem[1] !== 'Greenwich') {\n            datumOrEnsemble.prime_meridian = {\n              name: primem[1],\n              longitude: parseFloat(primem[2]),\n            }\n          }\n        }\n      \n        result.coordinate_system = {\n          type: 'ellipsoidal',\n          axis: this.extractAxes(node),\n        };\n      \n        result.id = this.getId(node);\n        break;\n\n      case 'DATUM':\n        result.type = 'GeodeticReferenceFrame';\n        result.name = node[1];\n        result.ellipsoid = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID'))\n          : null;\n        break;\n      \n      case 'ENSEMBLE':\n        result.type = 'DatumEnsemble';\n        result.name = node[1];\n      \n        // Extract ensemble members\n        result.members = node\n          .filter((child) => Array.isArray(child) && child[0] === 'MEMBER')\n          .map((member) => ({\n            type: 'DatumEnsembleMember',\n            name: member[1],\n            id: this.getId(member), // Extract ID as { authority, code }\n          }));\n      \n        // Extract accuracy\n        const accuracyNode = node.find((child) => Array.isArray(child) && child[0] === 'ENSEMBLEACCURACY');\n        if (accuracyNode) {\n          result.accuracy = parseFloat(accuracyNode[1]);\n        }\n      \n        // Extract ellipsoid\n        const ellipsoidNode = node.find((child) => Array.isArray(child) && child[0] === 'ELLIPSOID');\n        if (ellipsoidNode) {\n          result.ellipsoid = this.convert(ellipsoidNode); // Convert the ellipsoid node\n        }\n      \n        // Extract identifier for the ensemble\n        result.id = this.getId(node);\n        break;\n\n      case 'ELLIPSOID':\n        result.type = 'Ellipsoid';\n        result.name = node[1];\n        result.semi_major_axis = parseFloat(node[2]);\n        result.inverse_flattening = parseFloat(node[3]);\n        const units = node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'LENGTHUNIT'), result)\n          : null;\n        break;\n\n      case 'CONVERSION':\n        result.type = 'Conversion';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && child[0] === 'PARAMETER')\n          .map((param) => this.convert(param));\n        break;\n\n      case 'METHOD':\n        result.type = 'Method';\n        result.name = node[1];\n        result.id = this.getId(node);\n        break;\n\n      case 'PARAMETER':\n        result.type = 'Parameter';\n        result.name = node[1];\n        result.value = parseFloat(node[2]);\n        result.unit = this.convertUnit(\n          node.find(\n            (child) =>\n              Array.isArray(child) &&\n              (child[0] === 'LENGTHUNIT' || child[0] === 'ANGLEUNIT' || child[0] === 'SCALEUNIT')\n          )\n        );\n        result.id = this.getId(node);\n        break;\n\n      case 'BOUNDCRS':\n        result.type = 'BoundCRS';\n\n        // Process SOURCECRS\n        const sourceCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'SOURCECRS');\n        if (sourceCrsNode) {\n          const sourceCrsContent = sourceCrsNode.find((child) => Array.isArray(child));\n          result.source_crs = sourceCrsContent ? this.convert(sourceCrsContent) : null;\n        }\n\n        // Process TARGETCRS\n        const targetCrsNode = node.find((child) => Array.isArray(child) && child[0] === 'TARGETCRS');\n        if (targetCrsNode) {\n          const targetCrsContent = targetCrsNode.find((child) => Array.isArray(child));\n          result.target_crs = targetCrsContent ? this.convert(targetCrsContent) : null;\n        }\n\n        // Process ABRIDGEDTRANSFORMATION\n        const transformationNode = node.find((child) => Array.isArray(child) && child[0] === 'ABRIDGEDTRANSFORMATION');\n        if (transformationNode) {\n          result.transformation = this.convert(transformationNode);\n        } else {\n          result.transformation = null;\n        }\n        break;\n\n      case 'ABRIDGEDTRANSFORMATION':\n        result.type = 'Transformation';\n        result.name = node[1];\n        result.method = node.find((child) => Array.isArray(child) && child[0] === 'METHOD')\n          ? this.convert(node.find((child) => Array.isArray(child) && child[0] === 'METHOD'))\n          : null;\n\n        result.parameters = node\n          .filter((child) => Array.isArray(child) && (child[0] === 'PARAMETER' || child[0] === 'PARAMETERFILE'))\n          .map((param) => {\n            if (param[0] === 'PARAMETER') {\n              return this.convert(param);\n            } else if (param[0] === 'PARAMETERFILE') {\n              return {\n                name: param[1],\n                value: param[2],\n                id: {\n                  'authority': 'EPSG',\n                  'code': 8656\n                }\n              };\n            }\n          });\n\n        // Adjust the Scale difference parameter if present\n        if (result.parameters.length === 7) {\n          const scaleDifference = result.parameters[6];\n          if (scaleDifference.name === 'Scale difference') {\n            scaleDifference.value = Math.round((scaleDifference.value - 1) * 1e12) / 1e6;\n          }\n        }\n\n        result.id = this.getId(node);\n        break;\n      \n      case 'AXIS':\n        if (!result.coordinate_system) {\n          result.coordinate_system = { type: 'unspecified', axis: [] };\n        }\n        result.coordinate_system.axis.push(this.convertAxis(node));\n        break;\n      \n      case 'LENGTHUNIT':\n        const unit = this.convertUnit(node, 'LinearUnit');\n        if (result.coordinate_system && result.coordinate_system.axis) {\n          result.coordinate_system.axis.forEach((axis) => {\n            if (!axis.unit) {\n              axis.unit = unit;\n            }\n          });\n        }\n        if (unit.conversion_factor && unit.conversion_factor !== 1) {\n          if (result.semi_major_axis) {\n            result.semi_major_axis = {\n              value: result.semi_major_axis,\n              unit,\n            }\n          }\n        }\n        break;\n\n      default:\n        result.keyword = node[0];\n        break;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilderBase;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2015 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Skip `CS` and `USAGE` nodes for WKT2-2015\n    if (result.coordinate_system && result.coordinate_system.subtype === 'Cartesian') {\n      delete result.coordinate_system;\n    }\n    if (result.usage) {\n      delete result.usage;\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2015;","import PROJJSONBuilderBase from './PROJJSONBuilderBase.js';\n\nclass PROJJSONBuilder2019 extends PROJJSONBuilderBase {\n  static convert(node, result = {}) {\n    super.convert(node, result);\n\n    // Handle `CS` node for WKT2-2019\n    const csNode = node.find((child) => Array.isArray(child) && child[0] === 'CS');\n    if (csNode) {\n      result.coordinate_system = {\n        subtype: csNode[1],\n        axis: this.extractAxes(node),\n      };\n    }\n\n    // Handle `USAGE` node for WKT2-2019\n    const usageNode = node.find((child) => Array.isArray(child) && child[0] === 'USAGE');\n    if (usageNode) {\n      const scope = usageNode.find((child) => Array.isArray(child) && child[0] === 'SCOPE');\n      const area = usageNode.find((child) => Array.isArray(child) && child[0] === 'AREA');\n      const bbox = usageNode.find((child) => Array.isArray(child) && child[0] === 'BBOX');\n      result.usage = {};\n      if (scope) {\n        result.usage.scope = scope[1];\n      }\n      if (area) {\n        result.usage.area = area[1];\n      }\n      if (bbox) {\n        result.usage.bbox = bbox.slice(1);\n      }\n    }\n\n    return result;\n  }\n}\n\nexport default PROJJSONBuilder2019;","export default parseString;\n\nvar NEUTRAL = 1;\nvar KEYWORD = 2;\nvar NUMBER = 3;\nvar QUOTED = 4;\nvar AFTERQUOTE = 5;\nvar ENDED = -1;\nvar whitespace = /\\s/;\nvar latin = /[A-Za-z]/;\nvar keyword = /[A-Za-z84_]/;\nvar endThings = /[,\\]]/;\nvar digets = /[\\d\\.E\\-\\+]/;\n// const ignoredChar = /[\\s_\\-\\/\\(\\)]/g;\nfunction Parser(text) {\n  if (typeof text !== 'string') {\n    throw new Error('not a string');\n  }\n  this.text = text.trim();\n  this.level = 0;\n  this.place = 0;\n  this.root = null;\n  this.stack = [];\n  this.currentObject = null;\n  this.state = NEUTRAL;\n}\nParser.prototype.readCharicter = function() {\n  var char = this.text[this.place++];\n  if (this.state !== QUOTED) {\n    while (whitespace.test(char)) {\n      if (this.place >= this.text.length) {\n        return;\n      }\n      char = this.text[this.place++];\n    }\n  }\n  switch (this.state) {\n    case NEUTRAL:\n      return this.neutral(char);\n    case KEYWORD:\n      return this.keyword(char)\n    case QUOTED:\n      return this.quoted(char);\n    case AFTERQUOTE:\n      return this.afterquote(char);\n    case NUMBER:\n      return this.number(char);\n    case ENDED:\n      return;\n  }\n};\nParser.prototype.afterquote = function(char) {\n  if (char === '\"') {\n    this.word += '\"';\n    this.state = QUOTED;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = this.word.trim();\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in afterquote yet, index ' + this.place);\n};\nParser.prototype.afterItem = function(char) {\n  if (char === ',') {\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n    }\n    this.word = null;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (char === ']') {\n    this.level--;\n    if (this.word !== null) {\n      this.currentObject.push(this.word);\n      this.word = null;\n    }\n    this.state = NEUTRAL;\n    this.currentObject = this.stack.pop();\n    if (!this.currentObject) {\n      this.state = ENDED;\n    }\n\n    return;\n  }\n};\nParser.prototype.number = function(char) {\n  if (digets.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.word = parseFloat(this.word);\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in number yet, index ' + this.place);\n};\nParser.prototype.quoted = function(char) {\n  if (char === '\"') {\n    this.state = AFTERQUOTE;\n    return;\n  }\n  this.word += char;\n  return;\n};\nParser.prototype.keyword = function(char) {\n  if (keyword.test(char)) {\n    this.word += char;\n    return;\n  }\n  if (char === '[') {\n    var newObjects = [];\n    newObjects.push(this.word);\n    this.level++;\n    if (this.root === null) {\n      this.root = newObjects;\n    } else {\n      this.currentObject.push(newObjects);\n    }\n    this.stack.push(this.currentObject);\n    this.currentObject = newObjects;\n    this.state = NEUTRAL;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in keyword yet, index ' + this.place);\n};\nParser.prototype.neutral = function(char) {\n  if (latin.test(char)) {\n    this.word = char;\n    this.state = KEYWORD;\n    return;\n  }\n  if (char === '\"') {\n    this.word = '';\n    this.state = QUOTED;\n    return;\n  }\n  if (digets.test(char)) {\n    this.word = char;\n    this.state = NUMBER;\n    return;\n  }\n  if (endThings.test(char)) {\n    this.afterItem(char);\n    return;\n  }\n  throw new Error('havn\\'t handled \"' +char + '\" in neutral yet, index ' + this.place);\n};\nParser.prototype.output = function() {\n  while (this.place < this.text.length) {\n    this.readCharicter();\n  }\n  if (this.state === ENDED) {\n    return this.root;\n  }\n  throw new Error('unable to parse string \"' +this.text + '\". State is ' + this.state);\n};\n\nfunction parseString(txt) {\n  var parser = new Parser(txt);\n  return parser.output();\n}\n","\n\nfunction mapit(obj, key, value) {\n  if (Array.isArray(key)) {\n    value.unshift(key);\n    key = null;\n  }\n  var thing = key ? {} : obj;\n\n  var out = value.reduce(function(newObj, item) {\n    sExpr(item, newObj);\n    return newObj\n  }, thing);\n  if (key) {\n    obj[key] = out;\n  }\n}\n\nexport function sExpr(v, obj) {\n  if (!Array.isArray(v)) {\n    obj[v] = true;\n    return;\n  }\n  var key = v.shift();\n  if (key === 'PARAMETER') {\n    key = v.shift();\n  }\n  if (v.length === 1) {\n    if (Array.isArray(v[0])) {\n      obj[key] = {};\n      sExpr(v[0], obj[key]);\n      return;\n    }\n    obj[key] = v[0];\n    return;\n  }\n  if (!v.length) {\n    obj[key] = true;\n    return;\n  }\n  if (key === 'TOWGS84') {\n    obj[key] = v;\n    return;\n  }\n  if (key === 'AXIS') {\n    if (!(key in obj)) {\n      obj[key] = [];\n    }\n    obj[key].push(v);\n    return;\n  }\n  if (!Array.isArray(key)) {\n    obj[key] = {};\n  }\n\n  var i;\n  switch (key) {\n    case 'UNIT':\n    case 'PRIMEM':\n    case 'VERT_DATUM':\n      obj[key] = {\n        name: v[0].toLowerCase(),\n        convert: v[1]\n      };\n      if (v.length === 3) {\n        sExpr(v[2], obj[key]);\n      }\n      return;\n    case 'SPHEROID':\n    case 'ELLIPSOID':\n      obj[key] = {\n        name: v[0],\n        a: v[1],\n        rf: v[2]\n      };\n      if (v.length === 4) {\n        sExpr(v[3], obj[key]);\n      }\n      return;\n    case 'EDATUM':\n    case 'ENGINEERINGDATUM':\n    case 'LOCAL_DATUM':\n    case 'DATUM':\n    case 'VERT_CS':\n    case 'VERTCRS':\n    case 'VERTICALCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      return;\n    case 'COMPD_CS':\n    case 'COMPOUNDCRS':\n    case 'FITTED_CS':\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    case 'PROJECTEDCRS':\n    case 'PROJCRS':\n    case 'GEOGCS':\n    case 'GEOCCS':\n    case 'PROJCS':\n    case 'LOCAL_CS':\n    case 'GEODCRS':\n    case 'GEODETICCRS':\n    case 'GEODETICDATUM':\n    case 'ENGCRS':\n    case 'ENGINEERINGCRS':\n      v[0] = ['name', v[0]];\n      mapit(obj, key, v);\n      obj[key].type = key;\n      return;\n    default:\n      i = -1;\n      while (++i < v.length) {\n        if (!Array.isArray(v[i])) {\n          return sExpr(v, obj[key]);\n        }\n      }\n      return mapit(obj, key, v);\n  }\n}\n","var D2R = 0.01745329251994329577;\n\nexport function d2r(input) {\n  return input * D2R;\n}\n\nexport function applyProjectionDefaults(wkt) {\n  // Normalize projName for WKT2 compatibility\n  const normalizedProjName = (wkt.projName || '').toLowerCase().replace(/_/g, ' ');\n\n  if (!wkt.long0 && wkt.longc && (normalizedProjName === 'albers conic equal area' || normalizedProjName === 'lambert azimuthal equal area')) {\n    wkt.long0 = wkt.longc;\n  }\n  if (!wkt.lat_ts && wkt.lat1 && (normalizedProjName === 'stereographic south pole' || normalizedProjName === 'polar stereographic (variant b)')) {\n    wkt.lat0 = d2r(wkt.lat1 > 0 ? 90 : -90);\n    wkt.lat_ts = wkt.lat1;\n    delete wkt.lat1;\n  } else if (!wkt.lat_ts && wkt.lat0 && (normalizedProjName === 'polar stereographic' || normalizedProjName === 'polar stereographic (variant a)')) {\n    wkt.lat_ts = wkt.lat0;\n    wkt.lat0 = d2r(wkt.lat0 > 0 ? 90 : -90);\n    delete wkt.lat1;\n  }\n}","import { applyProjectionDefaults } from './util.js';\n\n// Helper function to process units and to_meter\nfunction processUnit(unit) {\n  let result = { units: null, to_meter: undefined };\n\n  if (typeof unit === 'string') {\n    result.units = unit.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    if (result.units === 'meter') {\n      result.to_meter = 1; // Only set to_meter if units are 'meter'\n    }\n  } else if (unit && unit.name) {\n    result.units = unit.name.toLowerCase();\n    if (result.units === 'metre') {\n      result.units = 'meter'; // Normalize 'metre' to 'meter'\n    }\n    result.to_meter = unit.conversion_factor;\n  }\n\n  return result;\n}\n\nfunction toValue(valueOrObject) {\n  if (typeof valueOrObject === 'object') {\n    return valueOrObject.value * valueOrObject.unit.conversion_factor;\n  }\n  return valueOrObject;\n}\n\nfunction calculateEllipsoid(value, result) {\n  if (value.ellipsoid.radius) {\n    result.a = value.ellipsoid.radius;\n    result.rf = 0;\n  } else {\n    result.a = toValue(value.ellipsoid.semi_major_axis);\n    if (value.ellipsoid.inverse_flattening !== undefined) {\n      result.rf = value.ellipsoid.inverse_flattening;\n    } else if (value.ellipsoid.semi_major_axis !== undefined && value.ellipsoid.semi_minor_axis !== undefined) {\n      result.rf = result.a / (result.a - toValue(value.ellipsoid.semi_minor_axis));\n    }\n  }\n}\n\nexport function transformPROJJSON(projjson, result = {}) {\n  if (!projjson || typeof projjson !== 'object') {\n    return projjson; // Return primitive values as-is\n  }\n\n  if (projjson.type === 'BoundCRS') {\n    transformPROJJSON(projjson.source_crs, result);\n\n    if (projjson.transformation) {\n      if (projjson.transformation.method && projjson.transformation.method.name === 'NTv2') {\n        // Set nadgrids to the filename from the parameterfile\n        result.nadgrids = projjson.transformation.parameters[0].value;\n      } else {\n        // Populate datum_params if no parameterfile is found\n        result.datum_params = projjson.transformation.parameters.map((param) => param.value);\n      }\n    }\n    return result; // Return early for BoundCRS\n  }\n\n  // Handle specific keys in PROJJSON\n  Object.keys(projjson).forEach((key) => {\n    const value = projjson[key];\n    if (value === null) {\n      return;\n    }\n\n    switch (key) {\n      case 'name':\n        if (result.srsCode) {\n          break;\n        }\n        result.name = value;\n        result.srsCode = value; // Map `name` to `srsCode`\n        break;\n\n      case 'type':\n        if (value === 'GeographicCRS') {\n          result.projName = 'longlat';\n        } else if (value === 'ProjectedCRS' && projjson.conversion && projjson.conversion.method) {\n          result.projName = projjson.conversion.method.name; // Retain original capitalization\n        }\n        break;\n\n      case 'datum':\n      case 'datum_ensemble': // Handle both datum and ensemble\n        if (value.ellipsoid) {\n          // Extract ellipsoid properties\n          result.ellps = value.ellipsoid.name;\n          calculateEllipsoid(value, result);\n        }\n        if (value.prime_meridian) {\n          result.from_greenwich = value.prime_meridian.longitude * Math.PI / 180; // Convert to radians\n        }\n        break;\n\n      case 'ellipsoid':\n        result.ellps = value.name;\n        calculateEllipsoid(value, result);\n        break;\n\n      case 'prime_meridian':\n        result.long0 = (value.longitude || 0) * Math.PI / 180; // Convert to radians\n        break;\n\n      case 'coordinate_system':\n        if (value.axis) {\n          result.axis = value.axis\n            .map((axis) => {\n              const direction = axis.direction;\n              if (direction === 'east') return 'e';\n              if (direction === 'north') return 'n';\n              if (direction === 'west') return 'w';\n              if (direction === 'south') return 's';\n              throw new Error(`Unknown axis direction: ${direction}`);\n            })\n            .join('') + 'u'; // Combine into a single string (e.g., \"enu\")\n\n          if (value.unit) {\n            const { units, to_meter } = processUnit(value.unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          } else if (value.axis[0] && value.axis[0].unit) {\n            const { units, to_meter } = processUnit(value.axis[0].unit);\n            result.units = units;\n            result.to_meter = to_meter;\n          }\n        }\n        break;\n        \n      case 'id':\n        if (value.authority && value.code) {\n          result.title = value.authority + ':' + value.code;\n        }\n        break;\n\n      case 'conversion':\n        if (value.method && value.method.name) {\n          result.projName = value.method.name; // Retain original capitalization\n        }\n        if (value.parameters) {\n          value.parameters.forEach((param) => {\n            const paramName = param.name.toLowerCase().replace(/\\s+/g, '_');\n            const paramValue = param.value;\n            if (param.unit && param.unit.conversion_factor) {\n              result[paramName] = paramValue * param.unit.conversion_factor; // Convert to radians or meters\n            } else if (param.unit === 'degree') {\n              result[paramName] = paramValue * Math.PI / 180; // Convert to radians\n            } else {\n              result[paramName] = paramValue;\n            }\n          });\n        }\n        break;\n\n      case 'unit':\n        if (value.name) {\n          result.units = value.name.toLowerCase();\n          if (result.units === 'metre') {\n            result.units = 'meter';\n          }\n        }\n        if (value.conversion_factor) {\n          result.to_meter = value.conversion_factor;\n        }\n        break;\n\n      case 'base_crs':\n        transformPROJJSON(value, result); // Pass `result` directly\n        result.datumCode = value.id ? value.id.authority + '_' + value.id.code : value.name; // Set datumCode\n        break;\n\n      default:\n        // Ignore irrelevant or unneeded properties\n        break;\n    }\n  });\n\n  // Additional calculated properties\n  if (result.latitude_of_false_origin !== undefined) {\n    result.lat0 = result.latitude_of_false_origin; // Already in radians\n  }\n  if (result.longitude_of_false_origin !== undefined) {\n    result.long0 = result.longitude_of_false_origin;\n  }\n  if (result.latitude_of_standard_parallel !== undefined) {\n    result.lat0 = result.latitude_of_standard_parallel;\n    result.lat1 = result.latitude_of_standard_parallel;\n  }\n  if (result.latitude_of_1st_standard_parallel !== undefined) {\n    result.lat1 = result.latitude_of_1st_standard_parallel;\n  }\n  if (result.latitude_of_2nd_standard_parallel !== undefined) {\n    result.lat2 = result.latitude_of_2nd_standard_parallel; \n  }\n  if (result.latitude_of_projection_centre !== undefined) {\n    result.lat0 = result.latitude_of_projection_centre;\n  }\n  if (result.longitude_of_projection_centre !== undefined) {\n    result.longc = result.longitude_of_projection_centre;\n  }\n  if (result.easting_at_false_origin !== undefined) {\n    result.x0 = result.easting_at_false_origin;\n  }\n  if (result.northing_at_false_origin !== undefined) {\n    result.y0 = result.northing_at_false_origin;\n  }\n  if (result.latitude_of_natural_origin !== undefined) {\n    result.lat0 = result.latitude_of_natural_origin;\n  }\n  if (result.longitude_of_natural_origin !== undefined) {\n    result.long0 = result.longitude_of_natural_origin;\n  }\n  if (result.longitude_of_origin !== undefined) {\n    result.long0 = result.longitude_of_origin;\n  }\n  if (result.false_easting !== undefined) {\n    result.x0 = result.false_easting;\n  }\n  if (result.easting_at_projection_centre) {\n    result.x0 = result.easting_at_projection_centre;\n  }\n  if (result.false_northing !== undefined) {\n    result.y0 = result.false_northing;\n  }\n  if (result.northing_at_projection_centre) {\n    result.y0 = result.northing_at_projection_centre;\n  }\n  if (result.standard_parallel_1 !== undefined) {\n    result.lat1 = result.standard_parallel_1;\n  }\n  if (result.standard_parallel_2 !== undefined) {\n    result.lat2 = result.standard_parallel_2;\n  }\n  if (result.scale_factor_at_natural_origin !== undefined) {\n    result.k0 = result.scale_factor_at_natural_origin;\n  }\n  if (result.scale_factor_at_projection_centre !== undefined) {\n    result.k0 = result.scale_factor_at_projection_centre;\n  }\n  if (result.scale_factor_on_pseudo_standard_parallel !== undefined) {  \n    result.k0 = result.scale_factor_on_pseudo_standard_parallel;\n  }\n  if (result.azimuth !== undefined) {\n    result.alpha = result.azimuth;\n  }\n  if (result.azimuth_at_projection_centre !== undefined) {\n    result.alpha = result.azimuth_at_projection_centre;\n  }\n  if (result.angle_from_rectified_to_skew_grid) {\n    result.rectified_grid_angle = result.angle_from_rectified_to_skew_grid;\n  }\n\n  // Apply projection defaults\n  applyProjectionDefaults(result);\n\n  return result;\n}","import { buildPROJJSON } from './buildPROJJSON.js';\nimport { detectWKTVersion } from './detectWKTVersion.js';\nimport parser from './parser.js';\nimport {sExpr} from './process.js';\nimport { transformPROJJSON } from './transformPROJJSON.js';\nimport { applyProjectionDefaults, d2r } from './util.js';\n\nvar knownTypes = ['PROJECTEDCRS', 'PROJCRS', 'GEOGCS', 'GEOCCS', 'PROJCS', 'LOCAL_CS', 'GEODCRS',\n  'GEODETICCRS', 'GEODETICDATUM', 'ENGCRS', 'ENGINEERINGCRS'];\n\nfunction rename(obj, params) {\n  var outName = params[0];\n  var inName = params[1];\n  if (!(outName in obj) && (inName in obj)) {\n    obj[outName] = obj[inName];\n    if (params.length === 3) {\n      obj[outName] = params[2](obj[outName]);\n    }\n  }\n}\n\nfunction cleanWKT(wkt) {\n  var keys = Object.keys(wkt);\n  for (var i = 0, ii = keys.length; i <ii; ++i) {\n    var key = keys[i];\n    // the followings are the crs defined in\n    // https://github.com/proj4js/proj4js/blob/1da4ed0b865d0fcb51c136090569210cdcc9019e/lib/parseCode.js#L11\n    if (knownTypes.indexOf(key) !== -1) {\n      setPropertiesFromWkt(wkt[key]);\n    }\n    if (typeof wkt[key] === 'object') {\n      cleanWKT(wkt[key]);\n    }\n  }\n}\n\nfunction setPropertiesFromWkt(wkt) {\n  if (wkt.AUTHORITY) {\n    var authority = Object.keys(wkt.AUTHORITY)[0];\n    if (authority && authority in wkt.AUTHORITY) {\n      wkt.title = authority + ':' + wkt.AUTHORITY[authority];\n    }\n  }\n  if (wkt.type === 'GEOGCS') {\n    wkt.projName = 'longlat';\n  } else if (wkt.type === 'LOCAL_CS') {\n    wkt.projName = 'identity';\n    wkt.local = true;\n  } else {\n    if (typeof wkt.PROJECTION === 'object') {\n      wkt.projName = Object.keys(wkt.PROJECTION)[0];\n    } else {\n      wkt.projName = wkt.PROJECTION;\n    }\n  }\n  if (wkt.AXIS) {\n    var axisOrder = '';\n    for (var i = 0, ii = wkt.AXIS.length; i < ii; ++i) {\n      var axis = [wkt.AXIS[i][0].toLowerCase(), wkt.AXIS[i][1].toLowerCase()];\n      if (axis[0].indexOf('north') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'north')) {\n        axisOrder += 'n';\n      } else if (axis[0].indexOf('south') !== -1 || ((axis[0] === 'y' || axis[0] === 'lat') && axis[1] === 'south')) {\n        axisOrder += 's';\n      } else if (axis[0].indexOf('east') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'east')) {\n        axisOrder += 'e';\n      } else if (axis[0].indexOf('west') !== -1 || ((axis[0] === 'x' || axis[0] === 'lon') && axis[1] === 'west')) {\n        axisOrder += 'w';\n      }\n    }\n    if (axisOrder.length === 2) {\n      axisOrder += 'u';\n    }\n    if (axisOrder.length === 3) {\n      wkt.axis = axisOrder;\n    }\n  }\n  if (wkt.UNIT) {\n    wkt.units = wkt.UNIT.name.toLowerCase();\n    if (wkt.units === 'metre') {\n      wkt.units = 'meter';\n    }\n    if (wkt.UNIT.convert) {\n      if (wkt.type === 'GEOGCS') {\n        if (wkt.DATUM && wkt.DATUM.SPHEROID) {\n          wkt.to_meter = wkt.UNIT.convert*wkt.DATUM.SPHEROID.a;\n        }\n      } else {\n        wkt.to_meter = wkt.UNIT.convert;\n      }\n    }\n  }\n  var geogcs = wkt.GEOGCS;\n  if (wkt.type === 'GEOGCS') {\n    geogcs = wkt;\n  }\n  if (geogcs) {\n    //if(wkt.GEOGCS.PRIMEM&&wkt.GEOGCS.PRIMEM.convert){\n    //  wkt.from_greenwich=wkt.GEOGCS.PRIMEM.convert*D2R;\n    //}\n    if (geogcs.DATUM) {\n      wkt.datumCode = geogcs.DATUM.name.toLowerCase();\n    } else {\n      wkt.datumCode = geogcs.name.toLowerCase();\n    }\n    if (wkt.datumCode.slice(0, 2) === 'd_') {\n      wkt.datumCode = wkt.datumCode.slice(2);\n    }\n    if (wkt.datumCode === 'new_zealand_1949') {\n      wkt.datumCode = 'nzgd49';\n    }\n    if (wkt.datumCode === 'wgs_1984' || wkt.datumCode === 'world_geodetic_system_1984') {\n      if (wkt.PROJECTION === 'Mercator_Auxiliary_Sphere') {\n        wkt.sphere = true;\n      }\n      wkt.datumCode = 'wgs84';\n    }\n    if (wkt.datumCode === 'belge_1972') {\n      wkt.datumCode = 'rnb72';\n    }\n    if (geogcs.DATUM && geogcs.DATUM.SPHEROID) {\n      wkt.ellps = geogcs.DATUM.SPHEROID.name.replace('_19', '').replace(/[Cc]larke\\_18/, 'clrk');\n      if (wkt.ellps.toLowerCase().slice(0, 13) === 'international') {\n        wkt.ellps = 'intl';\n      }\n\n      wkt.a = geogcs.DATUM.SPHEROID.a;\n      wkt.rf = parseFloat(geogcs.DATUM.SPHEROID.rf, 10);\n    }\n\n    if (geogcs.DATUM && geogcs.DATUM.TOWGS84) {\n      wkt.datum_params = geogcs.DATUM.TOWGS84;\n    }\n    if (~wkt.datumCode.indexOf('osgb_1936')) {\n      wkt.datumCode = 'osgb36';\n    }\n    if (~wkt.datumCode.indexOf('osni_1952')) {\n      wkt.datumCode = 'osni52';\n    }\n    if (~wkt.datumCode.indexOf('tm65')\n      || ~wkt.datumCode.indexOf('geodetic_datum_of_1965')) {\n      wkt.datumCode = 'ire65';\n    }\n    if (wkt.datumCode === 'ch1903+') {\n      wkt.datumCode = 'ch1903';\n    }\n    if (~wkt.datumCode.indexOf('israel')) {\n      wkt.datumCode = 'isr93';\n    }\n  }\n  if (wkt.b && !isFinite(wkt.b)) {\n    wkt.b = wkt.a;\n  }\n  if (wkt.rectified_grid_angle) {\n    wkt.rectified_grid_angle = d2r(wkt.rectified_grid_angle);\n  }\n\n  function toMeter(input) {\n    var ratio = wkt.to_meter || 1;\n    return input * ratio;\n  }\n  var renamer = function(a) {\n    return rename(wkt, a);\n  };\n  var list = [\n    ['standard_parallel_1', 'Standard_Parallel_1'],\n    ['standard_parallel_1', 'Latitude of 1st standard parallel'],\n    ['standard_parallel_2', 'Standard_Parallel_2'],\n    ['standard_parallel_2', 'Latitude of 2nd standard parallel'],\n    ['false_easting', 'False_Easting'],\n    ['false_easting', 'False easting'],\n    ['false-easting', 'Easting at false origin'],\n    ['false_northing', 'False_Northing'],\n    ['false_northing', 'False northing'],\n    ['false_northing', 'Northing at false origin'],\n    ['central_meridian', 'Central_Meridian'],\n    ['central_meridian', 'Longitude of natural origin'],\n    ['central_meridian', 'Longitude of false origin'],\n    ['latitude_of_origin', 'Latitude_Of_Origin'],\n    ['latitude_of_origin', 'Central_Parallel'],\n    ['latitude_of_origin', 'Latitude of natural origin'],\n    ['latitude_of_origin', 'Latitude of false origin'],\n    ['scale_factor', 'Scale_Factor'],\n    ['k0', 'scale_factor'],\n    ['latitude_of_center', 'Latitude_Of_Center'],\n    ['latitude_of_center', 'Latitude_of_center'],\n    ['lat0', 'latitude_of_center', d2r],\n    ['longitude_of_center', 'Longitude_Of_Center'],\n    ['longitude_of_center', 'Longitude_of_center'],\n    ['longc', 'longitude_of_center', d2r],\n    ['x0', 'false_easting', toMeter],\n    ['y0', 'false_northing', toMeter],\n    ['long0', 'central_meridian', d2r],\n    ['lat0', 'latitude_of_origin', d2r],\n    ['lat0', 'standard_parallel_1', d2r],\n    ['lat1', 'standard_parallel_1', d2r],\n    ['lat2', 'standard_parallel_2', d2r],\n    ['azimuth', 'Azimuth'],\n    ['alpha', 'azimuth', d2r],\n    ['srsCode', 'name']\n  ];\n  list.forEach(renamer);\n  applyProjectionDefaults(wkt);\n}\nexport default function(wkt) {\n  if (typeof wkt === 'object') {\n    return transformPROJJSON(wkt);\n  }\n  const version = detectWKTVersion(wkt);\n  var lisp = parser(wkt);\n  if (version === 'WKT2') {\n    const projjson = buildPROJJSON(lisp);\n    return transformPROJJSON(projjson);\n  }\n  var type = lisp[0];\n  var obj = {};\n  sExpr(lisp, obj);\n  cleanWKT(obj);\n  return obj[type];\n}\n","/**\n * Detects whether the WKT string is WKT1 or WKT2.\n * @param {string} wkt The WKT string.\n * @returns {string} The detected version (\"WKT1\" or \"WKT2\").\n */\nexport function detectWKTVersion(wkt) {\n  // Normalize the WKT string for easier keyword matching\n  const normalizedWKT = wkt.toUpperCase();\n\n  // Check for WKT2-specific keywords\n  if (\n    normalizedWKT.includes('PROJCRS') ||\n    normalizedWKT.includes('GEOGCRS') ||\n    normalizedWKT.includes('BOUNDCRS') ||\n    normalizedWKT.includes('VERTCRS') ||\n    normalizedWKT.includes('LENGTHUNIT') ||\n    normalizedWKT.includes('ANGLEUNIT') ||\n    normalizedWKT.includes('SCALEUNIT')\n  ) {\n    return 'WKT2';\n  }\n\n  // Check for WKT1-specific keywords\n  if (\n    normalizedWKT.includes('PROJCS') ||\n    normalizedWKT.includes('GEOGCS') ||\n    normalizedWKT.includes('LOCAL_CS') ||\n    normalizedWKT.includes('VERT_CS') ||\n    normalizedWKT.includes('UNIT')\n  ) {\n    return 'WKT1';\n  }\n\n  // Default to WKT1 if no specific indicators are found\n  return 'WKT1';\n}","import PROJJSONBuilder2015 from './PROJJSONBuilder2015.js';\nimport PROJJSONBuilder2019 from './PROJJSONBuilder2019.js';\n\n/**\n * Detects the WKT2 version based on the structure of the WKT.\n * @param {Array} root The root WKT array node.\n * @returns {string} The detected version (\"2015\" or \"2019\").\n */\nfunction detectWKT2Version(root) {\n  // Check for WKT2-2019-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'USAGE')) {\n    return '2019'; // `USAGE` is specific to WKT2-2019\n  }\n\n  // Check for WKT2-2015-specific nodes\n  if (root.find((child) => Array.isArray(child) && child[0] === 'CS')) {\n    return '2015'; // `CS` is valid in both, but default to 2015 unless `USAGE` is present\n  }\n\n  if (root[0] === 'BOUNDCRS' || root[0] === 'PROJCRS' || root[0] === 'GEOGCRS') {\n    return '2015'; // These are valid in both, but default to 2015\n  }\n\n  // Default to WKT2-2015 if no specific indicators are found\n  return '2015';\n}\n\n/**\n * Builds a PROJJSON object from a WKT array structure.\n * @param {Array} root The root WKT array node.\n * @returns {Object} The PROJJSON object.\n */\nexport function buildPROJJSON(root) {\n  const version = detectWKT2Version(root);\n  const builder = version === '2019' ? PROJJSONBuilder2019 : PROJJSONBuilder2015;\n  return builder.convert(root);\n}\n","import globals from './global';\nimport parseProj from './projString';\nimport wkt from 'wkt-parser';\n\n/**\n * @typedef {Object} ProjectionDefinition\n * @property {string} title\n * @property {string} [projName]\n * @property {string} [ellps]\n * @property {import('./Proj.js').DatumDefinition} [datum]\n * @property {string} [datumName]\n * @property {number} [rf]\n * @property {number} [lat0]\n * @property {number} [lat1]\n * @property {number} [lat2]\n * @property {number} [lat_ts]\n * @property {number} [long0]\n * @property {number} [long1]\n * @property {number} [long2]\n * @property {number} [alpha]\n * @property {number} [longc]\n * @property {number} [x0]\n * @property {number} [y0]\n * @property {number} [k0]\n * @property {number} [a]\n * @property {number} [b]\n * @property {true} [R_A]\n * @property {number} [zone]\n * @property {true} [utmSouth]\n * @property {string|Array<number>} [datum_params]\n * @property {number} [to_meter]\n * @property {string} [units]\n * @property {number} [from_greenwich]\n * @property {string} [datumCode]\n * @property {string} [nadgrids]\n * @property {string} [axis]\n * @property {boolean} [sphere]\n * @property {number} [rectified_grid_angle]\n * @property {boolean} [approx]\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n */\n\n/**\n * @overload\n * @param {string} name\n * @param {string|ProjectionDefinition|import('./core.js').PROJJSONDefinition} projection\n * @returns {void}\n */\n/**\n * @overload\n * @param {Array<[string, string]>} name\n * @returns {Array<ProjectionDefinition|undefined>}\n */\n/**\n * @overload\n * @param {string} name\n * @returns {ProjectionDefinition}\n */\n\n/**\n * @param {string | Array<Array<string>> | Partial<Record<'EPSG'|'ESRI'|'IAU2000', ProjectionDefinition>>} name\n * @returns {ProjectionDefinition | Array<ProjectionDefinition|undefined> | void}\n */\nfunction defs(name) {\n  /* global console */\n  var that = this;\n  if (arguments.length === 2) {\n    var def = arguments[1];\n    if (typeof def === 'string') {\n      if (def.charAt(0) === '+') {\n        defs[/** @type {string} */ (name)] = parseProj(arguments[1]);\n      } else {\n        defs[/** @type {string} */ (name)] = wkt(arguments[1]);\n      }\n    } else {\n      defs[/** @type {string} */ (name)] = def;\n    }\n  } else if (arguments.length === 1) {\n    if (Array.isArray(name)) {\n      return name.map(function (v) {\n        if (Array.isArray(v)) {\n          return defs.apply(that, v);\n        } else {\n          return defs(v);\n        }\n      });\n    } else if (typeof name === 'string') {\n      if (name in defs) {\n        return defs[name];\n      }\n    } else if ('EPSG' in name) {\n      defs['EPSG:' + name.EPSG] = name;\n    } else if ('ESRI' in name) {\n      defs['ESRI:' + name.ESRI] = name;\n    } else if ('IAU2000' in name) {\n      defs['IAU2000:' + name.IAU2000] = name;\n    } else {\n      console.log(name);\n    }\n    return;\n  }\n}\nglobals(defs);\nexport default defs;\n","export default function (defs) {\n  defs('EPSG:4326', '+title=WGS 84 (long/lat) +proj=longlat +ellps=WGS84 +datum=WGS84 +units=degrees');\n  defs('EPSG:4269', '+title=NAD83 (long/lat) +proj=longlat +a=6378137.0 +b=6356752.31414036 +ellps=GRS80 +datum=NAD83 +units=degrees');\n  defs('EPSG:3857', '+title=WGS 84 / Pseudo-Mercator +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs');\n  // UTM WGS84\n  for (var i = 1; i <= 60; ++i) {\n    defs('EPSG:' + (32600 + i), '+proj=utm +zone=' + i + ' +datum=WGS84 +units=m');\n    defs('EPSG:' + (32700 + i), '+proj=utm +zone=' + i + ' +south +datum=WGS84 +units=m');\n  }\n\n  defs.WGS84 = defs['EPSG:4326'];\n  defs['EPSG:3785'] = defs['EPSG:3857']; // maintain backward compat, official code is 3857\n  defs.GOOGLE = defs['EPSG:3857'];\n  defs['EPSG:900913'] = defs['EPSG:3857'];\n  defs['EPSG:102113'] = defs['EPSG:3857'];\n}\n","import defs from './defs';\nimport wkt from 'wkt-parser';\nimport projStr from './projString';\nimport match from './match';\nfunction testObj(code) {\n  return typeof code === 'string';\n}\nfunction testDef(code) {\n  return code in defs;\n}\nfunction testWKT(code) {\n  return (code.indexOf('+') !== 0 && code.indexOf('[') !== -1) || (typeof code === 'object' && !('srsCode' in code));\n}\nvar codes = ['3857', '900913', '3785', '102113'];\nfunction checkMercator(item) {\n  var auth = match(item, 'authority');\n  if (!auth) {\n    return;\n  }\n  var code = match(auth, 'epsg');\n  return code && codes.indexOf(code) > -1;\n}\nfunction checkProjStr(item) {\n  var ext = match(item, 'extension');\n  if (!ext) {\n    return;\n  }\n  return match(ext, 'proj4');\n}\nfunction testProj(code) {\n  return code[0] === '+';\n}\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} code\n * @returns {import('./defs').ProjectionDefinition}\n */\nfunction parse(code) {\n  if (testObj(code)) {\n    // check to see if this is a WKT string\n    if (testDef(code)) {\n      return defs[code];\n    }\n    if (testWKT(code)) {\n      var out = wkt(code);\n      // test of spetial case, due to this being a very common and often malformed\n      if (checkMercator(out)) {\n        return defs['EPSG:3857'];\n      }\n      var maybeProjStr = checkProjStr(out);\n      if (maybeProjStr) {\n        return projStr(maybeProjStr);\n      }\n      return out;\n    }\n    if (testProj(code)) {\n      return projStr(code);\n    }\n  } else if (!('projName' in code)) {\n    return wkt(code);\n  } else {\n    return code;\n  }\n}\n\nexport default parse;\n","export default function (destination, source) {\n  destination = destination || {};\n  var value, property;\n  if (!source) {\n    return destination;\n  }\n  for (property in source) {\n    value = source[property];\n    if (value !== undefined) {\n      destination[property] = value;\n    }\n  }\n  return destination;\n}\n","export default function (eccent, sinphi, cosphi) {\n  var con = eccent * sinphi;\n  return cosphi / (Math.sqrt(1 - con * con));\n}\n","export default function (x) {\n  return x < 0 ? -1 : 1;\n}\n","import { TWO_PI, SPI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) <= SPI) ? x : (x - (sign(x) * TWO_PI));\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, phi, sinphi) {\n  var con = eccent * sinphi;\n  var com = 0.5 * eccent;\n  con = Math.pow(((1 - con) / (1 + con)), com);\n  return (Math.tan(0.5 * (HALF_PI - phi)) / con);\n}\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, ts) {\n  var eccnth = 0.5 * eccent;\n  var con, dphi;\n  var phi = HALF_PI - 2 * Math.atan(ts);\n  for (var i = 0; i <= 15; i++) {\n    con = eccent * Math.sin(phi);\n    dphi = HALF_PI - 2 * Math.atan(ts * (Math.pow(((1 - con) / (1 + con)), eccnth))) - phi;\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n  // console.log(\"phi2z has NoConvergence\");\n  return -9999;\n}\n","export function init() {\n  // no-op for longlat\n}\n\nfunction identity(pt) {\n  return pt;\n}\nexport { identity as forward };\nexport { identity as inverse };\nexport var names = ['longlat', 'identity'];\nexport default {\n  init: init,\n  forward: identity,\n  inverse: identity,\n  names: names\n};\n","import merc from './projections/merc';\nimport longlat from './projections/longlat';\n/** @type {Array<Partial<import('./Proj').default>>} */\nvar projs = [merc, longlat];\nvar names = {};\nvar projStore = [];\n\n/**\n * @param {import('./Proj').default} proj\n * @param {number} i\n */\nexport function add(proj, i) {\n  var len = projStore.length;\n  if (!proj.names) {\n    console.log(i);\n    return true;\n  }\n  projStore[len] = proj;\n  proj.names.forEach(function (n) {\n    names[n.toLowerCase()] = len;\n  });\n  return this;\n}\n\nexport function getNormalizedProjName(n) {\n  return n.replace(/[-\\(\\)\\s]+/g, ' ').trim().replace(/ /g, '_');\n}\n\n/**\n * Get a projection by name.\n * @param {string} name\n * @returns {import('./Proj').default|false}\n */\nexport function get(name) {\n  if (!name) {\n    return false;\n  }\n  var n = name.toLowerCase();\n  if (typeof names[n] !== 'undefined' && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n  n = getNormalizedProjName(n);\n  if (n in names && projStore[names[n]]) {\n    return projStore[names[n]];\n  }\n}\n\nexport function start() {\n  projs.forEach(add);\n}\nexport default {\n  start: start,\n  add: add,\n  get: get\n};\n","import msfnz from '../common/msfnz';\n\nimport adjust_lon from '../common/adjust_lon';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport { FORTPI, R2D, EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e\n * @property {number} k\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var con = this.b / this.a;\n  this.es = 1 - con * con;\n  if (!('x0' in this)) {\n    this.x0 = 0;\n  }\n  if (!('y0' in this)) {\n    this.y0 = 0;\n  }\n  this.e = Math.sqrt(this.es);\n  if (this.lat_ts) {\n    if (this.sphere) {\n      this.k0 = Math.cos(this.lat_ts);\n    } else {\n      this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n    }\n  } else {\n    if (!this.k0) {\n      if (this.k) {\n        this.k0 = this.k;\n      } else {\n        this.k0 = 1;\n      }\n    }\n  }\n}\n\n/* Mercator forward equations--mapping lat,long to x,y\n  -------------------------------------------------- */\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  // convert to radians\n  if (lat * R2D > 90 && lat * R2D < -90 && lon * R2D > 180 && lon * R2D < -180) {\n    return null;\n  }\n\n  var x, y;\n  if (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN) {\n    return null;\n  } else {\n    if (this.sphere) {\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 + this.a * this.k0 * Math.log(Math.tan(FORTPI + 0.5 * lat));\n    } else {\n      var sinphi = Math.sin(lat);\n      var ts = tsfnz(this.e, lat, sinphi);\n      x = this.x0 + this.a * this.k0 * adjust_lon(lon - this.long0);\n      y = this.y0 - this.a * this.k0 * Math.log(ts);\n    }\n    p.x = x;\n    p.y = y;\n    return p;\n  }\n}\n\n/* Mercator inverse equations--mapping x,y to lat/long\n  -------------------------------------------------- */\nexport function inverse(p) {\n  var x = p.x - this.x0;\n  var y = p.y - this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lat = HALF_PI - 2 * Math.atan(Math.exp(-y / (this.a * this.k0)));\n  } else {\n    var ts = Math.exp(-y / (this.a * this.k0));\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  }\n  lon = adjust_lon(this.long0 + x / (this.a * this.k0));\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mercator', 'Popular Visualisation Pseudo Mercator', 'Mercator_1SP', 'Mercator_Auxiliary_Sphere', 'Mercator_Variant_A', 'merc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","var ellipsoids = {\n  MERIT: {\n    a: 6378137,\n    rf: 298.257,\n    ellipseName: 'MERIT 1983'\n  },\n  SGS85: {\n    a: 6378136,\n    rf: 298.257,\n    ellipseName: 'Soviet Geodetic System 85'\n  },\n  GRS80: {\n    a: 6378137,\n    rf: 298.257222101,\n    ellipseName: 'GRS 1980(IUGG, 1980)'\n  },\n  IAU76: {\n    a: 6378140,\n    rf: 298.257,\n    ellipseName: 'IAU 1976'\n  },\n  airy: {\n    a: 6377563.396,\n    b: 6356256.91,\n    ellipseName: 'Airy 1830'\n  },\n  APL4: {\n    a: 6378137,\n    rf: 298.25,\n    ellipseName: 'Appl. Physics. 1965'\n  },\n  NWL9D: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'Naval Weapons Lab., 1965'\n  },\n  mod_airy: {\n    a: 6377340.189,\n    b: 6356034.446,\n    ellipseName: 'Modified Airy'\n  },\n  andrae: {\n    a: 6377104.43,\n    rf: 300,\n    ellipseName: 'Andrae 1876 (Den., Iclnd.)'\n  },\n  aust_SA: {\n    a: 6378160,\n    rf: 298.25,\n    ellipseName: 'Australian Natl & S. Amer. 1969'\n  },\n  GRS67: {\n    a: 6378160,\n    rf: 298.247167427,\n    ellipseName: 'GRS 67(IUGG 1967)'\n  },\n  bessel: {\n    a: 6377397.155,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841'\n  },\n  bess_nam: {\n    a: 6377483.865,\n    rf: 299.1528128,\n    ellipseName: 'Bessel 1841 (Namibia)'\n  },\n  clrk66: {\n    a: 6378206.4,\n    b: 6356583.8,\n    ellipseName: 'Clarke 1866'\n  },\n  clrk80: {\n    a: 6378249.145,\n    rf: 293.4663,\n    ellipseName: 'Clarke 1880 mod.'\n  },\n  clrk80ign: {\n    a: 6378249.2,\n    b: 6356515,\n    rf: 293.4660213,\n    ellipseName: 'Clarke 1880 (IGN)'\n  },\n  clrk58: {\n    a: 6378293.645208759,\n    rf: 294.2606763692654,\n    ellipseName: 'Clarke 1858'\n  },\n  CPM: {\n    a: 6375738.7,\n    rf: 334.29,\n    ellipseName: 'Comm. des Poids et Mesures 1799'\n  },\n  delmbr: {\n    a: 6376428,\n    rf: 311.5,\n    ellipseName: 'Delambre 1810 (Belgium)'\n  },\n  engelis: {\n    a: 6378136.05,\n    rf: 298.2566,\n    ellipseName: 'Engelis 1985'\n  },\n  evrst30: {\n    a: 6377276.345,\n    rf: 300.8017,\n    ellipseName: 'Everest 1830'\n  },\n  evrst48: {\n    a: 6377304.063,\n    rf: 300.8017,\n    ellipseName: 'Everest 1948'\n  },\n  evrst56: {\n    a: 6377301.243,\n    rf: 300.8017,\n    ellipseName: 'Everest 1956'\n  },\n  evrst69: {\n    a: 6377295.664,\n    rf: 300.8017,\n    ellipseName: 'Everest 1969'\n  },\n  evrstSS: {\n    a: 6377298.556,\n    rf: 300.8017,\n    ellipseName: 'Everest (Sabah & Sarawak)'\n  },\n  fschr60: {\n    a: 6378166,\n    rf: 298.3,\n    ellipseName: 'Fischer (Mercury Datum) 1960'\n  },\n  fschr60m: {\n    a: 6378155,\n    rf: 298.3,\n    ellipseName: 'Fischer 1960'\n  },\n  fschr68: {\n    a: 6378150,\n    rf: 298.3,\n    ellipseName: 'Fischer 1968'\n  },\n  helmert: {\n    a: 6378200,\n    rf: 298.3,\n    ellipseName: 'Helmert 1906'\n  },\n  hough: {\n    a: 6378270,\n    rf: 297,\n    ellipseName: 'Hough'\n  },\n  intl: {\n    a: 6378388,\n    rf: 297,\n    ellipseName: 'International 1909 (Hayford)'\n  },\n  kaula: {\n    a: 6378163,\n    rf: 298.24,\n    ellipseName: 'Kaula 1961'\n  },\n  lerch: {\n    a: 6378139,\n    rf: 298.257,\n    ellipseName: 'Lerch 1979'\n  },\n  mprts: {\n    a: 6397300,\n    rf: 191,\n    ellipseName: 'Maupertius 1738'\n  },\n  new_intl: {\n    a: 6378157.5,\n    b: 6356772.2,\n    ellipseName: 'New International 1967'\n  },\n  plessis: {\n    a: 6376523,\n    rf: 6355863,\n    ellipseName: 'Plessis 1817 (France)'\n  },\n  krass: {\n    a: 6378245,\n    rf: 298.3,\n    ellipseName: 'Krassovsky, 1942'\n  },\n  SEasia: {\n    a: 6378155,\n    b: 6356773.3205,\n    ellipseName: 'Southeast Asia'\n  },\n  walbeck: {\n    a: 6376896,\n    b: 6355834.8467,\n    ellipseName: 'Walbeck'\n  },\n  WGS60: {\n    a: 6378165,\n    rf: 298.3,\n    ellipseName: 'WGS 60'\n  },\n  WGS66: {\n    a: 6378145,\n    rf: 298.25,\n    ellipseName: 'WGS 66'\n  },\n  WGS7: {\n    a: 6378135,\n    rf: 298.26,\n    ellipseName: 'WGS 72'\n  },\n  WGS84: {\n    a: 6378137,\n    rf: 298.257223563,\n    ellipseName: 'WGS 84'\n  },\n  sphere: {\n    a: 6370997,\n    b: 6370997,\n    ellipseName: 'Normal Sphere (r=6370997)'\n  }\n};\n\nexport default ellipsoids;\n","import { SIXTH, RA4, RA6, EPSLN } from './constants/values';\nimport { default as Ellipsoid } from './constants/Ellipsoid';\nimport match from './match';\n\nconst WGS84 = Ellipsoid.WGS84; // default ellipsoid\n\nexport function eccentricity(a, b, rf, R_A) {\n  var a2 = a * a; // used in geocentric\n  var b2 = b * b; // used in geocentric\n  var es = (a2 - b2) / a2; // e ^ 2\n  var e = 0;\n  if (R_A) {\n    a *= 1 - es * (SIXTH + es * (RA4 + es * RA6));\n    a2 = a * a;\n    es = 0;\n  } else {\n    e = Math.sqrt(es); // eccentricity\n  }\n  var ep2 = (a2 - b2) / b2; // used in geocentric\n  return {\n    es: es,\n    e: e,\n    ep2: ep2\n  };\n}\nexport function sphere(a, b, rf, ellps, sphere) {\n  if (!a) { // do we have an ellipsoid?\n    var ellipse = match(Ellipsoid, ellps);\n    if (!ellipse) {\n      ellipse = WGS84;\n    }\n    a = ellipse.a;\n    b = ellipse.b;\n    rf = ellipse.rf;\n  }\n\n  if (rf && !b) {\n    b = (1.0 - 1.0 / rf) * a;\n  }\n  if (rf === 0 || Math.abs(a - b) < EPSLN) {\n    sphere = true;\n    b = a;\n  }\n  return {\n    a: a,\n    b: b,\n    rf: rf,\n    sphere: sphere\n  };\n}\n","var datums = {\n  wgs84: {\n    towgs84: '0,0,0',\n    ellipse: 'WGS84',\n    datumName: 'WGS84'\n  },\n  ch1903: {\n    towgs84: '674.374,15.056,405.346',\n    ellipse: 'bessel',\n    datumName: 'swiss'\n  },\n  ggrs87: {\n    towgs84: '-199.87,74.79,246.62',\n    ellipse: 'GRS80',\n    datumName: 'Greek_Geodetic_Reference_System_1987'\n  },\n  nad83: {\n    towgs84: '0,0,0',\n    ellipse: 'GRS80',\n    datumName: 'North_American_Datum_1983'\n  },\n  nad27: {\n    nadgrids: '@conus,@alaska,@ntv2_0.gsb,@ntv1_can.dat',\n    ellipse: 'clrk66',\n    datumName: 'North_American_Datum_1927'\n  },\n  potsdam: {\n    towgs84: '598.1,73.7,418.2,0.202,0.045,-2.455,6.7',\n    ellipse: 'bessel',\n    datumName: 'Potsdam Rauenberg 1950 DHDN'\n  },\n  carthage: {\n    towgs84: '-263.0,6.0,431.0',\n    ellipse: 'clark80',\n    datumName: 'Carthage 1934 Tunisia'\n  },\n  hermannskogel: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Hermannskogel'\n  },\n  mgi: {\n    towgs84: '577.326,90.129,463.919,5.137,1.474,5.297,2.4232',\n    ellipse: 'bessel',\n    datumName: 'Militar-Geographische Institut'\n  },\n  osni52: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'airy',\n    datumName: 'Irish National'\n  },\n  ire65: {\n    towgs84: '482.530,-130.596,564.557,-1.042,-0.214,-0.631,8.15',\n    ellipse: 'mod_airy',\n    datumName: 'Ireland 1965'\n  },\n  rassadiran: {\n    towgs84: '-133.63,-157.5,-158.62',\n    ellipse: 'intl',\n    datumName: 'Rassadiran'\n  },\n  nzgd49: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993',\n    ellipse: 'intl',\n    datumName: 'New Zealand Geodetic Datum 1949'\n  },\n  osgb36: {\n    towgs84: '446.448,-125.157,542.060,0.1502,0.2470,0.8421,-20.4894',\n    ellipse: 'airy',\n    datumName: 'Ordnance Survey of Great Britain 1936'\n  },\n  s_jtsk: {\n    towgs84: '589,76,480',\n    ellipse: 'bessel',\n    datumName: 'S-JTSK (Ferro)'\n  },\n  beduaram: {\n    towgs84: '-106,-87,188',\n    ellipse: 'clrk80',\n    datumName: 'Beduaram'\n  },\n  gunung_segara: {\n    towgs84: '-403,684,41',\n    ellipse: 'bessel',\n    datumName: 'Gunung Segara Jakarta'\n  },\n  rnb72: {\n    towgs84: '106.869,-52.2978,103.724,-0.33657,0.456955,-1.84218,1',\n    ellipse: 'intl',\n    datumName: 'Reseau National Belge 1972'\n  },\n  EPSG_5451: {\n    towgs84: '6.41,-49.05,-11.28,1.5657,0.5242,6.9718,-5.7649'\n  },\n  IGNF_LURESG: {\n    towgs84: '-192.986,13.673,-39.309,-0.4099,-2.9332,2.6881,0.43'\n  },\n  EPSG_4614: {\n    towgs84: '-119.4248,-303.65872,-11.00061,1.164298,0.174458,1.096259,3.657065'\n  },\n  EPSG_4615: {\n    towgs84: '-494.088,-312.129,279.877,-1.423,-1.013,1.59,-0.748'\n  },\n  ESRI_37241: {\n    towgs84: '-76.822,257.457,-12.817,2.136,-0.033,-2.392,-0.031'\n  },\n  ESRI_37249: {\n    towgs84: '-440.296,58.548,296.265,1.128,10.202,4.559,-0.438'\n  },\n  ESRI_37245: {\n    towgs84: '-511.151,-181.269,139.609,1.05,2.703,1.798,3.071'\n  },\n  EPSG_4178: {\n    towgs84: '24.9,-126.4,-93.2,-0.063,-0.247,-0.041,1.01'\n  },\n  EPSG_4622: {\n    towgs84: '-472.29,-5.63,-304.12,0.4362,-0.8374,0.2563,1.8984'\n  },\n  EPSG_4625: {\n    towgs84: '126.93,547.94,130.41,-2.7867,5.1612,-0.8584,13.8227'\n  },\n  EPSG_5252: {\n    towgs84: '0.023,0.036,-0.068,0.00176,0.00912,-0.01136,0.00439'\n  },\n  EPSG_4314: {\n    towgs84: '597.1,71.4,412.1,0.894,0.068,-1.563,7.58'\n  },\n  EPSG_4282: {\n    towgs84: '-178.3,-316.7,-131.5,5.278,6.077,10.979,19.166'\n  },\n  EPSG_4231: {\n    towgs84: '-83.11,-97.38,-117.22,0.0276,-0.2167,0.2147,0.1218'\n  },\n  EPSG_4274: {\n    towgs84: '-230.994,102.591,25.199,0.633,-0.239,0.9,1.95'\n  },\n  EPSG_4134: {\n    towgs84: '-180.624,-225.516,173.919,-0.81,-1.898,8.336,16.71006'\n  },\n  EPSG_4254: {\n    towgs84: '18.38,192.45,96.82,0.056,-0.142,-0.2,-0.0013'\n  },\n  EPSG_4159: {\n    towgs84: '-194.513,-63.978,-25.759,-3.4027,3.756,-3.352,-0.9175'\n  },\n  EPSG_4687: {\n    towgs84: '0.072,-0.507,-0.245,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_4227: {\n    towgs84: '-83.58,-397.54,458.78,-17.595,-2.847,4.256,3.225'\n  },\n  EPSG_4746: {\n    towgs84: '599.4,72.4,419.2,-0.062,-0.022,-2.723,6.46'\n  },\n  EPSG_4745: {\n    towgs84: '612.4,77,440.2,-0.054,0.057,-2.797,2.55'\n  },\n  EPSG_6311: {\n    towgs84: '8.846,-4.394,-1.122,-0.00237,-0.146528,0.130428,0.783926'\n  },\n  EPSG_4289: {\n    towgs84: '565.7381,50.4018,465.2904,-1.91514,1.60363,-9.09546,4.07244'\n  },\n  EPSG_4230: {\n    towgs84: '-68.863,-134.888,-111.49,-0.53,-0.14,0.57,-3.4'\n  },\n  EPSG_4154: {\n    towgs84: '-123.02,-158.95,-168.47'\n  },\n  EPSG_4156: {\n    towgs84: '570.8,85.7,462.8,4.998,1.587,5.261,3.56'\n  },\n  EPSG_4299: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4179: {\n    towgs84: '33.4,-146.6,-76.3,-0.359,-0.053,0.844,-0.84'\n  },\n  EPSG_4313: {\n    towgs84: '-106.8686,52.2978,-103.7239,0.3366,-0.457,1.8422,-1.2747'\n  },\n  EPSG_4194: {\n    towgs84: '163.511,127.533,-159.789'\n  },\n  EPSG_4195: {\n    towgs84: '105,326,-102.5'\n  },\n  EPSG_4196: {\n    towgs84: '-45,417,-3.5'\n  },\n  EPSG_4611: {\n    towgs84: '-162.619,-276.959,-161.764,0.067753,-2.243649,-1.158827,-1.094246'\n  },\n  EPSG_4633: {\n    towgs84: '137.092,131.66,91.475,-1.9436,-11.5993,-4.3321,-7.4824'\n  },\n  EPSG_4641: {\n    towgs84: '-408.809,366.856,-412.987,1.8842,-0.5308,2.1655,-121.0993'\n  },\n  EPSG_4643: {\n    towgs84: '-480.26,-438.32,-643.429,16.3119,20.1721,-4.0349,-111.7002'\n  },\n  EPSG_4300: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4188: {\n    towgs84: '482.5,-130.6,564.6,-1.042,-0.214,-0.631,8.15'\n  },\n  EPSG_4660: {\n    towgs84: '982.6087,552.753,-540.873,32.39344,-153.25684,-96.2266,16.805'\n  },\n  EPSG_4662: {\n    towgs84: '97.295,-263.247,310.882,-1.5999,0.8386,3.1409,13.3259'\n  },\n  EPSG_3906: {\n    towgs84: '577.88891,165.22205,391.18289,4.9145,-0.94729,-13.05098,7.78664'\n  },\n  EPSG_4307: {\n    towgs84: '-209.3622,-87.8162,404.6198,0.0046,3.4784,0.5805,-1.4547'\n  },\n  EPSG_6892: {\n    towgs84: '-76.269,-16.683,68.562,-6.275,10.536,-4.286,-13.686'\n  },\n  EPSG_4690: {\n    towgs84: '221.597,152.441,176.523,2.403,1.3893,0.884,11.4648'\n  },\n  EPSG_4691: {\n    towgs84: '218.769,150.75,176.75,3.5231,2.0037,1.288,10.9817'\n  },\n  EPSG_4629: {\n    towgs84: '72.51,345.411,79.241,-1.5862,-0.8826,-0.5495,1.3653'\n  },\n  EPSG_4630: {\n    towgs84: '165.804,216.213,180.26,-0.6251,-0.4515,-0.0721,7.4111'\n  },\n  EPSG_4692: {\n    towgs84: '217.109,86.452,23.711,0.0183,-0.0003,0.007,-0.0093'\n  },\n  EPSG_9333: {\n    towgs84: '0,0,0,-8.393,0.749,-10.276,0'\n  },\n  EPSG_9059: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4312: {\n    towgs84: '601.705,84.263,485.227,4.7354,1.3145,5.393,-2.3887'\n  },\n  EPSG_4123: {\n    towgs84: '-96.062,-82.428,-121.753,4.801,0.345,-1.376,1.496'\n  },\n  EPSG_4309: {\n    towgs84: '-124.45,183.74,44.64,-0.4384,0.5446,-0.9706,-2.1365'\n  },\n  ESRI_104106: {\n    towgs84: '-283.088,-70.693,117.445,-1.157,0.059,-0.652,-4.058'\n  },\n  EPSG_4281: {\n    towgs84: '-219.247,-73.802,269.529'\n  },\n  EPSG_4322: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4324: {\n    towgs84: '0,0,1.9'\n  },\n  EPSG_4284: {\n    towgs84: '43.822,-108.842,-119.585,1.455,-0.761,0.737,0.549'\n  },\n  EPSG_4277: {\n    towgs84: '446.448,-125.157,542.06,0.15,0.247,0.842,-20.489'\n  },\n  EPSG_4207: {\n    towgs84: '-282.1,-72.2,120,-1.529,0.145,-0.89,-4.46'\n  },\n  EPSG_4688: {\n    towgs84: '347.175,1077.618,2623.677,33.9058,-70.6776,9.4013,186.0647'\n  },\n  EPSG_4689: {\n    towgs84: '410.793,54.542,80.501,-2.5596,-2.3517,-0.6594,17.3218'\n  },\n  EPSG_4720: {\n    towgs84: '0,0,4.5'\n  },\n  EPSG_4273: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  EPSG_4240: {\n    towgs84: '204.64,834.74,293.8'\n  },\n  EPSG_4817: {\n    towgs84: '278.3,93,474.5,7.889,0.05,-6.61,6.21'\n  },\n  ESRI_104131: {\n    towgs84: '426.62,142.62,460.09,4.98,4.49,-12.42,-17.1'\n  },\n  EPSG_4265: {\n    towgs84: '-104.1,-49.1,-9.9,0.971,-2.917,0.714,-11.68'\n  },\n  EPSG_4263: {\n    towgs84: '-111.92,-87.85,114.5,1.875,0.202,0.219,0.032'\n  },\n  EPSG_4298: {\n    towgs84: '-689.5937,623.84046,-65.93566,-0.02331,1.17094,-0.80054,5.88536'\n  },\n  EPSG_4270: {\n    towgs84: '-253.4392,-148.452,386.5267,0.15605,0.43,-0.1013,-0.0424'\n  },\n  EPSG_4229: {\n    towgs84: '-121.8,98.1,-10.7'\n  },\n  EPSG_4220: {\n    towgs84: '-55.5,-348,-229.2'\n  },\n  EPSG_4214: {\n    towgs84: '12.646,-155.176,-80.863'\n  },\n  EPSG_4232: {\n    towgs84: '-345,3,223'\n  },\n  EPSG_4238: {\n    towgs84: '-1.977,-13.06,-9.993,0.364,0.254,0.689,-1.037'\n  },\n  EPSG_4168: {\n    towgs84: '-170,33,326'\n  },\n  EPSG_4131: {\n    towgs84: '199,931,318.9'\n  },\n  EPSG_4152: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_5228: {\n    towgs84: '572.213,85.334,461.94,4.9732,1.529,5.2484,3.5378'\n  },\n  EPSG_8351: {\n    towgs84: '485.021,169.465,483.839,7.786342,4.397554,4.102655,0'\n  },\n  EPSG_4683: {\n    towgs84: '-127.62,-67.24,-47.04,-3.068,4.903,1.578,-1.06'\n  },\n  EPSG_4133: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7373: {\n    towgs84: '0.819,-0.5762,-1.6446,-0.00378,-0.03317,0.00318,0.0693'\n  },\n  EPSG_9075: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9072: {\n    towgs84: '-0.9102,2.0141,0.5602,0.029039,0.010065,0.010101,0'\n  },\n  EPSG_9294: {\n    towgs84: '1.16835,-1.42001,-2.24431,-0.00822,-0.05508,0.01818,0.23388'\n  },\n  EPSG_4212: {\n    towgs84: '-267.434,173.496,181.814,-13.4704,8.7154,7.3926,14.7492'\n  },\n  EPSG_4191: {\n    towgs84: '-44.183,-0.58,-38.489,2.3867,2.7072,-3.5196,-8.2703'\n  },\n  EPSG_4237: {\n    towgs84: '52.684,-71.194,-13.975,-0.312,-0.1063,-0.3729,1.0191'\n  },\n  EPSG_4740: {\n    towgs84: '-1.08,-0.27,-0.9'\n  },\n  EPSG_4124: {\n    towgs84: '419.3836,99.3335,591.3451,0.850389,1.817277,-7.862238,-0.99496'\n  },\n  EPSG_5681: {\n    towgs84: '584.9636,107.7175,413.8067,1.1155,0.2824,-3.1384,7.9922'\n  },\n  EPSG_4141: {\n    towgs84: '23.772,17.49,17.859,-0.3132,-1.85274,1.67299,-5.4262'\n  },\n  EPSG_4204: {\n    towgs84: '-85.645,-273.077,-79.708,2.289,-1.421,2.532,3.194'\n  },\n  EPSG_4319: {\n    towgs84: '226.702,-193.337,-35.371,-2.229,-4.391,9.238,0.9798'\n  },\n  EPSG_4200: {\n    towgs84: '24.82,-131.21,-82.66'\n  },\n  EPSG_4130: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4127: {\n    towgs84: '-82.875,-57.097,-156.768,-2.158,1.524,-0.982,-0.359'\n  },\n  EPSG_4149: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4617: {\n    towgs84: '-0.991,1.9072,0.5129,1.25033e-7,4.6785e-8,5.6529e-8,0'\n  },\n  EPSG_4663: {\n    towgs84: '-210.502,-66.902,-48.476,2.094,-15.067,-5.817,0.485'\n  },\n  EPSG_4664: {\n    towgs84: '-211.939,137.626,58.3,-0.089,0.251,0.079,0.384'\n  },\n  EPSG_4665: {\n    towgs84: '-105.854,165.589,-38.312,-0.003,-0.026,0.024,-0.048'\n  },\n  EPSG_4666: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  EPSG_4756: {\n    towgs84: '-192.873,-39.382,-111.202,-0.00205,-0.0005,0.00335,0.0188'\n  },\n  EPSG_4723: {\n    towgs84: '-179.483,-69.379,-27.584,-7.862,8.163,6.042,-13.925'\n  },\n  EPSG_4726: {\n    towgs84: '8.853,-52.644,180.304,-0.393,-2.323,2.96,-24.081'\n  },\n  EPSG_4267: {\n    towgs84: '-8.0,160.0,176.0'\n  },\n  EPSG_5365: {\n    towgs84: '-0.16959,0.35312,0.51846,0.03385,-0.16325,0.03446,0.03693'\n  },\n  EPSG_4218: {\n    towgs84: '304.5,306.5,-318.1'\n  },\n  EPSG_4242: {\n    towgs84: '-33.722,153.789,94.959,-8.581,-4.478,4.54,8.95'\n  },\n  EPSG_4216: {\n    towgs84: '-292.295,248.758,429.447,4.9971,2.99,6.6906,1.0289'\n  },\n  ESRI_104105: {\n    towgs84: '631.392,-66.551,481.442,1.09,-4.445,-4.487,-4.43'\n  },\n  ESRI_104129: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4673: {\n    towgs84: '174.05,-25.49,112.57'\n  },\n  EPSG_4202: {\n    towgs84: '-124,-60,154'\n  },\n  EPSG_4203: {\n    towgs84: '-117.763,-51.51,139.061,0.292,0.443,0.277,-0.191'\n  },\n  EPSG_3819: {\n    towgs84: '595.48,121.69,515.35,4.115,-2.9383,0.853,-3.408'\n  },\n  EPSG_8694: {\n    towgs84: '-93.799,-132.737,-219.073,-1.844,0.648,-6.37,-0.169'\n  },\n  EPSG_4145: {\n    towgs84: '275.57,676.78,229.6'\n  },\n  EPSG_4283: {\n    towgs84: '61.55,-10.87,-40.19,39.4924,32.7221,32.8979,-9.994'\n  },\n  EPSG_4317: {\n    towgs84: '2.3287,-147.0425,-92.0802,-0.3092483,0.32482185,0.49729934,5.68906266'\n  },\n  EPSG_4272: {\n    towgs84: '59.47,-5.04,187.44,0.47,-0.1,1.024,-4.5993'\n  },\n  EPSG_4248: {\n    towgs84: '-307.7,265.3,-363.5'\n  },\n  EPSG_5561: {\n    towgs84: '24,-121,-76'\n  },\n  EPSG_5233: {\n    towgs84: '-0.293,766.95,87.713,0.195704,1.695068,3.473016,-0.039338'\n  },\n  ESRI_104130: {\n    towgs84: '-86,-98,-119'\n  },\n  ESRI_104102: {\n    towgs84: '682,-203,480'\n  },\n  ESRI_37207: {\n    towgs84: '7,-10,-26'\n  },\n  EPSG_4675: {\n    towgs84: '59.935,118.4,-10.871'\n  },\n  ESRI_104109: {\n    towgs84: '-89.121,-348.182,260.871'\n  },\n  ESRI_104112: {\n    towgs84: '-185.583,-230.096,281.361'\n  },\n  ESRI_104113: {\n    towgs84: '25.1,-275.6,222.6'\n  },\n  IGNF_WGS72G: {\n    towgs84: '0,12,6'\n  },\n  IGNF_NTFG: {\n    towgs84: '-168,-60,320'\n  },\n  IGNF_EFATE57G: {\n    towgs84: '-127,-769,472'\n  },\n  IGNF_PGP50G: {\n    towgs84: '324.8,153.6,172.1'\n  },\n  IGNF_REUN47G: {\n    towgs84: '94,-948,-1262'\n  },\n  IGNF_CSG67G: {\n    towgs84: '-186,230,110'\n  },\n  IGNF_GUAD48G: {\n    towgs84: '-467,-16,-300'\n  },\n  IGNF_TAHI51G: {\n    towgs84: '162,117,154'\n  },\n  IGNF_TAHAAG: {\n    towgs84: '65,342,77'\n  },\n  IGNF_NUKU72G: {\n    towgs84: '84,274,65'\n  },\n  IGNF_PETRELS72G: {\n    towgs84: '365,194,166'\n  },\n  IGNF_WALL78G: {\n    towgs84: '253,-133,-127'\n  },\n  IGNF_MAYO50G: {\n    towgs84: '-382,-59,-262'\n  },\n  IGNF_TANNAG: {\n    towgs84: '-139,-967,436'\n  },\n  IGNF_IGN72G: {\n    towgs84: '-13,-348,292'\n  },\n  IGNF_ATIGG: {\n    towgs84: '1118,23,66'\n  },\n  IGNF_FANGA84G: {\n    towgs84: '150.57,158.33,118.32'\n  },\n  IGNF_RUSAT84G: {\n    towgs84: '202.13,174.6,-15.74'\n  },\n  IGNF_KAUE70G: {\n    towgs84: '126.74,300.1,-75.49'\n  },\n  IGNF_MOP90G: {\n    towgs84: '-10.8,-1.8,12.77'\n  },\n  IGNF_MHPF67G: {\n    towgs84: '338.08,212.58,-296.17'\n  },\n  IGNF_TAHI79G: {\n    towgs84: '160.61,116.05,153.69'\n  },\n  IGNF_ANAA92G: {\n    towgs84: '1.5,3.84,4.81'\n  },\n  IGNF_MARQUI72G: {\n    towgs84: '330.91,-13.92,58.56'\n  },\n  IGNF_APAT86G: {\n    towgs84: '143.6,197.82,74.05'\n  },\n  IGNF_TUBU69G: {\n    towgs84: '237.17,171.61,-77.84'\n  },\n  IGNF_STPM50G: {\n    towgs84: '11.363,424.148,373.13'\n  },\n  EPSG_4150: {\n    towgs84: '674.374,15.056,405.346'\n  },\n  EPSG_4754: {\n    towgs84: '-208.4058,-109.8777,-2.5764'\n  },\n  ESRI_104101: {\n    towgs84: '374,150,588'\n  },\n  EPSG_4693: {\n    towgs84: '0,-0.15,0.68'\n  },\n  EPSG_6207: {\n    towgs84: '293.17,726.18,245.36'\n  },\n  EPSG_4153: {\n    towgs84: '-133.63,-157.5,-158.62'\n  },\n  EPSG_4132: {\n    towgs84: '-241.54,-163.64,396.06'\n  },\n  EPSG_4221: {\n    towgs84: '-154.5,150.7,100.4'\n  },\n  EPSG_4266: {\n    towgs84: '-80.7,-132.5,41.1'\n  },\n  EPSG_4193: {\n    towgs84: '-70.9,-151.8,-41.4'\n  },\n  EPSG_5340: {\n    towgs84: '-0.41,0.46,-0.35'\n  },\n  EPSG_4246: {\n    towgs84: '-294.7,-200.1,525.5'\n  },\n  EPSG_4318: {\n    towgs84: '-3.2,-5.7,2.8'\n  },\n  EPSG_4121: {\n    towgs84: '-199.87,74.79,246.62'\n  },\n  EPSG_4223: {\n    towgs84: '-260.1,5.5,432.2'\n  },\n  EPSG_4158: {\n    towgs84: '-0.465,372.095,171.736'\n  },\n  EPSG_4285: {\n    towgs84: '-128.16,-282.42,21.93'\n  },\n  EPSG_4613: {\n    towgs84: '-404.78,685.68,45.47'\n  },\n  EPSG_4607: {\n    towgs84: '195.671,332.517,274.607'\n  },\n  EPSG_4475: {\n    towgs84: '-381.788,-57.501,-256.673'\n  },\n  EPSG_4208: {\n    towgs84: '-157.84,308.54,-146.6'\n  },\n  EPSG_4743: {\n    towgs84: '70.995,-335.916,262.898'\n  },\n  EPSG_4710: {\n    towgs84: '-323.65,551.39,-491.22'\n  },\n  EPSG_7881: {\n    towgs84: '-0.077,0.079,0.086'\n  },\n  EPSG_4682: {\n    towgs84: '283.729,735.942,261.143'\n  },\n  EPSG_4739: {\n    towgs84: '-156,-271,-189'\n  },\n  EPSG_4679: {\n    towgs84: '-80.01,253.26,291.19'\n  },\n  EPSG_4750: {\n    towgs84: '-56.263,16.136,-22.856'\n  },\n  EPSG_4644: {\n    towgs84: '-10.18,-350.43,291.37'\n  },\n  EPSG_4695: {\n    towgs84: '-103.746,-9.614,-255.95'\n  },\n  EPSG_4292: {\n    towgs84: '-355,21,72'\n  },\n  EPSG_4302: {\n    towgs84: '-61.702,284.488,472.052'\n  },\n  EPSG_4143: {\n    towgs84: '-124.76,53,466.79'\n  },\n  EPSG_4606: {\n    towgs84: '-153,153,307'\n  },\n  EPSG_4699: {\n    towgs84: '-770.1,158.4,-498.2'\n  },\n  EPSG_4247: {\n    towgs84: '-273.5,110.6,-357.9'\n  },\n  EPSG_4160: {\n    towgs84: '8.88,184.86,106.69'\n  },\n  EPSG_4161: {\n    towgs84: '-233.43,6.65,173.64'\n  },\n  EPSG_9251: {\n    towgs84: '-9.5,122.9,138.2'\n  },\n  EPSG_9253: {\n    towgs84: '-78.1,101.6,133.3'\n  },\n  EPSG_4297: {\n    towgs84: '-198.383,-240.517,-107.909'\n  },\n  EPSG_4269: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4301: {\n    towgs84: '-147,506,687'\n  },\n  EPSG_4618: {\n    towgs84: '-59,-11,-52'\n  },\n  EPSG_4612: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4678: {\n    towgs84: '44.585,-131.212,-39.544'\n  },\n  EPSG_4250: {\n    towgs84: '-130,29,364'\n  },\n  EPSG_4144: {\n    towgs84: '214,804,268'\n  },\n  EPSG_4147: {\n    towgs84: '-17.51,-108.32,-62.39'\n  },\n  EPSG_4259: {\n    towgs84: '-254.1,-5.36,-100.29'\n  },\n  EPSG_4164: {\n    towgs84: '-76,-138,67'\n  },\n  EPSG_4211: {\n    towgs84: '-378.873,676.002,-46.255'\n  },\n  EPSG_4182: {\n    towgs84: '-422.651,-172.995,84.02'\n  },\n  EPSG_4224: {\n    towgs84: '-143.87,243.37,-33.52'\n  },\n  EPSG_4225: {\n    towgs84: '-205.57,168.77,-4.12'\n  },\n  EPSG_5527: {\n    towgs84: '-67.35,3.88,-38.22'\n  },\n  EPSG_4752: {\n    towgs84: '98,390,-22'\n  },\n  EPSG_4310: {\n    towgs84: '-30,190,89'\n  },\n  EPSG_9248: {\n    towgs84: '-192.26,65.72,132.08'\n  },\n  EPSG_4680: {\n    towgs84: '124.5,-63.5,-281'\n  },\n  EPSG_4701: {\n    towgs84: '-79.9,-158,-168.9'\n  },\n  EPSG_4706: {\n    towgs84: '-146.21,112.63,4.05'\n  },\n  EPSG_4805: {\n    towgs84: '682,-203,480'\n  },\n  EPSG_4201: {\n    towgs84: '-165,-11,206'\n  },\n  EPSG_4210: {\n    towgs84: '-157,-2,-299'\n  },\n  EPSG_4183: {\n    towgs84: '-104,167,-38'\n  },\n  EPSG_4139: {\n    towgs84: '11,72,-101'\n  },\n  EPSG_4668: {\n    towgs84: '-86,-98,-119'\n  },\n  EPSG_4717: {\n    towgs84: '-2,151,181'\n  },\n  EPSG_4732: {\n    towgs84: '102,52,-38'\n  },\n  EPSG_4280: {\n    towgs84: '-377,681,-50'\n  },\n  EPSG_4209: {\n    towgs84: '-138,-105,-289'\n  },\n  EPSG_4261: {\n    towgs84: '31,146,47'\n  },\n  EPSG_4658: {\n    towgs84: '-73,46,-86'\n  },\n  EPSG_4721: {\n    towgs84: '265.025,384.929,-194.046'\n  },\n  EPSG_4222: {\n    towgs84: '-136,-108,-292'\n  },\n  EPSG_4601: {\n    towgs84: '-255,-15,71'\n  },\n  EPSG_4602: {\n    towgs84: '725,685,536'\n  },\n  EPSG_4603: {\n    towgs84: '72,213.7,93'\n  },\n  EPSG_4605: {\n    towgs84: '9,183,236'\n  },\n  EPSG_4621: {\n    towgs84: '137,248,-430'\n  },\n  EPSG_4657: {\n    towgs84: '-28,199,5'\n  },\n  EPSG_4316: {\n    towgs84: '103.25,-100.4,-307.19'\n  },\n  EPSG_4642: {\n    towgs84: '-13,-348,292'\n  },\n  EPSG_4698: {\n    towgs84: '145,-187,103'\n  },\n  EPSG_4192: {\n    towgs84: '-206.1,-174.7,-87.7'\n  },\n  EPSG_4311: {\n    towgs84: '-265,120,-358'\n  },\n  EPSG_4135: {\n    towgs84: '58,-283,-182'\n  },\n  ESRI_104138: {\n    towgs84: '198,-226,-347'\n  },\n  EPSG_4245: {\n    towgs84: '-11,851,5'\n  },\n  EPSG_4142: {\n    towgs84: '-125,53,467'\n  },\n  EPSG_4213: {\n    towgs84: '-106,-87,188'\n  },\n  EPSG_4253: {\n    towgs84: '-133,-77,-51'\n  },\n  EPSG_4129: {\n    towgs84: '-132,-110,-335'\n  },\n  EPSG_4713: {\n    towgs84: '-77,-128,142'\n  },\n  EPSG_4239: {\n    towgs84: '217,823,299'\n  },\n  EPSG_4146: {\n    towgs84: '295,736,257'\n  },\n  EPSG_4155: {\n    towgs84: '-83,37,124'\n  },\n  EPSG_4165: {\n    towgs84: '-173,253,27'\n  },\n  EPSG_4672: {\n    towgs84: '175,-38,113'\n  },\n  EPSG_4236: {\n    towgs84: '-637,-549,-203'\n  },\n  EPSG_4251: {\n    towgs84: '-90,40,88'\n  },\n  EPSG_4271: {\n    towgs84: '-2,374,172'\n  },\n  EPSG_4175: {\n    towgs84: '-88,4,101'\n  },\n  EPSG_4716: {\n    towgs84: '298,-304,-375'\n  },\n  EPSG_4315: {\n    towgs84: '-23,259,-9'\n  },\n  EPSG_4744: {\n    towgs84: '-242.2,-144.9,370.3'\n  },\n  EPSG_4244: {\n    towgs84: '-97,787,86'\n  },\n  EPSG_4293: {\n    towgs84: '616,97,-251'\n  },\n  EPSG_4714: {\n    towgs84: '-127,-769,472'\n  },\n  EPSG_4736: {\n    towgs84: '260,12,-147'\n  },\n  EPSG_6883: {\n    towgs84: '-235,-110,393'\n  },\n  EPSG_6894: {\n    towgs84: '-63,176,185'\n  },\n  EPSG_4205: {\n    towgs84: '-43,-163,45'\n  },\n  EPSG_4256: {\n    towgs84: '41,-220,-134'\n  },\n  EPSG_4262: {\n    towgs84: '639,405,60'\n  },\n  EPSG_4604: {\n    towgs84: '174,359,365'\n  },\n  EPSG_4169: {\n    towgs84: '-115,118,426'\n  },\n  EPSG_4620: {\n    towgs84: '-106,-129,165'\n  },\n  EPSG_4184: {\n    towgs84: '-203,141,53'\n  },\n  EPSG_4616: {\n    towgs84: '-289,-124,60'\n  },\n  EPSG_9403: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4684: {\n    towgs84: '-133,-321,50'\n  },\n  EPSG_4708: {\n    towgs84: '-491,-22,435'\n  },\n  EPSG_4707: {\n    towgs84: '114,-116,-333'\n  },\n  EPSG_4709: {\n    towgs84: '145,75,-272'\n  },\n  EPSG_4712: {\n    towgs84: '-205,107,53'\n  },\n  EPSG_4711: {\n    towgs84: '124,-234,-25'\n  },\n  EPSG_4718: {\n    towgs84: '230,-199,-752'\n  },\n  EPSG_4719: {\n    towgs84: '211,147,111'\n  },\n  EPSG_4724: {\n    towgs84: '208,-435,-229'\n  },\n  EPSG_4725: {\n    towgs84: '189,-79,-202'\n  },\n  EPSG_4735: {\n    towgs84: '647,1777,-1124'\n  },\n  EPSG_4722: {\n    towgs84: '-794,119,-298'\n  },\n  EPSG_4728: {\n    towgs84: '-307,-92,127'\n  },\n  EPSG_4734: {\n    towgs84: '-632,438,-609'\n  },\n  EPSG_4727: {\n    towgs84: '912,-58,1227'\n  },\n  EPSG_4729: {\n    towgs84: '185,165,42'\n  },\n  EPSG_4730: {\n    towgs84: '170,42,84'\n  },\n  EPSG_4733: {\n    towgs84: '276,-57,149'\n  },\n  ESRI_37218: {\n    towgs84: '230,-199,-752'\n  },\n  ESRI_37240: {\n    towgs84: '-7,215,225'\n  },\n  ESRI_37221: {\n    towgs84: '252,-209,-751'\n  },\n  ESRI_4305: {\n    towgs84: '-123,-206,219'\n  },\n  ESRI_104139: {\n    towgs84: '-73,-247,227'\n  },\n  EPSG_4748: {\n    towgs84: '51,391,-36'\n  },\n  EPSG_4219: {\n    towgs84: '-384,664,-48'\n  },\n  EPSG_4255: {\n    towgs84: '-333,-222,114'\n  },\n  EPSG_4257: {\n    towgs84: '-587.8,519.75,145.76'\n  },\n  EPSG_4646: {\n    towgs84: '-963,510,-359'\n  },\n  EPSG_6881: {\n    towgs84: '-24,-203,268'\n  },\n  EPSG_6882: {\n    towgs84: '-183,-15,273'\n  },\n  EPSG_4715: {\n    towgs84: '-104,-129,239'\n  },\n  IGNF_RGF93GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGM04GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGSPM06GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGTAAF07GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGFG95GDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGNCG: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGPFGDD: {\n    towgs84: '0,0,0'\n  },\n  IGNF_ETRS89G: {\n    towgs84: '0,0,0'\n  },\n  IGNF_RGR92GDD: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4173: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4180: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4619: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4667: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4075: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6706: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7798: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4661: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4669: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8685: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4151: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4758: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4761: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4765: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8997: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4023: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4670: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4694: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4148: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4163: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4167: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4189: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4190: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4176: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4659: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3824: {\n    towgs84: '0,0,0'\n  },\n  EPSG_3889: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4046: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4081: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4558: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4483: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5013: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5264: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5324: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5354: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5371: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5373: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5381: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5393: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5489: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5593: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6135: {\n    towgs84: '0,0,0'\n  },\n  EPSG_6365: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5246: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7886: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8431: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8427: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8699: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8818: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4757: {\n    towgs84: '0,0,0'\n  },\n  EPSG_9140: {\n    towgs84: '0,0,0'\n  },\n  EPSG_8086: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4686: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4737: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4702: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4747: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4749: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4674: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4755: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4759: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4762: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4763: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4764: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4166: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4170: {\n    towgs84: '0,0,0'\n  },\n  EPSG_5546: {\n    towgs84: '0,0,0'\n  },\n  EPSG_7844: {\n    towgs84: '0,0,0'\n  },\n  EPSG_4818: {\n    towgs84: '589,76,480'\n  }\n};\n\nfor (var key in datums) {\n  var datum = datums[key];\n  if (!datum.datumName) {\n    continue;\n  }\n  datums[datum.datumName] = datum;\n}\n\nexport default datums;\n","/**\n * Resources for details of NTv2 file formats:\n * - https://web.archive.org/web/20140127204822if_/http://www.mgs.gov.on.ca:80/stdprodconsume/groups/content/@mgs/@iandit/documents/resourcelist/stel02_047447.pdf\n * - http://mimaka.com/help/gs/html/004_NTV2%20Data%20Format.htm\n */\n\n/**\n * @typedef {Object} NadgridInfo\n * @property {string} name The name of the NAD grid or 'null' if not specified.\n * @property {boolean} mandatory Indicates if the grid is mandatory (true) or optional (false).\n * @property {*} grid The loaded NAD grid object, or null if not loaded or not applicable.\n * @property {boolean} isNull True if the grid is explicitly 'null', otherwise false.\n */\n\n/**\n * @typedef {Object} NTV2GridOptions\n * @property {boolean} [includeErrorFields=true] Whether to include error fields in the subgrids.\n */\n\n/**\n * @typedef {Object} NadgridHeader\n * @property {number} [nFields] Number of fields in the header.\n * @property {number} [nSubgridFields] Number of fields in each subgrid header.\n * @property {number} nSubgrids Number of subgrids in the file.\n * @property {string} [shiftType] Type of shift (e.g., \"SECONDS\").\n * @property {number} [fromSemiMajorAxis] Source ellipsoid semi-major axis.\n * @property {number} [fromSemiMinorAxis] Source ellipsoid semi-minor axis.\n * @property {number} [toSemiMajorAxis] Target ellipsoid semi-major axis.\n * @property {number} [toSemiMinorAxis] Target ellipsoid semi-minor axis.\n */\n\n/**\n * @typedef {Object} Subgrid\n * @property {Array<number>} ll Lower left corner of the grid in radians [longitude, latitude].\n * @property {Array<number>} del Grid spacing in radians [longitude interval, latitude interval].\n * @property {Array<number>} lim Number of columns in the grid [longitude columns, latitude columns].\n * @property {number} [count] Total number of grid nodes.\n * @property {Array} cvs Mapped node values for the grid.\n */\n\n/** @typedef {{header: NadgridHeader, subgrids: Array<Subgrid>}} NADGrid */\n\n/**\n * @typedef {Object} GeoTIFF\n * @property {() => Promise<number>} getImageCount - Returns the number of images in the GeoTIFF.\n * @property {(index: number) => Promise<GeoTIFFImage>} getImage - Returns a GeoTIFFImage for the given index.\n */\n\n/**\n * @typedef {Object} GeoTIFFImage\n * @property {() => number} getWidth - Returns the width of the image.\n * @property {() => number} getHeight - Returns the height of the image.\n * @property {() => number[]} getBoundingBox - Returns the bounding box as [minX, minY, maxX, maxY] in degrees.\n * @property {() => Promise<ArrayLike<ArrayLike<number>>>} readRasters - Returns the raster data as an array of bands.\n * @property {Object} fileDirectory - The file directory object containing metadata.\n * @property {Object} fileDirectory.ModelPixelScale - The pixel scale array [scaleX, scaleY, scaleZ] in degrees.\n */\n\nvar loadedNadgrids = {};\n\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer} data - The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] - Optional parameters for loading the grid.\n * @returns {NADGrid} - The loaded NAD grid information.\n */\n/**\n * @overload\n * @param {string} key - The key to associate with the loaded grid.\n * @param {GeoTIFF} data - The GeoTIFF instance to read the grid from.\n * @returns {{ready: Promise<NADGrid>}} - A promise that resolves to the loaded grid information.\n */\n/**\n * Load either a NTv2 file (.gsb) or a Geotiff (.tif) to a key that can be used in a proj string like +nadgrids=<key>. Pass the NTv2 file\n * as an ArrayBuffer. Pass Geotiff as a GeoTIFF instance from the geotiff.js library.\n * @param {string} key - The key to associate with the loaded grid.\n * @param {ArrayBuffer|GeoTIFF} data The data to load, either an ArrayBuffer for NTv2 or a GeoTIFF instance.\n * @param {NTV2GridOptions} [options] Optional parameters.\n * @returns {{ready: Promise<NADGrid>}|NADGrid} - A promise that resolves to the loaded grid information.\n */\nexport default function nadgrid(key, data, options) {\n  if (data instanceof ArrayBuffer) {\n    return readNTV2Grid(key, data, options);\n  }\n  return { ready: readGeotiffGrid(key, data) };\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {ArrayBuffer} data The NTv2 grid data as an ArrayBuffer.\n * @param {NTV2GridOptions} [options] Optional parameters for loading the grid.\n * @returns {NADGrid} The loaded NAD grid information.\n */\nfunction readNTV2Grid(key, data, options) {\n  var includeErrorFields = true;\n  if (options !== undefined && options.includeErrorFields === false) {\n    includeErrorFields = false;\n  }\n  var view = new DataView(data);\n  var isLittleEndian = detectLittleEndian(view);\n  var header = readHeader(view, isLittleEndian);\n  var subgrids = readSubgrids(view, header, isLittleEndian, includeErrorFields);\n  var nadgrid = { header: header, subgrids: subgrids };\n  loadedNadgrids[key] = nadgrid;\n  return nadgrid;\n}\n\n/**\n * @param {string} key The key to associate with the loaded grid.\n * @param {GeoTIFF} tiff The GeoTIFF instance to read the grid from.\n * @returns {Promise<NADGrid>} A promise that resolves to the loaded NAD grid information.\n */\nasync function readGeotiffGrid(key, tiff) {\n  var subgrids = [];\n  var subGridCount = await tiff.getImageCount();\n  // proj produced tiff grid shift files appear to organize lower res subgrids first, higher res/ child subgrids last.\n  for (var subgridIndex = subGridCount - 1; subgridIndex >= 0; subgridIndex--) {\n    var image = await tiff.getImage(subgridIndex);\n\n    var rasters = await image.readRasters();\n    var data = rasters;\n    var lim = [image.getWidth(), image.getHeight()];\n    var imageBBoxRadians = image.getBoundingBox().map(degreesToRadians);\n    var del = [image.fileDirectory.ModelPixelScale[0], image.fileDirectory.ModelPixelScale[1]].map(degreesToRadians);\n\n    var maxX = imageBBoxRadians[0] + (lim[0] - 1) * del[0];\n    var minY = imageBBoxRadians[3] - (lim[1] - 1) * del[1];\n\n    var latitudeOffsetBand = data[0];\n    var longitudeOffsetBand = data[1];\n    var nodes = [];\n\n    for (let i = lim[1] - 1; i >= 0; i--) {\n      for (let j = lim[0] - 1; j >= 0; j--) {\n        var index = i * lim[0] + j;\n        nodes.push([-secondsToRadians(longitudeOffsetBand[index]), secondsToRadians(latitudeOffsetBand[index])]);\n      }\n    }\n\n    subgrids.push({\n      del: del,\n      lim: lim,\n      ll: [-maxX, minY],\n      cvs: nodes\n    });\n  }\n\n  var tifGrid = {\n    header: {\n      nSubgrids: subGridCount\n    },\n    subgrids: subgrids\n  };\n  loadedNadgrids[key] = tifGrid;\n  return tifGrid;\n};\n\n/**\n * Given a proj4 value for nadgrids, return an array of loaded grids\n * @param {string} nadgrids A comma-separated list of grid names, optionally prefixed with '@' to indicate optional grids.\n * @returns\n */\nexport function getNadgrids(nadgrids) {\n  // Format details: http://proj.maptools.org/gen_parms.html\n  if (nadgrids === undefined) {\n    return null;\n  }\n  var grids = nadgrids.split(',');\n  return grids.map(parseNadgridString);\n}\n\n/**\n * @param {string} value The nadgrid string to get information for.\n * @returns {NadgridInfo|null} An object with grid information, or null if the input is empty.\n */\nfunction parseNadgridString(value) {\n  if (value.length === 0) {\n    return null;\n  }\n  var optional = value[0] === '@';\n  if (optional) {\n    value = value.slice(1);\n  }\n  if (value === 'null') {\n    return { name: 'null', mandatory: !optional, grid: null, isNull: true };\n  }\n  return {\n    name: value,\n    mandatory: !optional,\n    grid: loadedNadgrids[value] || null,\n    isNull: false\n  };\n}\n\nfunction degreesToRadians(degrees) {\n  return (degrees) * Math.PI / 180;\n}\n\nfunction secondsToRadians(seconds) {\n  return (seconds / 3600) * Math.PI / 180;\n}\n\nfunction detectLittleEndian(view) {\n  var nFields = view.getInt32(8, false);\n  if (nFields === 11) {\n    return false;\n  }\n  nFields = view.getInt32(8, true);\n  if (nFields !== 11) {\n    console.warn('Failed to detect nadgrid endian-ness, defaulting to little-endian');\n  }\n  return true;\n}\n\nfunction readHeader(view, isLittleEndian) {\n  return {\n    nFields: view.getInt32(8, isLittleEndian),\n    nSubgridFields: view.getInt32(24, isLittleEndian),\n    nSubgrids: view.getInt32(40, isLittleEndian),\n    shiftType: decodeString(view, 56, 56 + 8).trim(),\n    fromSemiMajorAxis: view.getFloat64(120, isLittleEndian),\n    fromSemiMinorAxis: view.getFloat64(136, isLittleEndian),\n    toSemiMajorAxis: view.getFloat64(152, isLittleEndian),\n    toSemiMinorAxis: view.getFloat64(168, isLittleEndian)\n  };\n}\n\nfunction decodeString(view, start, end) {\n  return String.fromCharCode.apply(null, new Uint8Array(view.buffer.slice(start, end)));\n}\n\nfunction readSubgrids(view, header, isLittleEndian, includeErrorFields) {\n  var gridOffset = 176;\n  var grids = [];\n  for (var i = 0; i < header.nSubgrids; i++) {\n    var subHeader = readGridHeader(view, gridOffset, isLittleEndian);\n    var nodes = readGridNodes(view, gridOffset, subHeader, isLittleEndian, includeErrorFields);\n    var lngColumnCount = Math.round(\n      1 + (subHeader.upperLongitude - subHeader.lowerLongitude) / subHeader.longitudeInterval);\n    var latColumnCount = Math.round(\n      1 + (subHeader.upperLatitude - subHeader.lowerLatitude) / subHeader.latitudeInterval);\n    // Proj4 operates on radians whereas the coordinates are in seconds in the grid\n    grids.push({\n      ll: [secondsToRadians(subHeader.lowerLongitude), secondsToRadians(subHeader.lowerLatitude)],\n      del: [secondsToRadians(subHeader.longitudeInterval), secondsToRadians(subHeader.latitudeInterval)],\n      lim: [lngColumnCount, latColumnCount],\n      count: subHeader.gridNodeCount,\n      cvs: mapNodes(nodes)\n    });\n    var rowSize = 16;\n    if (includeErrorFields === false) {\n      rowSize = 8;\n    }\n    gridOffset += 176 + subHeader.gridNodeCount * rowSize;\n  }\n  return grids;\n}\n\n/**\n * @param {*} nodes\n * @returns Array<Array<number>>\n */\nfunction mapNodes(nodes) {\n  return nodes.map(function (r) {\n    return [secondsToRadians(r.longitudeShift), secondsToRadians(r.latitudeShift)];\n  });\n}\n\nfunction readGridHeader(view, offset, isLittleEndian) {\n  return {\n    name: decodeString(view, offset + 8, offset + 16).trim(),\n    parent: decodeString(view, offset + 24, offset + 24 + 8).trim(),\n    lowerLatitude: view.getFloat64(offset + 72, isLittleEndian),\n    upperLatitude: view.getFloat64(offset + 88, isLittleEndian),\n    lowerLongitude: view.getFloat64(offset + 104, isLittleEndian),\n    upperLongitude: view.getFloat64(offset + 120, isLittleEndian),\n    latitudeInterval: view.getFloat64(offset + 136, isLittleEndian),\n    longitudeInterval: view.getFloat64(offset + 152, isLittleEndian),\n    gridNodeCount: view.getInt32(offset + 168, isLittleEndian)\n  };\n}\n\nfunction readGridNodes(view, offset, gridHeader, isLittleEndian, includeErrorFields) {\n  var nodesOffset = offset + 176;\n  var gridRecordLength = 16;\n\n  if (includeErrorFields === false) {\n    gridRecordLength = 8;\n  }\n\n  var gridShiftRecords = [];\n  for (var i = 0; i < gridHeader.gridNodeCount; i++) {\n    var record = {\n      latitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength, isLittleEndian),\n      longitudeShift: view.getFloat32(nodesOffset + i * gridRecordLength + 4, isLittleEndian)\n\n    };\n\n    if (includeErrorFields !== false) {\n      record.latitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 8, isLittleEndian);\n      record.longitudeAccuracy = view.getFloat32(nodesOffset + i * gridRecordLength + 12, isLittleEndian);\n    }\n\n    gridShiftRecords.push(record);\n  }\n  return gridShiftRecords;\n}\n","import parseCode from './parseCode';\nimport extend from './extend';\nimport projections from './projections';\nimport { sphere as dc_sphere, eccentricity as dc_eccentricity } from './deriveConstants';\nimport Datum from './constants/Datum';\nimport datum from './datum';\nimport match from './match';\nimport { getNadgrids } from './nadgrid';\n\n/**\n * @typedef {Object} DatumDefinition\n * @property {number} datum_type - The type of datum.\n * @property {number} a - Semi-major axis of the ellipsoid.\n * @property {number} b - Semi-minor axis of the ellipsoid.\n * @property {number} es - Eccentricity squared of the ellipsoid.\n * @property {number} ep2 - Second eccentricity squared of the ellipsoid.\n */\n\n/**\n * @param {string | import('./core').PROJJSONDefinition | import('./defs').ProjectionDefinition} srsCode\n * @param {(errorMessage?: string, instance?: Projection) => void} [callback]\n */\nfunction Projection(srsCode, callback) {\n  if (!(this instanceof Projection)) {\n    return new Projection(srsCode);\n  }\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.forward = null;\n  /** @type {<T extends import('./core').TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} */\n  this.inverse = null;\n  /** @type {function(): void} */\n  this.init = null;\n  /** @type {string} */\n  this.name;\n  /** @type {Array<string>} */\n  this.names = null;\n  /** @type {string} */\n  this.title;\n  callback = callback || function (error) {\n    if (error) {\n      throw error;\n    }\n  };\n  var json = parseCode(srsCode);\n  if (typeof json !== 'object') {\n    callback('Could not parse to valid json: ' + srsCode);\n    return;\n  }\n  var ourProj = Projection.projections.get(json.projName);\n  if (!ourProj) {\n    callback('Could not get projection name from: ' + srsCode);\n    return;\n  }\n  if (json.datumCode && json.datumCode !== 'none') {\n    var datumDef = match(Datum, json.datumCode);\n    if (datumDef) {\n      json.datum_params = json.datum_params || (datumDef.towgs84 ? datumDef.towgs84.split(',') : null);\n      json.ellps = datumDef.ellipse;\n      json.datumName = datumDef.datumName ? datumDef.datumName : json.datumCode;\n    }\n  }\n  json.k0 = json.k0 || 1.0;\n  json.axis = json.axis || 'enu';\n  json.ellps = json.ellps || 'wgs84';\n  json.lat1 = json.lat1 || json.lat0; // Lambert_Conformal_Conic_1SP, for example, needs this\n\n  var sphere_ = dc_sphere(json.a, json.b, json.rf, json.ellps, json.sphere);\n  var ecc = dc_eccentricity(sphere_.a, sphere_.b, sphere_.rf, json.R_A);\n  var nadgrids = getNadgrids(json.nadgrids);\n  /** @type {DatumDefinition} */\n  var datumObj = json.datum || datum(json.datumCode, json.datum_params, sphere_.a, sphere_.b, ecc.es, ecc.ep2,\n    nadgrids);\n\n  extend(this, json); // transfer everything over from the projection because we don't know what we'll need\n  extend(this, ourProj); // transfer all the methods from the projection\n\n  // copy the 4 things over we calculated in deriveConstants.sphere\n  this.a = sphere_.a;\n  this.b = sphere_.b;\n  this.rf = sphere_.rf;\n  this.sphere = sphere_.sphere;\n\n  // copy the 3 things we calculated in deriveConstants.eccentricity\n  this.es = ecc.es;\n  this.e = ecc.e;\n  this.ep2 = ecc.ep2;\n\n  // add in the datum object\n  this.datum = datumObj;\n\n  // init the projection\n  if ('init' in this && typeof this.init === 'function') {\n    this.init();\n  }\n\n  // legecy callback from back in the day when it went to spatialreference.org\n  callback(null, this);\n}\nProjection.projections = projections;\nProjection.projections.start();\nexport default Projection;\n","import { PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT, PJD_WGS84, PJD_NODATUM, SEC_TO_RAD } from './constants/values';\n\nfunction datum(datumCode, datum_params, a, b, es, ep2, nadgrids) {\n  var out = {};\n\n  if (datumCode === undefined || datumCode === 'none') {\n    out.datum_type = PJD_NODATUM;\n  } else {\n    out.datum_type = PJD_WGS84;\n  }\n\n  if (datum_params) {\n    out.datum_params = datum_params.map(parseFloat);\n    if (out.datum_params[0] !== 0 || out.datum_params[1] !== 0 || out.datum_params[2] !== 0) {\n      out.datum_type = PJD_3PARAM;\n    }\n    if (out.datum_params.length > 3) {\n      if (out.datum_params[3] !== 0 || out.datum_params[4] !== 0 || out.datum_params[5] !== 0 || out.datum_params[6] !== 0) {\n        out.datum_type = PJD_7PARAM;\n        out.datum_params[3] *= SEC_TO_RAD;\n        out.datum_params[4] *= SEC_TO_RAD;\n        out.datum_params[5] *= SEC_TO_RAD;\n        out.datum_params[6] = (out.datum_params[6] / 1000000.0) + 1.0;\n      }\n    }\n  }\n\n  if (nadgrids) {\n    out.datum_type = PJD_GRIDSHIFT;\n    out.grids = nadgrids;\n  }\n  out.a = a; // datum object also uses these values\n  out.b = b;\n  out.es = es;\n  out.ep2 = ep2;\n  return out;\n}\n\nexport default datum;\n","'use strict';\nimport { PJD_3PARAM, PJD_7PARAM, HALF_PI } from './constants/values';\nexport function compareDatums(source, dest) {\n  if (source.datum_type !== dest.datum_type) {\n    return false; // false, datums are not equal\n  } else if (source.a !== dest.a || Math.abs(source.es - dest.es) > 0.000000000050) {\n    // the tolerance for es is to ensure that GRS80 and WGS84\n    // are considered identical\n    return false;\n  } else if (source.datum_type === PJD_3PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2]);\n  } else if (source.datum_type === PJD_7PARAM) {\n    return (source.datum_params[0] === dest.datum_params[0] && source.datum_params[1] === dest.datum_params[1] && source.datum_params[2] === dest.datum_params[2] && source.datum_params[3] === dest.datum_params[3] && source.datum_params[4] === dest.datum_params[4] && source.datum_params[5] === dest.datum_params[5] && source.datum_params[6] === dest.datum_params[6]);\n  } else {\n    return true; // datums are equal\n  }\n} // cs_compare_datums()\n\n/*\n * The function Convert_Geodetic_To_Geocentric converts geodetic coordinates\n * (latitude, longitude, and height) to geocentric coordinates (X, Y, Z),\n * according to the current ellipsoid parameters.\n *\n *    Latitude  : Geodetic latitude in radians                     (input)\n *    Longitude : Geodetic longitude in radians                    (input)\n *    Height    : Geodetic height, in meters                       (input)\n *    X         : Calculated Geocentric X coordinate, in meters    (output)\n *    Y         : Calculated Geocentric Y coordinate, in meters    (output)\n *    Z         : Calculated Geocentric Z coordinate, in meters    (output)\n *\n */\nexport function geodeticToGeocentric(p, es, a) {\n  var Longitude = p.x;\n  var Latitude = p.y;\n  var Height = p.z ? p.z : 0; // Z value not always supplied\n\n  var Rn; /*  Earth radius at location  */\n  var Sin_Lat; /*  Math.sin(Latitude)  */\n  var Sin2_Lat; /*  Square of Math.sin(Latitude)  */\n  var Cos_Lat; /*  Math.cos(Latitude)  */\n\n  /*\n   ** Don't blow up if Latitude is just a little out of the value\n   ** range as it may just be a rounding issue.  Also removed longitude\n   ** test, it should be wrapped by Math.cos() and Math.sin().  NFW for PROJ.4, Sep/2001.\n   */\n  if (Latitude < -HALF_PI && Latitude > -1.001 * HALF_PI) {\n    Latitude = -HALF_PI;\n  } else if (Latitude > HALF_PI && Latitude < 1.001 * HALF_PI) {\n    Latitude = HALF_PI;\n  } else if (Latitude < -HALF_PI) {\n    /* Latitude out of range */\n    // ..reportError('geocent:lat out of range:' + Latitude);\n    return { x: -Infinity, y: -Infinity, z: p.z };\n  } else if (Latitude > HALF_PI) {\n    /* Latitude out of range */\n    return { x: Infinity, y: Infinity, z: p.z };\n  }\n\n  if (Longitude > Math.PI) {\n    Longitude -= (2 * Math.PI);\n  }\n  Sin_Lat = Math.sin(Latitude);\n  Cos_Lat = Math.cos(Latitude);\n  Sin2_Lat = Sin_Lat * Sin_Lat;\n  Rn = a / (Math.sqrt(1.0e0 - es * Sin2_Lat));\n  return {\n    x: (Rn + Height) * Cos_Lat * Math.cos(Longitude),\n    y: (Rn + Height) * Cos_Lat * Math.sin(Longitude),\n    z: ((Rn * (1 - es)) + Height) * Sin_Lat\n  };\n} // cs_geodetic_to_geocentric()\n\nexport function geocentricToGeodetic(p, es, a, b) {\n  /* local defintions and variables */\n  /* end-criterium of loop, accuracy of sin(Latitude) */\n  var genau = 1e-12;\n  var genau2 = (genau * genau);\n  var maxiter = 30;\n\n  var P; /* distance between semi-minor axis and location */\n  var RR; /* distance between center and location */\n  var CT; /* sin of geocentric latitude */\n  var ST; /* cos of geocentric latitude */\n  var RX;\n  var RK;\n  var RN; /* Earth radius at location */\n  var CPHI0; /* cos of start or old geodetic latitude in iterations */\n  var SPHI0; /* sin of start or old geodetic latitude in iterations */\n  var CPHI; /* cos of searched geodetic latitude */\n  var SPHI; /* sin of searched geodetic latitude */\n  var SDPHI; /* end-criterium: addition-theorem of sin(Latitude(iter)-Latitude(iter-1)) */\n  var iter; /* # of continous iteration, max. 30 is always enough (s.a.) */\n\n  var X = p.x;\n  var Y = p.y;\n  var Z = p.z ? p.z : 0.0; // Z value not always supplied\n  var Longitude;\n  var Latitude;\n  var Height;\n\n  P = Math.sqrt(X * X + Y * Y);\n  RR = Math.sqrt(X * X + Y * Y + Z * Z);\n\n  /*      special cases for latitude and longitude */\n  if (P / a < genau) {\n    /*  special case, if P=0. (X=0., Y=0.) */\n    Longitude = 0.0;\n\n    /*  if (X,Y,Z)=(0.,0.,0.) then Height becomes semi-minor axis\n     *  of ellipsoid (=center of mass), Latitude becomes PI/2 */\n    if (RR / a < genau) {\n      Latitude = HALF_PI;\n      Height = -b;\n      return {\n        x: p.x,\n        y: p.y,\n        z: p.z\n      };\n    }\n  } else {\n    /*  ellipsoidal (geodetic) longitude\n     *  interval: -PI < Longitude <= +PI */\n    Longitude = Math.atan2(Y, X);\n  }\n\n  /* --------------------------------------------------------------\n   * Following iterative algorithm was developped by\n   * \"Institut for Erdmessung\", University of Hannover, July 1988.\n   * Internet: www.ife.uni-hannover.de\n   * Iterative computation of CPHI,SPHI and Height.\n   * Iteration of CPHI and SPHI to 10**-12 radian resp.\n   * 2*10**-7 arcsec.\n   * --------------------------------------------------------------\n   */\n  CT = Z / RR;\n  ST = P / RR;\n  RX = 1.0 / Math.sqrt(1.0 - es * (2.0 - es) * ST * ST);\n  CPHI0 = ST * (1.0 - es) * RX;\n  SPHI0 = CT * RX;\n  iter = 0;\n\n  /* loop to find sin(Latitude) resp. Latitude\n   * until |sin(Latitude(iter)-Latitude(iter-1))| < genau */\n  do {\n    iter++;\n    RN = a / Math.sqrt(1.0 - es * SPHI0 * SPHI0);\n\n    /*  ellipsoidal (geodetic) height */\n    Height = P * CPHI0 + Z * SPHI0 - RN * (1.0 - es * SPHI0 * SPHI0);\n\n    RK = es * RN / (RN + Height);\n    RX = 1.0 / Math.sqrt(1.0 - RK * (2.0 - RK) * ST * ST);\n    CPHI = ST * (1.0 - RK) * RX;\n    SPHI = CT * RX;\n    SDPHI = SPHI * CPHI0 - CPHI * SPHI0;\n    CPHI0 = CPHI;\n    SPHI0 = SPHI;\n  }\n  while (SDPHI * SDPHI > genau2 && iter < maxiter);\n\n  /*      ellipsoidal (geodetic) latitude */\n  Latitude = Math.atan(SPHI / Math.abs(CPHI));\n  return {\n    x: Longitude,\n    y: Latitude,\n    z: Height\n  };\n} // cs_geocentric_to_geodetic()\n\n/****************************************************************/\n// pj_geocentic_to_wgs84( p )\n//  p = point to transform in geocentric coordinates (x,y,z)\n\n/** point object, nothing fancy, just allows values to be\n    passed back and forth by reference rather than by value.\n    Other point classes may be used as long as they have\n    x and y properties, which will get modified in the transform method.\n*/\nexport function geocentricToWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x + datum_params[0],\n      y: p.y + datum_params[1],\n      z: p.z + datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: M_BF * (p.x - Rz_BF * p.y + Ry_BF * p.z) + Dx_BF,\n      y: M_BF * (Rz_BF * p.x + p.y - Rx_BF * p.z) + Dy_BF,\n      z: M_BF * (-Ry_BF * p.x + Rx_BF * p.y + p.z) + Dz_BF\n    };\n  }\n} // cs_geocentric_to_wgs84\n\n/****************************************************************/\n// pj_geocentic_from_wgs84()\n//  coordinate system definition,\n//  point to transform in geocentric coordinates (x,y,z)\nexport function geocentricFromWgs84(p, datum_type, datum_params) {\n  if (datum_type === PJD_3PARAM) {\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n    return {\n      x: p.x - datum_params[0],\n      y: p.y - datum_params[1],\n      z: p.z - datum_params[2]\n    };\n  } else if (datum_type === PJD_7PARAM) {\n    var Dx_BF = datum_params[0];\n    var Dy_BF = datum_params[1];\n    var Dz_BF = datum_params[2];\n    var Rx_BF = datum_params[3];\n    var Ry_BF = datum_params[4];\n    var Rz_BF = datum_params[5];\n    var M_BF = datum_params[6];\n    var x_tmp = (p.x - Dx_BF) / M_BF;\n    var y_tmp = (p.y - Dy_BF) / M_BF;\n    var z_tmp = (p.z - Dz_BF) / M_BF;\n    // if( x[io] === HUGE_VAL )\n    //    continue;\n\n    return {\n      x: x_tmp + Rz_BF * y_tmp - Ry_BF * z_tmp,\n      y: -Rz_BF * x_tmp + y_tmp + Rx_BF * z_tmp,\n      z: Ry_BF * x_tmp - Rx_BF * y_tmp + z_tmp\n    };\n  } // cs_geocentric_from_wgs84()\n}\n","import {\n  PJD_3PARAM,\n  PJD_7PARAM,\n  PJD_GRIDSHIFT,\n  PJD_NODATUM,\n  R2D,\n  SRS_WGS84_ESQUARED,\n  SRS_WGS84_SEMIMAJOR, SRS_WGS84_SEMIMINOR\n} from './constants/values';\n\nimport { geodeticToGeocentric, geocentricToGeodetic, geocentricToWgs84, geocentricFromWgs84, compareDatums } from './datumUtils';\nimport adjust_lon from './common/adjust_lon';\nfunction checkParams(type) {\n  return (type === PJD_3PARAM || type === PJD_7PARAM);\n}\n\nexport default function (source, dest, point) {\n  // Short cut if the datums are identical.\n  if (compareDatums(source, dest)) {\n    return point; // in this case, zero is sucess,\n    // whereas cs_compare_datums returns 1 to indicate TRUE\n    // confusing, should fix this\n  }\n\n  // Explicitly skip datum transform by setting 'datum=none' as parameter for either source or dest\n  if (source.datum_type === PJD_NODATUM || dest.datum_type === PJD_NODATUM) {\n    return point;\n  }\n\n  // If this datum requires grid shifts, then apply it to geodetic coordinates.\n  var source_a = source.a;\n  var source_es = source.es;\n  if (source.datum_type === PJD_GRIDSHIFT) {\n    var gridShiftCode = applyGridShift(source, false, point);\n    if (gridShiftCode !== 0) {\n      return undefined;\n    }\n    source_a = SRS_WGS84_SEMIMAJOR;\n    source_es = SRS_WGS84_ESQUARED;\n  }\n\n  var dest_a = dest.a;\n  var dest_b = dest.b;\n  var dest_es = dest.es;\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    dest_a = SRS_WGS84_SEMIMAJOR;\n    dest_b = SRS_WGS84_SEMIMINOR;\n    dest_es = SRS_WGS84_ESQUARED;\n  }\n\n  // Do we need to go through geocentric coordinates?\n  if (source_es === dest_es && source_a === dest_a && !checkParams(source.datum_type) && !checkParams(dest.datum_type)) {\n    return point;\n  }\n\n  // Convert to geocentric coordinates.\n  point = geodeticToGeocentric(point, source_es, source_a);\n  // Convert between datums\n  if (checkParams(source.datum_type)) {\n    point = geocentricToWgs84(point, source.datum_type, source.datum_params);\n  }\n  if (checkParams(dest.datum_type)) {\n    point = geocentricFromWgs84(point, dest.datum_type, dest.datum_params);\n  }\n  point = geocentricToGeodetic(point, dest_es, dest_a, dest_b);\n\n  if (dest.datum_type === PJD_GRIDSHIFT) {\n    var destGridShiftResult = applyGridShift(dest, true, point);\n    if (destGridShiftResult !== 0) {\n      return undefined;\n    }\n  }\n\n  return point;\n}\n\nexport function applyGridShift(source, inverse, point) {\n  if (source.grids === null || source.grids.length === 0) {\n    console.log('Grid shift grids not found');\n    return -1;\n  }\n  var input = { x: -point.x, y: point.y };\n  var output = { x: Number.NaN, y: Number.NaN };\n  var attemptedGrids = [];\n  outer:\n  for (var i = 0; i < source.grids.length; i++) {\n    var grid = source.grids[i];\n    attemptedGrids.push(grid.name);\n    if (grid.isNull) {\n      output = input;\n      break;\n    }\n    if (grid.grid === null) {\n      if (grid.mandatory) {\n        console.log('Unable to find mandatory grid \\'' + grid.name + '\\'');\n        return -1;\n      }\n      continue;\n    }\n    var subgrids = grid.grid.subgrids;\n    for (var j = 0, jj = subgrids.length; j < jj; j++) {\n      var subgrid = subgrids[j];\n      // skip tables that don't match our point at all\n      var epsilon = (Math.abs(subgrid.del[1]) + Math.abs(subgrid.del[0])) / 10000.0;\n      var minX = subgrid.ll[0] - epsilon;\n      var minY = subgrid.ll[1] - epsilon;\n      var maxX = subgrid.ll[0] + (subgrid.lim[0] - 1) * subgrid.del[0] + epsilon;\n      var maxY = subgrid.ll[1] + (subgrid.lim[1] - 1) * subgrid.del[1] + epsilon;\n      if (minY > input.y || minX > input.x || maxY < input.y || maxX < input.x) {\n        continue;\n      }\n      output = applySubgridShift(input, inverse, subgrid);\n      if (!isNaN(output.x)) {\n        break outer;\n      }\n    }\n  }\n  if (isNaN(output.x)) {\n    console.log('Failed to find a grid shift table for location \\''\n      + -input.x * R2D + ' ' + input.y * R2D + ' tried: \\'' + attemptedGrids + '\\'');\n    return -1;\n  }\n  point.x = -output.x;\n  point.y = output.y;\n  return 0;\n}\n\nfunction applySubgridShift(pin, inverse, ct) {\n  var val = { x: Number.NaN, y: Number.NaN };\n  if (isNaN(pin.x)) {\n    return val;\n  }\n  var tb = { x: pin.x, y: pin.y };\n  tb.x -= ct.ll[0];\n  tb.y -= ct.ll[1];\n  tb.x = adjust_lon(tb.x - Math.PI) + Math.PI;\n  var t = nadInterpolate(tb, ct);\n  if (inverse) {\n    if (isNaN(t.x)) {\n      return val;\n    }\n    t.x = tb.x - t.x;\n    t.y = tb.y - t.y;\n    var i = 9, tol = 1e-12;\n    var dif, del;\n    do {\n      del = nadInterpolate(t, ct);\n      if (isNaN(del.x)) {\n        console.log('Inverse grid shift iteration failed, presumably at grid edge.  Using first approximation.');\n        break;\n      }\n      dif = { x: tb.x - (del.x + t.x), y: tb.y - (del.y + t.y) };\n      t.x += dif.x;\n      t.y += dif.y;\n    } while (i-- && Math.abs(dif.x) > tol && Math.abs(dif.y) > tol);\n    if (i < 0) {\n      console.log('Inverse grid shift iterator failed to converge.');\n      return val;\n    }\n    val.x = adjust_lon(t.x + ct.ll[0]);\n    val.y = t.y + ct.ll[1];\n  } else {\n    if (!isNaN(t.x)) {\n      val.x = pin.x + t.x;\n      val.y = pin.y + t.y;\n    }\n  }\n  return val;\n}\n\nfunction nadInterpolate(pin, ct) {\n  var t = { x: pin.x / ct.del[0], y: pin.y / ct.del[1] };\n  var indx = { x: Math.floor(t.x), y: Math.floor(t.y) };\n  var frct = { x: t.x - 1.0 * indx.x, y: t.y - 1.0 * indx.y };\n  var val = { x: Number.NaN, y: Number.NaN };\n  var inx;\n  if (indx.x < 0 || indx.x >= ct.lim[0]) {\n    return val;\n  }\n  if (indx.y < 0 || indx.y >= ct.lim[1]) {\n    return val;\n  }\n  inx = (indx.y * ct.lim[0]) + indx.x;\n  var f00 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx++;\n  var f10 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx += ct.lim[0];\n  var f11 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  inx--;\n  var f01 = { x: ct.cvs[inx][0], y: ct.cvs[inx][1] };\n  var m11 = frct.x * frct.y, m10 = frct.x * (1.0 - frct.y),\n    m00 = (1.0 - frct.x) * (1.0 - frct.y), m01 = (1.0 - frct.x) * frct.y;\n  val.x = (m00 * f00.x + m10 * f10.x + m01 * f01.x + m11 * f11.x);\n  val.y = (m00 * f00.y + m10 * f10.y + m01 * f01.y + m11 * f11.y);\n  return val;\n}\n","export default function (crs, denorm, point) {\n  var xin = point.x,\n    yin = point.y,\n    zin = point.z || 0.0;\n  var v, t, i;\n  /** @type {import(\"./core\").InterfaceCoordinates} */\n  var out = {};\n  for (i = 0; i < 3; i++) {\n    if (denorm && i === 2 && point.z === undefined) {\n      continue;\n    }\n    if (i === 0) {\n      v = xin;\n      if ('ew'.indexOf(crs.axis[i]) !== -1) {\n        t = 'x';\n      } else {\n        t = 'y';\n      }\n    } else if (i === 1) {\n      v = yin;\n      if ('ns'.indexOf(crs.axis[i]) !== -1) {\n        t = 'y';\n      } else {\n        t = 'x';\n      }\n    } else {\n      v = zin;\n      t = 'z';\n    }\n    switch (crs.axis[i]) {\n      case 'e':\n        out[t] = v;\n        break;\n      case 'w':\n        out[t] = -v;\n        break;\n      case 'n':\n        out[t] = v;\n        break;\n      case 's':\n        out[t] = -v;\n        break;\n      case 'u':\n        if (point[t] !== undefined) {\n          out.z = v;\n        }\n        break;\n      case 'd':\n        if (point[t] !== undefined) {\n          out.z = -v;\n        }\n        break;\n      default:\n      // console.log(\"ERROR: unknow axis (\"+crs.axis[i]+\") - check definition of \"+crs.projName);\n        return null;\n    }\n  }\n  return out;\n}\n","/**\n * @param {Array<number>} array\n * @returns {import(\"../core\").InterfaceCoordinates}\n */\nexport default function (array) {\n  var out = {\n    x: array[0],\n    y: array[1]\n  };\n  if (array.length > 2) {\n    out.z = array[2];\n  }\n  if (array.length > 3) {\n    out.m = array[3];\n  }\n  return out;\n}\n","export default function (point) {\n  checkCoord(point.x);\n  checkCoord(point.y);\n}\nfunction checkCoord(num) {\n  if (typeof Number.isFinite === 'function') {\n    if (Number.isFinite(num)) {\n      return;\n    }\n    throw new TypeError('coordinates must be finite numbers');\n  }\n  if (typeof num !== 'number' || num !== num || !isFinite(num)) {\n    throw new TypeError('coordinates must be finite numbers');\n  }\n}\n","import { D2R, R2D, PJD_3PARAM, PJD_7PARAM, PJD_GRIDSHIFT } from './constants/values';\nimport datum_transform from './datum_transform';\nimport adjust_axis from './adjust_axis';\nimport proj from './Proj';\nimport toPoint from './common/toPoint';\nimport checkSanity from './checkSanity';\n\nfunction checkNotWGS(source, dest) {\n  return (\n    (source.datum.datum_type === PJD_3PARAM || source.datum.datum_type === PJD_7PARAM || source.datum.datum_type === PJD_GRIDSHIFT) && dest.datumCode !== 'WGS84')\n  || ((dest.datum.datum_type === PJD_3PARAM || dest.datum.datum_type === PJD_7PARAM || dest.datum.datum_type === PJD_GRIDSHIFT) && source.datumCode !== 'WGS84');\n}\n\n/**\n * @param {import('./defs').ProjectionDefinition} source\n * @param {import('./defs').ProjectionDefinition} dest\n * @param {import('./core').TemplateCoordinates} point\n * @param {boolean} enforceAxis\n * @returns {import('./core').InterfaceCoordinates | undefined}\n */\nexport default function transform(source, dest, point, enforceAxis) {\n  var wgs84;\n  if (Array.isArray(point)) {\n    point = toPoint(point);\n  } else {\n    // Clone the point object so inputs don't get modified\n    point = {\n      x: point.x,\n      y: point.y,\n      z: point.z,\n      m: point.m\n    };\n  }\n  var hasZ = point.z !== undefined;\n  checkSanity(point);\n  // Workaround for datum shifts towgs84, if either source or destination projection is not wgs84\n  if (source.datum && dest.datum && checkNotWGS(source, dest)) {\n    wgs84 = new proj('WGS84');\n    point = transform(source, wgs84, point, enforceAxis);\n    source = wgs84;\n  }\n  // DGR, 2010/11/12\n  if (enforceAxis && source.axis !== 'enu') {\n    point = adjust_axis(source, false, point);\n  }\n  // Transform source points to long/lat, if they aren't already.\n  if (source.projName === 'longlat') {\n    point = {\n      x: point.x * D2R,\n      y: point.y * D2R,\n      z: point.z || 0\n    };\n  } else {\n    if (source.to_meter) {\n      point = {\n        x: point.x * source.to_meter,\n        y: point.y * source.to_meter,\n        z: point.z || 0\n      };\n    }\n    point = source.inverse(point); // Convert Cartesian to longlat\n    if (!point) {\n      return;\n    }\n  }\n  // Adjust for the prime meridian if necessary\n  if (source.from_greenwich) {\n    point.x += source.from_greenwich;\n  }\n\n  // Convert datums if needed, and if possible.\n  point = datum_transform(source.datum, dest.datum, point);\n  if (!point) {\n    return;\n  }\n\n  point = /** @type {import('./core').InterfaceCoordinates} */ (point);\n\n  // Adjust for the prime meridian if necessary\n  if (dest.from_greenwich) {\n    point = {\n      x: point.x - dest.from_greenwich,\n      y: point.y,\n      z: point.z || 0\n    };\n  }\n\n  if (dest.projName === 'longlat') {\n    // convert radians to decimal degrees\n    point = {\n      x: point.x * R2D,\n      y: point.y * R2D,\n      z: point.z || 0\n    };\n  } else { // else project\n    point = dest.forward(point);\n    if (dest.to_meter) {\n      point = {\n        x: point.x / dest.to_meter,\n        y: point.y / dest.to_meter,\n        z: point.z || 0\n      };\n    }\n  }\n\n  // DGR, 2010/11/12\n  if (enforceAxis && dest.axis !== 'enu') {\n    return adjust_axis(dest, true, point);\n  }\n\n  if (point && !hasZ) {\n    delete point.z;\n  }\n  return point;\n}\n","import proj from './Proj';\nimport transform from './transform';\nvar wgs84 = proj('WGS84');\n\n/**\n * @typedef {{x: number, y: number, z?: number, m?: number}} InterfaceCoordinates\n */\n\n/**\n * @typedef {Array<number> | InterfaceCoordinates} TemplateCoordinates\n */\n\n/**\n * @typedef {Object} Converter\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} forward\n * @property {<T extends TemplateCoordinates>(coordinates: T, enforceAxis?: boolean) => T} inverse\n * @property {proj} [oProj]\n */\n\n/**\n * @typedef {Object} PROJJSONDefinition\n * @property {string} [$schema]\n * @property {string} type\n * @property {string} [name]\n * @property {{authority: string, code: number}} [id]\n * @property {string} [scope]\n * @property {string} [area]\n * @property {{south_latitude: number, west_longitude: number, north_latitude: number, east_longitude: number}} [bbox]\n * @property {PROJJSONDefinition[]} [components]\n * @property {{type: string, name: string}} [datum]\n * @property {{\n *   name: string,\n *   members: Array<{\n *     name: string,\n *     id?: {authority: string, code: number}\n *   }>,\n *   ellipsoid?: {\n *     name: string,\n *     semi_major_axis: number,\n *     inverse_flattening?: number\n *   },\n *   accuracy?: string,\n *   id?: {authority: string, code: number}\n * }} [datum_ensemble]\n * @property {{\n *   subtype: string,\n *   axis: Array<{\n *     name: string,\n *     abbreviation?: string,\n *     direction: string,\n *     unit: string\n *   }>\n * }} [coordinate_system]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string\n *   }>\n * }} [conversion]\n * @property {{\n *   name: string,\n *   method: {name: string},\n *   parameters: Array<{\n *     name: string,\n *     value: number,\n *     unit?: string,\n *     type?: string,\n *     file_name?: string\n *   }>\n * }} [transformation]\n */\n\n/**\n * @template {TemplateCoordinates} T\n * @param {proj} from\n * @param {proj} to\n * @param {T} coords\n * @param {boolean} [enforceAxis]\n * @returns {T}\n */\nfunction transformer(from, to, coords, enforceAxis) {\n  var transformedArray, out, keys;\n  if (Array.isArray(coords)) {\n    transformedArray = transform(from, to, coords, enforceAxis) || { x: NaN, y: NaN };\n    if (coords.length > 2) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (typeof transformedArray.z === 'number') {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, transformedArray.z].concat(coords.slice(3)));\n        } else {\n          return /** @type {T} */ ([transformedArray.x, transformedArray.y, coords[2]].concat(coords.slice(3)));\n        }\n      } else {\n        return /** @type {T} */ ([transformedArray.x, transformedArray.y].concat(coords.slice(2)));\n      }\n    } else {\n      return /** @type {T} */ ([transformedArray.x, transformedArray.y]);\n    }\n  } else {\n    out = transform(from, to, coords, enforceAxis);\n    keys = Object.keys(coords);\n    if (keys.length === 2) {\n      return /** @type {T} */ (out);\n    }\n    keys.forEach(function (key) {\n      if ((typeof from.name !== 'undefined' && from.name === 'geocent') || (typeof to.name !== 'undefined' && to.name === 'geocent')) {\n        if (key === 'x' || key === 'y' || key === 'z') {\n          return;\n        }\n      } else {\n        if (key === 'x' || key === 'y') {\n          return;\n        }\n      }\n      out[key] = coords[key];\n    });\n    return /** @type {T} */ (out);\n  }\n}\n\n/**\n * @param {proj | string | PROJJSONDefinition | Converter} item\n * @returns {import('./Proj').default}\n */\nfunction checkProj(item) {\n  if (item instanceof proj) {\n    return item;\n  }\n  if (typeof item === 'object' && 'oProj' in item) {\n    return item.oProj;\n  }\n  return proj(/** @type {string | PROJJSONDefinition} */ (item));\n}\n\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @returns {Converter}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @overload\n * @param {string | PROJJSONDefinition | proj} fromProj\n * @param {string | PROJJSONDefinition | proj} toProj\n * @param {T} coord\n * @returns {T}\n */\n/**\n * @template {TemplateCoordinates} T\n * @param {string | PROJJSONDefinition | proj} fromProjOrToProj\n * @param {string | PROJJSONDefinition | proj | TemplateCoordinates} [toProjOrCoord]\n * @param {T} [coord]\n * @returns {T|Converter}\n */\nfunction proj4(fromProjOrToProj, toProjOrCoord, coord) {\n  /** @type {proj} */\n  var fromProj;\n  /** @type {proj} */\n  var toProj;\n  var single = false;\n  /** @type {Converter} */\n  var obj;\n  if (typeof toProjOrCoord === 'undefined') {\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  } else if (typeof /** @type {?} */ (toProjOrCoord).x !== 'undefined' || Array.isArray(toProjOrCoord)) {\n    coord = /** @type {T} */ (/** @type {?} */ (toProjOrCoord));\n    toProj = checkProj(fromProjOrToProj);\n    fromProj = wgs84;\n    single = true;\n  }\n  if (!fromProj) {\n    fromProj = checkProj(fromProjOrToProj);\n  }\n  if (!toProj) {\n    toProj = checkProj(/** @type {string | PROJJSONDefinition | proj } */ (toProjOrCoord));\n  }\n  if (coord) {\n    return transformer(fromProj, toProj, coord);\n  } else {\n    obj = {\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      forward: function (coords, enforceAxis) {\n        return transformer(fromProj, toProj, coords, enforceAxis);\n      },\n      /**\n       * @template {TemplateCoordinates} T\n       * @param {T} coords\n       * @param {boolean=} enforceAxis\n       * @returns {T}\n       */\n      inverse: function (coords, enforceAxis) {\n        return transformer(toProj, fromProj, coords, enforceAxis);\n      }\n    };\n    if (single) {\n      obj.oProj = toProj;\n    }\n    return obj;\n  }\n}\n\nexport default proj4;\n","\n\n\n/**\n * UTM zones are grouped, and assigned to one of a group of 6\n * sets.\n *\n * {int} @private\n */\nvar NUM_100K_SETS = 6;\n\n/**\n * The column letters (for easting) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_COLUMN_LETTERS = 'AJSAJS';\n\n/**\n * The row letters (for northing) of the lower left value, per\n * set.\n *\n * {string} @private\n */\nvar SET_ORIGIN_ROW_LETTERS = 'AFAFAF';\n\nvar A = 65; // A\nvar I = 73; // I\nvar O = 79; // O\nvar V = 86; // V\nvar Z = 90; // Z\nexport default {\n  forward: forward,\n  inverse: inverse,\n  toPoint: toPoint\n};\n/**\n * Conversion of lat/lon to MGRS.\n *\n * @param {object} ll Object literal with lat and lon properties on a\n *     WGS84 ellipsoid.\n * @param {int} accuracy Accuracy in digits (5 for 1 m, 4 for 10 m, 3 for\n *      100 m, 2 for 1000 m or 1 for 10000 m). Optional, default is 5.\n * @return {string} the MGRS string for the given location and accuracy.\n */\nexport function forward(ll, accuracy) {\n  accuracy = accuracy || 5; // default accuracy 1m\n  return encode(LLtoUTM({\n    lat: ll[1],\n    lon: ll[0]\n  }), accuracy);\n};\n\n/**\n * Conversion of MGRS to lat/lon.\n *\n * @param {string} mgrs MGRS string.\n * @return {array} An array with left (longitude), bottom (latitude), right\n *     (longitude) and top (latitude) values in WGS84, representing the\n *     bounding box for the provided MGRS reference.\n */\nexport function inverse(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat, bbox.lon, bbox.lat];\n  }\n  return [bbox.left, bbox.bottom, bbox.right, bbox.top];\n};\n\nexport function toPoint(mgrs) {\n  var bbox = UTMtoLL(decode(mgrs.toUpperCase()));\n  if (bbox.lat && bbox.lon) {\n    return [bbox.lon, bbox.lat];\n  }\n  return [(bbox.left + bbox.right) / 2, (bbox.top + bbox.bottom) / 2];\n};\n/**\n * Conversion from degrees to radians.\n *\n * @private\n * @param {number} deg the angle in degrees.\n * @return {number} the angle in radians.\n */\nfunction degToRad(deg) {\n  return (deg * (Math.PI / 180.0));\n}\n\n/**\n * Conversion from radians to degrees.\n *\n * @private\n * @param {number} rad the angle in radians.\n * @return {number} the angle in degrees.\n */\nfunction radToDeg(rad) {\n  return (180.0 * (rad / Math.PI));\n}\n\n/**\n * Converts a set of Longitude and Latitude co-ordinates to UTM\n * using the WGS84 ellipsoid.\n *\n * @private\n * @param {object} ll Object literal with lat and lon properties\n *     representing the WGS84 coordinate to be converted.\n * @return {object} Object literal containing the UTM value with easting,\n *     northing, zoneNumber and zoneLetter properties, and an optional\n *     accuracy property in digits. Returns null if the conversion failed.\n */\nfunction LLtoUTM(ll) {\n  var Lat = ll.lat;\n  var Long = ll.lon;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var k0 = 0.9996;\n  var LongOrigin;\n  var eccPrimeSquared;\n  var N, T, C, A, M;\n  var LatRad = degToRad(Lat);\n  var LongRad = degToRad(Long);\n  var LongOriginRad;\n  var ZoneNumber;\n  // (int)\n  ZoneNumber = Math.floor((Long + 180) / 6) + 1;\n\n  //Make sure the longitude 180.00 is in Zone 60\n  if (Long === 180) {\n    ZoneNumber = 60;\n  }\n\n  // Special zone for Norway\n  if (Lat >= 56.0 && Lat < 64.0 && Long >= 3.0 && Long < 12.0) {\n    ZoneNumber = 32;\n  }\n\n  // Special zones for Svalbard\n  if (Lat >= 72.0 && Lat < 84.0) {\n    if (Long >= 0.0 && Long < 9.0) {\n      ZoneNumber = 31;\n    }\n    else if (Long >= 9.0 && Long < 21.0) {\n      ZoneNumber = 33;\n    }\n    else if (Long >= 21.0 && Long < 33.0) {\n      ZoneNumber = 35;\n    }\n    else if (Long >= 33.0 && Long < 42.0) {\n      ZoneNumber = 37;\n    }\n  }\n\n  LongOrigin = (ZoneNumber - 1) * 6 - 180 + 3; //+3 puts origin\n  // in middle of\n  // zone\n  LongOriginRad = degToRad(LongOrigin);\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  N = a / Math.sqrt(1 - eccSquared * Math.sin(LatRad) * Math.sin(LatRad));\n  T = Math.tan(LatRad) * Math.tan(LatRad);\n  C = eccPrimeSquared * Math.cos(LatRad) * Math.cos(LatRad);\n  A = Math.cos(LatRad) * (LongRad - LongOriginRad);\n\n  M = a * ((1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256) * LatRad - (3 * eccSquared / 8 + 3 * eccSquared * eccSquared / 32 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(2 * LatRad) + (15 * eccSquared * eccSquared / 256 + 45 * eccSquared * eccSquared * eccSquared / 1024) * Math.sin(4 * LatRad) - (35 * eccSquared * eccSquared * eccSquared / 3072) * Math.sin(6 * LatRad));\n\n  var UTMEasting = (k0 * N * (A + (1 - T + C) * A * A * A / 6.0 + (5 - 18 * T + T * T + 72 * C - 58 * eccPrimeSquared) * A * A * A * A * A / 120.0) + 500000.0);\n\n  var UTMNorthing = (k0 * (M + N * Math.tan(LatRad) * (A * A / 2 + (5 - T + 9 * C + 4 * C * C) * A * A * A * A / 24.0 + (61 - 58 * T + T * T + 600 * C - 330 * eccPrimeSquared) * A * A * A * A * A * A / 720.0)));\n  if (Lat < 0.0) {\n    UTMNorthing += 10000000.0; //10000000 meter offset for\n    // southern hemisphere\n  }\n\n  return {\n    northing: Math.round(UTMNorthing),\n    easting: Math.round(UTMEasting),\n    zoneNumber: ZoneNumber,\n    zoneLetter: getLetterDesignator(Lat)\n  };\n}\n\n/**\n * Converts UTM coords to lat/long, using the WGS84 ellipsoid. This is a convenience\n * class where the Zone can be specified as a single string eg.\"60N\" which\n * is then broken down into the ZoneNumber and ZoneLetter.\n *\n * @private\n * @param {object} utm An object literal with northing, easting, zoneNumber\n *     and zoneLetter properties. If an optional accuracy property is\n *     provided (in meters), a bounding box will be returned instead of\n *     latitude and longitude.\n * @return {object} An object literal containing either lat and lon values\n *     (if no accuracy was provided), or top, right, bottom and left values\n *     for the bounding box calculated according to the provided accuracy.\n *     Returns null if the conversion failed.\n */\nfunction UTMtoLL(utm) {\n\n  var UTMNorthing = utm.northing;\n  var UTMEasting = utm.easting;\n  var zoneLetter = utm.zoneLetter;\n  var zoneNumber = utm.zoneNumber;\n  // check the ZoneNummber is valid\n  if (zoneNumber < 0 || zoneNumber > 60) {\n    return null;\n  }\n\n  var k0 = 0.9996;\n  var a = 6378137.0; //ellip.radius;\n  var eccSquared = 0.00669438; //ellip.eccsq;\n  var eccPrimeSquared;\n  var e1 = (1 - Math.sqrt(1 - eccSquared)) / (1 + Math.sqrt(1 - eccSquared));\n  var N1, T1, C1, R1, D, M;\n  var LongOrigin;\n  var mu, phi1Rad;\n\n  // remove 500,000 meter offset for longitude\n  var x = UTMEasting - 500000.0;\n  var y = UTMNorthing;\n\n  // We must know somehow if we are in the Northern or Southern\n  // hemisphere, this is the only time we use the letter So even\n  // if the Zone letter isn't exactly correct it should indicate\n  // the hemisphere correctly\n  if (zoneLetter < 'N') {\n    y -= 10000000.0; // remove 10,000,000 meter offset used\n    // for southern hemisphere\n  }\n\n  // There are 60 zones with zone 1 being at West -180 to -174\n  LongOrigin = (zoneNumber - 1) * 6 - 180 + 3; // +3 puts origin\n  // in middle of\n  // zone\n\n  eccPrimeSquared = (eccSquared) / (1 - eccSquared);\n\n  M = y / k0;\n  mu = M / (a * (1 - eccSquared / 4 - 3 * eccSquared * eccSquared / 64 - 5 * eccSquared * eccSquared * eccSquared / 256));\n\n  phi1Rad = mu + (3 * e1 / 2 - 27 * e1 * e1 * e1 / 32) * Math.sin(2 * mu) + (21 * e1 * e1 / 16 - 55 * e1 * e1 * e1 * e1 / 32) * Math.sin(4 * mu) + (151 * e1 * e1 * e1 / 96) * Math.sin(6 * mu);\n  // double phi1 = ProjMath.radToDeg(phi1Rad);\n\n  N1 = a / Math.sqrt(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad));\n  T1 = Math.tan(phi1Rad) * Math.tan(phi1Rad);\n  C1 = eccPrimeSquared * Math.cos(phi1Rad) * Math.cos(phi1Rad);\n  R1 = a * (1 - eccSquared) / Math.pow(1 - eccSquared * Math.sin(phi1Rad) * Math.sin(phi1Rad), 1.5);\n  D = x / (N1 * k0);\n\n  var lat = phi1Rad - (N1 * Math.tan(phi1Rad) / R1) * (D * D / 2 - (5 + 3 * T1 + 10 * C1 - 4 * C1 * C1 - 9 * eccPrimeSquared) * D * D * D * D / 24 + (61 + 90 * T1 + 298 * C1 + 45 * T1 * T1 - 252 * eccPrimeSquared - 3 * C1 * C1) * D * D * D * D * D * D / 720);\n  lat = radToDeg(lat);\n\n  var lon = (D - (1 + 2 * T1 + C1) * D * D * D / 6 + (5 - 2 * C1 + 28 * T1 - 3 * C1 * C1 + 8 * eccPrimeSquared + 24 * T1 * T1) * D * D * D * D * D / 120) / Math.cos(phi1Rad);\n  lon = LongOrigin + radToDeg(lon);\n\n  var result;\n  if (utm.accuracy) {\n    var topRight = UTMtoLL({\n      northing: utm.northing + utm.accuracy,\n      easting: utm.easting + utm.accuracy,\n      zoneLetter: utm.zoneLetter,\n      zoneNumber: utm.zoneNumber\n    });\n    result = {\n      top: topRight.lat,\n      right: topRight.lon,\n      bottom: lat,\n      left: lon\n    };\n  }\n  else {\n    result = {\n      lat: lat,\n      lon: lon\n    };\n  }\n  return result;\n}\n\n/**\n * Calculates the MGRS letter designator for the given latitude.\n *\n * @private\n * @param {number} lat The latitude in WGS84 to get the letter designator\n *     for.\n * @return {char} The letter designator.\n */\nfunction getLetterDesignator(lat) {\n  //This is here as an error flag to show that the Latitude is\n  //outside MGRS limits\n  var LetterDesignator = 'Z';\n\n  if ((84 >= lat) && (lat >= 72)) {\n    LetterDesignator = 'X';\n  }\n  else if ((72 > lat) && (lat >= 64)) {\n    LetterDesignator = 'W';\n  }\n  else if ((64 > lat) && (lat >= 56)) {\n    LetterDesignator = 'V';\n  }\n  else if ((56 > lat) && (lat >= 48)) {\n    LetterDesignator = 'U';\n  }\n  else if ((48 > lat) && (lat >= 40)) {\n    LetterDesignator = 'T';\n  }\n  else if ((40 > lat) && (lat >= 32)) {\n    LetterDesignator = 'S';\n  }\n  else if ((32 > lat) && (lat >= 24)) {\n    LetterDesignator = 'R';\n  }\n  else if ((24 > lat) && (lat >= 16)) {\n    LetterDesignator = 'Q';\n  }\n  else if ((16 > lat) && (lat >= 8)) {\n    LetterDesignator = 'P';\n  }\n  else if ((8 > lat) && (lat >= 0)) {\n    LetterDesignator = 'N';\n  }\n  else if ((0 > lat) && (lat >= -8)) {\n    LetterDesignator = 'M';\n  }\n  else if ((-8 > lat) && (lat >= -16)) {\n    LetterDesignator = 'L';\n  }\n  else if ((-16 > lat) && (lat >= -24)) {\n    LetterDesignator = 'K';\n  }\n  else if ((-24 > lat) && (lat >= -32)) {\n    LetterDesignator = 'J';\n  }\n  else if ((-32 > lat) && (lat >= -40)) {\n    LetterDesignator = 'H';\n  }\n  else if ((-40 > lat) && (lat >= -48)) {\n    LetterDesignator = 'G';\n  }\n  else if ((-48 > lat) && (lat >= -56)) {\n    LetterDesignator = 'F';\n  }\n  else if ((-56 > lat) && (lat >= -64)) {\n    LetterDesignator = 'E';\n  }\n  else if ((-64 > lat) && (lat >= -72)) {\n    LetterDesignator = 'D';\n  }\n  else if ((-72 > lat) && (lat >= -80)) {\n    LetterDesignator = 'C';\n  }\n  return LetterDesignator;\n}\n\n/**\n * Encodes a UTM location as MGRS string.\n *\n * @private\n * @param {object} utm An object literal with easting, northing,\n *     zoneLetter, zoneNumber\n * @param {number} accuracy Accuracy in digits (1-5).\n * @return {string} MGRS string for the given UTM location.\n */\nfunction encode(utm, accuracy) {\n  // prepend with leading zeroes\n  var seasting = \"00000\" + utm.easting,\n    snorthing = \"00000\" + utm.northing;\n\n  return utm.zoneNumber + utm.zoneLetter + get100kID(utm.easting, utm.northing, utm.zoneNumber) + seasting.substr(seasting.length - 5, accuracy) + snorthing.substr(snorthing.length - 5, accuracy);\n}\n\n/**\n * Get the two letter 100k designator for a given UTM easting,\n * northing and zone number value.\n *\n * @private\n * @param {number} easting\n * @param {number} northing\n * @param {number} zoneNumber\n * @return the two letter 100k designator for the given UTM location.\n */\nfunction get100kID(easting, northing, zoneNumber) {\n  var setParm = get100kSetForZone(zoneNumber);\n  var setColumn = Math.floor(easting / 100000);\n  var setRow = Math.floor(northing / 100000) % 20;\n  return getLetter100kID(setColumn, setRow, setParm);\n}\n\n/**\n * Given a UTM zone number, figure out the MGRS 100K set it is in.\n *\n * @private\n * @param {number} i An UTM zone number.\n * @return {number} the 100k set the UTM zone is in.\n */\nfunction get100kSetForZone(i) {\n  var setParm = i % NUM_100K_SETS;\n  if (setParm === 0) {\n    setParm = NUM_100K_SETS;\n  }\n\n  return setParm;\n}\n\n/**\n * Get the two-letter MGRS 100k designator given information\n * translated from the UTM northing, easting and zone number.\n *\n * @private\n * @param {number} column the column index as it relates to the MGRS\n *        100k set spreadsheet, created from the UTM easting.\n *        Values are 1-8.\n * @param {number} row the row index as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM northing value. Values\n *        are from 0-19.\n * @param {number} parm the set block, as it relates to the MGRS 100k set\n *        spreadsheet, created from the UTM zone. Values are from\n *        1-60.\n * @return two letter MGRS 100k code.\n */\nfunction getLetter100kID(column, row, parm) {\n  // colOrigin and rowOrigin are the letters at the origin of the set\n  var index = parm - 1;\n  var colOrigin = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(index);\n  var rowOrigin = SET_ORIGIN_ROW_LETTERS.charCodeAt(index);\n\n  // colInt and rowInt are the letters to build to return\n  var colInt = colOrigin + column - 1;\n  var rowInt = rowOrigin + row;\n  var rollover = false;\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n    rollover = true;\n  }\n\n  if (colInt === I || (colOrigin < I && colInt > I) || ((colInt > I || colOrigin < I) && rollover)) {\n    colInt++;\n  }\n\n  if (colInt === O || (colOrigin < O && colInt > O) || ((colInt > O || colOrigin < O) && rollover)) {\n    colInt++;\n\n    if (colInt === I) {\n      colInt++;\n    }\n  }\n\n  if (colInt > Z) {\n    colInt = colInt - Z + A - 1;\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n    rollover = true;\n  }\n  else {\n    rollover = false;\n  }\n\n  if (((rowInt === I) || ((rowOrigin < I) && (rowInt > I))) || (((rowInt > I) || (rowOrigin < I)) && rollover)) {\n    rowInt++;\n  }\n\n  if (((rowInt === O) || ((rowOrigin < O) && (rowInt > O))) || (((rowInt > O) || (rowOrigin < O)) && rollover)) {\n    rowInt++;\n\n    if (rowInt === I) {\n      rowInt++;\n    }\n  }\n\n  if (rowInt > V) {\n    rowInt = rowInt - V + A - 1;\n  }\n\n  var twoLetter = String.fromCharCode(colInt) + String.fromCharCode(rowInt);\n  return twoLetter;\n}\n\n/**\n * Decode the UTM parameters from a MGRS string.\n *\n * @private\n * @param {string} mgrsString an UPPERCASE coordinate string is expected.\n * @return {object} An object literal with easting, northing, zoneLetter,\n *     zoneNumber and accuracy (in meters) properties.\n */\nfunction decode(mgrsString) {\n\n  if (mgrsString && mgrsString.length === 0) {\n    throw (\"MGRSPoint coverting from nothing\");\n  }\n\n  var length = mgrsString.length;\n\n  var hunK = null;\n  var sb = \"\";\n  var testChar;\n  var i = 0;\n\n  // get Zone number\n  while (!(/[A-Z]/).test(testChar = mgrsString.charAt(i))) {\n    if (i >= 2) {\n      throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n    }\n    sb += testChar;\n    i++;\n  }\n\n  var zoneNumber = parseInt(sb, 10);\n\n  if (i === 0 || i + 3 > length) {\n    // A good MGRS string has to be 4-5 digits long,\n    // ##AAA/#AAA at least.\n    throw (\"MGRSPoint bad conversion from: \" + mgrsString);\n  }\n\n  var zoneLetter = mgrsString.charAt(i++);\n\n  // Should we check the zone letter here? Why not.\n  if (zoneLetter <= 'A' || zoneLetter === 'B' || zoneLetter === 'Y' || zoneLetter >= 'Z' || zoneLetter === 'I' || zoneLetter === 'O') {\n    throw (\"MGRSPoint zone letter \" + zoneLetter + \" not handled: \" + mgrsString);\n  }\n\n  hunK = mgrsString.substring(i, i += 2);\n\n  var set = get100kSetForZone(zoneNumber);\n\n  var east100k = getEastingFromChar(hunK.charAt(0), set);\n  var north100k = getNorthingFromChar(hunK.charAt(1), set);\n\n  // We have a bug where the northing may be 2000000 too low.\n  // How\n  // do we know when to roll over?\n\n  while (north100k < getMinNorthing(zoneLetter)) {\n    north100k += 2000000;\n  }\n\n  // calculate the char index for easting/northing separator\n  var remainder = length - i;\n\n  if (remainder % 2 !== 0) {\n    throw (\"MGRSPoint has to have an even number \\nof digits after the zone letter and two 100km letters - front \\nhalf for easting meters, second half for \\nnorthing meters\" + mgrsString);\n  }\n\n  var sep = remainder / 2;\n\n  var sepEasting = 0.0;\n  var sepNorthing = 0.0;\n  var accuracyBonus, sepEastingString, sepNorthingString, easting, northing;\n  if (sep > 0) {\n    accuracyBonus = 100000.0 / Math.pow(10, sep);\n    sepEastingString = mgrsString.substring(i, i + sep);\n    sepEasting = parseFloat(sepEastingString) * accuracyBonus;\n    sepNorthingString = mgrsString.substring(i + sep);\n    sepNorthing = parseFloat(sepNorthingString) * accuracyBonus;\n  }\n\n  easting = sepEasting + east100k;\n  northing = sepNorthing + north100k;\n\n  return {\n    easting: easting,\n    northing: northing,\n    zoneLetter: zoneLetter,\n    zoneNumber: zoneNumber,\n    accuracy: accuracyBonus\n  };\n}\n\n/**\n * Given the first letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the easting value that\n * should be added to the other, secondary easting value.\n *\n * @private\n * @param {char} e The first letter from a two-letter MGRS 100´k zone.\n * @param {number} set The MGRS table set for the zone number.\n * @return {number} The easting value for the given letter and set.\n */\nfunction getEastingFromChar(e, set) {\n  // colOrigin is the letter at the origin of the set for the\n  // column\n  var curCol = SET_ORIGIN_COLUMN_LETTERS.charCodeAt(set - 1);\n  var eastingValue = 100000.0;\n  var rewindMarker = false;\n\n  while (curCol !== e.charCodeAt(0)) {\n    curCol++;\n    if (curCol === I) {\n      curCol++;\n    }\n    if (curCol === O) {\n      curCol++;\n    }\n    if (curCol > Z) {\n      if (rewindMarker) {\n        throw (\"Bad character: \" + e);\n      }\n      curCol = A;\n      rewindMarker = true;\n    }\n    eastingValue += 100000.0;\n  }\n\n  return eastingValue;\n}\n\n/**\n * Given the second letter from a two-letter MGRS 100k zone, and given the\n * MGRS table set for the zone number, figure out the northing value that\n * should be added to the other, secondary northing value. You have to\n * remember that Northings are determined from the equator, and the vertical\n * cycle of letters mean a 2000000 additional northing meters. This happens\n * approx. every 18 degrees of latitude. This method does *NOT* count any\n * additional northings. You have to figure out how many 2000000 meters need\n * to be added for the zone letter of the MGRS coordinate.\n *\n * @private\n * @param {char} n Second letter of the MGRS 100k zone\n * @param {number} set The MGRS table set number, which is dependent on the\n *     UTM zone number.\n * @return {number} The northing value for the given letter and set.\n */\nfunction getNorthingFromChar(n, set) {\n\n  if (n > 'V') {\n    throw (\"MGRSPoint given invalid Northing \" + n);\n  }\n\n  // rowOrigin is the letter at the origin of the set for the\n  // column\n  var curRow = SET_ORIGIN_ROW_LETTERS.charCodeAt(set - 1);\n  var northingValue = 0.0;\n  var rewindMarker = false;\n\n  while (curRow !== n.charCodeAt(0)) {\n    curRow++;\n    if (curRow === I) {\n      curRow++;\n    }\n    if (curRow === O) {\n      curRow++;\n    }\n    // fixing a bug making whole application hang in this loop\n    // when 'n' is a wrong character\n    if (curRow > V) {\n      if (rewindMarker) { // making sure that this loop ends\n        throw (\"Bad character: \" + n);\n      }\n      curRow = A;\n      rewindMarker = true;\n    }\n    northingValue += 100000.0;\n  }\n\n  return northingValue;\n}\n\n/**\n * The function getMinNorthing returns the minimum northing value of a MGRS\n * zone.\n *\n * Ported from Geotrans' c Lattitude_Band_Value structure table.\n *\n * @private\n * @param {char} zoneLetter The MGRS zone to get the min northing for.\n * @return {number}\n */\nfunction getMinNorthing(zoneLetter) {\n  var northing;\n  switch (zoneLetter) {\n  case 'C':\n    northing = 1100000.0;\n    break;\n  case 'D':\n    northing = 2000000.0;\n    break;\n  case 'E':\n    northing = 2800000.0;\n    break;\n  case 'F':\n    northing = 3700000.0;\n    break;\n  case 'G':\n    northing = 4600000.0;\n    break;\n  case 'H':\n    northing = 5500000.0;\n    break;\n  case 'J':\n    northing = 6400000.0;\n    break;\n  case 'K':\n    northing = 7300000.0;\n    break;\n  case 'L':\n    northing = 8200000.0;\n    break;\n  case 'M':\n    northing = 9100000.0;\n    break;\n  case 'N':\n    northing = 0.0;\n    break;\n  case 'P':\n    northing = 800000.0;\n    break;\n  case 'Q':\n    northing = 1700000.0;\n    break;\n  case 'R':\n    northing = 2600000.0;\n    break;\n  case 'S':\n    northing = 3500000.0;\n    break;\n  case 'T':\n    northing = 4400000.0;\n    break;\n  case 'U':\n    northing = 5300000.0;\n    break;\n  case 'V':\n    northing = 6200000.0;\n    break;\n  case 'W':\n    northing = 7000000.0;\n    break;\n  case 'X':\n    northing = 7900000.0;\n    break;\n  default:\n    northing = -1.0;\n  }\n  if (northing >= 0.0) {\n    return northing;\n  }\n  else {\n    throw (\"Invalid zone letter: \" + zoneLetter);\n  }\n\n}\n","import { toPoint, forward } from 'mgrs';\n\n/**\n * @deprecated v3.0.0 - use proj4.toPoint instead\n * @param {number | import('./core').TemplateCoordinates | string} x\n * @param {number} [y]\n * @param {number} [z]\n */\nfunction Point(x, y, z) {\n  if (!(this instanceof Point)) {\n    return new Point(x, y, z);\n  }\n  if (Array.isArray(x)) {\n    this.x = x[0];\n    this.y = x[1];\n    this.z = x[2] || 0.0;\n  } else if (typeof x === 'object') {\n    this.x = x.x;\n    this.y = x.y;\n    this.z = x.z || 0.0;\n  } else if (typeof x === 'string' && typeof y === 'undefined') {\n    var coords = x.split(',');\n    this.x = parseFloat(coords[0]);\n    this.y = parseFloat(coords[1]);\n    this.z = parseFloat(coords[2]) || 0.0;\n  } else {\n    this.x = x;\n    this.y = y;\n    this.z = z || 0.0;\n  }\n  console.warn('proj4.Point will be removed in version 3, use proj4.toPoint');\n}\n\nPoint.fromMGRS = function (mgrsStr) {\n  return new Point(toPoint(mgrsStr));\n};\nPoint.prototype.toMGRS = function (accuracy) {\n  return forward([this.x, this.y], accuracy);\n};\nexport default Point;\n","var C00 = 1;\nvar C02 = 0.25;\nvar C04 = 0.046875;\nvar C06 = 0.01953125;\nvar C08 = 0.01068115234375;\nvar C22 = 0.75;\nvar C44 = 0.46875;\nvar C46 = 0.01302083333333333333;\nvar C48 = 0.00712076822916666666;\nvar C66 = 0.36458333333333333333;\nvar C68 = 0.00569661458333333333;\nvar C88 = 0.3076171875;\n\nexport default function (es) {\n  var en = [];\n  en[0] = C00 - es * (C02 + es * (C04 + es * (C06 + es * C08)));\n  en[1] = es * (C22 - es * (C04 + es * (C06 + es * C08)));\n  var t = es * es;\n  en[2] = t * (C44 - es * (C46 + es * C48));\n  t *= es;\n  en[3] = t * (C66 - es * C68);\n  en[4] = t * es * C88;\n  return en;\n}\n","export default function (phi, sphi, cphi, en) {\n  cphi *= sphi;\n  sphi *= sphi;\n  return (en[0] * phi - cphi * (en[1] + sphi * (en[2] + sphi * (en[3] + sphi * en[4]))));\n}\n","import pj_mlfn from './pj_mlfn';\nimport { EPSLN } from '../constants/values';\n\nvar MAX_ITER = 20;\n\nexport default function (arg, es, en) {\n  var k = 1 / (1 - es);\n  var phi = arg;\n  for (var i = MAX_ITER; i; --i) { /* rarely goes over 2 iterations */\n    var s = Math.sin(phi);\n    var t = 1 - es * s * s;\n    // t = this.pj_mlfn(phi, s, Math.cos(phi), en) - arg;\n    // phi -= t * (t * Math.sqrt(t)) * k;\n    t = (pj_mlfn(phi, s, Math.cos(phi), en) - arg) * (t * Math.sqrt(t)) * k;\n    phi -= t;\n    if (Math.abs(t) < EPSLN) {\n      return phi;\n    }\n  }\n  // ..reportError(\"cass:pj_inv_mlfn: Convergence error\");\n  return phi;\n}\n","// Heavily based on this tmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/tmerc.js\n\nimport pj_enfn from '../common/pj_enfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport adjust_lon from '../common/adjust_lon';\n\nimport { EPSLN, HALF_PI } from '../constants/values';\nimport sign from '../common/sign';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.ml0 = pj_mlfn(this.lat0, Math.sin(this.lat0), Math.cos(this.lat0), this.en);\n  }\n}\n\n/**\n    Transverse Mercator Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var con;\n  var x, y;\n  var sin_phi = Math.sin(lat);\n  var cos_phi = Math.cos(lat);\n\n  if (!this.es) {\n    var b = cos_phi * Math.sin(delta_lon);\n\n    if ((Math.abs(Math.abs(b) - 1)) < EPSLN) {\n      return (93);\n    } else {\n      x = 0.5 * this.a * this.k0 * Math.log((1 + b) / (1 - b)) + this.x0;\n      y = cos_phi * Math.cos(delta_lon) / Math.sqrt(1 - Math.pow(b, 2));\n      b = Math.abs(y);\n\n      if (b >= 1) {\n        if ((b - 1) > EPSLN) {\n          return (93);\n        } else {\n          y = 0;\n        }\n      } else {\n        y = Math.acos(y);\n      }\n\n      if (lat < 0) {\n        y = -y;\n      }\n\n      y = this.a * this.k0 * (y - this.lat0) + this.y0;\n    }\n  } else {\n    var al = cos_phi * delta_lon;\n    var als = Math.pow(al, 2);\n    var c = this.ep2 * Math.pow(cos_phi, 2);\n    var cs = Math.pow(c, 2);\n    var tq = Math.abs(cos_phi) > EPSLN ? Math.tan(lat) : 0;\n    var t = Math.pow(tq, 2);\n    var ts = Math.pow(t, 2);\n    con = 1 - this.es * Math.pow(sin_phi, 2);\n    al = al / Math.sqrt(con);\n    var ml = pj_mlfn(lat, sin_phi, cos_phi, this.en);\n\n    x = this.a * (this.k0 * al * (1\n      + als / 6 * (1 - t + c\n        + als / 20 * (5 - 18 * t + ts + 14 * c - 58 * t * c\n          + als / 42 * (61 + 179 * ts - ts * t - 479 * t)))))\n        + this.x0;\n\n    y = this.a * (this.k0 * (ml - this.ml0\n      + sin_phi * delta_lon * al / 2 * (1\n        + als / 12 * (5 - t + 9 * c + 4 * cs\n          + als / 30 * (61 + ts - 58 * t + 270 * c - 330 * t * c\n            + als / 56 * (1385 + 543 * ts - ts * t - 3111 * t))))))\n          + this.y0;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\n/**\n    Transverse Mercator Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var con, phi;\n  var lat, lon;\n  var x = (p.x - this.x0) * (1 / this.a);\n  var y = (p.y - this.y0) * (1 / this.a);\n\n  if (!this.es) {\n    var f = Math.exp(x / this.k0);\n    var g = 0.5 * (f - 1 / f);\n    var temp = this.lat0 + y / this.k0;\n    var h = Math.cos(temp);\n    con = Math.sqrt((1 - Math.pow(h, 2)) / (1 + Math.pow(g, 2)));\n    lat = Math.asin(con);\n\n    if (y < 0) {\n      lat = -lat;\n    }\n\n    if ((g === 0) && (h === 0)) {\n      lon = 0;\n    } else {\n      lon = adjust_lon(Math.atan2(g, h) + this.long0);\n    }\n  } else { // ellipsoidal form\n    con = this.ml0 + y / this.k0;\n    phi = pj_inv_mlfn(con, this.es, this.en);\n\n    if (Math.abs(phi) < HALF_PI) {\n      var sin_phi = Math.sin(phi);\n      var cos_phi = Math.cos(phi);\n      var tan_phi = Math.abs(cos_phi) > EPSLN ? Math.tan(phi) : 0;\n      var c = this.ep2 * Math.pow(cos_phi, 2);\n      var cs = Math.pow(c, 2);\n      var t = Math.pow(tan_phi, 2);\n      var ts = Math.pow(t, 2);\n      con = 1 - this.es * Math.pow(sin_phi, 2);\n      var d = x * Math.sqrt(con) / this.k0;\n      var ds = Math.pow(d, 2);\n      con = con * tan_phi;\n\n      lat = phi - (con * ds / (1 - this.es)) * 0.5 * (1\n        - ds / 12 * (5 + 3 * t - 9 * c * t + c - 4 * cs\n          - ds / 30 * (61 + 90 * t - 252 * c * t + 45 * ts + 46 * c\n            - ds / 56 * (1385 + 3633 * t + 4095 * ts + 1574 * ts * t))));\n\n      lon = adjust_lon(this.long0 + (d * (1\n        - ds / 6 * (1 + 2 * t + c\n          - ds / 20 * (5 + 28 * t + 24 * ts + 8 * c * t + 6 * c\n            - ds / 42 * (61 + 662 * t + 1320 * ts + 720 * ts * t)))) / cos_phi));\n    } else {\n      lat = HALF_PI * sign(y);\n      lon = 0;\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Fast_Transverse_Mercator', 'Fast Transverse Mercator'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r - 1 / r) / 2;\n  return r;\n}\n","export default function (x, y) {\n  x = Math.abs(x);\n  y = Math.abs(y);\n  var a = Math.max(x, y);\n  var b = Math.min(x, y) / (a ? a : 1);\n\n  return a * Math.sqrt(1 + Math.pow(b, 2));\n}\n","export default function (pp, B) {\n  var cos_2B = 2 * Math.cos(2 * B);\n  var i = pp.length - 1;\n  var h1 = pp[i];\n  var h2 = 0;\n  var h;\n\n  while (--i >= 0) {\n    h = -h2 + cos_2B * h1 + pp[i];\n    h2 = h1;\n    h1 = h;\n  }\n\n  return (B + h * Math.sin(2 * B));\n}\n","import sinh from './sinh';\nimport cosh from './cosh';\n\nexport default function (pp, arg_r, arg_i) {\n  var sin_arg_r = Math.sin(arg_r);\n  var cos_arg_r = Math.cos(arg_r);\n  var sinh_arg_i = sinh(arg_i);\n  var cosh_arg_i = cosh(arg_i);\n  var r = 2 * cos_arg_r * cosh_arg_i;\n  var i = -2 * sin_arg_r * sinh_arg_i;\n  var j = pp.length - 1;\n  var hr = pp[j];\n  var hi1 = 0;\n  var hr1 = 0;\n  var hi = 0;\n  var hr2;\n  var hi2;\n\n  while (--j >= 0) {\n    hr2 = hr1;\n    hi2 = hi1;\n    hr1 = hr;\n    hi1 = hi;\n    hr = -hr2 + r * hr1 - i * hi1 + pp[j];\n    hi = -hi2 + i * hr1 + r * hi1;\n  }\n\n  r = sin_arg_r * cosh_arg_i;\n  i = cos_arg_r * sinh_arg_i;\n\n  return [r * hr - i * hi, r * hi + i * hr];\n}\n","export default function (x) {\n  var r = Math.exp(x);\n  r = (r + 1 / r) / 2;\n  return r;\n}\n","// Heavily based on this etmerc projection implementation\n// https://github.com/mbloch/mapshaper-proj/blob/master/src/projections/etmerc.js\n\nimport tmerc from '../projections/tmerc';\nimport sinh from '../common/sinh';\nimport hypot from '../common/hypot';\nimport asinhy from '../common/asinhy';\nimport gatg from '../common/gatg';\nimport clens from '../common/clens';\nimport clens_cmplx from '../common/clens_cmplx';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {Array<number>} cbg\n * @property {Array<number>} cgb\n * @property {Array<number>} utg\n * @property {Array<number>} gtu\n * @property {number} Qn\n * @property {number} Zb\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.approx && (isNaN(this.es) || this.es <= 0)) {\n    throw new Error('Incorrect elliptical usage. Try using the +approx option in the proj string, or PROJECTION[\"Fast_Transverse_Mercator\"] in the WKT.');\n  }\n  if (this.approx) {\n    // When '+approx' is set, use tmerc instead\n    tmerc.init.apply(this);\n    this.forward = tmerc.forward;\n    this.inverse = tmerc.inverse;\n  }\n\n  this.x0 = this.x0 !== undefined ? this.x0 : 0;\n  this.y0 = this.y0 !== undefined ? this.y0 : 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n  this.lat0 = this.lat0 !== undefined ? this.lat0 : 0;\n\n  this.cgb = [];\n  this.cbg = [];\n  this.utg = [];\n  this.gtu = [];\n\n  var f = this.es / (1 + Math.sqrt(1 - this.es));\n  var n = f / (2 - f);\n  var np = n;\n\n  this.cgb[0] = n * (2 + n * (-2 / 3 + n * (-2 + n * (116 / 45 + n * (26 / 45 + n * (-2854 / 675))))));\n  this.cbg[0] = n * (-2 + n * (2 / 3 + n * (4 / 3 + n * (-82 / 45 + n * (32 / 45 + n * (4642 / 4725))))));\n\n  np = np * n;\n  this.cgb[1] = np * (7 / 3 + n * (-8 / 5 + n * (-227 / 45 + n * (2704 / 315 + n * (2323 / 945)))));\n  this.cbg[1] = np * (5 / 3 + n * (-16 / 15 + n * (-13 / 9 + n * (904 / 315 + n * (-1522 / 945)))));\n\n  np = np * n;\n  this.cgb[2] = np * (56 / 15 + n * (-136 / 35 + n * (-1262 / 105 + n * (73814 / 2835))));\n  this.cbg[2] = np * (-26 / 15 + n * (34 / 21 + n * (8 / 5 + n * (-12686 / 2835))));\n\n  np = np * n;\n  this.cgb[3] = np * (4279 / 630 + n * (-332 / 35 + n * (-399572 / 14175)));\n  this.cbg[3] = np * (1237 / 630 + n * (-12 / 5 + n * (-24832 / 14175)));\n\n  np = np * n;\n  this.cgb[4] = np * (4174 / 315 + n * (-144838 / 6237));\n  this.cbg[4] = np * (-734 / 315 + n * (109598 / 31185));\n\n  np = np * n;\n  this.cgb[5] = np * (601676 / 22275);\n  this.cbg[5] = np * (444337 / 155925);\n\n  np = Math.pow(n, 2);\n  this.Qn = this.k0 / (1 + n) * (1 + np * (1 / 4 + np * (1 / 64 + np / 256)));\n\n  this.utg[0] = n * (-0.5 + n * (2 / 3 + n * (-37 / 96 + n * (1 / 360 + n * (81 / 512 + n * (-96199 / 604800))))));\n  this.gtu[0] = n * (0.5 + n * (-2 / 3 + n * (5 / 16 + n * (41 / 180 + n * (-127 / 288 + n * (7891 / 37800))))));\n\n  this.utg[1] = np * (-1 / 48 + n * (-1 / 15 + n * (437 / 1440 + n * (-46 / 105 + n * (1118711 / 3870720)))));\n  this.gtu[1] = np * (13 / 48 + n * (-3 / 5 + n * (557 / 1440 + n * (281 / 630 + n * (-1983433 / 1935360)))));\n\n  np = np * n;\n  this.utg[2] = np * (-17 / 480 + n * (37 / 840 + n * (209 / 4480 + n * (-5569 / 90720))));\n  this.gtu[2] = np * (61 / 240 + n * (-103 / 140 + n * (15061 / 26880 + n * (167603 / 181440))));\n\n  np = np * n;\n  this.utg[3] = np * (-4397 / 161280 + n * (11 / 504 + n * (830251 / 7257600)));\n  this.gtu[3] = np * (49561 / 161280 + n * (-179 / 168 + n * (6601661 / 7257600)));\n\n  np = np * n;\n  this.utg[4] = np * (-4583 / 161280 + n * (108847 / 3991680));\n  this.gtu[4] = np * (34729 / 80640 + n * (-3418889 / 1995840));\n\n  np = np * n;\n  this.utg[5] = np * (-20648693 / 638668800);\n  this.gtu[5] = np * (212378941 / 319334400);\n\n  var Z = gatg(this.cbg, this.lat0);\n  this.Zb = -this.Qn * (Z + clens(this.gtu, 2 * Z));\n}\n\nexport function forward(p) {\n  var Ce = adjust_lon(p.x - this.long0);\n  var Cn = p.y;\n\n  Cn = gatg(this.cbg, Cn);\n  var sin_Cn = Math.sin(Cn);\n  var cos_Cn = Math.cos(Cn);\n  var sin_Ce = Math.sin(Ce);\n  var cos_Ce = Math.cos(Ce);\n\n  Cn = Math.atan2(sin_Cn, cos_Ce * cos_Cn);\n  Ce = Math.atan2(sin_Ce * cos_Cn, hypot(sin_Cn, cos_Cn * cos_Ce));\n  Ce = asinhy(Math.tan(Ce));\n\n  var tmp = clens_cmplx(this.gtu, 2 * Cn, 2 * Ce);\n\n  Cn = Cn + tmp[0];\n  Ce = Ce + tmp[1];\n\n  var x;\n  var y;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    x = this.a * (this.Qn * Ce) + this.x0;\n    y = this.a * (this.Qn * Cn + this.Zb) + this.y0;\n  } else {\n    x = Infinity;\n    y = Infinity;\n  }\n\n  p.x = x;\n  p.y = y;\n\n  return p;\n}\n\nexport function inverse(p) {\n  var Ce = (p.x - this.x0) * (1 / this.a);\n  var Cn = (p.y - this.y0) * (1 / this.a);\n\n  Cn = (Cn - this.Zb) / this.Qn;\n  Ce = Ce / this.Qn;\n\n  var lon;\n  var lat;\n\n  if (Math.abs(Ce) <= 2.623395162778) {\n    var tmp = clens_cmplx(this.utg, 2 * Cn, 2 * Ce);\n\n    Cn = Cn + tmp[0];\n    Ce = Ce + tmp[1];\n    Ce = Math.atan(sinh(Ce));\n\n    var sin_Cn = Math.sin(Cn);\n    var cos_Cn = Math.cos(Cn);\n    var sin_Ce = Math.sin(Ce);\n    var cos_Ce = Math.cos(Ce);\n\n    Cn = Math.atan2(sin_Cn * cos_Ce, hypot(sin_Ce, cos_Ce * cos_Cn));\n    Ce = Math.atan2(sin_Ce, cos_Ce * cos_Cn);\n\n    lon = adjust_lon(Ce + this.long0);\n    lat = gatg(this.cgb, Cn);\n  } else {\n    lon = Infinity;\n    lat = Infinity;\n  }\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['Extended_Transverse_Mercator', 'Extended Transverse Mercator', 'etmerc', 'Transverse_Mercator', 'Transverse Mercator', 'Gauss Kruger', 'Gauss_Kruger', 'tmerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (pp, arg_r) {\n  var r = 2 * Math.cos(arg_r);\n  var i = pp.length - 1;\n  var hr1 = pp[i];\n  var hr2 = 0;\n  var hr;\n\n  while (--i >= 0) {\n    hr = -hr2 + r * hr1 + pp[i];\n    hr2 = hr1;\n    hr1 = hr;\n  }\n\n  return Math.sin(arg_r) * hr;\n}\n","import hypot from './hypot';\nimport log1py from './log1py';\n\nexport default function (x) {\n  var y = Math.abs(x);\n  y = log1py(y * (1 + y / (hypot(1, y) + 1)));\n\n  return x < 0 ? -y : y;\n}\n","export default function (x) {\n  var y = 1 + x;\n  var z = y - 1;\n\n  return z === 0 ? x : x * Math.log(y) / z;\n}\n","import adjust_zone from '../common/adjust_zone';\nimport etmerc from './etmerc';\nexport var dependsOn = 'etmerc';\nimport { D2R } from '../constants/values';\n\n/** @this {import('../defs.js').ProjectionDefinition} */\nexport function init() {\n  var zone = adjust_zone(this.zone, this.long0);\n  if (zone === undefined) {\n    throw new Error('unknown utm zone');\n  }\n  this.lat0 = 0;\n  this.long0 = ((6 * Math.abs(zone)) - 183) * D2R;\n  this.x0 = 500000;\n  this.y0 = this.utmSouth ? 10000000 : 0;\n  this.k0 = 0.9996;\n\n  etmerc.init.apply(this);\n  this.forward = etmerc.forward;\n  this.inverse = etmerc.inverse;\n}\n\nexport var names = ['Universal Transverse Mercator System', 'utm'];\nexport default {\n  init: init,\n  names: names,\n  dependsOn: dependsOn\n};\n","import adjust_lon from './adjust_lon';\n\nexport default function (zone, lon) {\n  if (zone === undefined) {\n    zone = Math.floor((adjust_lon(lon) + Math.PI) * 30 / Math.PI) + 1;\n\n    if (zone < 0) {\n      return 0;\n    } else if (zone > 60) {\n      return 60;\n    }\n  }\n  return zone;\n}\n","export default function (esinp, exp) {\n  return (Math.pow((1 - esinp) / (1 + esinp), exp));\n}\n","import srat from '../common/srat';\nvar MAX_ITER = 20;\nimport { HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} rc\n * @property {number} C\n * @property {number} phic0\n * @property {number} ratexp\n * @property {number} K\n * @property {number} e\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var sphi = Math.sin(this.lat0);\n  var cphi = Math.cos(this.lat0);\n  cphi *= cphi;\n  this.rc = Math.sqrt(1 - this.es) / (1 - this.es * sphi * sphi);\n  this.C = Math.sqrt(1 + this.es * cphi * cphi / (1 - this.es));\n  this.phic0 = Math.asin(sphi / this.C);\n  this.ratexp = 0.5 * this.C * this.e;\n  this.K = Math.tan(0.5 * this.phic0 + FORTPI) / (Math.pow(Math.tan(0.5 * this.lat0 + FORTPI), this.C) * srat(this.e * sphi, this.ratexp));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  p.y = 2 * Math.atan(this.K * Math.pow(Math.tan(0.5 * lat + FORTPI), this.C) * srat(this.e * Math.sin(lat), this.ratexp)) - HALF_PI;\n  p.x = this.C * lon;\n  return p;\n}\n\nexport function inverse(p) {\n  var DEL_TOL = 1e-14;\n  var lon = p.x / this.C;\n  var lat = p.y;\n  var num = Math.pow(Math.tan(0.5 * lat + FORTPI) / this.K, 1 / this.C);\n  for (var i = MAX_ITER; i > 0; --i) {\n    lat = 2 * Math.atan(num * srat(this.e * Math.sin(p.y), -0.5 * this.e)) - HALF_PI;\n    if (Math.abs(lat - p.y) < DEL_TOL) {\n      break;\n    }\n    p.y = lat;\n  }\n  /* convergence failed */\n  if (!i) {\n    return null;\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gauss'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import gauss from './gauss';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sinc0\n * @property {number} cosc0\n * @property {number} R2\n * @property {number} rc\n * @property {number} phic0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  gauss.init.apply(this);\n  if (!this.rc) {\n    return;\n  }\n  this.sinc0 = Math.sin(this.phic0);\n  this.cosc0 = Math.cos(this.phic0);\n  this.R2 = 2 * this.rc;\n  if (!this.title) {\n    this.title = 'Oblique Stereographic Alternative';\n  }\n}\n\nexport function forward(p) {\n  var sinc, cosc, cosl, k;\n  p.x = adjust_lon(p.x - this.long0);\n  gauss.forward.apply(this, [p]);\n  sinc = Math.sin(p.y);\n  cosc = Math.cos(p.y);\n  cosl = Math.cos(p.x);\n  k = this.k0 * this.R2 / (1 + this.sinc0 * sinc + this.cosc0 * cosc * cosl);\n  p.x = k * cosc * Math.sin(p.x);\n  p.y = k * (this.cosc0 * sinc - this.sinc0 * cosc * cosl);\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  var sinc, cosc, lon, lat, rho;\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n  if ((rho = hypot(p.x, p.y))) {\n    var c = 2 * Math.atan2(rho, this.R2);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n    lat = Math.asin(cosc * this.sinc0 + p.y * sinc * this.cosc0 / rho);\n    lon = Math.atan2(p.x * sinc, rho * this.cosc0 * cosc - p.y * this.sinc0 * sinc);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  gauss.inverse.apply(this, [p]);\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['Stereographic_North_Pole', 'Oblique_Stereographic', 'sterea', 'Oblique Stereographic Alternative', 'Double_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { EPSLN, HALF_PI } from '../constants/values';\n\nimport sign from '../common/sign';\nimport msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport phi2z from '../common/phi2z';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} coslat0\n * @property {number} sinlat0\n * @property {number} ms1\n * @property {number} X0\n * @property {number} cosX0\n * @property {number} sinX0\n * @property {number} con\n * @property {number} cons\n * @property {number} e\n */\n\nexport function ssfn_(phit, sinphi, eccen) {\n  sinphi *= eccen;\n  return (Math.tan(0.5 * (HALF_PI + phit)) * Math.pow((1 - sinphi) / (1 + sinphi), 0.5 * eccen));\n}\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // setting default parameters\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n\n  this.coslat0 = Math.cos(this.lat0);\n  this.sinlat0 = Math.sin(this.lat0);\n  if (this.sphere) {\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN) {\n      this.k0 = 0.5 * (1 + sign(this.lat0) * Math.sin(this.lat_ts));\n    }\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (this.lat0 > 0) {\n        // North pole\n        // trace('stere:north pole');\n        this.con = 1;\n      } else {\n        // South pole\n        // trace('stere:south pole');\n        this.con = -1;\n      }\n    }\n    this.cons = Math.sqrt(Math.pow(1 + this.e, 1 + this.e) * Math.pow(1 - this.e, 1 - this.e));\n    if (this.k0 === 1 && !isNaN(this.lat_ts) && Math.abs(this.coslat0) <= EPSLN && Math.abs(Math.cos(this.lat_ts)) > EPSLN) {\n      // When k0 is 1 (default value) and lat_ts is a vaild number and lat0 is at a pole and lat_ts is not at a pole\n      // Recalculate k0 using formula 21-35 from p161 of Snyder, 1987\n      this.k0 = 0.5 * this.cons * msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts)) / tsfnz(this.e, this.con * this.lat_ts, this.con * Math.sin(this.lat_ts));\n    }\n    this.ms1 = msfnz(this.e, this.sinlat0, this.coslat0);\n    this.X0 = 2 * Math.atan(ssfn_(this.lat0, this.sinlat0, this.e)) - HALF_PI;\n    this.cosX0 = Math.cos(this.X0);\n    this.sinX0 = Math.sin(this.X0);\n  }\n}\n\n// Stereographic forward equations--mapping lat,long to x,y\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinlat = Math.sin(lat);\n  var coslat = Math.cos(lat);\n  var A, X, sinX, cosX, ts, rh;\n  var dlon = adjust_lon(lon - this.long0);\n\n  if (Math.abs(Math.abs(lon - this.long0) - Math.PI) <= EPSLN && Math.abs(lat + this.lat0) <= EPSLN) {\n    // case of the origine point\n    // trace('stere:this is the origin point');\n    p.x = NaN;\n    p.y = NaN;\n    return p;\n  }\n  if (this.sphere) {\n    // trace('stere:sphere case');\n    A = 2 * this.k0 / (1 + this.sinlat0 * sinlat + this.coslat0 * coslat * Math.cos(dlon));\n    p.x = this.a * A * coslat * Math.sin(dlon) + this.x0;\n    p.y = this.a * A * (this.coslat0 * sinlat - this.sinlat0 * coslat * Math.cos(dlon)) + this.y0;\n    return p;\n  } else {\n    X = 2 * Math.atan(ssfn_(lat, sinlat, this.e)) - HALF_PI;\n    cosX = Math.cos(X);\n    sinX = Math.sin(X);\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      ts = tsfnz(this.e, lat * this.con, this.con * sinlat);\n      rh = 2 * this.a * this.k0 * ts / this.cons;\n      p.x = this.x0 + rh * Math.sin(lon - this.long0);\n      p.y = this.y0 - this.con * rh * Math.cos(lon - this.long0);\n      // trace(p.toString());\n      return p;\n    } else if (Math.abs(this.sinlat0) < EPSLN) {\n      // Eq\n      // trace('stere:equateur');\n      A = 2 * this.a * this.k0 / (1 + cosX * Math.cos(dlon));\n      p.y = A * sinX;\n    } else {\n      // other case\n      // trace('stere:normal case');\n      A = 2 * this.a * this.k0 * this.ms1 / (this.cosX0 * (1 + this.sinX0 * sinX + this.cosX0 * cosX * Math.cos(dlon)));\n      p.y = A * (this.cosX0 * sinX - this.sinX0 * cosX * Math.cos(dlon)) + this.y0;\n    }\n    p.x = A * cosX * Math.sin(dlon) + this.x0;\n  }\n  // trace(p.toString());\n  return p;\n}\n\n//* Stereographic inverse equations--mapping x,y to lat/long\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat, ts, ce, Chi;\n  var rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  if (this.sphere) {\n    var c = 2 * Math.atan(rh / (2 * this.a * this.k0));\n    lon = this.long0;\n    lat = this.lat0;\n    if (rh <= EPSLN) {\n      p.x = lon;\n      p.y = lat;\n      return p;\n    }\n    lat = Math.asin(Math.cos(c) * this.sinlat0 + p.y * Math.sin(c) * this.coslat0 / rh);\n    if (Math.abs(this.coslat0) < EPSLN) {\n      if (this.lat0 > 0) {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      }\n    } else {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(c), rh * this.coslat0 * Math.cos(c) - p.y * this.sinlat0 * Math.sin(c)));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    if (Math.abs(this.coslat0) <= EPSLN) {\n      if (rh <= EPSLN) {\n        lat = this.lat0;\n        lon = this.long0;\n        p.x = lon;\n        p.y = lat;\n        // trace(p.toString());\n        return p;\n      }\n      p.x *= this.con;\n      p.y *= this.con;\n      ts = rh * this.cons / (2 * this.a * this.k0);\n      lat = this.con * phi2z(this.e, ts);\n      lon = this.con * adjust_lon(this.con * this.long0 + Math.atan2(p.x, -1 * p.y));\n    } else {\n      ce = 2 * Math.atan(rh * this.cosX0 / (2 * this.a * this.k0 * this.ms1));\n      lon = this.long0;\n      if (rh <= EPSLN) {\n        Chi = this.X0;\n      } else {\n        Chi = Math.asin(Math.cos(ce) * this.sinX0 + p.y * Math.sin(ce) * this.cosX0 / rh);\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * Math.sin(ce), rh * this.cosX0 * Math.cos(ce) - p.y * this.sinX0 * Math.sin(ce)));\n      }\n      lat = -1 * phi2z(this.e, Math.tan(0.5 * (HALF_PI + Chi)));\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n\n  // trace(p.toString());\n  return p;\n}\n\nexport var names = ['stere', 'Stereographic_South_Pole', 'Polar_Stereographic_variant_A', 'Polar_Stereographic_variant_B', 'Polar_Stereographic'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  ssfn_: ssfn_\n};\n","/*\n  references:\n    Formules et constantes pour le Calcul pour la\n    projection cylindrique conforme à axe oblique et pour la transformation entre\n    des systèmes de référence.\n    http://www.swisstopo.admin.ch/internet/swisstopo/fr/home/topics/survey/sys/refsys/switzerland.parsysrelated1.31216.downloadList.77004.DownloadFile.tmp/swissprojectionfr.pdf\n  */\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} lambda0\n * @property {number} e\n * @property {number} R\n * @property {number} b0\n * @property {number} K\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var phy0 = this.lat0;\n  this.lambda0 = this.long0;\n  var sinPhy0 = Math.sin(phy0);\n  var semiMajorAxis = this.a;\n  var invF = this.rf;\n  var flattening = 1 / invF;\n  var e2 = 2 * flattening - Math.pow(flattening, 2);\n  var e = this.e = Math.sqrt(e2);\n  this.R = this.k0 * semiMajorAxis * Math.sqrt(1 - e2) / (1 - e2 * Math.pow(sinPhy0, 2));\n  this.alpha = Math.sqrt(1 + e2 / (1 - e2) * Math.pow(Math.cos(phy0), 4));\n  this.b0 = Math.asin(sinPhy0 / this.alpha);\n  var k1 = Math.log(Math.tan(Math.PI / 4 + this.b0 / 2));\n  var k2 = Math.log(Math.tan(Math.PI / 4 + phy0 / 2));\n  var k3 = Math.log((1 + e * sinPhy0) / (1 - e * sinPhy0));\n  this.K = k1 - this.alpha * k2 + this.alpha * e / 2 * k3;\n}\n\nexport function forward(p) {\n  var Sa1 = Math.log(Math.tan(Math.PI / 4 - p.y / 2));\n  var Sa2 = this.e / 2 * Math.log((1 + this.e * Math.sin(p.y)) / (1 - this.e * Math.sin(p.y)));\n  var S = -this.alpha * (Sa1 + Sa2) + this.K;\n\n  // spheric latitude\n  var b = 2 * (Math.atan(Math.exp(S)) - Math.PI / 4);\n\n  // spheric longitude\n  var I = this.alpha * (p.x - this.lambda0);\n\n  // psoeudo equatorial rotation\n  var rotI = Math.atan(Math.sin(I) / (Math.sin(this.b0) * Math.tan(b) + Math.cos(this.b0) * Math.cos(I)));\n\n  var rotB = Math.asin(Math.cos(this.b0) * Math.sin(b) - Math.sin(this.b0) * Math.cos(b) * Math.cos(I));\n\n  p.y = this.R / 2 * Math.log((1 + Math.sin(rotB)) / (1 - Math.sin(rotB))) + this.y0;\n  p.x = this.R * rotI + this.x0;\n  return p;\n}\n\nexport function inverse(p) {\n  var Y = p.x - this.x0;\n  var X = p.y - this.y0;\n\n  var rotI = Y / this.R;\n  var rotB = 2 * (Math.atan(Math.exp(X / this.R)) - Math.PI / 4);\n\n  var b = Math.asin(Math.cos(this.b0) * Math.sin(rotB) + Math.sin(this.b0) * Math.cos(rotB) * Math.cos(rotI));\n  var I = Math.atan(Math.sin(rotI) / (Math.cos(this.b0) * Math.cos(rotI) - Math.sin(this.b0) * Math.tan(rotB)));\n\n  var lambda = this.lambda0 + I / this.alpha;\n\n  var S = 0;\n  var phy = b;\n  var prevPhy = -1000;\n  var iteration = 0;\n  while (Math.abs(phy - prevPhy) > 0.0000001) {\n    if (++iteration > 20) {\n      // ...reportError(\"omercFwdInfinity\");\n      return;\n    }\n    // S = Math.log(Math.tan(Math.PI / 4 + phy / 2));\n    S = 1 / this.alpha * (Math.log(Math.tan(Math.PI / 4 + b / 2)) - this.K) + this.e * Math.log(Math.tan(Math.PI / 4 + Math.asin(this.e * Math.sin(phy)) / 2));\n    prevPhy = phy;\n    phy = 2 * Math.atan(Math.exp(S)) - Math.PI / 2;\n  }\n\n  p.x = lambda;\n  p.y = phy;\n  return p;\n}\n\nexport var names = ['somerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import tsfnz from '../common/tsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { EPSLN, HALF_PI, TWO_PI, FORTPI } from '../constants/values';\nimport { getNormalizedProjName } from '../projections';\n\n/**\n * @typedef {Object} LocalThis\n * @property {boolean} no_off\n * @property {boolean} no_rot\n * @property {number} rectified_grid_angle\n * @property {number} es\n * @property {number} A\n * @property {number} B\n * @property {number} E\n * @property {number} e\n * @property {number} lam0\n * @property {number} singam\n * @property {number} cosgam\n * @property {number} sinrot\n * @property {number} cosrot\n * @property {number} rB\n * @property {number} ArB\n * @property {number} BrA\n * @property {number} u_0\n * @property {number} v_pole_n\n * @property {number} v_pole_s\n */\n\nvar TOL = 1e-7;\n\nfunction isTypeA(P) {\n  var typeAProjections = ['Hotine_Oblique_Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin'];\n  var projectionName = typeof P.projName === 'object' ? Object.keys(P.projName)[0] : P.projName;\n\n  return 'no_uoff' in P || 'no_off' in P || typeAProjections.indexOf(projectionName) !== -1 || typeAProjections.indexOf(getNormalizedProjName(projectionName)) !== -1;\n}\n\n/**\n * Initialize the Oblique Mercator  projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var con, com, cosph0, D, F, H, L, sinph0, p, J, gamma = 0,\n    gamma0, lamc = 0, lam1 = 0, lam2 = 0, phi1 = 0, phi2 = 0, alpha_c = 0;\n\n  // only Type A uses the no_off or no_uoff property\n  // https://github.com/OSGeo/proj.4/issues/104\n  this.no_off = isTypeA(this);\n  this.no_rot = 'no_rot' in this;\n\n  var alp = false;\n  if ('alpha' in this) {\n    alp = true;\n  }\n\n  var gam = false;\n  if ('rectified_grid_angle' in this) {\n    gam = true;\n  }\n\n  if (alp) {\n    alpha_c = this.alpha;\n  }\n\n  if (gam) {\n    gamma = this.rectified_grid_angle;\n  }\n\n  if (alp || gam) {\n    lamc = this.longc;\n  } else {\n    lam1 = this.long1;\n    phi1 = this.lat1;\n    lam2 = this.long2;\n    phi2 = this.lat2;\n\n    if (Math.abs(phi1 - phi2) <= TOL || (con = Math.abs(phi1)) <= TOL\n      || Math.abs(con - HALF_PI) <= TOL || Math.abs(Math.abs(this.lat0) - HALF_PI) <= TOL\n      || Math.abs(Math.abs(phi2) - HALF_PI) <= TOL) {\n      throw new Error();\n    }\n  }\n\n  var one_es = 1.0 - this.es;\n  com = Math.sqrt(one_es);\n\n  if (Math.abs(this.lat0) > EPSLN) {\n    sinph0 = Math.sin(this.lat0);\n    cosph0 = Math.cos(this.lat0);\n    con = 1 - this.es * sinph0 * sinph0;\n    this.B = cosph0 * cosph0;\n    this.B = Math.sqrt(1 + this.es * this.B * this.B / one_es);\n    this.A = this.B * this.k0 * com / con;\n    D = this.B * com / (cosph0 * Math.sqrt(con));\n    F = D * D - 1;\n\n    if (F <= 0) {\n      F = 0;\n    } else {\n      F = Math.sqrt(F);\n      if (this.lat0 < 0) {\n        F = -F;\n      }\n    }\n\n    this.E = F += D;\n    this.E *= Math.pow(tsfnz(this.e, this.lat0, sinph0), this.B);\n  } else {\n    this.B = 1 / com;\n    this.A = this.k0;\n    this.E = D = F = 1;\n  }\n\n  if (alp || gam) {\n    if (alp) {\n      gamma0 = Math.asin(Math.sin(alpha_c) / D);\n      if (!gam) {\n        gamma = alpha_c;\n      }\n    } else {\n      gamma0 = gamma;\n      alpha_c = Math.asin(D * Math.sin(gamma0));\n    }\n    this.lam0 = lamc - Math.asin(0.5 * (F - 1 / F) * Math.tan(gamma0)) / this.B;\n  } else {\n    H = Math.pow(tsfnz(this.e, phi1, Math.sin(phi1)), this.B);\n    L = Math.pow(tsfnz(this.e, phi2, Math.sin(phi2)), this.B);\n    F = this.E / H;\n    p = (L - H) / (L + H);\n    J = this.E * this.E;\n    J = (J - L * H) / (J + L * H);\n    con = lam1 - lam2;\n\n    if (con < -Math.PI) {\n      lam2 -= TWO_PI;\n    } else if (con > Math.PI) {\n      lam2 += TWO_PI;\n    }\n\n    this.lam0 = adjust_lon(0.5 * (lam1 + lam2) - Math.atan(J * Math.tan(0.5 * this.B * (lam1 - lam2)) / p) / this.B);\n    gamma0 = Math.atan(2 * Math.sin(this.B * adjust_lon(lam1 - this.lam0)) / (F - 1 / F));\n    gamma = alpha_c = Math.asin(D * Math.sin(gamma0));\n  }\n\n  this.singam = Math.sin(gamma0);\n  this.cosgam = Math.cos(gamma0);\n  this.sinrot = Math.sin(gamma);\n  this.cosrot = Math.cos(gamma);\n\n  this.rB = 1 / this.B;\n  this.ArB = this.A * this.rB;\n  this.BrA = 1 / this.ArB;\n\n  if (this.no_off) {\n    this.u_0 = 0;\n  } else {\n    this.u_0 = Math.abs(this.ArB * Math.atan(Math.sqrt(D * D - 1) / Math.cos(alpha_c)));\n\n    if (this.lat0 < 0) {\n      this.u_0 = -this.u_0;\n    }\n  }\n\n  F = 0.5 * gamma0;\n  this.v_pole_n = this.ArB * Math.log(Math.tan(FORTPI - F));\n  this.v_pole_s = this.ArB * Math.log(Math.tan(FORTPI + F));\n}\n\n/* Oblique Mercator forward equations--mapping lat,long to x,y\n    ---------------------------------------------------------- */\nexport function forward(p) {\n  var coords = {};\n  var S, T, U, V, W, temp, u, v;\n  p.x = p.x - this.lam0;\n\n  if (Math.abs(Math.abs(p.y) - HALF_PI) > EPSLN) {\n    W = this.E / Math.pow(tsfnz(this.e, p.y, Math.sin(p.y)), this.B);\n\n    temp = 1 / W;\n    S = 0.5 * (W - temp);\n    T = 0.5 * (W + temp);\n    V = Math.sin(this.B * p.x);\n    U = (S * this.singam - V * this.cosgam) / T;\n\n    if (Math.abs(Math.abs(U) - 1.0) < EPSLN) {\n      throw new Error();\n    }\n\n    v = 0.5 * this.ArB * Math.log((1 - U) / (1 + U));\n    temp = Math.cos(this.B * p.x);\n\n    if (Math.abs(temp) < TOL) {\n      u = this.A * p.x;\n    } else {\n      u = this.ArB * Math.atan2((S * this.cosgam + V * this.singam), temp);\n    }\n  } else {\n    v = p.y > 0 ? this.v_pole_n : this.v_pole_s;\n    u = this.ArB * p.y;\n  }\n\n  if (this.no_rot) {\n    coords.x = u;\n    coords.y = v;\n  } else {\n    u -= this.u_0;\n    coords.x = v * this.cosrot + u * this.sinrot;\n    coords.y = u * this.cosrot - v * this.sinrot;\n  }\n\n  coords.x = (this.a * coords.x + this.x0);\n  coords.y = (this.a * coords.y + this.y0);\n\n  return coords;\n}\n\nexport function inverse(p) {\n  var u, v, Qp, Sp, Tp, Vp, Up;\n  var coords = {};\n\n  p.x = (p.x - this.x0) * (1.0 / this.a);\n  p.y = (p.y - this.y0) * (1.0 / this.a);\n\n  if (this.no_rot) {\n    v = p.y;\n    u = p.x;\n  } else {\n    v = p.x * this.cosrot - p.y * this.sinrot;\n    u = p.y * this.cosrot + p.x * this.sinrot + this.u_0;\n  }\n\n  Qp = Math.exp(-this.BrA * v);\n  Sp = 0.5 * (Qp - 1 / Qp);\n  Tp = 0.5 * (Qp + 1 / Qp);\n  Vp = Math.sin(this.BrA * u);\n  Up = (Vp * this.cosgam + Sp * this.singam) / Tp;\n\n  if (Math.abs(Math.abs(Up) - 1) < EPSLN) {\n    coords.x = 0;\n    coords.y = Up < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    coords.y = this.E / Math.sqrt((1 + Up) / (1 - Up));\n    coords.y = phi2z(this.e, Math.pow(coords.y, 1 / this.B));\n\n    if (coords.y === Infinity) {\n      throw new Error();\n    }\n\n    coords.x = -this.rB * Math.atan2((Sp * this.cosgam - Vp * this.singam), Math.cos(this.BrA * u));\n  }\n\n  coords.x += this.lam0;\n\n  return coords;\n}\n\nexport var names = ['Hotine_Oblique_Mercator', 'Hotine Oblique Mercator', 'Hotine_Oblique_Mercator_variant_A', 'Hotine_Oblique_Mercator_Variant_B', 'Hotine_Oblique_Mercator_Azimuth_Natural_Origin', 'Hotine_Oblique_Mercator_Two_Point_Natural_Origin', 'Hotine_Oblique_Mercator_Azimuth_Center', 'Oblique_Mercator', 'omerc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import msfnz from '../common/msfnz';\nimport tsfnz from '../common/tsfnz';\nimport sign from '../common/sign';\nimport adjust_lon from '../common/adjust_lon';\nimport phi2z from '../common/phi2z';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n * @property {number} ns\n * @property {number} f0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double lat0;                    /* the reference latitude               */\n  // double long0;                   /* the reference longitude              */\n  // double lat1;                    /* first standard parallel              */\n  // double lat2;                    /* second standard parallel             */\n  // double r_maj;                   /* major axis                           */\n  // double r_min;                   /* minor axis                           */\n  // double false_east;              /* x offset in meters                   */\n  // double false_north;             /* y offset in meters                   */\n\n  // the above value can be set with proj4.defs\n  // example: proj4.defs(\"EPSG:2154\",\"+proj=lcc +lat_1=49 +lat_2=44 +lat_0=46.5 +lon_0=3 +x_0=700000 +y_0=6600000 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n\n  if (!this.lat2) {\n    this.lat2 = this.lat1;\n  } // if lat2 is not defined\n  if (!this.k0) {\n    this.k0 = 1;\n  }\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n\n  var temp = this.b / this.a;\n  this.e = Math.sqrt(1 - temp * temp);\n\n  var sin1 = Math.sin(this.lat1);\n  var cos1 = Math.cos(this.lat1);\n  var ms1 = msfnz(this.e, sin1, cos1);\n  var ts1 = tsfnz(this.e, this.lat1, sin1);\n\n  var sin2 = Math.sin(this.lat2);\n  var cos2 = Math.cos(this.lat2);\n  var ms2 = msfnz(this.e, sin2, cos2);\n  var ts2 = tsfnz(this.e, this.lat2, sin2);\n\n  var ts0 = Math.abs(Math.abs(this.lat0) - HALF_PI) < EPSLN\n    ? 0 // Handle poles by setting ts0 to 0\n    : tsfnz(this.e, this.lat0, Math.sin(this.lat0));\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns = Math.log(ms1 / ms2) / Math.log(ts1 / ts2);\n  } else {\n    this.ns = sin1;\n  }\n  if (isNaN(this.ns)) {\n    this.ns = sin1;\n  }\n  this.f0 = ms1 / (this.ns * Math.pow(ts1, this.ns));\n  this.rh = this.a * this.f0 * Math.pow(ts0, this.ns);\n  if (!this.title) {\n    this.title = 'Lambert Conformal Conic';\n  }\n}\n\n// Lambert Conformal conic forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  // singular cases :\n  if (Math.abs(2 * Math.abs(lat) - Math.PI) <= EPSLN) {\n    lat = sign(lat) * (HALF_PI - 2 * EPSLN);\n  }\n\n  var con = Math.abs(Math.abs(lat) - HALF_PI);\n  var ts, rh1;\n  if (con > EPSLN) {\n    ts = tsfnz(this.e, lat, Math.sin(lat));\n    rh1 = this.a * this.f0 * Math.pow(ts, this.ns);\n  } else {\n    con = lat * this.ns;\n    if (con <= 0) {\n      return null;\n    }\n    rh1 = 0;\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  p.x = this.k0 * (rh1 * Math.sin(theta)) + this.x0;\n  p.y = this.k0 * (this.rh - rh1 * Math.cos(theta)) + this.y0;\n\n  return p;\n}\n\n// Lambert Conformal Conic inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var rh1, con, ts;\n  var lat, lon;\n  var x = (p.x - this.x0) / this.k0;\n  var y = (this.rh - (p.y - this.y0) / this.k0);\n  if (this.ns > 0) {\n    rh1 = Math.sqrt(x * x + y * y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(x * x + y * y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2((con * x), (con * y));\n  }\n  if ((rh1 !== 0) || (this.ns > 0)) {\n    con = 1 / this.ns;\n    ts = Math.pow((rh1 / (this.a * this.f0)), con);\n    lat = phi2z(this.e, ts);\n    if (lat === -9999) {\n      return null;\n    }\n  } else {\n    lat = -HALF_PI;\n  }\n  lon = adjust_lon(theta / this.ns + this.long0);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = [\n  'Lambert Tangential Conformal Conic Projection',\n  'Lambert_Conformal_Conic',\n  'Lambert_Conformal_Conic_1SP',\n  'Lambert_Conformal_Conic_2SP',\n  'lcc',\n  'Lambert Conic Conformal (1SP)',\n  'Lambert Conic Conformal (2SP)'\n];\n\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nexport function init() {\n  this.a = 6377397.155;\n  this.es = 0.006674372230614;\n  this.e = Math.sqrt(this.es);\n  if (!this.lat0) {\n    this.lat0 = 0.863937979737193;\n  }\n  if (!this.long0) {\n    this.long0 = 0.7417649320975901 - 0.308341501185665;\n  }\n  /* if scale not set default to 0.9999 */\n  if (!this.k0) {\n    this.k0 = 0.9999;\n  }\n  this.s45 = 0.785398163397448; /* 45 */\n  this.s90 = 2 * this.s45;\n  this.fi0 = this.lat0;\n  this.e2 = this.es;\n  this.e = Math.sqrt(this.e2);\n  this.alfa = Math.sqrt(1 + (this.e2 * Math.pow(Math.cos(this.fi0), 4)) / (1 - this.e2));\n  this.uq = 1.04216856380474;\n  this.u0 = Math.asin(Math.sin(this.fi0) / this.alfa);\n  this.g = Math.pow((1 + this.e * Math.sin(this.fi0)) / (1 - this.e * Math.sin(this.fi0)), this.alfa * this.e / 2);\n  this.k = Math.tan(this.u0 / 2 + this.s45) / Math.pow(Math.tan(this.fi0 / 2 + this.s45), this.alfa) * this.g;\n  this.k1 = this.k0;\n  this.n0 = this.a * Math.sqrt(1 - this.e2) / (1 - this.e2 * Math.pow(Math.sin(this.fi0), 2));\n  this.s0 = 1.37008346281555;\n  this.n = Math.sin(this.s0);\n  this.ro0 = this.k1 * this.n0 / Math.tan(this.s0);\n  this.ad = this.s90 - this.uq;\n}\n\n/* ellipsoid */\n/* calculate xy from lat/lon */\n/* Constants, identical to inverse transform function */\nexport function forward(p) {\n  var gfi, u, deltav, s, d, eps, ro;\n  var lon = p.x;\n  var lat = p.y;\n  var delta_lon = adjust_lon(lon - this.long0);\n  /* Transformation */\n  gfi = Math.pow(((1 + this.e * Math.sin(lat)) / (1 - this.e * Math.sin(lat))), (this.alfa * this.e / 2));\n  u = 2 * (Math.atan(this.k * Math.pow(Math.tan(lat / 2 + this.s45), this.alfa) / gfi) - this.s45);\n  deltav = -delta_lon * this.alfa;\n  s = Math.asin(Math.cos(this.ad) * Math.sin(u) + Math.sin(this.ad) * Math.cos(u) * Math.cos(deltav));\n  d = Math.asin(Math.cos(u) * Math.sin(deltav) / Math.cos(s));\n  eps = this.n * d;\n  ro = this.ro0 * Math.pow(Math.tan(this.s0 / 2 + this.s45), this.n) / Math.pow(Math.tan(s / 2 + this.s45), this.n);\n  p.y = ro * Math.cos(eps) / 1;\n  p.x = ro * Math.sin(eps) / 1;\n\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  return (p);\n}\n\n/* calculate lat/lon from xy */\nexport function inverse(p) {\n  var u, deltav, s, d, eps, ro, fi1;\n  var ok;\n\n  /* Transformation */\n  /* revert y, x */\n  var tmp = p.x;\n  p.x = p.y;\n  p.y = tmp;\n  if (!this.czech) {\n    p.y *= -1;\n    p.x *= -1;\n  }\n  ro = Math.sqrt(p.x * p.x + p.y * p.y);\n  eps = Math.atan2(p.y, p.x);\n  d = eps / Math.sin(this.s0);\n  s = 2 * (Math.atan(Math.pow(this.ro0 / ro, 1 / this.n) * Math.tan(this.s0 / 2 + this.s45)) - this.s45);\n  u = Math.asin(Math.cos(this.ad) * Math.sin(s) - Math.sin(this.ad) * Math.cos(s) * Math.cos(d));\n  deltav = Math.asin(Math.cos(s) * Math.sin(d) / Math.cos(u));\n  p.x = this.long0 - deltav / this.alfa;\n  fi1 = u;\n  ok = 0;\n  var iter = 0;\n  do {\n    p.y = 2 * (Math.atan(Math.pow(this.k, -1 / this.alfa) * Math.pow(Math.tan(u / 2 + this.s45), 1 / this.alfa) * Math.pow((1 + this.e * Math.sin(fi1)) / (1 - this.e * Math.sin(fi1)), this.e / 2)) - this.s45);\n    if (Math.abs(fi1 - p.y) < 0.0000000001) {\n      ok = 1;\n    }\n    fi1 = p.y;\n    iter += 1;\n  } while (ok === 0 && iter < 15);\n  if (iter >= 15) {\n    return null;\n  }\n\n  return (p);\n}\n\nexport var names = ['Krovak', 'krovak'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (e0, e1, e2, e3, phi) {\n  return (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi));\n}\n","export default function (x) {\n  return (1 - 0.25 * x * (1 + x / 16 * (3 + 1.25 * x)));\n}\n","export default function (x) {\n  return (0.375 * x * (1 + 0.25 * x * (1 + 0.46875 * x)));\n}\n","export default function (x) {\n  return (0.05859375 * x * x * (1 + 0.75 * x));\n}\n","export default function (x) {\n  return (x * x * x * (35 / 3072));\n}\n","export default function (a, e, sinphi) {\n  var temp = e * sinphi;\n  return a / Math.sqrt(1 - temp * temp);\n}\n","import { HALF_PI } from '../constants/values';\nimport sign from './sign';\n\nexport default function (x) {\n  return (Math.abs(x) < HALF_PI) ? x : (x - (sign(x) * Math.PI));\n}\n","export default function (ml, e0, e1, e2, e3) {\n  var phi;\n  var dphi;\n\n  phi = ml / e0;\n  for (var i = 0; i < 15; i++) {\n    dphi = (ml - (e0 * phi - e1 * Math.sin(2 * phi) + e2 * Math.sin(4 * phi) - e3 * Math.sin(6 * phi))) / (e0 - 2 * e1 * Math.cos(2 * phi) + 4 * e2 * Math.cos(4 * phi) - 6 * e3 * Math.cos(6 * phi));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // ..reportError(\"IMLFN-CONV:Latitude failed to converge after 15 iterations\");\n  return NaN;\n}\n","import mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport gN from '../common/gN';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { HALF_PI, EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (!this.sphere) {\n    this.e0 = e0fn(this.es);\n    this.e1 = e1fn(this.es);\n    this.e2 = e2fn(this.es);\n    this.e3 = e3fn(this.es);\n    this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  }\n}\n\n/* Cassini forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y;\n  var lam = p.x;\n  var phi = p.y;\n  lam = adjust_lon(lam - this.long0);\n\n  if (this.sphere) {\n    x = this.a * Math.asin(Math.cos(phi) * Math.sin(lam));\n    y = this.a * (Math.atan2(Math.tan(phi), Math.cos(lam)) - this.lat0);\n  } else {\n    // ellipsoid\n    var sinphi = Math.sin(phi);\n    var cosphi = Math.cos(phi);\n    var nl = gN(this.a, this.e, sinphi);\n    var tl = Math.tan(phi) * Math.tan(phi);\n    var al = lam * Math.cos(phi);\n    var asq = al * al;\n    var cl = this.es * cosphi * cosphi / (1 - this.es);\n    var ml = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n\n    x = nl * al * (1 - asq * tl * (1 / 6 - (8 - tl + 8 * cl) * asq / 120));\n    y = ml - this.ml0 + nl * sinphi / cosphi * asq * (0.5 + (5 - tl + 6 * cl) * asq / 24);\n  }\n\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var phi, lam;\n\n  if (this.sphere) {\n    var dd = y + this.lat0;\n    phi = Math.asin(Math.sin(dd) * Math.cos(x));\n    lam = Math.atan2(Math.tan(x), Math.cos(dd));\n  } else {\n    /* ellipsoid */\n    var ml1 = this.ml0 / this.a + y;\n    var phi1 = imlfn(ml1, this.e0, this.e1, this.e2, this.e3);\n    if (Math.abs(Math.abs(phi1) - HALF_PI) <= EPSLN) {\n      p.x = this.long0;\n      p.y = HALF_PI;\n      if (y < 0) {\n        p.y *= -1;\n      }\n      return p;\n    }\n    var nl1 = gN(this.a, this.e, Math.sin(phi1));\n\n    var rl1 = nl1 * nl1 * nl1 / this.a / this.a * (1 - this.es);\n    var tl1 = Math.pow(Math.tan(phi1), 2);\n    var dl = x * this.a / nl1;\n    var dsq = dl * dl;\n    phi = phi1 - nl1 * Math.tan(phi1) / rl1 * dl * dl * (0.5 - (1 + 3 * tl1) * dl * dl / 24);\n    lam = dl * (1 - dsq * (tl1 / 3 + (1 + 3 * tl1) * tl1 * dsq / 15)) / Math.cos(phi1);\n  }\n\n  p.x = adjust_lon(lam + this.long0);\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['Cassini', 'Cassini_Soldner', 'cass'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","export default function (eccent, sinphi) {\n  var con;\n  if (eccent > 1.0e-7) {\n    con = eccent * sinphi;\n    return ((1 - eccent * eccent) * (sinphi / (1 - con * con) - (0.5 / eccent) * Math.log((1 - con) / (1 + con))));\n  } else {\n    return (2 * sinphi);\n  }\n}\n","import { HALF_PI, EPSLN, FORTPI } from '../constants/values';\n\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {Array<number>} apa\n * @property {number} dd\n * @property {number} e\n * @property {number} es\n * @property {number} mmf\n * @property {number} rq\n * @property {number} qp\n * @property {number} sinb1\n * @property {number} cosb1\n * @property {number} ymf\n * @property {number} xmf\n * @property {number} sinph0\n * @property {number} cosph0\n */\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\nexport var S_POLE = 1;\nexport var N_POLE = 2;\nexport var EQUIT = 3;\nexport var OBLIQ = 4;\n\n/**\n * Initialize the Lambert Azimuthal Equal Area projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  var t = Math.abs(this.lat0);\n  if (Math.abs(t - HALF_PI) < EPSLN) {\n    this.mode = this.lat0 < 0 ? S_POLE : N_POLE;\n  } else if (Math.abs(t) < EPSLN) {\n    this.mode = EQUIT;\n  } else {\n    this.mode = OBLIQ;\n  }\n  if (this.es > 0) {\n    var sinphi;\n\n    this.qp = qsfnz(this.e, 1);\n    this.mmf = 0.5 / (1 - this.es);\n    this.apa = authset(this.es);\n    switch (this.mode) {\n      case N_POLE:\n        this.dd = 1;\n        break;\n      case S_POLE:\n        this.dd = 1;\n        break;\n      case EQUIT:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        this.dd = 1 / this.rq;\n        this.xmf = 1;\n        this.ymf = 0.5 * this.qp;\n        break;\n      case OBLIQ:\n        this.rq = Math.sqrt(0.5 * this.qp);\n        sinphi = Math.sin(this.lat0);\n        this.sinb1 = qsfnz(this.e, sinphi) / this.qp;\n        this.cosb1 = Math.sqrt(1 - this.sinb1 * this.sinb1);\n        this.dd = Math.cos(this.lat0) / (Math.sqrt(1 - this.es * sinphi * sinphi) * this.rq * this.cosb1);\n        this.ymf = (this.xmf = this.rq) / this.dd;\n        this.xmf *= this.dd;\n        break;\n    }\n  } else {\n    if (this.mode === OBLIQ) {\n      this.sinph0 = Math.sin(this.lat0);\n      this.cosph0 = Math.cos(this.lat0);\n    }\n  }\n}\n\n/* Lambert Azimuthal Equal Area forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var x, y, coslam, sinlam, sinphi, q, sinb, cosb, b, cosphi;\n  var lam = p.x;\n  var phi = p.y;\n\n  lam = adjust_lon(lam - this.long0);\n  if (this.sphere) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    coslam = Math.cos(lam);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      y = (this.mode === this.EQUIT) ? 1 + cosphi * coslam : 1 + this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      if (y <= EPSLN) {\n        return null;\n      }\n      y = Math.sqrt(2 / y);\n      x = y * cosphi * Math.sin(lam);\n      y *= (this.mode === this.EQUIT) ? sinphi : this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        coslam = -coslam;\n      }\n      if (Math.abs(phi + this.lat0) < EPSLN) {\n        return null;\n      }\n      y = FORTPI - phi * 0.5;\n      y = 2 * ((this.mode === this.S_POLE) ? Math.cos(y) : Math.sin(y));\n      x = y * Math.sin(lam);\n      y *= coslam;\n    }\n  } else {\n    sinb = 0;\n    cosb = 0;\n    b = 0;\n    coslam = Math.cos(lam);\n    sinlam = Math.sin(lam);\n    sinphi = Math.sin(phi);\n    q = qsfnz(this.e, sinphi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinb = q / this.qp;\n      cosb = Math.sqrt(1 - sinb * sinb);\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n        b = 1 + this.sinb1 * sinb + this.cosb1 * cosb * coslam;\n        break;\n      case this.EQUIT:\n        b = 1 + cosb * coslam;\n        break;\n      case this.N_POLE:\n        b = HALF_PI + phi;\n        q = this.qp - q;\n        break;\n      case this.S_POLE:\n        b = phi - HALF_PI;\n        q = this.qp + q;\n        break;\n    }\n    if (Math.abs(b) < EPSLN) {\n      return null;\n    }\n    switch (this.mode) {\n      case this.OBLIQ:\n      case this.EQUIT:\n        b = Math.sqrt(2 / b);\n        if (this.mode === this.OBLIQ) {\n          y = this.ymf * b * (this.cosb1 * sinb - this.sinb1 * cosb * coslam);\n        } else {\n          y = (b = Math.sqrt(2 / (1 + cosb * coslam))) * sinb * this.ymf;\n        }\n        x = this.xmf * b * cosb * sinlam;\n        break;\n      case this.N_POLE:\n      case this.S_POLE:\n        if (q >= 0) {\n          x = (b = Math.sqrt(q)) * sinlam;\n          y = coslam * ((this.mode === this.S_POLE) ? b : -b);\n        } else {\n          x = y = 0;\n        }\n        break;\n    }\n  }\n\n  p.x = this.a * x + this.x0;\n  p.y = this.a * y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var x = p.x / this.a;\n  var y = p.y / this.a;\n  var lam, phi, cCe, sCe, q, rho, ab;\n  if (this.sphere) {\n    var cosz = 0,\n      rh, sinz = 0;\n\n    rh = Math.sqrt(x * x + y * y);\n    phi = rh * 0.5;\n    if (phi > 1) {\n      return null;\n    }\n    phi = 2 * Math.asin(phi);\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      sinz = Math.sin(phi);\n      cosz = Math.cos(phi);\n    }\n    switch (this.mode) {\n      case this.EQUIT:\n        phi = (Math.abs(rh) <= EPSLN) ? 0 : Math.asin(y * sinz / rh);\n        x *= sinz;\n        y = cosz * rh;\n        break;\n      case this.OBLIQ:\n        phi = (Math.abs(rh) <= EPSLN) ? this.lat0 : Math.asin(cosz * this.sinph0 + y * sinz * this.cosph0 / rh);\n        x *= sinz * this.cosph0;\n        y = (cosz - Math.sin(phi) * this.sinph0) * rh;\n        break;\n      case this.N_POLE:\n        y = -y;\n        phi = HALF_PI - phi;\n        break;\n      case this.S_POLE:\n        phi -= HALF_PI;\n        break;\n    }\n    lam = (y === 0 && (this.mode === this.EQUIT || this.mode === this.OBLIQ)) ? 0 : Math.atan2(x, y);\n  } else {\n    ab = 0;\n    if (this.mode === this.OBLIQ || this.mode === this.EQUIT) {\n      x /= this.dd;\n      y *= this.dd;\n      rho = Math.sqrt(x * x + y * y);\n      if (rho < EPSLN) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      sCe = 2 * Math.asin(0.5 * rho / this.rq);\n      cCe = Math.cos(sCe);\n      x *= (sCe = Math.sin(sCe));\n      if (this.mode === this.OBLIQ) {\n        ab = cCe * this.sinb1 + y * sCe * this.cosb1 / rho;\n        q = this.qp * ab;\n        y = rho * this.cosb1 * cCe - y * this.sinb1 * sCe;\n      } else {\n        ab = y * sCe / rho;\n        q = this.qp * ab;\n        y = rho * cCe;\n      }\n    } else if (this.mode === this.N_POLE || this.mode === this.S_POLE) {\n      if (this.mode === this.N_POLE) {\n        y = -y;\n      }\n      q = (x * x + y * y);\n      if (!q) {\n        p.x = this.long0;\n        p.y = this.lat0;\n        return p;\n      }\n      ab = 1 - q / this.qp;\n      if (this.mode === this.S_POLE) {\n        ab = -ab;\n      }\n    }\n    lam = Math.atan2(x, y);\n    phi = authlat(Math.asin(ab), this.apa);\n  }\n\n  p.x = adjust_lon(this.long0 + lam);\n  p.y = phi;\n  return p;\n}\n\n/* determine latitude from authalic latitude */\nvar P00 = 0.33333333333333333333;\n\nvar P01 = 0.17222222222222222222;\nvar P02 = 0.10257936507936507936;\nvar P10 = 0.06388888888888888888;\nvar P11 = 0.06640211640211640211;\nvar P20 = 0.01641501294219154443;\n\nfunction authset(es) {\n  var t;\n  var APA = [];\n  APA[0] = es * P00;\n  t = es * es;\n  APA[0] += t * P01;\n  APA[1] = t * P10;\n  t *= es;\n  APA[0] += t * P02;\n  APA[1] += t * P11;\n  APA[2] = t * P20;\n  return APA;\n}\n\nfunction authlat(beta, APA) {\n  var t = beta + beta;\n  return (beta + APA[0] * Math.sin(t) + APA[1] * Math.sin(t + t) + APA[2] * Math.sin(t + t + t));\n}\n\nexport var names = ['Lambert Azimuthal Equal Area', 'Lambert_Azimuthal_Equal_Area', 'laea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  S_POLE: S_POLE,\n  N_POLE: N_POLE,\n  EQUIT: EQUIT,\n  OBLIQ: OBLIQ\n};\n","export default function (x) {\n  if (Math.abs(x) > 1) {\n    x = (x > 1) ? 1 : -1;\n  }\n  return Math.asin(x);\n}\n","import msfnz from '../common/msfnz';\nimport qsfnz from '../common/qsfnz';\nimport adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e3\n * @property {number} sin_po\n * @property {number} cos_po\n * @property {number} t1\n * @property {number} con\n * @property {number} ms1\n * @property {number} qs1\n * @property {number} t2\n * @property {number} ms2\n * @property {number} qs2\n * @property {number} t3\n * @property {number} qs0\n * @property {number} ns0\n * @property {number} c\n * @property {number} rh\n * @property {number} sin_phi\n * @property {number} cos_phi\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e3 = Math.sqrt(this.es);\n\n  this.sin_po = Math.sin(this.lat1);\n  this.cos_po = Math.cos(this.lat1);\n  this.t1 = this.sin_po;\n  this.con = this.sin_po;\n  this.ms1 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs1 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat2);\n  this.cos_po = Math.cos(this.lat2);\n  this.t2 = this.sin_po;\n  this.ms2 = msfnz(this.e3, this.sin_po, this.cos_po);\n  this.qs2 = qsfnz(this.e3, this.sin_po);\n\n  this.sin_po = Math.sin(this.lat0);\n  this.cos_po = Math.cos(this.lat0);\n  this.t3 = this.sin_po;\n  this.qs0 = qsfnz(this.e3, this.sin_po);\n\n  if (Math.abs(this.lat1 - this.lat2) > EPSLN) {\n    this.ns0 = (this.ms1 * this.ms1 - this.ms2 * this.ms2) / (this.qs2 - this.qs1);\n  } else {\n    this.ns0 = this.con;\n  }\n  this.c = this.ms1 * this.ms1 + this.ns0 * this.qs1;\n  this.rh = this.a * Math.sqrt(this.c - this.ns0 * this.qs0) / this.ns0;\n}\n\n/* Albers Conical Equal Area forward equations--mapping lat,long to x,y\n  ------------------------------------------------------------------- */\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  this.sin_phi = Math.sin(lat);\n  this.cos_phi = Math.cos(lat);\n\n  var qs = qsfnz(this.e3, this.sin_phi);\n  var rh1 = this.a * Math.sqrt(this.c - this.ns0 * qs) / this.ns0;\n  var theta = this.ns0 * adjust_lon(lon - this.long0);\n  var x = rh1 * Math.sin(theta) + this.x0;\n  var y = this.rh - rh1 * Math.cos(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh1, qs, con, theta, lon, lat;\n\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  if (this.ns0 >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n  con = rh1 * this.ns0 / this.a;\n  if (this.sphere) {\n    lat = Math.asin((this.c - con * con) / (2 * this.ns0));\n  } else {\n    qs = (this.c - con * con) / this.ns0;\n    lat = this.phi1z(this.e3, qs);\n  }\n\n  lon = adjust_lon(theta / this.ns0 + this.long0);\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\n/* Function to compute phi1, the latitude for the inverse of the\n   Albers Conical Equal-Area projection.\n------------------------------------------- */\nexport function phi1z(eccent, qs) {\n  var sinphi, cosphi, con, com, dphi;\n  var phi = asinz(0.5 * qs);\n  if (eccent < EPSLN) {\n    return phi;\n  }\n\n  var eccnts = eccent * eccent;\n  for (var i = 1; i <= 25; i++) {\n    sinphi = Math.sin(phi);\n    cosphi = Math.cos(phi);\n    con = eccent * sinphi;\n    com = 1 - con * con;\n    dphi = 0.5 * com * com / cosphi * (qs / (1 - eccnts) - sinphi / com + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi = phi + dphi;\n    if (Math.abs(dphi) <= 1e-7) {\n      return phi;\n    }\n  }\n  return null;\n}\n\nexport var names = ['Albers_Conic_Equal_Area', 'Albers_Equal_Area', 'Albers', 'aea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names,\n  phi1z: phi1z\n};\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n * @property {number} infinity_dist\n * @property {number} rc\n */\n\n/**\n  reference:\n    Wolfram Mathworld \"Gnomonic Projection\"\n    http://mathworld.wolfram.com/GnomonicProjection.html\n    Accessed: 12th November 2009\n   @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n  // Approximation for projecting points to the horizon (infinity)\n  this.infinity_dist = 1000 * this.a;\n  this.rc = 1;\n}\n\n/* Gnomonic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g;\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.x0 + this.a * ksp * cosphi * Math.sin(dlon) / g;\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon) / g;\n  } else {\n    // Point is in the opposing hemisphere and is unprojectable\n    // We still need to return a reasonable point, so we project\n    // to infinity, on a bearing\n    // equivalent to the northern hemisphere equivalent\n    // This is a reasonable approximation for short shapes and lines that\n    // straddle the horizon.\n\n    x = this.x0 + this.infinity_dist * cosphi * Math.sin(dlon);\n    y = this.y0 + this.infinity_dist * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* Rho */\n  var sinc, cosc;\n  var c;\n  var lon, lat;\n\n  /* Inverse equations\n      ----------------- */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  p.x /= this.k0;\n  p.y /= this.k0;\n\n  if ((rh = Math.sqrt(p.x * p.x + p.y * p.y))) {\n    c = Math.atan2(rh, this.rc);\n    sinc = Math.sin(c);\n    cosc = Math.cos(c);\n\n    lat = asinz(cosc * this.sin_p14 + (p.y * sinc * this.cos_p14) / rh);\n    lon = Math.atan2(p.x * sinc, rh * this.cos_p14 * cosc - p.y * this.sin_p14 * sinc);\n    lon = adjust_lon(this.long0 + lon);\n  } else {\n    lat = this.phic0;\n    lon = 0;\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['gnom'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport qsfnz from '../common/qsfnz';\nimport msfnz from '../common/msfnz';\nimport iqsfnz from '../common/iqsfnz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} e\n */\n\n/**\n  reference:\n    \"Cartographic Projection Procedures for the UNIX Environment-\n    A User's Manual\" by Gerald I. Evenden,\n    USGS Open File Report 90-284and Release 4 Interim Reports (2003)\n  @this {import('../defs.js').ProjectionDefinition & LocalThis}\n*/\nexport function init() {\n  // no-op\n  if (!this.sphere) {\n    this.k0 = msfnz(this.e, Math.sin(this.lat_ts), Math.cos(this.lat_ts));\n  }\n}\n\n/* Cylindrical Equal Area forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  if (this.sphere) {\n    x = this.x0 + this.a * dlon * Math.cos(this.lat_ts);\n    y = this.y0 + this.a * Math.sin(lat) / Math.cos(this.lat_ts);\n  } else {\n    var qs = qsfnz(this.e, Math.sin(lat));\n    x = this.x0 + this.a * this.k0 * dlon;\n    y = this.y0 + this.a * qs * 0.5 / this.k0;\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Cylindrical Equal Area inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var lon, lat;\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + (p.x / this.a) / Math.cos(this.lat_ts));\n    lat = Math.asin((p.y / this.a) * Math.cos(this.lat_ts));\n  } else {\n    lat = iqsfnz(this.e, 2 * p.y * this.k0 / this.a);\n    lon = adjust_lon(this.long0 + p.x / (this.a * this.k0));\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['cea'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { HALF_PI } from '../constants/values';\n\nexport default function (eccent, q) {\n  var temp = 1 - (1 - eccent * eccent) / (2 * eccent) * Math.log((1 - eccent) / (1 + eccent));\n  if (Math.abs(Math.abs(q) - temp) < 1.0E-6) {\n    if (q < 0) {\n      return (-1 * HALF_PI);\n    } else {\n      return HALF_PI;\n    }\n  }\n  // var phi = 0.5* q/(1-eccent*eccent);\n  var phi = Math.asin(0.5 * q);\n  var dphi;\n  var sin_phi;\n  var cos_phi;\n  var con;\n  for (var i = 0; i < 30; i++) {\n    sin_phi = Math.sin(phi);\n    cos_phi = Math.cos(phi);\n    con = eccent * sin_phi;\n    dphi = Math.pow(1 - con * con, 2) / (2 * cos_phi) * (q / (1 - eccent * eccent) - sin_phi / (1 - con * con) + 0.5 / eccent * Math.log((1 - con) / (1 + con)));\n    phi += dphi;\n    if (Math.abs(dphi) <= 0.0000000001) {\n      return phi;\n    }\n  }\n\n  // console.log(\"IQSFN-CONV:Latitude failed to converge after 30 iterations\");\n  return NaN;\n}\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Equidistant Cylindrical (Plate Carre)';\n\n  this.rc = Math.cos(this.lat_ts);\n}\n\n// forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  var dlon = adjust_lon(lon - this.long0);\n  var dlat = adjust_lat(lat - this.lat0);\n  p.x = this.x0 + (this.a * dlon * this.rc);\n  p.y = this.y0 + (this.a * dlat);\n  return p;\n}\n\n// inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var x = p.x;\n  var y = p.y;\n\n  p.x = adjust_lon(this.long0 + ((x - this.x0) / (this.a * this.rc)));\n  p.y = adjust_lat(this.lat0 + ((y - this.y0) / (this.a)));\n  return p;\n}\n\nexport var names = ['Equirectangular', 'Equidistant_Cylindrical', 'Equidistant_Cylindrical_Spherical', 'eqc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport mlfn from '../common/mlfn';\nimport { EPSLN } from '../constants/values';\n\nimport gN from '../common/gN';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} ml0\n */\n\nvar MAX_ITER = 20;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2); // devait etre dans tmerc.js mais n y est pas donc je commente sinon retour de valeurs nulles\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n  this.ml0 = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0); // si que des zeros le calcul ne se fait pas\n}\n\n/* Polyconic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var x, y, el;\n  var dlon = adjust_lon(lon - this.long0);\n  el = dlon * Math.sin(lat);\n  if (this.sphere) {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.a * this.lat0;\n    } else {\n      x = this.a * Math.sin(el) / Math.tan(lat);\n      y = this.a * (adjust_lat(lat - this.lat0) + (1 - Math.cos(el)) / Math.tan(lat));\n    }\n  } else {\n    if (Math.abs(lat) <= EPSLN) {\n      x = this.a * dlon;\n      y = -1 * this.ml0;\n    } else {\n      var nl = gN(this.a, this.e, Math.sin(lat)) / Math.tan(lat);\n      x = nl * Math.sin(el);\n      y = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, lat) - this.ml0 + nl * (1 - Math.cos(el));\n    }\n  }\n  p.x = x + this.x0;\n  p.y = y + this.y0;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  var lon, lat, x, y, i;\n  var al, bl;\n  var phi, dphi;\n  x = p.x - this.x0;\n  y = p.y - this.y0;\n\n  if (this.sphere) {\n    if (Math.abs(y + this.a * this.lat0) <= EPSLN) {\n      lon = adjust_lon(x / this.a + this.long0);\n      lat = 0;\n    } else {\n      al = this.lat0 + y / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var tanphi;\n      for (i = MAX_ITER; i; --i) {\n        tanphi = Math.tan(phi);\n        dphi = -1 * (al * (phi * tanphi + 1) - phi - 0.5 * (phi * phi + bl) * tanphi) / ((phi - al) / tanphi - 1);\n        phi += dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n      lon = adjust_lon(this.long0 + (Math.asin(x * Math.tan(phi) / this.a)) / Math.sin(lat));\n    }\n  } else {\n    if (Math.abs(y + this.ml0) <= EPSLN) {\n      lat = 0;\n      lon = adjust_lon(this.long0 + x / this.a);\n    } else {\n      al = (this.ml0 + y) / this.a;\n      bl = x * x / this.a / this.a + al * al;\n      phi = al;\n      var cl, mln, mlnp, ma;\n      var con;\n      for (i = MAX_ITER; i; --i) {\n        con = this.e * Math.sin(phi);\n        cl = Math.sqrt(1 - con * con) * Math.tan(phi);\n        mln = this.a * mlfn(this.e0, this.e1, this.e2, this.e3, phi);\n        mlnp = this.e0 - 2 * this.e1 * Math.cos(2 * phi) + 4 * this.e2 * Math.cos(4 * phi) - 6 * this.e3 * Math.cos(6 * phi);\n        ma = mln / this.a;\n        dphi = (al * (cl * ma + 1) - ma - 0.5 * cl * (ma * ma + bl)) / (this.es * Math.sin(2 * phi) * (ma * ma + bl - 2 * al * ma) / (4 * cl) + (al - ma) * (cl * mlnp - 2 / Math.sin(2 * phi)) - mlnp);\n        phi -= dphi;\n        if (Math.abs(dphi) <= EPSLN) {\n          lat = phi;\n          break;\n        }\n      }\n\n      // lat=phi4z(this.e,this.e0,this.e1,this.e2,this.e3,al,bl,0,0);\n      cl = Math.sqrt(1 - this.es * Math.pow(Math.sin(lat), 2)) * Math.tan(lat);\n      lon = adjust_lon(this.long0 + Math.asin(x * cl / this.a) / Math.sin(lat));\n    }\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Polyconic', 'American_Polyconic', 'poly'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { SEC_TO_RAD } from '../constants/values';\n\n/*\n  reference\n    Department of Land and Survey Technical Circular 1973/32\n      http://www.linz.govt.nz/docs/miscellaneous/nz-map-definition.pdf\n    OSG Technical Report 4.1\n      http://www.linz.govt.nz/docs/miscellaneous/nzmg.pdf\n  */\n\n/**\n * iterations: Number of iterations to refine inverse transform.\n *     0 -> km accuracy\n *     1 -> m accuracy -- suitable for most mapping applications\n *     2 -> mm accuracy\n */\nexport var iterations = 1;\n\nexport function init() {\n  this.A = [];\n  this.A[1] = 0.6399175073;\n  this.A[2] = -0.1358797613;\n  this.A[3] = 0.063294409;\n  this.A[4] = -0.02526853;\n  this.A[5] = 0.0117879;\n  this.A[6] = -0.0055161;\n  this.A[7] = 0.0026906;\n  this.A[8] = -0.001333;\n  this.A[9] = 0.00067;\n  this.A[10] = -0.00034;\n\n  this.B_re = [];\n  this.B_im = [];\n  this.B_re[1] = 0.7557853228;\n  this.B_im[1] = 0;\n  this.B_re[2] = 0.249204646;\n  this.B_im[2] = 0.003371507;\n  this.B_re[3] = -0.001541739;\n  this.B_im[3] = 0.041058560;\n  this.B_re[4] = -0.10162907;\n  this.B_im[4] = 0.01727609;\n  this.B_re[5] = -0.26623489;\n  this.B_im[5] = -0.36249218;\n  this.B_re[6] = -0.6870983;\n  this.B_im[6] = -1.1651967;\n\n  this.C_re = [];\n  this.C_im = [];\n  this.C_re[1] = 1.3231270439;\n  this.C_im[1] = 0;\n  this.C_re[2] = -0.577245789;\n  this.C_im[2] = -0.007809598;\n  this.C_re[3] = 0.508307513;\n  this.C_im[3] = -0.112208952;\n  this.C_re[4] = -0.15094762;\n  this.C_im[4] = 0.18200602;\n  this.C_re[5] = 1.01418179;\n  this.C_im[5] = 1.64497696;\n  this.C_re[6] = 1.9660549;\n  this.C_im[6] = 2.5127645;\n\n  this.D = [];\n  this.D[1] = 1.5627014243;\n  this.D[2] = 0.5185406398;\n  this.D[3] = -0.03333098;\n  this.D[4] = -0.1052906;\n  this.D[5] = -0.0368594;\n  this.D[6] = 0.007317;\n  this.D[7] = 0.01220;\n  this.D[8] = 0.00394;\n  this.D[9] = -0.0013;\n}\n\n/**\n    New Zealand Map Grid Forward  - long/lat to x/y\n    long/lat in radians\n  */\nexport function forward(p) {\n  var n;\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lat = lat - this.lat0;\n  var delta_lon = lon - this.long0;\n\n  // 1. Calculate d_phi and d_psi    ...                          // and d_lambda\n  // For this algorithm, delta_latitude is in seconds of arc x 10-5, so we need to scale to those units. Longitude is radians.\n  var d_phi = delta_lat / SEC_TO_RAD * 1E-5;\n  var d_lambda = delta_lon;\n  var d_phi_n = 1; // d_phi^0\n\n  var d_psi = 0;\n  for (n = 1; n <= 10; n++) {\n    d_phi_n = d_phi_n * d_phi;\n    d_psi = d_psi + this.A[n] * d_phi_n;\n  }\n\n  // 2. Calculate theta\n  var th_re = d_psi;\n  var th_im = d_lambda;\n\n  // 3. Calculate z\n  var th_n_re = 1;\n  var th_n_im = 0; // theta^0\n  var th_n_re1;\n  var th_n_im1;\n\n  var z_re = 0;\n  var z_im = 0;\n  for (n = 1; n <= 6; n++) {\n    th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n    th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n    th_n_re = th_n_re1;\n    th_n_im = th_n_im1;\n    z_re = z_re + this.B_re[n] * th_n_re - this.B_im[n] * th_n_im;\n    z_im = z_im + this.B_im[n] * th_n_re + this.B_re[n] * th_n_im;\n  }\n\n  // 4. Calculate easting and northing\n  p.x = (z_im * this.a) + this.x0;\n  p.y = (z_re * this.a) + this.y0;\n\n  return p;\n}\n\n/**\n    New Zealand Map Grid Inverse  -  x/y to long/lat\n  */\nexport function inverse(p) {\n  var n;\n  var x = p.x;\n  var y = p.y;\n\n  var delta_x = x - this.x0;\n  var delta_y = y - this.y0;\n\n  // 1. Calculate z\n  var z_re = delta_y / this.a;\n  var z_im = delta_x / this.a;\n\n  // 2a. Calculate theta - first approximation gives km accuracy\n  var z_n_re = 1;\n  var z_n_im = 0; // z^0\n  var z_n_re1;\n  var z_n_im1;\n\n  var th_re = 0;\n  var th_im = 0;\n  for (n = 1; n <= 6; n++) {\n    z_n_re1 = z_n_re * z_re - z_n_im * z_im;\n    z_n_im1 = z_n_im * z_re + z_n_re * z_im;\n    z_n_re = z_n_re1;\n    z_n_im = z_n_im1;\n    th_re = th_re + this.C_re[n] * z_n_re - this.C_im[n] * z_n_im;\n    th_im = th_im + this.C_im[n] * z_n_re + this.C_re[n] * z_n_im;\n  }\n\n  // 2b. Iterate to refine the accuracy of the calculation\n  //        0 iterations gives km accuracy\n  //        1 iteration gives m accuracy -- good enough for most mapping applications\n  //        2 iterations bives mm accuracy\n  for (var i = 0; i < this.iterations; i++) {\n    var th_n_re = th_re;\n    var th_n_im = th_im;\n    var th_n_re1;\n    var th_n_im1;\n\n    var num_re = z_re;\n    var num_im = z_im;\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      num_re = num_re + (n - 1) * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      num_im = num_im + (n - 1) * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    th_n_re = 1;\n    th_n_im = 0;\n    var den_re = this.B_re[1];\n    var den_im = this.B_im[1];\n    for (n = 2; n <= 6; n++) {\n      th_n_re1 = th_n_re * th_re - th_n_im * th_im;\n      th_n_im1 = th_n_im * th_re + th_n_re * th_im;\n      th_n_re = th_n_re1;\n      th_n_im = th_n_im1;\n      den_re = den_re + n * (this.B_re[n] * th_n_re - this.B_im[n] * th_n_im);\n      den_im = den_im + n * (this.B_im[n] * th_n_re + this.B_re[n] * th_n_im);\n    }\n\n    // Complex division\n    var den2 = den_re * den_re + den_im * den_im;\n    th_re = (num_re * den_re + num_im * den_im) / den2;\n    th_im = (num_im * den_re - num_re * den_im) / den2;\n  }\n\n  // 3. Calculate d_phi              ...                                    // and d_lambda\n  var d_psi = th_re;\n  var d_lambda = th_im;\n  var d_psi_n = 1; // d_psi^0\n\n  var d_phi = 0;\n  for (n = 1; n <= 9; n++) {\n    d_psi_n = d_psi_n * d_psi;\n    d_phi = d_phi + this.D[n] * d_psi_n;\n  }\n\n  // 4. Calculate latitude and longitude\n  // d_phi is calcuated in second of arc * 10^-5, so we need to scale back to radians. d_lambda is in radians.\n  var lat = this.lat0 + (d_phi * SEC_TO_RAD * 1E5);\n  var lon = this.long0 + d_lambda;\n\n  p.x = lon;\n  p.y = lat;\n\n  return p;\n}\n\nexport var names = ['New_Zealand_Map_Grid', 'nzmg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\n/*\n  reference\n    \"New Equal-Area Map Projections for Noncircular Regions\", John P. Snyder,\n    The American Cartographer, Vol 15, No. 4, October 1988, pp. 341-355.\n  */\n\n/* Initialize the Miller Cylindrical projection\n  ------------------------------------------- */\nexport function init() {\n  // no-op\n}\n\n/* Miller Cylindrical forward equations--mapping lat,long to x,y\n    ------------------------------------------------------------ */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x = this.x0 + this.a * dlon;\n  var y = this.y0 + this.a * Math.log(Math.tan((Math.PI / 4) + (lat / 2.5))) * 1.25;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Miller Cylindrical inverse equations--mapping x,y to lat/long\n    ------------------------------------------------------------ */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n\n  var lon = adjust_lon(this.long0 + p.x / this.a);\n  var lat = 2.5 * (Math.atan(Math.exp(0.8 * p.y / this.a)) - Math.PI / 4);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Miller_Cylindrical', 'mill'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport pj_enfn from '../common/pj_enfn';\nvar MAX_ITER = 20;\nimport pj_mlfn from '../common/pj_mlfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {Array<number>} en\n * @property {number} n\n * @property {number} m\n * @property {number} C_y\n * @property {number} C_x\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n    ------------------------------------------------- */\n\n  if (!this.sphere) {\n    this.en = pj_enfn(this.es);\n  } else {\n    this.n = 1;\n    this.m = 0;\n    this.es = 0;\n    this.C_y = Math.sqrt((this.m + 1) / this.n);\n    this.C_x = this.C_y / (this.m + 1);\n  }\n}\n\n/* Sinusoidal forward equations--mapping lat,long to x,y\n  ----------------------------------------------------- */\nexport function forward(p) {\n  var x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n    ----------------- */\n  lon = adjust_lon(lon - this.long0);\n\n  if (this.sphere) {\n    if (!this.m) {\n      lat = this.n !== 1 ? Math.asin(this.n * Math.sin(lat)) : lat;\n    } else {\n      var k = this.n * Math.sin(lat);\n      for (var i = MAX_ITER; i; --i) {\n        var V = (this.m * lat + Math.sin(lat) - k) / (this.m + Math.cos(lat));\n        lat -= V;\n        if (Math.abs(V) < EPSLN) {\n          break;\n        }\n      }\n    }\n    x = this.a * this.C_x * lon * (this.m + Math.cos(lat));\n    y = this.a * this.C_y * lat;\n  } else {\n    var s = Math.sin(lat);\n    var c = Math.cos(lat);\n    y = this.a * pj_mlfn(lat, s, c, this.en);\n    x = this.a * lon * c / Math.sqrt(1 - this.es * s * s);\n  }\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var lat, temp, lon, s;\n\n  p.x -= this.x0;\n  lon = p.x / this.a;\n  p.y -= this.y0;\n  lat = p.y / this.a;\n\n  if (this.sphere) {\n    lat /= this.C_y;\n    lon = lon / (this.C_x * (this.m + Math.cos(lat)));\n    if (this.m) {\n      lat = asinz((this.m * lat + Math.sin(lat)) / this.n);\n    } else if (this.n !== 1) {\n      lat = asinz(Math.sin(lat) / this.n);\n    }\n    lon = adjust_lon(lon + this.long0);\n    lat = adjust_lat(lat);\n  } else {\n    lat = pj_inv_mlfn(p.y / this.a, this.es, this.en);\n    s = Math.abs(lat);\n    if (s < HALF_PI) {\n      s = Math.sin(lat);\n      temp = this.long0 + p.x * Math.sqrt(1 - this.es * s * s) / (this.a * Math.cos(lat));\n      // temp = this.long0 + p.x / (this.a * Math.cos(lat));\n      lon = adjust_lon(temp);\n    } else if ((s - EPSLN) < HALF_PI) {\n      lon = this.long0;\n    }\n  }\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Sinusoidal', 'sinu'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nexport function init() {}\nimport { EPSLN } from '../constants/values';\n/* Mollweide forward equations--mapping lat,long to x,y\n    ---------------------------------------------------- */\nexport function forward(p) {\n  /* Forward equations\n      ----------------- */\n  var lon = p.x;\n  var lat = p.y;\n\n  var delta_lon = adjust_lon(lon - this.long0);\n  var theta = lat;\n  var con = Math.PI * Math.sin(lat);\n\n  /* Iterate using the Newton-Raphson method to find theta\n      ----------------------------------------------------- */\n  while (true) {\n    var delta_theta = -(theta + Math.sin(theta) - con) / (1 + Math.cos(theta));\n    theta += delta_theta;\n    if (Math.abs(delta_theta) < EPSLN) {\n      break;\n    }\n  }\n  theta /= 2;\n\n  /* If the latitude is 90 deg, force the x coordinate to be \"0 + false easting\"\n       this is done here because of precision problems with \"cos(theta)\"\n       -------------------------------------------------------------------------- */\n  if (Math.PI / 2 - Math.abs(lat) < EPSLN) {\n    delta_lon = 0;\n  }\n  var x = 0.900316316158 * this.a * delta_lon * Math.cos(theta) + this.x0;\n  var y = 1.4142135623731 * this.a * Math.sin(theta) + this.y0;\n\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var theta;\n  var arg;\n\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  arg = p.y / (1.4142135623731 * this.a);\n\n  /* Because of division by zero problems, 'arg' can not be 1.  Therefore\n       a number very close to one is used instead.\n       ------------------------------------------------------------------- */\n  if (Math.abs(arg) > 0.999999999999) {\n    arg = 0.999999999999;\n  }\n  theta = Math.asin(arg);\n  var lon = adjust_lon(this.long0 + (p.x / (0.900316316158 * this.a * Math.cos(theta))));\n  if (lon < (-Math.PI)) {\n    lon = -Math.PI;\n  }\n  if (lon > Math.PI) {\n    lon = Math.PI;\n  }\n  arg = (2 * theta + Math.sin(2 * theta)) / Math.PI;\n  if (Math.abs(arg) > 1) {\n    arg = 1;\n  }\n  var lat = Math.asin(arg);\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Mollweide', 'moll'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport msfnz from '../common/msfnz';\nimport mlfn from '../common/mlfn';\nimport adjust_lon from '../common/adjust_lon';\nimport adjust_lat from '../common/adjust_lat';\nimport imlfn from '../common/imlfn';\nimport { EPSLN } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} temp\n * @property {number} es\n * @property {number} e\n * @property {number} e0\n * @property {number} e1\n * @property {number} e2\n * @property {number} e3\n * @property {number} sin_phi\n * @property {number} cos_phi\n * @property {number} ms1\n * @property {number} ml1\n * @property {number} ms2\n * @property {number} ml2\n * @property {number} ns\n * @property {number} g\n * @property {number} ml0\n * @property {number} rh\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  // Standard Parallels cannot be equal and on opposite sides of the equator\n  if (Math.abs(this.lat1 + this.lat2) < EPSLN) {\n    return;\n  }\n  this.lat2 = this.lat2 || this.lat1;\n  this.temp = this.b / this.a;\n  this.es = 1 - Math.pow(this.temp, 2);\n  this.e = Math.sqrt(this.es);\n  this.e0 = e0fn(this.es);\n  this.e1 = e1fn(this.es);\n  this.e2 = e2fn(this.es);\n  this.e3 = e3fn(this.es);\n\n  this.sin_phi = Math.sin(this.lat1);\n  this.cos_phi = Math.cos(this.lat1);\n\n  this.ms1 = msfnz(this.e, this.sin_phi, this.cos_phi);\n  this.ml1 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat1);\n\n  if (Math.abs(this.lat1 - this.lat2) < EPSLN) {\n    this.ns = this.sin_phi;\n  } else {\n    this.sin_phi = Math.sin(this.lat2);\n    this.cos_phi = Math.cos(this.lat2);\n    this.ms2 = msfnz(this.e, this.sin_phi, this.cos_phi);\n    this.ml2 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat2);\n    this.ns = (this.ms1 - this.ms2) / (this.ml2 - this.ml1);\n  }\n  this.g = this.ml1 + this.ms1 / this.ns;\n  this.ml0 = mlfn(this.e0, this.e1, this.e2, this.e3, this.lat0);\n  this.rh = this.a * (this.g - this.ml0);\n}\n\n/* Equidistant Conic forward equations--mapping lat,long to x,y\n  ----------------------------------------------------------- */\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var rh1;\n\n  /* Forward equations\n      ----------------- */\n  if (this.sphere) {\n    rh1 = this.a * (this.g - lat);\n  } else {\n    var ml = mlfn(this.e0, this.e1, this.e2, this.e3, lat);\n    rh1 = this.a * (this.g - ml);\n  }\n  var theta = this.ns * adjust_lon(lon - this.long0);\n  var x = this.x0 + rh1 * Math.sin(theta);\n  var y = this.y0 + this.rh - rh1 * Math.cos(theta);\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Inverse equations\n  ----------------- */\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y = this.rh - p.y + this.y0;\n  var con, rh1, lat, lon;\n  if (this.ns >= 0) {\n    rh1 = Math.sqrt(p.x * p.x + p.y * p.y);\n    con = 1;\n  } else {\n    rh1 = -Math.sqrt(p.x * p.x + p.y * p.y);\n    con = -1;\n  }\n  var theta = 0;\n  if (rh1 !== 0) {\n    theta = Math.atan2(con * p.x, con * p.y);\n  }\n\n  if (this.sphere) {\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    lat = adjust_lat(this.g - rh1 / this.a);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    var ml = this.g - rh1 / this.a;\n    lat = imlfn(ml, this.e0, this.e1, this.e2, this.e3);\n    lon = adjust_lon(this.long0 + theta / this.ns);\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n}\n\nexport var names = ['Equidistant_Conic', 'eqdc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\n\nimport { HALF_PI, EPSLN } from '../constants/values';\n\nimport asinz from '../common/asinz';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} R - Radius of the Earth\n */\n\n/**\n * Initialize the Van Der Grinten projection\n * @this {import('../defs.js').ProjectionDefinition & LocalThis}\n */\nexport function init() {\n  // this.R = 6370997; //Radius of earth\n  this.R = this.a;\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n\n  /* Forward equations\n    ----------------- */\n  var dlon = adjust_lon(lon - this.long0);\n  var x, y;\n\n  if (Math.abs(lat) <= EPSLN) {\n    x = this.x0 + this.R * dlon;\n    y = this.y0;\n  }\n  var theta = asinz(2 * Math.abs(lat / Math.PI));\n  if ((Math.abs(dlon) <= EPSLN) || (Math.abs(Math.abs(lat) - HALF_PI) <= EPSLN)) {\n    x = this.x0;\n    if (lat >= 0) {\n      y = this.y0 + Math.PI * this.R * Math.tan(0.5 * theta);\n    } else {\n      y = this.y0 + Math.PI * this.R * -Math.tan(0.5 * theta);\n    }\n    //  return(OK);\n  }\n  var al = 0.5 * Math.abs((Math.PI / dlon) - (dlon / Math.PI));\n  var asq = al * al;\n  var sinth = Math.sin(theta);\n  var costh = Math.cos(theta);\n\n  var g = costh / (sinth + costh - 1);\n  var gsq = g * g;\n  var m = g * (2 / sinth - 1);\n  var msq = m * m;\n  var con = Math.PI * this.R * (al * (g - msq) + Math.sqrt(asq * (g - msq) * (g - msq) - (msq + asq) * (gsq - msq))) / (msq + asq);\n  if (dlon < 0) {\n    con = -con;\n  }\n  x = this.x0 + con;\n  // con = Math.abs(con / (Math.PI * this.R));\n  var q = asq + g;\n  con = Math.PI * this.R * (m * q - al * Math.sqrt((msq + asq) * (asq + 1) - q * q)) / (msq + asq);\n  if (lat >= 0) {\n    // y = this.y0 + Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 + con;\n  } else {\n    // y = this.y0 - Math.PI * this.R * Math.sqrt(1 - con * con - 2 * al * con);\n    y = this.y0 - con;\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\n/* Van Der Grinten inverse equations--mapping x,y to lat/long\n  --------------------------------------------------------- */\nexport function inverse(p) {\n  var lon, lat;\n  var xx, yy, xys, c1, c2, c3;\n  var a1;\n  var m1;\n  var con;\n  var th1;\n  var d;\n\n  /* inverse equations\n    ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  con = Math.PI * this.R;\n  xx = p.x / con;\n  yy = p.y / con;\n  xys = xx * xx + yy * yy;\n  c1 = -Math.abs(yy) * (1 + xys);\n  c2 = c1 - 2 * yy * yy + xx * xx;\n  c3 = -2 * c1 + 1 + 2 * yy * yy + xys * xys;\n  d = yy * yy / c3 + (2 * c2 * c2 * c2 / c3 / c3 / c3 - 9 * c1 * c2 / c3 / c3) / 27;\n  a1 = (c1 - c2 * c2 / 3 / c3) / c3;\n  m1 = 2 * Math.sqrt(-a1 / 3);\n  con = ((3 * d) / a1) / m1;\n  if (Math.abs(con) > 1) {\n    if (con >= 0) {\n      con = 1;\n    } else {\n      con = -1;\n    }\n  }\n  th1 = Math.acos(con) / 3;\n  if (p.y >= 0) {\n    lat = (-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  } else {\n    lat = -(-m1 * Math.cos(th1 + Math.PI / 3) - c2 / 3 / c3) * Math.PI;\n  }\n\n  if (Math.abs(xx) < EPSLN) {\n    lon = this.long0;\n  } else {\n    lon = adjust_lon(this.long0 + Math.PI * (xys - 1 + Math.sqrt(1 + 2 * (xx * xx - yy * yy) + xys * xys)) / 2 / xx);\n  }\n\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['Van_der_Grinten_I', 'VanDerGrinten', 'Van_der_Grinten', 'vandg'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lon from '../common/adjust_lon';\nimport { HALF_PI, EPSLN } from '../constants/values';\nimport mlfn from '../common/mlfn';\nimport e0fn from '../common/e0fn';\nimport e1fn from '../common/e1fn';\nimport e2fn from '../common/e2fn';\nimport e3fn from '../common/e3fn';\nimport asinz from '../common/asinz';\nimport imlfn from '../common/imlfn';\nimport { vincentyDirect, vincentyInverse } from '../common/vincenty';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} es\n * @property {number} sin_p12\n * @property {number} cos_p12\n * @property {number} a\n * @property {number} f\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.sin_p12 = Math.sin(this.lat0);\n  this.cos_p12 = Math.cos(this.lat0);\n  // flattening for ellipsoid\n  this.f = this.es / (1 + Math.sqrt(1 - this.es));\n}\n\nexport function forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var dlon = adjust_lon(lon - this.long0);\n  var e0, e1, e2, e3, Mlp, Ml, c, kp, cos_c, vars, azi1;\n  if (this.sphere) {\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      p.x = this.x0 + this.a * (HALF_PI - lat) * Math.sin(dlon);\n      p.y = this.y0 - this.a * (HALF_PI - lat) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      p.x = this.x0 + this.a * (HALF_PI + lat) * Math.sin(dlon);\n      p.y = this.y0 + this.a * (HALF_PI + lat) * Math.cos(dlon);\n      return p;\n    } else {\n      // default case\n      cos_c = this.sin_p12 * sinphi + this.cos_p12 * cosphi * Math.cos(dlon);\n      c = Math.acos(cos_c);\n      kp = c ? c / Math.sin(c) : 1;\n      p.x = this.x0 + this.a * kp * cosphi * Math.sin(dlon);\n      p.y = this.y0 + this.a * kp * (this.cos_p12 * sinphi - this.sin_p12 * cosphi * Math.cos(dlon));\n      return p;\n    }\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp - Ml) * Math.sin(dlon);\n      p.y = this.y0 - (Mlp - Ml) * Math.cos(dlon);\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South Pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      Ml = this.a * mlfn(e0, e1, e2, e3, lat);\n      p.x = this.x0 + (Mlp + Ml) * Math.sin(dlon);\n      p.y = this.y0 + (Mlp + Ml) * Math.cos(dlon);\n      return p;\n    } else {\n      // Default case\n      if (Math.abs(lon) < EPSLN && Math.abs(lat - this.lat0) < EPSLN) {\n        p.x = p.y = 0;\n        return p;\n      }\n      vars = vincentyInverse(this.lat0, this.long0, lat, lon, this.a, this.f);\n      azi1 = vars.azi1;\n      p.x = vars.s12 * Math.sin(azi1);\n      p.y = vars.s12 * Math.cos(azi1);\n      return p;\n    }\n  }\n}\n\nexport function inverse(p) {\n  p.x -= this.x0;\n  p.y -= this.y0;\n  var rh, z, sinz, cosz, lon, lat, con, e0, e1, e2, e3, Mlp, M, azi1, s12, vars;\n  if (this.sphere) {\n    rh = Math.sqrt(p.x * p.x + p.y * p.y);\n    if (rh > (2 * HALF_PI * this.a)) {\n      return;\n    }\n    z = rh / this.a;\n\n    sinz = Math.sin(z);\n    cosz = Math.cos(z);\n\n    lon = this.long0;\n    if (Math.abs(rh) <= EPSLN) {\n      lat = this.lat0;\n    } else {\n      lat = asinz(cosz * this.sin_p12 + (p.y * sinz * this.cos_p12) / rh);\n      con = Math.abs(this.lat0) - HALF_PI;\n      if (Math.abs(con) <= EPSLN) {\n        if (this.lat0 >= 0) {\n          lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n        } else {\n          lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n        }\n      } else {\n        lon = adjust_lon(this.long0 + Math.atan2(p.x * sinz, rh * this.cos_p12 * cosz - p.y * this.sin_p12 * sinz));\n      }\n    }\n\n    p.x = lon;\n    p.y = lat;\n    return p;\n  } else {\n    e0 = e0fn(this.es);\n    e1 = e1fn(this.es);\n    e2 = e2fn(this.es);\n    e3 = e3fn(this.es);\n    if (Math.abs(this.sin_p12 - 1) <= EPSLN) {\n      // North pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = Mlp - rh;\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -1 * p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else if (Math.abs(this.sin_p12 + 1) <= EPSLN) {\n      // South pole case\n      Mlp = this.a * mlfn(e0, e1, e2, e3, HALF_PI);\n      rh = Math.sqrt(p.x * p.x + p.y * p.y);\n      M = rh - Mlp;\n\n      lat = imlfn(M / this.a, e0, e1, e2, e3);\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, p.y));\n      p.x = lon;\n      p.y = lat;\n      return p;\n    } else {\n      // default case\n      azi1 = Math.atan2(p.x, p.y);\n      s12 = Math.sqrt(p.x * p.x + p.y * p.y);\n      vars = vincentyDirect(this.lat0, this.long0, azi1, s12, this.a, this.f);\n\n      p.x = vars.lon2;\n      p.y = vars.lat2;\n      return p;\n    }\n  }\n}\n\nexport var names = ['Azimuthal_Equidistant', 'aeqd'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Calculates the inverse geodesic problem using Vincenty's formulae.\n * Computes the forward azimuth and ellipsoidal distance between two points\n * specified by latitude and longitude on the surface of an ellipsoid.\n *\n * @param {number} lat1 Latitude of the first point in radians.\n * @param {number} lon1 Longitude of the first point in radians.\n * @param {number} lat2 Latitude of the second point in radians.\n * @param {number} lon2 Longitude of the second point in radians.\n * @param {number} a Semi-major axis of the ellipsoid (meters).\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{ azi1: number, s12: number }} An object containing:\n *   - azi1: Forward azimuth from the first point to the second point (radians).\n *   - s12: Ellipsoidal distance between the two points (meters).\n */\nexport function vincentyInverse(lat1, lon1, lat2, lon2, a, f) {\n  const L = lon2 - lon1;\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const U2 = Math.atan((1 - f) * Math.tan(lat2));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinU2 = Math.sin(U2), cosU2 = Math.cos(U2);\n\n  let lambda = L, lambdaP, iterLimit = 100;\n  let sinLambda, cosLambda, sinSigma, cosSigma, sigma, sinAlpha, cos2Alpha, cos2SigmaM, C;\n  let uSq, A, B, deltaSigma, s;\n\n  do {\n    sinLambda = Math.sin(lambda);\n    cosLambda = Math.cos(lambda);\n    sinSigma = Math.sqrt(\n      (cosU2 * sinLambda) * (cosU2 * sinLambda)\n      + (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n      * (cosU1 * sinU2 - sinU1 * cosU2 * cosLambda)\n    );\n    if (sinSigma === 0) {\n      return { azi1: 0, s12: 0 }; // coincident points\n    }\n    cosSigma = sinU1 * sinU2 + cosU1 * cosU2 * cosLambda;\n    sigma = Math.atan2(sinSigma, cosSigma);\n    sinAlpha = cosU1 * cosU2 * sinLambda / sinSigma;\n    cos2Alpha = 1 - sinAlpha * sinAlpha;\n    cos2SigmaM = (cos2Alpha !== 0) ? (cosSigma - 2 * sinU1 * sinU2 / cos2Alpha) : 0;\n    C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n    lambdaP = lambda;\n    lambda = L + (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  } while (Math.abs(lambda - lambdaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { azi1: NaN, s12: NaN }; // formula failed to converge\n  }\n\n  uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n  deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n    - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n\n  s = (a * (1 - f)) * A * (sigma - deltaSigma);\n\n  // Forward azimuth\n  const azi1 = Math.atan2(cosU2 * sinLambda, cosU1 * sinU2 - sinU1 * cosU2 * cosLambda);\n\n  return { azi1, s12: s };\n}\n\n/**\n * Solves the direct geodetic problem using Vincenty's formulae.\n * Given a starting point, initial azimuth, and distance, computes the destination point on the ellipsoid.\n *\n * @param {number} lat1 Latitude of the starting point in radians.\n * @param {number} lon1 Longitude of the starting point in radians.\n * @param {number} azi1 Initial azimuth (forward azimuth) in radians.\n * @param {number} s12 Distance to travel from the starting point in meters.\n * @param {number} a Semi-major axis of the ellipsoid in meters.\n * @param {number} f Flattening of the ellipsoid.\n * @returns {{lat2: number, lon2: number}} The latitude and longitude (in radians) of the destination point.\n */\nexport function vincentyDirect(lat1, lon1, azi1, s12, a, f) {\n  const U1 = Math.atan((1 - f) * Math.tan(lat1));\n  const sinU1 = Math.sin(U1), cosU1 = Math.cos(U1);\n  const sinAlpha1 = Math.sin(azi1), cosAlpha1 = Math.cos(azi1);\n\n  const sigma1 = Math.atan2(sinU1, cosU1 * cosAlpha1);\n  const sinAlpha = cosU1 * sinAlpha1;\n  const cos2Alpha = 1 - sinAlpha * sinAlpha;\n  const uSq = cos2Alpha * (a * a - (a * (1 - f)) * (a * (1 - f))) / ((a * (1 - f)) * (a * (1 - f)));\n  const A = 1 + uSq / 16384 * (4096 + uSq * (-768 + uSq * (320 - 175 * uSq)));\n  const B = uSq / 1024 * (256 + uSq * (-128 + uSq * (74 - 47 * uSq)));\n\n  let sigma = s12 / ((a * (1 - f)) * A), sigmaP, iterLimit = 100;\n  let cos2SigmaM, sinSigma, cosSigma, deltaSigma;\n\n  do {\n    cos2SigmaM = Math.cos(2 * sigma1 + sigma);\n    sinSigma = Math.sin(sigma);\n    cosSigma = Math.cos(sigma);\n    deltaSigma = B * sinSigma * (cos2SigmaM + B / 4 * (cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)\n      - B / 6 * cos2SigmaM * (-3 + 4 * sinSigma * sinSigma) * (-3 + 4 * cos2SigmaM * cos2SigmaM)));\n    sigmaP = sigma;\n    sigma = s12 / ((a * (1 - f)) * A) + deltaSigma;\n  } while (Math.abs(sigma - sigmaP) > 1e-12 && --iterLimit > 0);\n\n  if (iterLimit === 0) {\n    return { lat2: NaN, lon2: NaN };\n  }\n\n  const tmp = sinU1 * sinSigma - cosU1 * cosSigma * cosAlpha1;\n  const lat2 = Math.atan2(\n    sinU1 * cosSigma + cosU1 * sinSigma * cosAlpha1,\n    (1 - f) * Math.sqrt(sinAlpha * sinAlpha + tmp * tmp)\n  );\n  const lambda = Math.atan2(\n    sinSigma * sinAlpha1,\n    cosU1 * cosSigma - sinU1 * sinSigma * cosAlpha1\n  );\n  const C = f / 16 * cos2Alpha * (4 + f * (4 - 3 * cos2Alpha));\n  const L = lambda - (1 - C) * f * sinAlpha\n    * (sigma + C * sinSigma * (cos2SigmaM + C * cosSigma * (-1 + 2 * cos2SigmaM * cos2SigmaM)));\n  const lon2 = lon1 + L;\n\n  return { lat2, lon2 };\n}\n","import adjust_lon from '../common/adjust_lon';\nimport asinz from '../common/asinz';\nimport { EPSLN, HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} sin_p14\n * @property {number} cos_p14\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  // double temp;      /* temporary variable    */\n\n  /* Place parameters in static storage for common use\n      ------------------------------------------------- */\n  this.sin_p14 = Math.sin(this.lat0);\n  this.cos_p14 = Math.cos(this.lat0);\n}\n\n/* Orthographic forward equations--mapping lat,long to x,y\n    --------------------------------------------------- */\nexport function forward(p) {\n  var sinphi, cosphi; /* sin and cos value        */\n  var dlon; /* delta longitude value      */\n  var coslon; /* cos of longitude        */\n  var ksp; /* scale factor          */\n  var g, x, y;\n  var lon = p.x;\n  var lat = p.y;\n  /* Forward equations\n      ----------------- */\n  dlon = adjust_lon(lon - this.long0);\n\n  sinphi = Math.sin(lat);\n  cosphi = Math.cos(lat);\n\n  coslon = Math.cos(dlon);\n  g = this.sin_p14 * sinphi + this.cos_p14 * cosphi * coslon;\n  ksp = 1;\n  if ((g > 0) || (Math.abs(g) <= EPSLN)) {\n    x = this.a * ksp * cosphi * Math.sin(dlon);\n    y = this.y0 + this.a * ksp * (this.cos_p14 * sinphi - this.sin_p14 * cosphi * coslon);\n  }\n  p.x = x;\n  p.y = y;\n  return p;\n}\n\nexport function inverse(p) {\n  var rh; /* height above ellipsoid      */\n  var z; /* angle          */\n  var sinz, cosz; /* sin of z and cos of z      */\n  var con;\n  var lon, lat;\n  /* Inverse equations\n      ----------------- */\n  p.x -= this.x0;\n  p.y -= this.y0;\n  rh = Math.sqrt(p.x * p.x + p.y * p.y);\n  z = asinz(rh / this.a);\n\n  sinz = Math.sin(z);\n  cosz = Math.cos(z);\n\n  lon = this.long0;\n  if (Math.abs(rh) <= EPSLN) {\n    lat = this.lat0;\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lat = asinz(cosz * this.sin_p14 + (p.y * sinz * this.cos_p14) / rh);\n  con = Math.abs(this.lat0) - HALF_PI;\n  if (Math.abs(con) <= EPSLN) {\n    if (this.lat0 >= 0) {\n      lon = adjust_lon(this.long0 + Math.atan2(p.x, -p.y));\n    } else {\n      lon = adjust_lon(this.long0 - Math.atan2(-p.x, p.y));\n    }\n    p.x = lon;\n    p.y = lat;\n    return p;\n  }\n  lon = adjust_lon(this.long0 + Math.atan2((p.x * sinz), rh * this.cos_p14 * cosz - p.y * this.sin_p14 * sinz));\n  p.x = lon;\n  p.y = lat;\n  return p;\n}\n\nexport var names = ['ortho'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// QSC projection rewritten from the original PROJ4\n// https://github.com/OSGeo/proj.4/blob/master/src/PJ_qsc.c\n\nimport { EPSLN, TWO_PI, SPI, HALF_PI, FORTPI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} face\n * @property {number} x0\n * @property {number} y0\n * @property {number} es\n * @property {number} one_minus_f\n * @property {number} one_minus_f_squared\n */\n\n/* constants */\nvar FACE_ENUM = {\n  FRONT: 1,\n  RIGHT: 2,\n  BACK: 3,\n  LEFT: 4,\n  TOP: 5,\n  BOTTOM: 6\n};\n\nvar AREA_ENUM = {\n  AREA_0: 1,\n  AREA_1: 2,\n  AREA_2: 3,\n  AREA_3: 4\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.lat0 = this.lat0 || 0;\n  this.long0 = this.long0 || 0;\n  this.lat_ts = this.lat_ts || 0;\n  this.title = this.title || 'Quadrilateralized Spherical Cube';\n\n  /* Determine the cube face from the center of projection. */\n  if (this.lat0 >= HALF_PI - FORTPI / 2.0) {\n    this.face = FACE_ENUM.TOP;\n  } else if (this.lat0 <= -(HALF_PI - FORTPI / 2.0)) {\n    this.face = FACE_ENUM.BOTTOM;\n  } else if (Math.abs(this.long0) <= FORTPI) {\n    this.face = FACE_ENUM.FRONT;\n  } else if (Math.abs(this.long0) <= HALF_PI + FORTPI) {\n    this.face = this.long0 > 0.0 ? FACE_ENUM.RIGHT : FACE_ENUM.LEFT;\n  } else {\n    this.face = FACE_ENUM.BACK;\n  }\n\n  /* Fill in useful values for the ellipsoid <-> sphere shift\n   * described in [LK12]. */\n  if (this.es !== 0) {\n    this.one_minus_f = 1 - (this.a - this.b) / this.a;\n    this.one_minus_f_squared = this.one_minus_f * this.one_minus_f;\n  }\n}\n\n// QSC forward equations--mapping lat,long to x,y\n// -----------------------------------------------------------------\nexport function forward(p) {\n  var xy = { x: 0, y: 0 };\n  var lat, lon;\n  var theta, phi;\n  var t, mu;\n  /* nu; */\n  var area = { value: 0 };\n\n  // move lon according to projection's lon\n  p.x -= this.long0;\n\n  /* Convert the geodetic latitude to a geocentric latitude.\n   * This corresponds to the shift from the ellipsoid to the sphere\n   * described in [LK12]. */\n  if (this.es !== 0) { // if (P->es != 0) {\n    lat = Math.atan(this.one_minus_f_squared * Math.tan(p.y));\n  } else {\n    lat = p.y;\n  }\n\n  /* Convert the input lat, lon into theta, phi as used by QSC.\n   * This depends on the cube face and the area on it.\n   * For the top and bottom face, we can compute theta and phi\n   * directly from phi, lam. For the other faces, we must use\n   * unit sphere cartesian coordinates as an intermediate step. */\n  lon = p.x; // lon = lp.lam;\n  if (this.face === FACE_ENUM.TOP) {\n    phi = HALF_PI - lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = lon - HALF_PI;\n    } else if (lon > HALF_PI + FORTPI || lon <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = (lon > 0.0 ? lon - SPI : lon + SPI);\n    } else if (lon > -(HALF_PI + FORTPI) && lon <= -FORTPI) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = lon + HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = lon;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = HALF_PI + lat;\n    if (lon >= FORTPI && lon <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n      theta = -lon + HALF_PI;\n    } else if (lon < FORTPI && lon >= -FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta = -lon;\n    } else if (lon < -FORTPI && lon >= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = -lon - HALF_PI;\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta = (lon > 0.0 ? -lon + SPI : -lon - SPI);\n    }\n  } else {\n    var q, r, s;\n    var sinlat, coslat;\n    var sinlon, coslon;\n\n    if (this.face === FACE_ENUM.RIGHT) {\n      lon = qsc_shift_lon_origin(lon, +HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lon = qsc_shift_lon_origin(lon, +SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lon = qsc_shift_lon_origin(lon, -HALF_PI);\n    }\n    sinlat = Math.sin(lat);\n    coslat = Math.cos(lat);\n    sinlon = Math.sin(lon);\n    coslon = Math.cos(lon);\n    q = coslat * coslon;\n    r = coslat * sinlon;\n    s = sinlat;\n\n    if (this.face === FACE_ENUM.FRONT) {\n      phi = Math.acos(q);\n      theta = qsc_fwd_equat_face_theta(phi, s, r, area);\n    } else if (this.face === FACE_ENUM.RIGHT) {\n      phi = Math.acos(r);\n      theta = qsc_fwd_equat_face_theta(phi, s, -q, area);\n    } else if (this.face === FACE_ENUM.BACK) {\n      phi = Math.acos(-q);\n      theta = qsc_fwd_equat_face_theta(phi, s, -r, area);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      phi = Math.acos(-r);\n      theta = qsc_fwd_equat_face_theta(phi, s, q, area);\n    } else {\n      /* Impossible */\n      phi = theta = 0;\n      area.value = AREA_ENUM.AREA_0;\n    }\n  }\n\n  /* Compute mu and nu for the area of definition.\n   * For mu, see Eq. (3-21) in [OL76], but note the typos:\n   * compare with Eq. (3-14). For nu, see Eq. (3-38). */\n  mu = Math.atan((12 / SPI) * (theta + Math.acos(Math.sin(theta) * Math.cos(FORTPI)) - HALF_PI));\n  t = Math.sqrt((1 - Math.cos(phi)) / (Math.cos(mu) * Math.cos(mu)) / (1 - Math.cos(Math.atan(1 / Math.cos(theta)))));\n\n  /* Apply the result to the real area. */\n  if (area.value === AREA_ENUM.AREA_1) {\n    mu += HALF_PI;\n  } else if (area.value === AREA_ENUM.AREA_2) {\n    mu += SPI;\n  } else if (area.value === AREA_ENUM.AREA_3) {\n    mu += 1.5 * SPI;\n  }\n\n  /* Now compute x, y from mu and nu */\n  xy.x = t * Math.cos(mu);\n  xy.y = t * Math.sin(mu);\n  xy.x = xy.x * this.a + this.x0;\n  xy.y = xy.y * this.a + this.y0;\n\n  p.x = xy.x;\n  p.y = xy.y;\n  return p;\n}\n\n// QSC inverse equations--mapping x,y to lat/long\n// -----------------------------------------------------------------\nexport function inverse(p) {\n  var lp = { lam: 0, phi: 0 };\n  var mu, nu, cosmu, tannu;\n  var tantheta, theta, cosphi, phi;\n  var t;\n  var area = { value: 0 };\n\n  /* de-offset */\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  /* Convert the input x, y to the mu and nu angles as used by QSC.\n   * This depends on the area of the cube face. */\n  nu = Math.atan(Math.sqrt(p.x * p.x + p.y * p.y));\n  mu = Math.atan2(p.y, p.x);\n  if (p.x >= 0.0 && p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_0;\n  } else if (p.y >= 0.0 && p.y >= Math.abs(p.x)) {\n    area.value = AREA_ENUM.AREA_1;\n    mu -= HALF_PI;\n  } else if (p.x < 0.0 && -p.x >= Math.abs(p.y)) {\n    area.value = AREA_ENUM.AREA_2;\n    mu = (mu < 0.0 ? mu + SPI : mu - SPI);\n  } else {\n    area.value = AREA_ENUM.AREA_3;\n    mu += HALF_PI;\n  }\n\n  /* Compute phi and theta for the area of definition.\n   * The inverse projection is not described in the original paper, but some\n   * good hints can be found here (as of 2011-12-14):\n   * http://fits.gsfc.nasa.gov/fitsbits/saf.93/saf.9302\n   * (search for \"Message-Id: <9302181759.AA25477 at fits.cv.nrao.edu>\") */\n  t = (SPI / 12) * Math.tan(mu);\n  tantheta = Math.sin(t) / (Math.cos(t) - (1 / Math.sqrt(2)));\n  theta = Math.atan(tantheta);\n  cosmu = Math.cos(mu);\n  tannu = Math.tan(nu);\n  cosphi = 1 - cosmu * cosmu * tannu * tannu * (1 - Math.cos(Math.atan(1 / Math.cos(theta))));\n  if (cosphi < -1) {\n    cosphi = -1;\n  } else if (cosphi > +1) {\n    cosphi = +1;\n  }\n\n  /* Apply the result to the real area on the cube face.\n   * For the top and bottom face, we can compute phi and lam directly.\n   * For the other faces, we must use unit sphere cartesian coordinates\n   * as an intermediate step. */\n  if (this.face === FACE_ENUM.TOP) {\n    phi = Math.acos(cosphi);\n    lp.phi = HALF_PI - phi;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = (theta < 0.0 ? theta + SPI : theta - SPI);\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = theta;\n    }\n  } else if (this.face === FACE_ENUM.BOTTOM) {\n    phi = Math.acos(cosphi);\n    lp.phi = phi - HALF_PI;\n    if (area.value === AREA_ENUM.AREA_0) {\n      lp.lam = -theta + HALF_PI;\n    } else if (area.value === AREA_ENUM.AREA_1) {\n      lp.lam = -theta;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      lp.lam = -theta - HALF_PI;\n    } else /* area.value == AREA_ENUM.AREA_3 */ {\n      lp.lam = (theta < 0.0 ? -theta - SPI : -theta + SPI);\n    }\n  } else {\n    /* Compute phi and lam via cartesian unit sphere coordinates. */\n    var q, r, s;\n    q = cosphi;\n    t = q * q;\n    if (t >= 1) {\n      s = 0;\n    } else {\n      s = Math.sqrt(1 - t) * Math.sin(theta);\n    }\n    t += s * s;\n    if (t >= 1) {\n      r = 0;\n    } else {\n      r = Math.sqrt(1 - t);\n    }\n    /* Rotate q,r,s into the correct area. */\n    if (area.value === AREA_ENUM.AREA_1) {\n      t = r;\n      r = -s;\n      s = t;\n    } else if (area.value === AREA_ENUM.AREA_2) {\n      r = -r;\n      s = -s;\n    } else if (area.value === AREA_ENUM.AREA_3) {\n      t = r;\n      r = s;\n      s = -t;\n    }\n    /* Rotate q,r,s into the correct cube face. */\n    if (this.face === FACE_ENUM.RIGHT) {\n      t = q;\n      q = -r;\n      r = t;\n    } else if (this.face === FACE_ENUM.BACK) {\n      q = -q;\n      r = -r;\n    } else if (this.face === FACE_ENUM.LEFT) {\n      t = q;\n      q = r;\n      r = -t;\n    }\n    /* Now compute phi and lam from the unit sphere coordinates. */\n    lp.phi = Math.acos(-s) - HALF_PI;\n    lp.lam = Math.atan2(r, q);\n    if (this.face === FACE_ENUM.RIGHT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -HALF_PI);\n    } else if (this.face === FACE_ENUM.BACK) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, -SPI);\n    } else if (this.face === FACE_ENUM.LEFT) {\n      lp.lam = qsc_shift_lon_origin(lp.lam, +HALF_PI);\n    }\n  }\n\n  /* Apply the shift from the sphere to the ellipsoid as described\n   * in [LK12]. */\n  if (this.es !== 0) {\n    var invert_sign;\n    var tanphi, xa;\n    invert_sign = (lp.phi < 0 ? 1 : 0);\n    tanphi = Math.tan(lp.phi);\n    xa = this.b / Math.sqrt(tanphi * tanphi + this.one_minus_f_squared);\n    lp.phi = Math.atan(Math.sqrt(this.a * this.a - xa * xa) / (this.one_minus_f * xa));\n    if (invert_sign) {\n      lp.phi = -lp.phi;\n    }\n  }\n\n  lp.lam += this.long0;\n  p.x = lp.lam;\n  p.y = lp.phi;\n  return p;\n}\n\n/* Helper function for forward projection: compute the theta angle\n * and determine the area number. */\nfunction qsc_fwd_equat_face_theta(phi, y, x, area) {\n  var theta;\n  if (phi < EPSLN) {\n    area.value = AREA_ENUM.AREA_0;\n    theta = 0.0;\n  } else {\n    theta = Math.atan2(y, x);\n    if (Math.abs(theta) <= FORTPI) {\n      area.value = AREA_ENUM.AREA_0;\n    } else if (theta > FORTPI && theta <= HALF_PI + FORTPI) {\n      area.value = AREA_ENUM.AREA_1;\n      theta -= HALF_PI;\n    } else if (theta > HALF_PI + FORTPI || theta <= -(HALF_PI + FORTPI)) {\n      area.value = AREA_ENUM.AREA_2;\n      theta = (theta >= 0.0 ? theta - SPI : theta + SPI);\n    } else {\n      area.value = AREA_ENUM.AREA_3;\n      theta += HALF_PI;\n    }\n  }\n  return theta;\n}\n\n/* Helper function: shift the longitude. */\nfunction qsc_shift_lon_origin(lon, offset) {\n  var slon = lon + offset;\n  if (slon < -SPI) {\n    slon += TWO_PI;\n  } else if (slon > +SPI) {\n    slon -= TWO_PI;\n  }\n  return slon;\n}\n\nexport var names = ['Quadrilateralized Spherical Cube', 'Quadrilateralized_Spherical_Cube', 'qsc'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","// Robinson projection\n// Based on https://github.com/OSGeo/proj.4/blob/master/src/PJ_robin.c\n// Polynomial coeficients from http://article.gmane.org/gmane.comp.gis.proj-4.devel/6039\n\nimport { HALF_PI, D2R, R2D, EPSLN } from '../constants/values';\nimport adjust_lon from '../common/adjust_lon';\n\nvar COEFS_X = [\n  [1.0000, 2.2199e-17, -7.15515e-05, 3.1103e-06],\n  [0.9986, -0.000482243, -2.4897e-05, -1.3309e-06],\n  [0.9954, -0.00083103, -4.48605e-05, -9.86701e-07],\n  [0.9900, -0.00135364, -5.9661e-05, 3.6777e-06],\n  [0.9822, -0.00167442, -4.49547e-06, -5.72411e-06],\n  [0.9730, -0.00214868, -9.03571e-05, 1.8736e-08],\n  [0.9600, -0.00305085, -9.00761e-05, 1.64917e-06],\n  [0.9427, -0.00382792, -6.53386e-05, -2.6154e-06],\n  [0.9216, -0.00467746, -0.00010457, 4.81243e-06],\n  [0.8962, -0.00536223, -3.23831e-05, -5.43432e-06],\n  [0.8679, -0.00609363, -0.000113898, 3.32484e-06],\n  [0.8350, -0.00698325, -6.40253e-05, 9.34959e-07],\n  [0.7986, -0.00755338, -5.00009e-05, 9.35324e-07],\n  [0.7597, -0.00798324, -3.5971e-05, -2.27626e-06],\n  [0.7186, -0.00851367, -7.01149e-05, -8.6303e-06],\n  [0.6732, -0.00986209, -0.000199569, 1.91974e-05],\n  [0.6213, -0.010418, 8.83923e-05, 6.24051e-06],\n  [0.5722, -0.00906601, 0.000182, 6.24051e-06],\n  [0.5322, -0.00677797, 0.000275608, 6.24051e-06]\n];\n\nvar COEFS_Y = [\n  [-5.20417e-18, 0.0124, 1.21431e-18, -8.45284e-11],\n  [0.0620, 0.0124, -1.26793e-09, 4.22642e-10],\n  [0.1240, 0.0124, 5.07171e-09, -1.60604e-09],\n  [0.1860, 0.0123999, -1.90189e-08, 6.00152e-09],\n  [0.2480, 0.0124002, 7.10039e-08, -2.24e-08],\n  [0.3100, 0.0123992, -2.64997e-07, 8.35986e-08],\n  [0.3720, 0.0124029, 9.88983e-07, -3.11994e-07],\n  [0.4340, 0.0123893, -3.69093e-06, -4.35621e-07],\n  [0.4958, 0.0123198, -1.02252e-05, -3.45523e-07],\n  [0.5571, 0.0121916, -1.54081e-05, -5.82288e-07],\n  [0.6176, 0.0119938, -2.41424e-05, -5.25327e-07],\n  [0.6769, 0.011713, -3.20223e-05, -5.16405e-07],\n  [0.7346, 0.0113541, -3.97684e-05, -6.09052e-07],\n  [0.7903, 0.0109107, -4.89042e-05, -1.04739e-06],\n  [0.8435, 0.0103431, -6.4615e-05, -1.40374e-09],\n  [0.8936, 0.00969686, -6.4636e-05, -8.547e-06],\n  [0.9394, 0.00840947, -0.000192841, -4.2106e-06],\n  [0.9761, 0.00616527, -0.000256, -4.2106e-06],\n  [1.0000, 0.00328947, -0.000319159, -4.2106e-06]\n];\n\nvar FXC = 0.8487;\nvar FYC = 1.3523;\nvar C1 = R2D / 5; // rad to 5-degree interval\nvar RC1 = 1 / C1;\nvar NODES = 18;\n\nvar poly3_val = function (coefs, x) {\n  return coefs[0] + x * (coefs[1] + x * (coefs[2] + x * coefs[3]));\n};\n\nvar poly3_der = function (coefs, x) {\n  return coefs[1] + x * (2 * coefs[2] + x * 3 * coefs[3]);\n};\n\nfunction newton_rapshon(f_df, start, max_err, iters) {\n  var x = start;\n  for (; iters; --iters) {\n    var upd = f_df(x);\n    x -= upd;\n    if (Math.abs(upd) < max_err) {\n      break;\n    }\n  }\n  return x;\n}\n\nexport function init() {\n  this.x0 = this.x0 || 0;\n  this.y0 = this.y0 || 0;\n  this.long0 = this.long0 || 0;\n  this.es = 0;\n  this.title = this.title || 'Robinson';\n}\n\nexport function forward(ll) {\n  var lon = adjust_lon(ll.x - this.long0);\n\n  var dphi = Math.abs(ll.y);\n  var i = Math.floor(dphi * C1);\n  if (i < 0) {\n    i = 0;\n  } else if (i >= NODES) {\n    i = NODES - 1;\n  }\n  dphi = R2D * (dphi - RC1 * i);\n  var xy = {\n    x: poly3_val(COEFS_X[i], dphi) * lon,\n    y: poly3_val(COEFS_Y[i], dphi)\n  };\n  if (ll.y < 0) {\n    xy.y = -xy.y;\n  }\n\n  xy.x = xy.x * this.a * FXC + this.x0;\n  xy.y = xy.y * this.a * FYC + this.y0;\n  return xy;\n}\n\nexport function inverse(xy) {\n  var ll = {\n    x: (xy.x - this.x0) / (this.a * FXC),\n    y: Math.abs(xy.y - this.y0) / (this.a * FYC)\n  };\n\n  if (ll.y >= 1) { // pathologic case\n    ll.x /= COEFS_X[NODES][0];\n    ll.y = xy.y < 0 ? -HALF_PI : HALF_PI;\n  } else {\n    // find table interval\n    var i = Math.floor(ll.y * NODES);\n    if (i < 0) {\n      i = 0;\n    } else if (i >= NODES) {\n      i = NODES - 1;\n    }\n    for (;;) {\n      if (COEFS_Y[i][0] > ll.y) {\n        --i;\n      } else if (COEFS_Y[i + 1][0] <= ll.y) {\n        ++i;\n      } else {\n        break;\n      }\n    }\n    // linear interpolation in 5 degree interval\n    var coefs = COEFS_Y[i];\n    var t = 5 * (ll.y - coefs[0]) / (COEFS_Y[i + 1][0] - coefs[0]);\n    // find t so that poly3_val(coefs, t) = ll.y\n    t = newton_rapshon(function (x) {\n      return (poly3_val(coefs, x) - ll.y) / poly3_der(coefs, x);\n    }, t, EPSLN, 100);\n\n    ll.x /= poly3_val(COEFS_X[i], t);\n    ll.y = (5 * i + t) * D2R;\n    if (xy.y < 0) {\n      ll.y = -ll.y;\n    }\n  }\n\n  ll.x = adjust_lon(ll.x + this.long0);\n  return ll;\n}\n\nexport var names = ['Robinson', 'robin'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import {\n  geodeticToGeocentric,\n  geocentricToGeodetic\n} from '../datumUtils';\n\nexport function init() {\n  this.name = 'geocent';\n}\n\nexport function forward(p) {\n  var point = geodeticToGeocentric(p, this.es, this.a);\n  return point;\n}\n\nexport function inverse(p) {\n  var point = geocentricToGeodetic(p, this.es, this.a, this.b);\n  return point;\n}\n\nexport var names = ['Geocentric', 'geocentric', 'geocent', 'Geocent'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import { D2R, HALF_PI, EPSLN } from '../constants/values';\nimport hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} mode\n * @property {number} sinph0\n * @property {number} cosph0\n * @property {number} pn1\n * @property {number} h\n * @property {number} rp\n * @property {number} p\n * @property {number} h1\n * @property {number} pfact\n * @property {number} es\n * @property {number} tilt\n * @property {number} azi\n * @property {number} cg\n * @property {number} sg\n * @property {number} cw\n * @property {number} sw\n */\n\nvar mode = {\n  N_POLE: 0,\n  S_POLE: 1,\n  EQUIT: 2,\n  OBLIQ: 3\n};\n\nvar params = {\n  h: { def: 100000, num: true }, // default is Karman line, no default in PROJ.7\n  azi: { def: 0, num: true, degrees: true }, // default is North\n  tilt: { def: 0, num: true, degrees: true }, // default is Nadir\n  long0: { def: 0, num: true }, // default is Greenwich, conversion to rad is automatic\n  lat0: { def: 0, num: true } // default is Equator, conversion to rad is automatic\n};\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  Object.keys(params).forEach(function (p) {\n    if (typeof this[p] === 'undefined') {\n      this[p] = params[p].def;\n    } else if (params[p].num && isNaN(this[p])) {\n      throw new Error('Invalid parameter value, must be numeric ' + p + ' = ' + this[p]);\n    } else if (params[p].num) {\n      this[p] = parseFloat(this[p]);\n    }\n    if (params[p].degrees) {\n      this[p] = this[p] * D2R;\n    }\n  }.bind(this));\n\n  if (Math.abs((Math.abs(this.lat0) - HALF_PI)) < EPSLN) {\n    this.mode = this.lat0 < 0 ? mode.S_POLE : mode.N_POLE;\n  } else if (Math.abs(this.lat0) < EPSLN) {\n    this.mode = mode.EQUIT;\n  } else {\n    this.mode = mode.OBLIQ;\n    this.sinph0 = Math.sin(this.lat0);\n    this.cosph0 = Math.cos(this.lat0);\n  }\n\n  this.pn1 = this.h / this.a; // Normalize relative to the Earth's radius\n\n  if (this.pn1 <= 0 || this.pn1 > 1e10) {\n    throw new Error('Invalid height');\n  }\n\n  this.p = 1 + this.pn1;\n  this.rp = 1 / this.p;\n  this.h1 = 1 / this.pn1;\n  this.pfact = (this.p + 1) * this.h1;\n  this.es = 0;\n\n  var omega = this.tilt;\n  var gamma = this.azi;\n  this.cg = Math.cos(gamma);\n  this.sg = Math.sin(gamma);\n  this.cw = Math.cos(omega);\n  this.sw = Math.sin(omega);\n}\n\nexport function forward(p) {\n  p.x -= this.long0;\n  var sinphi = Math.sin(p.y);\n  var cosphi = Math.cos(p.y);\n  var coslam = Math.cos(p.x);\n  var x, y;\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y = this.sinph0 * sinphi + this.cosph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y = cosphi * coslam;\n      break;\n    case mode.S_POLE:\n      y = -sinphi;\n      break;\n    case mode.N_POLE:\n      y = sinphi;\n      break;\n  }\n  y = this.pn1 / (this.p - y);\n  x = y * cosphi * Math.sin(p.x);\n\n  switch (this.mode) {\n    case mode.OBLIQ:\n      y *= this.cosph0 * sinphi - this.sinph0 * cosphi * coslam;\n      break;\n    case mode.EQUIT:\n      y *= sinphi;\n      break;\n    case mode.N_POLE:\n      y *= -(cosphi * coslam);\n      break;\n    case mode.S_POLE:\n      y *= cosphi * coslam;\n      break;\n  }\n\n  // Tilt\n  var yt, ba;\n  yt = y * this.cg + x * this.sg;\n  ba = 1 / (yt * this.sw * this.h1 + this.cw);\n  x = (x * this.cg - y * this.sg) * this.cw * ba;\n  y = yt * ba;\n\n  p.x = x * this.a;\n  p.y = y * this.a;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x /= this.a;\n  p.y /= this.a;\n  var r = { x: p.x, y: p.y };\n\n  // Un-Tilt\n  var bm, bq, yt;\n  yt = 1 / (this.pn1 - p.y * this.sw);\n  bm = this.pn1 * p.x * yt;\n  bq = this.pn1 * p.y * this.cw * yt;\n  p.x = bm * this.cg + bq * this.sg;\n  p.y = bq * this.cg - bm * this.sg;\n\n  var rh = hypot(p.x, p.y);\n  if (Math.abs(rh) < EPSLN) {\n    r.x = 0;\n    r.y = p.y;\n  } else {\n    var cosz, sinz;\n    sinz = 1 - rh * rh * this.pfact;\n    sinz = (this.p - Math.sqrt(sinz)) / (this.pn1 / rh + rh / this.pn1);\n    cosz = Math.sqrt(1 - sinz * sinz);\n    switch (this.mode) {\n      case mode.OBLIQ:\n        r.y = Math.asin(cosz * this.sinph0 + p.y * sinz * this.cosph0 / rh);\n        p.y = (cosz - this.sinph0 * Math.sin(r.y)) * rh;\n        p.x *= sinz * this.cosph0;\n        break;\n      case mode.EQUIT:\n        r.y = Math.asin(p.y * sinz / rh);\n        p.y = cosz * rh;\n        p.x *= sinz;\n        break;\n      case mode.N_POLE:\n        r.y = Math.asin(cosz);\n        p.y = -p.y;\n        break;\n      case mode.S_POLE:\n        r.y = -Math.asin(cosz);\n        break;\n    }\n    r.x = Math.atan2(p.x, p.y);\n  }\n\n  p.x = r.x + this.long0;\n  p.y = r.y;\n  return p;\n}\n\nexport var names = ['Tilted_Perspective', 'tpers'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import hypot from '../common/hypot';\n\n/**\n * @typedef {Object} LocalThis\n * @property {1 | 0} flip_axis\n * @property {number} h\n * @property {number} radius_g_1\n * @property {number} radius_g\n * @property {number} radius_p\n * @property {number} radius_p2\n * @property {number} radius_p_inv2\n * @property {'ellipse'|'sphere'} shape\n * @property {number} C\n * @property {string} sweep\n * @property {number} es\n */\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  this.flip_axis = (this.sweep === 'x' ? 1 : 0);\n  this.h = Number(this.h);\n  this.radius_g_1 = this.h / this.a;\n\n  if (this.radius_g_1 <= 0 || this.radius_g_1 > 1e10) {\n    throw new Error();\n  }\n\n  this.radius_g = 1.0 + this.radius_g_1;\n  this.C = this.radius_g * this.radius_g - 1.0;\n\n  if (this.es !== 0.0) {\n    var one_es = 1.0 - this.es;\n    var rone_es = 1 / one_es;\n\n    this.radius_p = Math.sqrt(one_es);\n    this.radius_p2 = one_es;\n    this.radius_p_inv2 = rone_es;\n\n    this.shape = 'ellipse'; // Use as a condition in the forward and inverse functions.\n  } else {\n    this.radius_p = 1.0;\n    this.radius_p2 = 1.0;\n    this.radius_p_inv2 = 1.0;\n\n    this.shape = 'sphere'; // Use as a condition in the forward and inverse functions.\n  }\n\n  if (!this.title) {\n    this.title = 'Geostationary Satellite View';\n  }\n}\n\nfunction forward(p) {\n  var lon = p.x;\n  var lat = p.y;\n  var tmp, v_x, v_y, v_z;\n  lon = lon - this.long0;\n\n  if (this.shape === 'ellipse') {\n    lat = Math.atan(this.radius_p2 * Math.tan(lat));\n    var r = this.radius_p / hypot(this.radius_p * Math.cos(lat), Math.sin(lat));\n\n    v_x = r * Math.cos(lon) * Math.cos(lat);\n    v_y = r * Math.sin(lon) * Math.cos(lat);\n    v_z = r * Math.sin(lat);\n\n    if (((this.radius_g - v_x) * v_x - v_y * v_y - v_z * v_z * this.radius_p_inv2) < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    tmp = this.radius_g - v_x;\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  } else if (this.shape === 'sphere') {\n    tmp = Math.cos(lat);\n    v_x = Math.cos(lon) * tmp;\n    v_y = Math.sin(lon) * tmp;\n    v_z = Math.sin(lat);\n    tmp = this.radius_g - v_x;\n\n    if (this.flip_axis) {\n      p.x = this.radius_g_1 * Math.atan(v_y / hypot(v_z, tmp));\n      p.y = this.radius_g_1 * Math.atan(v_z / tmp);\n    } else {\n      p.x = this.radius_g_1 * Math.atan(v_y / tmp);\n      p.y = this.radius_g_1 * Math.atan(v_z / hypot(v_y, tmp));\n    }\n  }\n  p.x = p.x * this.a;\n  p.y = p.y * this.a;\n  return p;\n}\n\nfunction inverse(p) {\n  var v_x = -1.0;\n  var v_y = 0.0;\n  var v_z = 0.0;\n  var a, b, det, k;\n\n  p.x = p.x / this.a;\n  p.y = p.y / this.a;\n\n  if (this.shape === 'ellipse') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * hypot(1.0, v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * hypot(1.0, v_y);\n    }\n\n    var v_zp = v_z / this.radius_p;\n    a = v_y * v_y + v_zp * v_zp + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n    p.y = Math.atan(this.radius_p_inv2 * Math.tan(p.y));\n  } else if (this.shape === 'sphere') {\n    if (this.flip_axis) {\n      v_z = Math.tan(p.y / this.radius_g_1);\n      v_y = Math.tan(p.x / this.radius_g_1) * Math.sqrt(1.0 + v_z * v_z);\n    } else {\n      v_y = Math.tan(p.x / this.radius_g_1);\n      v_z = Math.tan(p.y / this.radius_g_1) * Math.sqrt(1.0 + v_y * v_y);\n    }\n\n    a = v_y * v_y + v_z * v_z + v_x * v_x;\n    b = 2 * this.radius_g * v_x;\n    det = (b * b) - 4 * a * this.C;\n    if (det < 0.0) {\n      p.x = Number.NaN;\n      p.y = Number.NaN;\n      return p;\n    }\n\n    k = (-b - Math.sqrt(det)) / (2.0 * a);\n    v_x = this.radius_g + k * v_x;\n    v_y *= k;\n    v_z *= k;\n\n    p.x = Math.atan2(v_y, v_x);\n    p.y = Math.atan(v_z * Math.cos(p.x) / v_x);\n  }\n  p.x = p.x + this.long0;\n  return p;\n}\n\nexport var names = ['Geostationary Satellite View', 'Geostationary_Satellite', 'geos'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","/**\n * Copyright 2018 Bernie Jenny, Monash University, Melbourne, Australia.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * Equal Earth is a projection inspired by the Robinson projection, but unlike\n * the Robinson projection retains the relative size of areas. The projection\n * was designed in 2018 by Bojan Savric, Tom Patterson and Bernhard Jenny.\n *\n * Publication:\n * Bojan Savric, Tom Patterson & Bernhard Jenny (2018). The Equal Earth map\n * projection, International Journal of Geographical Information Science,\n * DOI: 10.1080/13658816.2018.1504949\n *\n * Code released August 2018\n * Ported to JavaScript and adapted for mapshaper-proj by Matthew Bloch August 2018\n * Modified for proj4js by Andreas Hocevar by Andreas Hocevar March 2024\n */\n\nimport adjust_lon from '../common/adjust_lon';\n\nvar A1 = 1.340264,\n  A2 = -0.081106,\n  A3 = 0.000893,\n  A4 = 0.003796,\n  M = Math.sqrt(3) / 2.0;\n\nexport function init() {\n  this.es = 0;\n  this.long0 = this.long0 !== undefined ? this.long0 : 0;\n}\n\nexport function forward(p) {\n  var lam = adjust_lon(p.x - this.long0);\n  var phi = p.y;\n  var paramLat = Math.asin(M * Math.sin(phi)),\n    paramLatSq = paramLat * paramLat,\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = lam * Math.cos(paramLat)\n    / (M * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq)));\n  p.y = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq));\n\n  p.x = this.a * p.x + this.x0;\n  p.y = this.a * p.y + this.y0;\n  return p;\n}\n\nexport function inverse(p) {\n  p.x = (p.x - this.x0) / this.a;\n  p.y = (p.y - this.y0) / this.a;\n\n  var EPS = 1e-9,\n    NITER = 12,\n    paramLat = p.y,\n    paramLatSq, paramLatPow6, fy, fpy, dlat, i;\n\n  for (i = 0; i < NITER; ++i) {\n    paramLatSq = paramLat * paramLat;\n    paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n    fy = paramLat * (A1 + A2 * paramLatSq + paramLatPow6 * (A3 + A4 * paramLatSq)) - p.y;\n    fpy = A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq);\n    paramLat -= dlat = fy / fpy;\n    if (Math.abs(dlat) < EPS) {\n      break;\n    }\n  }\n  paramLatSq = paramLat * paramLat;\n  paramLatPow6 = paramLatSq * paramLatSq * paramLatSq;\n  p.x = M * p.x * (A1 + 3 * A2 * paramLatSq + paramLatPow6 * (7 * A3 + 9 * A4 * paramLatSq))\n    / Math.cos(paramLat);\n  p.y = Math.asin(Math.sin(paramLat) / M);\n\n  p.x = adjust_lon(p.x + this.long0);\n  return p;\n}\n\nexport var names = ['eqearth', 'Equal Earth', 'Equal_Earth'];\nexport default {\n  init: init,\n  forward: forward,\n  inverse: inverse,\n  names: names\n};\n","import adjust_lat from '../common/adjust_lat';\nimport adjust_lon from '../common/adjust_lon';\nimport hypot from '../common/hypot';\nimport pj_enfn from '../common/pj_enfn';\nimport pj_inv_mlfn from '../common/pj_inv_mlfn';\nimport pj_mlfn from '../common/pj_mlfn';\nimport { HALF_PI } from '../constants/values';\n\n/**\n * @typedef {Object} LocalThis\n * @property {number} phi1\n * @property {number} cphi1\n * @property {number} es\n * @property {Array<number>} en\n * @property {number} m1\n * @property {number} am1\n */\n\nvar EPS10 = 1e-10;\n\n/** @this {import('../defs.js').ProjectionDefinition & LocalThis} */\nexport function init() {\n  var c;\n\n  this.phi1 = this.lat1;\n  if (Math.abs(this.phi1) < EPS10) {\n    throw new Error();\n  }\n  if (this.es) {\n    this.en = pj_enfn(this.es);\n    this.m1 = pj_mlfn(this.phi1, this.am1 = Math.sin(this.phi1),\n      c = Math.cos(this.phi1), this.en);\n    this.am1 = c / (Math.sqrt(1 - this.es * this.am1 * this.am1) * this.am1);\n    this.inverse = e_inv;\n    this.forward = e_fwd;\n  } else {\n    if (Math.abs(this.phi1) + EPS10 >= HALF_PI) {\n      this.cphi1 = 0;\n    } else {\n      this.cphi1 = 1 / Math.tan(this.phi1);\n    }\n    this.inverse = s_inv;\n    this.forward = s_fwd;\n  }\n}\n\nfunction e_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var rh, E, c;\n  rh = this.am1 + this.m1 - pj_mlfn(phi, E = Math.sin(phi), c = Math.cos(phi), this.en);\n  E = c * lam / (rh * Math.sqrt(1 - this.es * E * E));\n  p.x = rh * Math.sin(E);\n  p.y = this.am1 - rh * Math.cos(E);\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction e_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var s, rh, lam, phi;\n  rh = hypot(p.x, p.y = this.am1 - p.y);\n  phi = pj_inv_mlfn(this.am1 + this.m1 - rh, this.es, this.en);\n  if ((s = Math.abs(phi)) < HALF_PI) {\n    s = Math.sin(phi);\n    lam = rh * Math.atan2(p.x, p.y) * Math.sqrt(1 - this.es * s * s) / Math.cos(phi);\n  } else if (Math.abs(s - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    throw new Error();\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nfunction s_fwd(p) {\n  var lam = adjust_lon(p.x - (this.long0 || 0));\n  var phi = p.y;\n  var E, rh;\n  rh = this.cphi1 + this.phi1 - phi;\n  if (Math.abs(rh) > EPS10) {\n    p.x = rh * Math.sin(E = lam * Math.cos(phi) / rh);\n    p.y = this.cphi1 - rh * Math.cos(E);\n  } else {\n    p.x = p.y = 0;\n  }\n\n  p.x = this.a * p.x + (this.x0 || 0);\n  p.y = this.a * p.y + (this.y0 || 0);\n  return p;\n}\n\nfunction s_inv(p) {\n  p.x = (p.x - (this.x0 || 0)) / this.a;\n  p.y = (p.y - (this.y0 || 0)) / this.a;\n\n  var lam, phi;\n  var rh = hypot(p.x, p.y = this.cphi1 - p.y);\n  phi = this.cphi1 + this.phi1 - rh;\n  if (Math.abs(phi) > HALF_PI) {\n    throw new Error();\n  }\n  if (Math.abs(Math.abs(phi) - HALF_PI) <= EPS10) {\n    lam = 0;\n  } else {\n    lam = rh * Math.atan2(p.x, p.y) / Math.cos(phi);\n  }\n  p.x = adjust_lon(lam + (this.long0 || 0));\n  p.y = adjust_lat(phi);\n  return p;\n}\n\nexport var names = ['bonne', 'Bonne (Werner lat_1=90)'];\nexport default {\n  init: init,\n  names: names\n};\n","import core from './core';\nimport Proj from './Proj';\nimport Point from './Point';\nimport common from './common/toPoint';\nimport defs from './defs';\nimport nadgrid from './nadgrid';\nimport transform from './transform';\nimport mgrs from 'mgrs';\nimport includedProjections from '../projs';\n\n/**\n * @typedef {Object} Mgrs\n * @property {(lonlat: [number, number]) => string} forward\n * @property {(mgrsString: string) => [number, number, number, number]} inverse\n * @property {(mgrsString: string) => [number, number]} toPoint\n */\n\n/**\n * @typedef {import('./defs').ProjectionDefinition} ProjectionDefinition\n * @typedef {import('./core').TemplateCoordinates} TemplateCoordinates\n * @typedef {import('./core').InterfaceCoordinates} InterfaceCoordinates\n * @typedef {import('./core').Converter} Converter\n * @typedef {import('./Proj').DatumDefinition} DatumDefinition\n */\n\n/**\n * @template {import('./core').TemplateCoordinates} T\n * @type {core<T> & {defaultDatum: string, Proj: typeof Proj, WGS84: Proj, Point: typeof Point, toPoint: typeof common, defs: typeof defs, nadgrid: typeof nadgrid, transform: typeof transform, mgrs: Mgrs, version: string}}\n */\nconst proj4 = Object.assign(core, {\n  defaultDatum: 'WGS84',\n  Proj,\n  WGS84: new Proj('WGS84'),\n  Point,\n  toPoint: common,\n  defs,\n  nadgrid,\n  transform,\n  mgrs,\n  version: '__VERSION__'\n});\nincludedProjections(proj4);\nexport default proj4;\n","import tmerc from './lib/projections/tmerc';\nimport etmerc from './lib/projections/etmerc';\nimport utm from './lib/projections/utm';\nimport sterea from './lib/projections/sterea';\nimport stere from './lib/projections/stere';\nimport somerc from './lib/projections/somerc';\nimport omerc from './lib/projections/omerc';\nimport lcc from './lib/projections/lcc';\nimport krovak from './lib/projections/krovak';\nimport cass from './lib/projections/cass';\nimport laea from './lib/projections/laea';\nimport aea from './lib/projections/aea';\nimport gnom from './lib/projections/gnom';\nimport cea from './lib/projections/cea';\nimport eqc from './lib/projections/eqc';\nimport poly from './lib/projections/poly';\nimport nzmg from './lib/projections/nzmg';\nimport mill from './lib/projections/mill';\nimport sinu from './lib/projections/sinu';\nimport moll from './lib/projections/moll';\nimport eqdc from './lib/projections/eqdc';\nimport vandg from './lib/projections/vandg';\nimport aeqd from './lib/projections/aeqd';\nimport ortho from './lib/projections/ortho';\nimport qsc from './lib/projections/qsc';\nimport robin from './lib/projections/robin';\nimport geocent from './lib/projections/geocent';\nimport tpers from './lib/projections/tpers';\nimport geos from './lib/projections/geos';\nimport eqearth from './lib/projections/eqearth';\nimport bonne from './lib/projections/bonne';\nexport default function (proj4) {\n  proj4.Proj.projections.add(tmerc);\n  proj4.Proj.projections.add(etmerc);\n  proj4.Proj.projections.add(utm);\n  proj4.Proj.projections.add(sterea);\n  proj4.Proj.projections.add(stere);\n  proj4.Proj.projections.add(somerc);\n  proj4.Proj.projections.add(omerc);\n  proj4.Proj.projections.add(lcc);\n  proj4.Proj.projections.add(krovak);\n  proj4.Proj.projections.add(cass);\n  proj4.Proj.projections.add(laea);\n  proj4.Proj.projections.add(aea);\n  proj4.Proj.projections.add(gnom);\n  proj4.Proj.projections.add(cea);\n  proj4.Proj.projections.add(eqc);\n  proj4.Proj.projections.add(poly);\n  proj4.Proj.projections.add(nzmg);\n  proj4.Proj.projections.add(mill);\n  proj4.Proj.projections.add(sinu);\n  proj4.Proj.projections.add(moll);\n  proj4.Proj.projections.add(eqdc);\n  proj4.Proj.projections.add(vandg);\n  proj4.Proj.projections.add(aeqd);\n  proj4.Proj.projections.add(ortho);\n  proj4.Proj.projections.add(qsc);\n  proj4.Proj.projections.add(robin);\n  proj4.Proj.projections.add(geocent);\n  proj4.Proj.projections.add(tpers);\n  proj4.Proj.projections.add(geos);\n  proj4.Proj.projections.add(eqearth);\n  proj4.Proj.projections.add(bonne);\n}\n","/**\n * @module StmaOpenLayers\n */\n\nimport './geoline.ol.css';\n\nimport Feature from \"ol/Feature.js\";\nimport Map from \"ol/Map.js\";\nimport Overlay from \"ol/Overlay.js\";\nimport TileGrid from \"ol/tilegrid/TileGrid.js\";\nimport View from \"ol/View.js\";\nimport ControlAttribution from \"ol/control/Attribution.js\";\nimport FormatEsriJSON from \"ol/format/EsriJSON.js\";\nimport FormatGeoJSON from \"ol/format/GeoJSON.js\";\nimport FormatWMTSCapabilities from \"ol/format/WMTSCapabilities.js\";\nimport GeomPoint from \"ol/geom/Point.js\";\nimport LayerImage from \"ol/layer/Image.js\";\nimport LayerTile from \"ol/layer/Tile.js\";\nimport LayerVector from \"ol/layer/Vector.js\";\nimport SourceImageArcGISRest from \"ol/source/ImageArcGISRest.js\";\nimport SourceImageWMS from \"ol/source/ImageWMS.js\";\nimport SourceTileWMS from 'ol/source/TileWMS.js';\nimport SourceVector from \"ol/source/Vector.js\";\nimport SourceXYZ from \"ol/source/XYZ.js\";\nimport SourceWMTS, {optionsFromCapabilities as sourceWMTS_optionsFromCapabilities} from 'ol/source/WMTS.js';\nimport StyleIcon from \"ol/style/Icon.js\";\nimport StyleStyle from \"ol/style/Style.js\";\nimport {defaults as defaultControls} from 'ol/control.js';\nimport {tile as tileLoadingStrategy} from 'ol/loadingstrategy.js';\nimport {createXYZ} from 'ol/tilegrid.js';\nimport {get as getProjection} from \"ol/proj.js\";\nimport {register} from 'ol/proj/proj4.js';\n\nimport proj4 from \"proj4\";\nimport jsonp from \"jsonp\";\n\n/**\n * @typedef {Object} AGSSpatialReference\n * @property {number} [wkid]\n * @property {number} [latestWkid]\n */\n\n/**\n * @typedef {Object} AGSTileInfoLOD\n * @property {number} level\n * @property {number} resolution\n * @property {number} scale\n */\n\n/**\n * @typedef {Object} AGSTileInfo\n * @property {{x:number,y:number}} origin\n * @property {number} rows\n * @property {number} cols\n * @property {Array<AGSTileInfoLOD>} lods\n */\n\n/**\n * @typedef {Object} AGSExtent\n * @property {number} xmin\n * @property {number} ymin\n * @property {number} xmax\n * @property {number} ymax\n */\n\n/**\n * @typedef {Object} AGSInfo\n * @property {number} [currentVersion]\n * @property {boolean} [singleFusedMapCache]\n * @property {AGSTileInfo} [tileInfo]\n * @property {AGSExtent} [fullExtent]\n * @property {AGSSpatialReference} [spatialReference]\n * @property {string} [copyrightText]\n * @property {{code:number,message:string}} [error]\n */\n\n/**\n * @typedef {Object} AGSServiceEntry\n * @property {string} ags_host\n * @property {string} ags_instance\n * @property {string} service\n * @property {boolean} [tiled]\n * @property {Object.<string, string|number|boolean>} [params]\n */\n\n/**\n * @typedef {Object} WMTSServiceEntry\n * @property {string} host\n * @property {string} instance\n * @property {string} service\n * @property {string} matrix\n * @property {Object.<string, string|number|boolean>} [params]\n */\n\n/**\n * @typedef {Object} WMSServiceEntry\n * @property {string} host\n * @property {string} instance\n * @property {string} service\n * @property {boolean} [tiled]\n * @property {Object.<string, string|number|boolean>} [params]\n */\n\n/**\n * @typedef {Object} GeolineConfig\n * @property {string} [ags_host]\n * @property {string} [ags_instance]\n * @property {string} [wmts_host]\n * @property {string} [wmts_instance]\n * @property {string} [wmts_matrix]\n * @property {string} [wms_host]\n * @property {string} [wms_instance]\n * @property {boolean} [wms_tiled]\n * @property {Array<string>} [ags_hosts]\n * @property {Array<string>} [wmts_hosts]\n * @property {Array<string>} [wms_hosts]\n * @property {Object.<string, AGSServiceEntry>|Array<AGSServiceEntry>} [ags_services]\n * @property {Object.<string, WMTSServiceEntry>|Array<WMTSServiceEntry>} [wmts_services]\n * @property {Object.<string, WMSServiceEntry>|Array<WMSServiceEntry>} [wms_services]\n */\n\nclass StmaOpenLayers {\n\n    /** @type {GeolineConfig|null} */\n    config = null;\n    configUrl = null;\n    configPromise = null;\n    viewParams = null;\n    tileLoadFunction = null;\n    map = null;\n    projection = null;\n    overlayLayer = null;\n    overlayLayers = []; //Layer, für die das Overlay aktiviert ist.\n    overlayFunctions = []; //Funktionen der Layer, für die das Overlay aktiviert ist.\n\n\n    /**\n     * Konstruktor\n     * \n     * @param       {string} _configUrl Basis-URL für den Abruf der Geoline-Basiskonfiguration. Wird als vorbelegter Parameter verwendet.\n     *\n     * @returns     {StmaOpenLayers}\n     */\n    constructor(_configUrl = \"https://gis5.stuttgart.de/geoline/geoline.config/config.aspx\") {\n        this.configUrl = _configUrl;\n        return this;\n    }\n\n\n    /**\n     * Lädt die Konfiguration asynchron und cached das Ergebnis in einer Promise\n     *\n     * @returns     {Promise<GeolineConfig>}\n     */\n    _fetchConfig() {\n        if (this.config != null) {\n            return Promise.resolve(this.config);\n        }\n        if (this.configPromise) {\n            return this.configPromise;\n        }\n        const params = new URLSearchParams({\n            v: \"@version@\",\n            epsg: this.projection,\n            url: typeof location !== 'undefined' ? location.href : ''\n        }).toString();\n        this.configPromise = fetch(this.configUrl, {\n            method: 'POST',\n            headers: {'Content-Type': 'application/x-www-form-urlencoded'},\n            body: params\n        })\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok: ' + response.status);\n                }\n                return response.json();\n            })\n            .then(_data => {\n                _data.ags_hosts = Array.isArray(_data.ags_services)\n                    ? _data.ags_services.map(item => item.ags_host)\n                    : Object.values(_data.ags_services || {}).map(item => item.ags_host);\n                _data.wmts_hosts = Array.isArray(_data.wmts_services)\n                    ? _data.wmts_services.map(item => item.host)\n                    : Object.values(_data.wmts_services || {}).map(item => item.host);\n                _data.wms_hosts = Array.isArray(_data.wms_services)\n                    ? _data.wms_services.map(item => item.host)\n                    : Object.values(_data.wms_services || {}).map(item => item.host);\n                this.config = _data;\n                return this.config;\n            })\n            .catch(err => {\n                console.error(\"Konfiguration (geoline.config) konnte nicht geladen werden\", err);\n                // Fehler weiterreichen, aber Promise für spätere erneute Versuche zurücksetzen\n                this.configPromise = null;\n                throw err;\n            });\n        return this.configPromise;\n    }\n\n    /**\n     * @returns     {GeolineConfig}\n     * */\n    _getConfig() {\n        // Nicht mehr blockieren: Startet den asynchronen Ladevorgang, falls nötig\n        if (this.config == null) {\n            this._fetchConfig().catch(() => {\n            });\n        }\n        // Rückgabe des aktuell bekannten Werts (oder eines Platzhalters, damit Aufrufer nicht crashen)\n        return this.config || {ags_hosts: [], wmts_hosts: [], wms_hosts: []};\n    }\n\n    /**\n     * JSONP with simple Promise cache to avoid duplicate network requests per URL\n     * @param {string} url\n     * @returns {Promise<any>}\n     */\n    _jsonpCached(url) {\n        const cached = this.map.get(url);\n        if (cached) return cached;\n        const p = new Promise((resolve, reject) => {\n            jsonp(url, null, (err, data) => {\n                if (err) {\n                    reject(err);\n                    return;\n                }\n                resolve(data);\n            });\n        });\n        this.map.set(url, p);\n        return p;\n    }\n\n    /**\n     * Fetch text with simple Promise cache by URL (POST by default)\n     * @param {string} url\n     * @param {RequestInit} [options]\n     * @returns {Promise<string>}\n     */\n    _fetchTextCached(url, options = {method: 'POST'}) {\n        const cached = this.map.get(url);\n        if (cached) return cached;\n        const p = fetch(url, options).then(r => {\n            if (!r.ok) throw new Error('Network response was not ok: ' + r.status);\n            return r.text();\n        }).catch(err => {\n            // On failure, drop cache to allow retry later\n            this.map.delete(url);\n            throw err;\n        });\n        this.map.set(url, p);\n        return p;\n    }\n\n    /**\n     * Get a cached GeoJSON format instance for a specific dataProjection.\n     * The instance is created with featureProjection set to the current map projection.\n     * @param {string} dataProjection\n     */\n    _getGeoJSONFormat(dataProjection) {\n        const key = dataProjection + '->' + this.projection;\n        let fmt = this.map.get(key);\n        if (!fmt) {\n            fmt = new FormatGeoJSON({\n                dataProjection: dataProjection,\n                featureProjection: this.projection\n            });\n            this.map.set(key, fmt);\n        }\n        return fmt;\n    }\n\n    /**\n     * @description fügt einen EsriLayer hinzu. (gecacht + dynamisch)\n     *\n     * @param       {string} _url URL zum AGS-Dienst\n     *\n     * @param       {Object} _layerParams zusätzliche Parameter für das OpenLayer-Layer-Objekt\n     *\n     * @param       {Object} _sourceParams zusätzliche Parameter für das OpenLayer-Source-Objekt\n     *\n     * @param       {Function} _callbackFunction Funktion, die nach dem Hinzufügen des Layers ausgeführt wird\n     *\n     * @since       v0.0\n     */\n    _addEsriLayer(_url, _layerParams, _sourceParams, _callbackFunction) {\n        this._jsonpCached(_url + \"?f=json\")\n            .then((/** @type {AGSInfo} */ ags_info) => {\n                try {\n                    if (ags_info.error !== undefined) {\n                        console.warn(\"Eigenschaften des Kartendienstes \" + _url + \" konnten nicht abgerufen werden.\", ags_info.error);\n                        return;\n                    }\n\n                    //Copyright\n                    const url = new URL(_url);\n                    if (((this._getConfig().ags_hosts) || []).includes(url.hostname)) {\n                        if (ags_info.copyrightText == null || ags_info.copyrightText.length === 0) {\n                            ags_info.copyrightText = \"© Stadtmessungsamt, LHS Stuttgart\"\n                        }\n                    }\n\n                    //AGS Kartendienst von Esri?\n                    if (url.hostname.indexOf(\"arcgisonline.com\") > -1 || url.hostname.indexOf(\"arcgis.com\") > -1) {\n                        //Der Copyright-Vermerk muss immer sichtbar sein\n                        const _attributionControl = this.map.getControls().getArray().filter(function (_control) {\n                            return (_control instanceof ControlAttribution);\n                        })[0];\n                        _attributionControl.setCollapsible(false);\n                        _attributionControl.setCollapsed(false);\n                    }\n\n                    //spatialReference korrigieren für 10.0\n                    if (ags_info.currentVersion === 10.05 && ags_info.spatialReference.latestWkid == null) {\n                        switch (ags_info.spatialReference.wkid) {\n                            case 102100:\n                                ags_info.spatialReference.latestWkid = 3857;\n                                break;\n                        }\n                    }\n\n                    //spatialReference überprüfen\n                    if (this.projection !== \"EPSG:\" + ags_info.spatialReference.wkid && this.projection !== \"EPSG:\" + ags_info.spatialReference.latestWkid) {\n                        console.warn(\"Projektion der Karte und des Kartendienstes stimmen nicht überein. Karte: \" + this.projection + \", Kartendienst: EPSG:\", ags_info.spatialReference.wkid + \" / EPSG:\" + ags_info.spatialReference.latestWkid, _url);\n                    }\n\n                    //Ist es ein gecachter Dienst?\n                    if (ags_info.singleFusedMapCache === true) {\n                        //-> gecachter Dienst hinzufügen\n                        this._initCachedLayer(_url, _layerParams, _sourceParams, ags_info, _callbackFunction);\n                    } else {\n                        //-> dynamischer Dienst hinzufügen\n                        this._initDynamicLayer(_url, _layerParams, _sourceParams, ags_info, _callbackFunction);\n                    }\n                } catch (e) {\n                    console.error(\"Fehler beim Initalisieren des Layers \" + _url, e);\n                }\n            })\n            .catch(err => {\n                console.error(\"Fehler beim Abrufen der Informationen des AGS-Diensts\", err);\n            });\n\n    }\n\n    /**\n     * @description    fügt einen gecachten WMTS-Kartendienst hinzu.\n     *\n     * @param          {String} _url GetCapabilities-URL zum WMTS\n     *\n     * @param          {String} _layerName Name des Layers, der eingebunden werden soll\n     *\n     * @param          {object} _layerParams zusätzliche Parameter für das OpenLayer-Layer-Objekt\n     *\n     * @param          {object} _sourceParams zusätzliche Parameter für das OpenLayer-Source-Objekt\n     *\n     * @param          {function} _callbackFunction Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen\n     *                 des Layers ausgeführt wird. Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     * @since          v2.1\n     */\n    _addWMTSLayer_impl(_url, _layerName, _layerParams, _sourceParams, _callbackFunction) {\n        //GetCapabilities abrufen\n        const url = new URL(_url);\n\n        this._fetchTextCached(_url, {method: 'POST'})\n            .then(wmtscapabilities => {\n                const _formatWMTSCapabilities = new FormatWMTSCapabilities();\n\n                //sourceParams\n                let sourceParams = sourceWMTS_optionsFromCapabilities(_formatWMTSCapabilities.read(wmtscapabilities), {\n                    layer: _layerName\n                });\n\n                let _zIndex = 10;\n                let predefinedSourceParams = {};\n                if (((this._getConfig().wmts_hosts) || []).includes(url.hostname)) {\n                    //URL-Parameter überdefinieren, da diese nicht korrekt ermittelt werden können.\n                    predefinedSourceParams.urls = [url.origin + url.pathname + \"/rest/\" + _layerName + \"/{style}/{TileMatrixSet}/{TileMatrix}/{TileRow}/{TileCol}?format=image/png\"];\n                    predefinedSourceParams.requestEncoding = \"REST\";\n\n                    //Copyrighthinweis\n                    predefinedSourceParams.attributions = \"© Stadtmessungsamt, LHS Stuttgart\";\n\n                    //anderer zIndex für Stadtmessungsamt-Kartendienste\n                    _zIndex = 20;\n                }\n                sourceParams = {\n                    ...sourceParams,\n                    ..._sourceParams,\n                    ...predefinedSourceParams\n                };\n\n                //layerParams\n                let layerParams = {\n                    zIndex: _zIndex\n                };\n\n                //diese Parameter können nicht überdefiniert werden.\n                let predefinedLayerParams = {\n                    source: new SourceWMTS(sourceParams)\n                };\n                layerParams = {\n                    ...layerParams,\n                    ..._layerParams,\n                    ...predefinedLayerParams\n                };\n\n                //gecachten Layer erstellen\n                let layer = new LayerTile(layerParams);\n\n                //View konfigurieren, falls diese noch nicht konfiguriert wurde\n                if (this.map.getView().getProjection().getCode() !== this.projection) {\n                    this.map.setView(new View({\n                        ...this.viewParams,\n                        ...{resolutions: sourceParams.tileGrid.getResolutions(), constrainResolution: true}\n                    }));\n                }\n\n                //Layer hinzufügen\n                this.map.addLayer(layer);\n\n                //Callbackfunktion ausführen\n                if (typeof _callbackFunction == \"function\") {\n                    _callbackFunction(layer);\n                }\n            })\n            .catch(error => {\n                console.error(\"Fehler beim Abrufen der WMTS-GetCapabilities\", error);\n            });\n    }\n\n    /**\n     * @description     fügt einen dynamischen WMS-Kartendienst hinzu.\n     *                  Der Layer kann gekachelt oder als ganzes Bild abgerufen werden. Standard ist der Abruf als ganzes Bild,\n     *                  da aber einige WMS-Dienste keine großen Bilder auf einmal zurückgeben können, kann der WMS auch gekachelt\n     *                  abgerufen werden. Dies kann zu Lasten der Kartographie gehen - so kann es passieren, dass Beschriftungen\n     *                  abgeschnitten oder mehrfach im Kartenbild enthalten sind.\n     *                  Zum gekachelten Abruf muss als _sourceParams { \"TILED\": true } übergeben werden.\n     *\n     * @param           {String} _url URL zum WMS\n     *\n     * @param           {String} _layerName Name des Layers, der eingebunden werden soll\n     *\n     * @param           {object} _layerParams zusätzliche Parameter für das OpenLayer-Layer-Objekt\n     *\n     * @param           {object} _sourceParams zusätzliche Parameter für das OpenLayer-Source-Objekt\n     *\n     * @param           {function} _callbackFunction Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.\n     *                  Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     * @returns         {void}\n     *\n     * @since           v2.1\n     */\n    _addWMSLayer(_url, _layerName, _layerParams, _sourceParams, _callbackFunction) {\n\n        //diese Parameter können nicht überdefiniert werden.\n        const predefinedSourceParams = {\n            ratio: 1\n        };\n\n        const url = new URL(_url);\n        if (((this._getConfig().wms_hosts) || []).includes(url.hostname)) {\n            //Copyrighthinweis\n            predefinedSourceParams.attributions = \"© Stadtmessungsamt, LHS Stuttgart\";\n        }\n\n        let sourceParams = {\n            ...{\n                url: _url,\n                params: {\"LAYERS\": _layerName}\n            },\n            ..._sourceParams,\n            ...predefinedSourceParams\n        };\n        // Beim Zusammenführen von WMS-Diensten kann es vorkommen, dass der Layername nicht immer im Parameter \"LAYERS\" enthalten ist.\n        sourceParams.params.LAYERS = _layerName;\n\n        //Der Layer kann gekachelt oder als ganzes Bild abgerufen werden.\n        let layer;\n        if (sourceParams.TILED === true) {\n            //gekachelter Abruf = gecacht\n\n            let _zIndex = 10;\n            //anderer zIndex für Stadtmessungsamt-Kartendienste\n            if (((this._getConfig().wms_hosts) || []).includes(url.hostname)) {\n                _zIndex = 20;\n            }\n\n            //layerParams\n            let layerParams = {\n                zIndex: _zIndex\n            };\n\n            //diese Parameter können nicht überdefiniert werden.\n            let predefinedLayerParams = {\n                source: new SourceTileWMS(sourceParams)\n            };\n            layerParams = {\n                ...layerParams,\n                ..._layerParams,\n                ...predefinedLayerParams\n            };\n\n            //Layer erstellen\n            layer = new LayerTile(layerParams);\n\n        } else {\n            //Abruf als ein Bild = dynamisch\n\n            let _zIndex = 40;\n            //anderer zIndex für Stadtmessungsamt-Kartendienste\n            if (((this._getConfig().wms_hosts) || []).includes(url.hostname)) {\n                _zIndex = 50;\n            }\n\n            //layerParams\n            let layerParams = {\n                zIndex: _zIndex\n            };\n\n            //diese Parameter können nicht überdefiniert werden.\n            let predefinedLayerParams = {\n                source: new SourceImageWMS(sourceParams)\n            };\n            layerParams = {\n                ...layerParams,\n                ..._layerParams,\n                ...predefinedLayerParams\n            };\n\n            //Layer erstellen\n            layer = new LayerImage(layerParams);\n        }\n\n        //View konfigurieren, falls diese noch nicht konfiguriert wurde\n        if (this.map.getView().getProjection().getCode() !== this.projection) {\n            this.map.setView(new View({\n                ...this.viewParams,\n                ...{constrainResolution: true}\n            }));\n        }\n\n        //Layer hinzufügen\n        this.map.addLayer(layer);\n\n        //Callbackfunktion ausführen\n        if (typeof _callbackFunction == \"function\") {\n            _callbackFunction(layer);\n        }\n    }\n\n    /**\n     * @description fügt einen EsriLayer hinzu. (gecacht)\n     *\n     * @param       {string} _url URL zum AGS-Dienst\n     *\n     * @param       {Object} _layerParams zusätzliche Parameter für das OpenLayer-Layer-Objekt\n     *\n     * @param       {Object} _sourceParams zusätzliche Parameter für das OpenLayer-Source-Objekt\n     *\n     * @param       {AGSInfo} ags_info JSON-Objekt mit den Karteneigenschaften (von ../MapServer?f=json)\n     *\n     * @param       {Function} _callbackFunction Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird\n     *\n     * @since v0.0\n     */\n    _initCachedLayer(_url, _layerParams, _sourceParams, ags_info, _callbackFunction) {\n        let resolutions = [];\n        ags_info.tileInfo.lods.forEach(function (lod) {\n            resolutions.push(lod.resolution);\n        });\n\n        const params = {\n            origin: [ags_info.tileInfo.origin.x, ags_info.tileInfo.origin.y],\n            extent: [ags_info.fullExtent.xmin, ags_info.fullExtent.ymin, ags_info.fullExtent.xmax, ags_info.fullExtent.ymax],\n            minZoom: 0,\n            resolutions: resolutions,\n            tileSize: [ags_info.tileInfo.rows, ags_info.tileInfo.cols]\n        };\n        const tileGrid = new TileGrid(params);\n\n        //View konfigurieren, falls diese noch nicht konfiguriert wurde\n        if (this.map.getView().getProjection().getCode() !== this.projection) {\n            this.map.setView(new View({\n                ...this.viewParams,\n                ...{resolutions: resolutions, constrainResolution: true}\n            }));\n        }\n\n        //Projektion ermitteln\n        if (ags_info.spatialReference.latestWkid != null) {\n            this.projection = ags_info.spatialReference.latestWkid;\n        } else {\n            this.projection = ags_info.spatialReference.wkid;\n        }\n\n        //sourceParams\n        let sourceParams = {\n            minZoom: 0\n        };\n\n        //ToDo: XYZ-Dienst vorsehen? Anderer Server + Instanz?\n        //diese Parameter können nicht überdefiniert werden.\n        let predefinedSourceParams = {\n            tileGrid: tileGrid,\n            projection: getProjection(\"EPSG:\" + this.projection),\n            attributions: ags_info.copyrightText,\n            url: _url + '/tile/{z}/{y}/{x}'\n        };\n\n        if (this.tileLoadFunction != null) {\n            predefinedSourceParams.tileLoadFunction = this.tileLoadFunction;\n        }\n        sourceParams = {\n            ...sourceParams,\n            ..._sourceParams,\n            ...predefinedSourceParams\n        };\n\n        let _zIndex = 10;\n        const url = new URL(_url);\n        if (((this._getConfig().ags_hosts) || []).includes(url.hostname)) {\n            _zIndex = 20;\n        }\n\n        //layerParams\n        let layerParams = {\n            zIndex: _zIndex\n        };\n\n        //diese Parameter können nicht überdefiniert werden.\n        let predefinedLayerParams = {\n            source: new SourceXYZ(sourceParams)\n        };\n        layerParams = {\n            ...layerParams,\n            ..._layerParams,\n            ...predefinedLayerParams\n        };\n\n        //gecachten Layer erstellen\n        let layer = new LayerTile(layerParams);\n\n        //Layer hinzufügen\n        this.map.addLayer(layer);\n\n        //Callbackfunktion ausführen\n        if (typeof _callbackFunction == \"function\") {\n            _callbackFunction(layer);\n        }\n    }\n\n    /**\n     * @description fügt einen EsriLayer hinzu. (dynamisch)\n     *\n     * @param       {string} _url URL zum AGS-Dienst\n     *\n     * @param       {Object} _layerParams zusätzliche Parameter für das OpenLayer-Layer-Objekt\n     *\n     * @param       {Object} _sourceParams zusätzliche Parameter für das OpenLayer-Source-Objekt\n     *\n     * @param       {AGSInfo} ags_info JSON-Objekt mit den Karteneigenschaften (von ../MapServer?f=json)\n     *\n     * @param       {Function} _callbackFunction Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird\n     *\n     * @since v0.0\n     */\n    _initDynamicLayer(_url, _layerParams, _sourceParams, ags_info, _callbackFunction) {\n        //sourceParams\n        let sourceParams = {\n            params: {layers: 'show:0'}\n        };\n\n        //diese Parameter können nicht überdefiniert werden.\n        let predefinedSourceParams = {\n            ratio: 1,\n            url: _url,\n            attributions: [ags_info.copyrightText]\n        };\n        sourceParams = {\n            ...sourceParams,\n            ..._sourceParams,\n            ...predefinedSourceParams\n        };\n\n        //layerParams\n        let _zIndex = 40;\n        const url = new URL(_url);\n        if (((this._getConfig().ags_hosts) || []).includes(url.hostname)) {\n            _zIndex = 50;\n        }\n\n        //layerParams\n        let layerParams = {\n            zIndex: _zIndex //damit liegen die dynamischen Dienste über den gecachten Diensten (wenn nicht überkonfiguriert wird)\n        };\n\n        //diese Parameter können nicht überdefiniert werden.\n        let predefinedLayerParams = {\n            source: new SourceImageArcGISRest(sourceParams)\n        };\n        layerParams = {\n            ...layerParams,\n            ..._layerParams,\n            ...predefinedLayerParams\n        };\n\n        //dynamischen Layer erstellen\n        let layer = new LayerImage(layerParams);\n        //Layer hinzufügen\n        this.map.addLayer(layer);\n\n        //Callbackfunktion ausführen\n        if (typeof _callbackFunction == \"function\") {\n            _callbackFunction(layer);\n        }\n    }\n\n    /**\n     *    @description  initialisiert die Karte<br/>\n     *                  Beispiel:<br/>\n     *                  <code>mymap = new StmaOpenLayers();<br/>\n     *                  mymap.initMap(25832, {}, {});</code>\n     *\n     *    @param        {int} _epsgCode EPSG-Code des Koordinatensystems.\n     *                  Unterstütze Werte sind: 25832, 3857<br/>\n     *                  Siehe auch: {@link https://epsg.io/25832}, {@link http://epsg.io/3857}\n     *\n     *    @param        {object} _mapParams\n     *                  zusätzliche Parameter für das OpenLayer-Map-Objekt<br/>\n     *\n     *    @param        {object} _viewParams\n     *                  zusätzliche Parameter für das OpenLayer-View-Objekt<br/>\n     *\n     *    @param        {object} _customParams\n     *                  zusätzliche Parameter für geoline.ol.js<br/>\n     *                  Unterstützte Parameter:\n     *                  <ul>\n     *                  <li>tileLoadFunction: Optionale Funktion, die bei gecachten Kartendiensten ausgeführt wird, um eine Kachel zu laden.<br/>\n     *                      Beispiel:<br/>\n     *                      <code>{ tileLoadFunction: function(imageTile, src) { imageTile.getImage().src = src;}}</code><br/>\n     *                  </li>\n     *\n     *                  <li>config: Hier kann das Konfigurationsobjekt, das normalerweise direkt vom Server des Stadtmessungsamtes geladen wird überschrieben werden.<br/>\n     *                      Diese Funktion sollte nur sparsam genutzt werden, zum Beispiel für die Offlineverfügbarkeit in Apps.<br/>\n     *                      Wird diese Funktion verwendet, so muss sichergestellt werden, dass die übergebene Konfiguration aktuell ist.\n     *                  </li>\n     *                  </ul>\n     *\n     *    @param        {function} _callbackFunction\n     *                  Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.<br/>\n     *                  Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns      {null}\n     *\n     *    @since        v0.0\n     */\n    initMap(_epsgCode, _mapParams = {}, _viewParams = {}, _customParams = {}, _callbackFunction = null) {\n        //(25832)UTM-Projektion zu den Projektionen von OpenLayers hinzufügen\n        proj4.defs(\"EPSG:25832\", \"+proj=utm +zone=32 +ellps=GRS80 +towgs84=0,0,0,0,0,0,0 +units=m +no_defs\");\n        register(proj4);\n\n        //(31467)GK-Projektion zu den Projektionen von OpenLayers hinzufügen\n        proj4.defs(\"EPSG:31467\", \"+proj=tmerc +lat_0=0 +lon_0=9 +k=1 +x_0=3500000 +y_0=0 +ellps=bessel +towgs84=598.1,73.7,418.2,0.202,0.045,-2.455,6.7 +units=m +no_defs\");\n        register(proj4);\n\n        //Projektion definieren\n        this.projection = \"EPSG:\" + _epsgCode;\n        if (getProjection(this.projection) == null) {\n            console.error(\"Projektion \" + this.projection + \" nicht gefunden. Es kann zu falscher Darstellung der Karte kommen\");\n        }\n\n        //zusätzliche Parameter für geoline.ol.js hinzufügen\n        if (_customParams != null && _customParams.tileLoadFunction != null) {\n            this.tileLoadFunction = _customParams.tileLoadFunction;\n        }\n        if (_customParams != null && _customParams.config != null) {\n            console.warn(\"Konfiguration wurde manuell gesetzt und wird nicht vom Server des Stadtmessungamtes geladen. Bitte stellen Sie sicher, dass die Konfiguration immer aktuell ist.\");\n            this.config = _customParams.config;\n        } else {\n            // Konfiguration frühzeitig laden (asynchron), um spätere Aufrufe zu beschleunigen\n            this._fetchConfig().catch(() => {\n            });\n        }\n\n        //Karte initialisieren\n        let mapParams = {\n            target: \"map\",\n            controls: defaultControls({\n                attribution: false\n            })\n        };\n\n        //diese Parameter können nicht überdefiniert werden.\n        //Sie dürfen nicht geändert werden, da es sonst ggf. zu Problemen bei der Darstellung der Stadtmessungsamt-Kartendienste kommen kann.\n        let predefinedMapParams = {\n            logo: false,\n            pixelRatio: 1, //wichtige Einstellung für unsere Kartendienste!\n            loadTilesWhileAnimating: true, //Kacheln während des Zoomens nachladen\n            loadTilesWhileInteracting: true //Kacheln während des Panens nachladen\n        };\n        mapParams = {\n            ...mapParams,\n            ..._mapParams,\n            ...predefinedMapParams\n        };\n\n        //Sicherstellen, dass der Attribution-Control vorhanden ist.\n        //Dieser muss vorhanden sein, wenn Karten von ESRI genutzt werden.\n        if (mapParams.controls != null) {\n            let _attributionControlAvailable = false;\n            mapParams.controls.forEach(function (_control) {\n                if (_control instanceof ControlAttribution) {\n                    _attributionControlAvailable = true;\n                }\n            });\n            if (_attributionControlAvailable === false) {\n                //Attribution-Control hinzufügen\n                mapParams.controls.push(new ControlAttribution({\n                    tipLabel: \"Copyright\",\n                    collapsible: true\n                }));\n            }\n        }\n\n        //View definieren\n        this.viewParams = {\n            ...{\n                center: [513785, 5402232], // Stuttgart\n                zoom: 2\n            },\n            ..._viewParams,\n            ...{\n                projection: getProjection(this.projection)\n            }\n        };\n\n        //Karte definieren\n        this.map = new Map(mapParams);\n\n        //Rechtsklick auf der Karte unterbinden\n        document.querySelector(\".ol-viewport\").addEventListener(\"contextmenu\", function (e) {\n            e.preventDefault();\n        });\n\n        //Nach dem Start die Größe der Karte automatisch bestimmen\n        this.map.updateSize();\n\n        //Callbackfunktion ausführen\n        if (typeof _callbackFunction == \"function\") {\n            _callbackFunction(this.map);\n        }\n    }\n\n    /**\n     *    @description    fügt einen Kartendienst eines ArcGIS Servers (dynamisch / gecacht) hinzu.<br/>\n     *                    Wenn nichts anderes angegeben ist, dann gelten folgende zIndexe für die Kartendienste:\n     *                    <ul>\n     *                    <li>10: gecacht</li>\n     *                    <li>20: gecacht - Kartendienst des Stadtmessungsamtes</li>\n     *                    <li>40: dynamisch</li>\n     *                    <li>50: dynamisch - Kartendienst des Stadtmessungsamtes</li>\n     *                    </ul>\n     *                    Beispiel:<br/>\n     *                    <code>mymap.addEsriLayer(\"https://server.arcgisonline.com/arcgis/rest/services/World_Topo_Map/MapServer\");</code>\n     *\n     *    @param          {String} _url URL des Kartendienstes\n     *                    Kartendienste des Stadtmessungsamtes sollten über die Funktion addStmaEsriLayer hinzugefügt werden.\n     *\n     *    @param          {object} _layerParams\n     *                    zusätzliche Parameter für das OpenLayer-Layer-Objekt<br/>\n     *\n     *    @param          {object} _sourceParams\n     *                    zusätzliche Parameter für das OpenLayer-Source-Objekt<br/>\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.<br/>\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v0.0\n     */\n    addEsriLayer(_url, _layerParams = {}, _sourceParams = {}, _callbackFunction = null) {\n        const url = new URL(_url);\n        if (((this._getConfig().ags_hosts) || []).includes(url.hostname)) {\n            console.error(\"Kartendienste des Stadtmessungsamtes über die Methode addStmaEsriLayer hinzufügen\");\n        } else {\n            this._addEsriLayer(_url, _layerParams, _sourceParams, _callbackFunction);\n        }\n    }\n\n    /**\n     *    @description    fügt einen gecachten WMTS-Kartendienst hinzu.<br/>\n     *                    Wenn nichts anderes angegeben ist, dann gelten folgende zIndexe für die Kartendienste:\n     *                    <ul>\n     *                    <li>10: gecacht</li>\n     *                    <li>20: gecacht - Kartendienst des Stadtmessungsamtes</li>\n     *                    <li>40: dynamisch</li>\n     *                    <li>50: dynamisch - Kartendienst des Stadtmessungsamtes</li>\n     *                    </ul>\n     *                    Beispiel:<br/>\n     *                    <code>mymap.addWMTSLayer(\"https://SERVERNAME/INSTANZ/gwc/service/wmts?REQUEST=GetCapabilities\", \"LAYERNAME\");</code>\n     *\n     *    @param          {String} _url GetCapabilities-URL zum WMTS\n     *                    Kartendienste des Stadtmessungsamtes sollten über die Funktion addStmaWMTSLayer hinzugefügt werden.\n     *\n     *    @param          {String} _layerName Layername\n     *                    Name des Layers, der eingebunden werden soll\n     *\n     *    @param          {object} _layerParams\n     *                    zusätzliche Parameter für das OpenLayer-Layer-Objekt<br/>\n     *\n     *    @param          {object} _sourceParams\n     *                    zusätzliche Parameter für das OpenLayer-Source-Objekt<br/>\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.<br/>\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v2.1\n     */\n    addWMTSLayer(_url, _layerName = '', _layerParams = {}, _sourceParams = {}, _callbackFunction = null) {\n        const url = new URL(_url);\n        if (((this._getConfig().wmts_hosts) || []).includes(url.hostname)) {\n            console.error(\"WMTS-Kartendienste des Stadtmessungsamtes über die Methode addStmaWMTSLayer hinzufügen\");\n        } else {\n            this._addWMTSLayer_impl(_url, _layerName, _layerParams, _sourceParams, _callbackFunction);\n        }\n    }\n\n    /**\n     *    @description    fügt einen dynamischen WMS-Kartendienst hinzu.<br/>\n     *                    Wenn nichts anderes angegeben ist, dann gelten folgende zIndexe für die Kartendienste:\n     *                    <ul>\n     *                    <li>10: gecacht</li>\n     *                    <li>20: gecacht - Kartendienst des Stadtmessungsamtes</li>\n     *                    <li>40: dynamisch</li>\n     *                    <li>50: dynamisch - Kartendienst des Stadtmessungsamtes</li>\n     *                    </ul>\n     *                    Beispiel:<br/>\n     *                    <code>mymap.addWMSLayer(\"https://SERVERNAME/INSTANZ/gwc/service/wms\", \"LAYERNAME\");</code>\n     *                    <br/><br/>\n     *                    Der Layer kann gekachelt oder als ganzes Bild abgerufen werden. Standard ist der Abruf als ganzes Bild,\n     *                    da aber einige WMS-Dienste keine großen Bilder auf einmal zurückgeben können, kann der WMS auch gekachelt\n     *                    abgerufen werden. Dies kann zu Lasten der Kartographie gehen - so kann es passieren, dass Beschriftungen\n     *                    abgeschnitten oder mehrfach im Kartenbild enthalten sind.<br/>\n     *                    Standardmäßig wird der WMS-Dienst als dynamischer Dienst behandelt, wenn der als gekachelter Dienst eingebunden wird,\n     *                    wird er als gecachter Dienst behandelt (wichtig für die zIndexe der Kartendienste)\n     *                    Zum gekachelten Abruf muss als _sourceParams <code>{ \"TILED\": true }</code> übergeben werden.<br/>\n     *                    Beispiel:<br/>\n     *                    <code>mymap.addWMSLayer(\"https://SERVERNAME/INSTANZ/gwc/service/wms\", \"LAYERNAME\", {}, { \"TILED\": true });</code>\n     *\n     *\n     *    @param          {String} _url URL zum WMS\n     *                    Kartendienste des Stadtmessungsamtes sollten über die Funktion addStmaWMSLayer hinzugefügt werden.\n     *\n     *    @param          {String} _layerName Layername\n     *                    Name des Layers, der eingebunden werden soll\n     *\n     *    @param          {object} _layerParams\n     *                    zusätzliche Parameter für das OpenLayer-Layer-Objekt<br/>\n     *\n     *    @param          {object} _sourceParams\n     *                    zusätzliche Parameter für das OpenLayer-Source-Objekt<br/>\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.<br/>\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v2.1\n     */\n    addWMSLayer(_url, _layerName, _layerParams = {}, _sourceParams = {}, _callbackFunction = null) {\n        const url = new URL(_url);\n        if (((this._getConfig().wms_hosts) || []).includes(url.hostname)) {\n            console.error(\"WMS-Kartendienste des Stadtmessungsamtes über die Methode addStmaWMSLayer hinzufügen\");\n        } else {\n            this._addWMSLayer(_url, _layerName, _layerParams, _sourceParams, _callbackFunction);\n        }\n    }\n\n    /**\n     *    @description    fügt einen Kartendienst eines ArcGIS Servers (dynamisch / gecacht) des Stadtmessungsamtes hinzu.<br/>\n     *                    Wenn nichts anderes angegeben ist, dann gelten folgende zIndexe für die Kartendienste:\n     *                    <ul>\n     *                    <li>10: gecacht</li>\n     *                    <li>20: gecacht - Kartendienst des Stadtmessungsamtes</li>\n     *                    <li>40: dynamisch</li>\n     *                    <li>50: dynamisch - Kartendienst des Stadtmessungsamtes</li>\n     *                    </ul>\n     *                    Beispiel:<br/>\n     *                    <code>mymap.addStmaEsriLayer(\"1_Base/Stadtkarte_Internet_c\");</code>\n     *\n     *    @param          {String} _mapservice Bezeichnung des Kartendienstes\n     *                    Wenn die URL des Kartendienstes beispielsweise https://SERVER/ArcGIS/rest/services/ORDNER/KARTENDIENST/MapServer heißt,\n     *                    so sollte ORDNER/KARTENDIENST angegeben werden.\n     *\n     *    @param          {object} _layerParams\n     *                    zusätzliche Parameter für das OpenLayer-Layer-Objekt<br/>\n     *\n     *    @param          {object} _sourceParams\n     *                    zusätzliche Parameter für das OpenLayer-Source-Objekt<br/>\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v0.0\n     */\n    addStmaEsriLayer(_mapservice, _layerParams = {}, _sourceParams = {}, _callbackFunction = null) {\n        this._fetchConfig()\n            .then(() => {\n                this._addEsriLayer(\"https://\" + this._getConfig().ags_host + \"/\" + this._getConfig().ags_instance + \"/rest/services/\" + _mapservice + \"/MapServer\", _layerParams, _sourceParams, _callbackFunction);\n            })\n            .catch(err => {\n                console.error(\"Konfiguration (geoline.config) konnte nicht geladen werden – addStmaEsriLayer wird übersprungen\", err);\n            });\n    }\n\n    /**\n     *    @description    fügt einen gecachten WMTS-Kartendienst des Stadtmessungsamtes hinzu.<br/>\n     *                    Wenn nichts anderes angegeben ist, dann gelten folgende zIndexe für die Kartendienste:\n     *                    <ul>\n     *                    <li>10: gecacht</li>\n     *                    <li>20: gecacht - Kartendienst des Stadtmessungsamtes</li>\n     *                    <li>40: dynamisch</li>\n     *                    <li>50: dynamisch - Kartendienst des Stadtmessungsamtes</li>\n     *                    </ul>\n     *                    Beispiel:<br/>\n     *                    <code>mymap.addStmaWMTSLayer(\"LAYERNAME\");</code>\n     *\n     *    @param          {String} _layerName Layername\n     *                    Name des Layers, der eingebunden werden soll\n     *\n     *    @param          {object} _layerParams\n     *                    zusätzliche Parameter für das OpenLayer-Layer-Objekt<br/>\n     *\n     *    @param          {object} _sourceParams\n     *                    zusätzliche Parameter für das OpenLayer-Source-Objekt<br/>\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.<br/>\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v2.1\n     */\n    addStmaWMTSLayer(_layerName, _layerParams = {}, _sourceParams = {}, _callbackFunction = null) {\n        this._fetchConfig()\n            .then(() => {\n                //Matrix definieren - das was hier angegeben wird, kann nicht vom Nutzer überdefiniert werden.\n                if (_sourceParams == null) {\n                    _sourceParams = {};\n                }\n                const _predefinedSourceParams = {\n                    matrixSet: this._getConfig().wmts_matrix\n                }\n                _sourceParams = {\n                    ..._sourceParams,\n                    ..._predefinedSourceParams\n                };\n                this._addWMTSLayer_impl(\"https://\" + this._getConfig().wmts_host + \"/\" + this._getConfig().wmts_instance + \"/gwc/service/wmts?REQUEST=GetCapabilities\", _layerName, _layerParams, _sourceParams, _callbackFunction);\n            })\n            .catch(err => {\n                console.error(\"Konfiguration (geoline.config) konnte nicht geladen werden – addStmaWMTSLayer wird übersprungen\", err);\n            });\n    }\n\n    /**\n     *    @description    fügt einen dynamischen WMS-Kartendienst des Stadtmessungsamtes hinzu.<br/>\n     *                    Wenn nichts anderes angegeben ist, dann gelten folgende zIndexe für die Kartendienste:\n     *                    <ul>\n     *                    <li>10: gecacht</li>\n     *                    <li>20: gecacht - Kartendienst des Stadtmessungsamtes</li>\n     *                    <li>40: dynamisch</li>\n     *                    <li>50: dynamisch - Kartendienst des Stadtmessungsamtes</li>\n     *                    </ul>\n     *                    Beispiel:<br/>\n     *                    <code>mymap.addStmaWMSLayer(\"LAYERNAME\");</code>\n     *                    <br/><br/>\n     *                    Der Layer kann gekachelt oder als ganzes Bild abgerufen werden. Standard ist der Abruf als ganzes Bild,\n     *                    da aber einige WMS-Dienste keine großen Bilder auf einmal zurückgeben können, kann der WMS auch gekachelt\n     *                    abgerufen werden. Dies kann zu Lasten der Kartographie gehen - so kann es passieren, dass Beschriftungen\n     *                    abgeschnitten oder mehrfach im Kartenbild enthalten sind.<br/>\n     *                    Standardmäßig wird der WMS-Dienst als dynamischer Dienst behandelt, wenn der als gekachelter Dienst eingebunden wird,\n     *                    wird er als gecachter Dienst behandelt (wichtig für die zIndexe der Kartendienste)\n     *                    Zum gekachelten Abruf muss als _sourceParams <code>{ \"TILED\": true }</code> übergeben werden.<br/>\n     *                    Beispiel:<br/>\n     *                    <code>mymap.addStmaWMSLayer(\"LAYERNAME\", {}, { \"TILED\": true });</code>\n     *\n     *    @param          {String} _layerName Layername\n     *                    Name des Layers, der eingebunden werden soll\n     *\n     *    @param          {object} _layerParams\n     *                    zusätzliche Parameter für das OpenLayer-Layer-Objekt<br/>\n     *\n     *    @param          {object} _sourceParams\n     *                    zusätzliche Parameter für das OpenLayer-Source-Objekt<br/>\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.<br/>\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v2.1\n     */\n    addStmaWMSLayer(_layerName, _layerParams = {}, _sourceParams = {}, _callbackFunction = null) {\n        this._fetchConfig()\n            .then(() => {\n                //Tiled definieren - das was hier angegeben wird, kann nicht vom Nutzer überdefiniert werden.\n                if (_sourceParams == null) {\n                    _sourceParams = {};\n                }\n                const _predefinedSourceParams = {\n                    TILED: this._getConfig().wms_tiled\n                }\n                _sourceParams = {\n                    ..._sourceParams,\n                    ..._predefinedSourceParams\n                };\n                this._addWMSLayer(\"https://\" + this._getConfig().wms_host + \"/\" + this._getConfig().wms_instance, _layerName, _layerParams, _sourceParams, _callbackFunction);\n            })\n            .catch(err => {\n                console.error(\"Konfiguration (geoline.config) konnte nicht geladen werden – addStmaWMSLayer wird übersprungen\", err);\n            });\n    }\n\n    /**\n     *    @description    fügt einen Basis-Kartendienst (dynamisch / gecacht) des Stadtmessungsamtes hinzu.<br/>\n     *                    Wenn nichts anderes angegeben ist, dann gelten folgende zIndexe für die Kartendienste:\n     *                    <ul>\n     *                    <li>10: gecacht</li>\n     *                    <li>20: gecacht - Kartendienst des Stadtmessungsamtes</li>\n     *                    <li>40: dynamisch</li>\n     *                    <li>50: dynamisch - Kartendienst des Stadtmessungsamtes</li>\n     *                    </ul>\n     *                    Beispiel:<br/>\n     *                    <code>\n     *                        mymap.addStmaBaseLayer(\"Grundkarte\");<br/>\n     *                        mymap.addStmaBaseLayer(\"Luftbild\");\n     *                    </code>\n     *\n     *    @param          {String} _mapname sprechende Bezeichnung des Kartendienstes\n     *                    Für ausgewählte Basiskartendienste kann hierüber über eine sprechende Bezeichnung der Kartendienst hinzugefügt werden.\n     *                    Eventuelle Kartendienstnamenänderungen werden automatisch von der API berücksichtigt.\n     *                    Deswegen sollten die Basiskarten (Grundkarte, Luftbild, ..) immer über diese Funktion eingebundne werden.\n     *\n     *    @param          {object} _layerParams\n     *                    zusätzliche Parameter für das OpenLayer-Layer-Objekt<br/>\n     *\n     *    @param          {object} _sourceParams\n     *                    zusätzliche Parameter für das OpenLayer-Source-Objekt<br/>\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v0.0\n     */\n    addStmaBaseLayer(_mapname, _layerParams = {}, _sourceParams = {}, _callbackFunction = null) {\n        this._fetchConfig()\n            .then(() => {\n                const config = this._getConfig();\n                if (config.ags_services != null && config.ags_services[_mapname] != null) {\n                    this._addEsriLayer(\"https://\" + config.ags_services[_mapname].ags_host + \"/\" + config.ags_services[_mapname].ags_instance + \"/rest/services/\" + config.ags_services[_mapname].ags_service + \"/MapServer\", _layerParams, _sourceParams, _callbackFunction);\n                } else if (config.wmts_services != null && config.wmts_services[_mapname] != null) {\n                    //GetCapabilities-URL\n                    const _urlGetCapabilities = \"https://\" + config.wmts_services[_mapname].host + \"/\" + config.wmts_services[_mapname].instance + \"/gwc/service/wmts?REQUEST=GetCapabilities\";\n                    //Matrix definieren - das was hier angegeben wird, kann nicht vom Nutzer überdefiniert werden.\n                    if (_sourceParams == null) {\n                        _sourceParams = {};\n                    }\n                    _sourceParams = {\n                        ..._sourceParams,\n                        ...{matrixSet: config.wmts_services[_mapname].matrix}\n                    };\n                    this._addWMTSLayer_impl(_urlGetCapabilities, config.wmts_services[_mapname].service, _layerParams, _sourceParams, _callbackFunction);\n                } else if (config.wms_services != null && config.wms_services[_mapname] != null) {\n                    //URL\n                    const _url = \"https://\" + config.wms_services[_mapname].host + \"/\" + config.wms_services[_mapname].instance;\n                    //Tiled definieren - das was hier angegeben wird, kann nicht vom Nutzer überdefiniert werden.\n                    if (_sourceParams == null) {\n                        _sourceParams = {};\n                    }\n                    _sourceParams = {\n                        ..._sourceParams,\n                        ...{TILED: config.wms_services[_mapname].tiled}\n                    };\n                    this._addWMSLayer(_url, config.wms_services[_mapname].service, _layerParams, _sourceParams, _callbackFunction);\n                } else {\n                    console.error(\"Karte '\" + _mapname + \"' nicht gefunden\");\n                }\n            })\n            .catch(err => {\n                console.error(\"Konfiguration (geoline.config) konnte nicht geladen werden – addStmaBaseLayer wird übersprungen\", err);\n            });\n    }\n\n    /**\n     *    @description    fügt einzelne Punkte hinzu.<br/>\n     *                    Wenn nichts anderes angegeben ist, dann gilt der zIndex 60.<br/>\n     *                    Beispiel:<br/>\n     *                    <code>mymap.addPoints([[3513223, 5405026]], \"images/target.png\");</code>\n     *\n     *    @param          {Array} _pointCoords Array von Koordinatenpaaren<br/>\n     *                    [ [x,y], [x,y], ... ]\n     *\n     *    @param          {String} _imageURL URL zu dem Bild des Punktes / Data-URL des Bildes\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v0.0\n     */\n    addPoints(_pointCoords, _imageURL, _callbackFunction = null) {\n\n        let features = [];\n        for (let i = 0; i < _pointCoords.length; i++) {\n            features.push(new Feature({\n                geometry: new GeomPoint(_pointCoords[i])\n            }));\n        }\n\n        const vectorLayer = new LayerVector({\n            zIndex: 60,\n            source: new SourceVector({\n                features: features\n            }),\n            style: new StyleStyle({\n                image: new StyleIcon({\n                    anchor: [0.5, 1],\n                    src: _imageURL\n                })\n            })\n        });\n        this.map.addLayer(vectorLayer);\n\n        //Callbackfunktion ausführen\n        if (typeof _callbackFunction == \"function\") {\n            _callbackFunction(vectorLayer);\n        }\n    }\n\n    /**\n     *    @description    fügt Objekte aus einem geoJSON hinzu. Das geoJSON ist über eine URL erreichbar.<br/>\n     *                    Beispiel:\n     *                    <code>mymap.addGeoJSONfromURL(\"examples/example.geojson\");</code>\n     *\n     *    @param          {String} _url URL zur geoJSON-Datei\n     *\n     *    @param          {boolean} _zoomTo\n     *                    Passt den sichtbaren Bereich der Karte so an, dass alle Objekte der Vektorquelle vollständig sichtbar sind\n     *\n     *    @param          {object} _style (optional) Ausprägungs-Details<br/>\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben. Der Funktion wird false übergeben, wenn das GeoJSON\n     *                    nicht abgerufen werden konnte.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v2.0\n     */\n    addGeoJSONfromURL(_url, _zoomTo = false, _style = {}, _callbackFunction = null) {\n        fetch(_url)\n            .then(response => {\n                if (!response.ok) {\n                    throw new Error('Network response was not ok');\n                }\n                return response.json();\n            })\n            .then(geojson => {\n                this.addGeoJSON(geojson, _zoomTo, _style, _callbackFunction);\n            })\n            .catch(error => {\n                console.error(\"JSON konnte von URL \" + _url + \" nicht abgerufen werden.\", error);\n\n                // Callbackfunktion ausführen\n                if (typeof _callbackFunction === \"function\") {\n                    _callbackFunction(false);\n                }\n            });\n    }\n\n    /**\n     *    @description    fügt Objekte aus einem geoJSON hinzu.\n     *                    Beispiel:\n     *                    <code>mymap.addGeoJSON(_geojson);</code>\n     *\n     *    @param          {object} _geojson GeoJSON-Objekt\n     *\n     *    @param          {boolean} _zoomTo\n     *                    Passt den sichtbaren Bereich der Karte so an, dass alle Objekte der Vektorquelle vollständig sichtbar sind\n     *\n     *    @param          {object} _style (optional) Ausprägungs-Details<br/>\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v2.0\n     */\n    addGeoJSON(_geojson, _zoomTo = false, _style = {}, _callbackFunction = null) {\n\n        let _projectionGeoJSON = \"EPSG:4326\";\n        //Wurde das Koordinatensystem angegeben?\n        if (\"crs\" in _geojson) {\n            if (\"properties\" in _geojson.crs) {\n                if (\"name\" in _geojson.crs.properties) {\n                    _projectionGeoJSON = _geojson.crs.properties.name;\n                }\n            }\n        }\n\n        //Bei urn:ogc:def:crs:OGC:1.3:CRS84 wird unter Verwendung von UTM(EPSG:25832) nicht korrekt transformiert.\n        if (_projectionGeoJSON === \"urn:ogc:def:crs:OGC:1.3:CRS84\") {\n            _projectionGeoJSON = \"EPSG:4326\";\n        }\n\n        if (getProjection(_projectionGeoJSON) == null) {\n            console.error(\"Projektion \" + _projectionGeoJSON + \" nicht gefunden. Es kann zu falscher Darstellung der Karte kommen\");\n        }\n\n        const _geojsonFormat = this._getGeoJSONFormat(_projectionGeoJSON);\n        const _vectorSource = new SourceVector({\n            features: _geojsonFormat.readFeatures(_geojson)\n        });\n\n        const vectorLayer = new LayerVector({\n            zIndex: 60,\n            source: _vectorSource,\n            style: _style\n        });\n\n        this.map.addLayer(vectorLayer);\n\n        if (_zoomTo === true) {\n            //warte bis View bereit ist.\n            let self = this;\n            const zoomToInterval = window.setInterval(function () {\n                if (self.map.getView().getZoom() !== undefined) {\n                    clearInterval(zoomToInterval);\n                    self.map.getView().fit(_vectorSource.getExtent());\n                }\n            }, 500);\n        }\n\n        //Callbackfunktion ausführen\n        if (typeof _callbackFunction == \"function\") {\n            _callbackFunction(vectorLayer);\n        }\n    }\n\n    /**\n     *    @description    Bietet die Möglichkeit an für einen Layer ein Overlay hinzuzufügen.\n     *                    Beispiel:\n     *                    <code>mymap.addOverlayForLayer(_layer, _overlayFunction);</code>\n     *\n     *    @param          {object} _layer Das Layerobjekt\n     *\n     *    @param          {function} _overlayFunction\n     *                    Funktion, die bei einem Klick auf das Objekt ausgeführt wird.\n     *                    Die Funktion muss den HTML-Inhalt für ein Overlay-Fenster zurückgeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v1.2\n     */\n    addOverlayForLayer(_layer, _overlayFunction = null) {\n\n        //globaler Overlay-Layer hinzufügen\n        if (this.overlayLayer == null) {\n            if (this.map.getTargetElement().querySelector(\"#geoline_ol_js_popup\") === null) {\n                // Element für Overlay definieren\n                this.map.getTargetElement().insertAdjacentHTML('beforeend', '<div id=\"geoline_ol_js_popup\"></div>');\n            }\n            const _overlayDIV = this.map.getTargetElement().querySelector(\"#geoline_ol_js_popup\");\n\n            this.overlayLayer = new Overlay({\n                element: _overlayDIV,\n            });\n            this.map.addOverlay(this.overlayLayer);\n\n            let self = this;\n            this.map.on('click', function (evt) {\n                const featuredata = self.map.forEachFeatureAtPixel(\n                    evt.pixel,\n                    function (_feature, _layer) {\n                        return {\n                            \"feature\": _feature,\n                            \"layer\": _layer\n                        };\n                    },\n                    {\n                        layerFilter: function (_layerCandidate) {\n                            //Filter, damit nur die Features gefunden werden, für die auch der Overlay aktiviert wurde.\n                            return self.overlayLayers.includes(_layerCandidate);\n                        }\n                    }\n                );\n                if (featuredata) {\n                    const _overlayFunction = self.overlayFunctions[self.overlayLayers.indexOf(featuredata.layer)];\n\n                    self.overlayLayer.getElement().innerHTML =\n                        '<div class=\"arrow\"></div>' +\n                        '<div class=\"content\">' + _overlayFunction(featuredata.feature) + '</div>';\n\n                    self.overlayLayer.setPosition(evt.coordinate);\n                    _overlayDIV.style.display = 'block';\n\n                    _overlayDIV.style.transform = \"translate3d(-\" + _overlayDIV.offsetWidth / 2 + \"px, calc(-\" + _overlayDIV.offsetHeight + \"px - 0.5rem), 0px)\";\n                } else {\n                    _overlayDIV.style.display = 'none';\n                }\n            });\n        }\n\n        //Füge Layer zu den Layern hinzu, für die das Overlay aktiviert ist.\n        if (!this.overlayLayers.includes(_layer)) {\n            this.overlayLayers.push(_layer);\n            this.overlayFunctions[this.overlayLayers.indexOf(_layer)] = _overlayFunction;\n        }\n    }\n\n    /**\n     *    @description    fügt einen Kartendienst eines ArcGIS Servers (dynamisch / gecacht) des Stadtmessungsamtes hinzu.\n     *                    Wenn nichts anderes angegeben ist, dann gelten folgende zIndexe für die Kartendienste:\n     *                    <ul>\n     *                    <li>10: gecacht</li>\n     *                    <li>20: gecacht - Kartendienst des Stadtmessungsamtes</li>\n     *                    <li>40: dynamisch</li>\n     *                    <li>50: dynamisch - Kartendienst des Stadtmessungsamtes</li>\n     *                    </ul>\n     *\n     *                    Beispiel:<br/>\n     *                    <code>mymap.addStmaEsriFeatureLayer(\"1_Base/Stadtkarte_Internet_c\");</code>\n     *\n     *    @param          {String} _mapservice Bezeichnung des Kartendienstes\n     *                    Wenn die URL des Kartendienstes beispielsweise https://SERVER/ArcGIS/rest/services/ORDNER/KARTENDIENST/MapServer heißt,\n     *                    so sollte ORDNER/KARTENDIENST angegeben werden.\n     *\n     *    @param          {integer} _layerId LayerId im Kartendienst\n     *                    Wenn die URL des Kartendienstes beispielsweise https://SERVER/ArcGIS/rest/services/ORDNER/KARTENDIENST/MapServer/LAYERID heißt,\n     *                    so sollte LAYERID angegeben werden.\n     *\n     *    @param          {function} _styleFunction\n     *                    Funktion, wie die Objekte aussehen sollen. Der Funktion wird als 1. Parameter das feature-Objekt (ol.Feature) übergeben.\n     *                    Mit Hilfe von z.B. feature.get('activeprod') könnte dann der Inhalt des Attributes 'activeprod' abgerufen werden und in Abhängigkeit\n     *                    von ihm unterschiedliche Stile angegeben werden.\n     *                    Rückgabe der Funktion muss ein ol.style.Style-Objekt sein.<br/>\n     *\n     *    @param          {function} _callbackFunction\n     *                    Möglichkeit, eine Funktion zu übergeben, die nach dem Hinzufügen des Layers ausgeführt wird.\n     *                    Der Funktion wird das jeweilige Layerobjekt übergeben.\n     *\n     *    @returns        {null}\n     *\n     *    @since          v0.86\n     */\n    addStmaEsriFeatureLayer(_mapservice, _layerId, _styleFunction = null, _callbackFunction = null) {\n        const _epsgCode = this.projection.replace(\"EPSG:\", \"\");\n\n        const vectorSource = new SourceVector({\n            loader: function (_extent, _resolution, _projection) {\n                let self = this;\n                self._fetchConfig()\n                    .then(() => {\n                        const _url = \"https://\" + self._getConfig().ags_host + \"/\" + self._getConfig().ags_instance + \"/rest/services/\" + _mapservice + \"/MapServer/\" + _layerId + \"/query/\";\n                        const _urlParams = {\n                            \"f\": \"json\",\n                            \"returnGeometry\": true,\n                            \"spatialRel\": \"esriSpatialRelIntersects\",\n                            \"geometry\": encodeURIComponent('{\"xmin\":' + _extent[0] + ',\"ymin\":' + _extent[1] + ',\"xmax\":' + _extent[2] + ',\"ymax\":' + _extent[3] + ',\"spatialReference\":{\"wkid\":' + _epsgCode + '}}'),\n                            \"geometryType\": \"esriGeometryEnvelope\",\n                            \"inSR\": _epsgCode,\n                            \"outFields\": \"*\",\n                            \"outSR\": _epsgCode\n                        };\n                        // Create URL with parameters\n                        const queryString = new URLSearchParams(_urlParams).toString();\n                        const fullUrl = _url + '?' + queryString;\n                        // Use the jsonp module that's already imported in the file\n                        const jsonp = require('jsonp');\n                        jsonp(fullUrl, null, (err, _response) => {\n                            if (err) {\n                                console.error(\"Error fetching JSONP data:\", err);\n                                return;\n                            }\n                            if (_response.error) {\n                                alert(_response.error.message + '\\n' + _response.error.details.join('\\n'));\n                            } else {\n                                const _esrijsonFormat = new FormatEsriJSON()\n                                const features = _esrijsonFormat.readFeatures(_response, {\n                                    featureProjection: _projection\n                                });\n                                if (features.length > 0) {\n                                    vectorSource.addFeatures(features);\n                                }\n                            }\n                        });\n                    })\n                    .catch(err => {\n                        console.error(\"Konfiguration (geoline.config) konnte nicht geladen werden – FeatureLoader übersprungen\", err);\n                    });\n            },\n            strategy: tileLoadingStrategy(createXYZ({\n                tileSize: 512\n            }))\n        });\n\n        const vectorLayer = new LayerVector({\n            zIndex: 60,\n            source: vectorSource,\n            style: _styleFunction\n        });\n\n        this.map.addLayer(vectorLayer);\n\n        //Callbackfunktion ausführen\n        if (typeof _callbackFunction == \"function\") {\n            _callbackFunction(vectorLayer);\n        }\n    }\n\n    /**\n     *    @description    gibt das OpenLayer-Map-Objekt zurück.<br/>\n     *\n     *    @returns        {object} ol.Map<br/>\n     *\n     *    @since          v0.0\n     */\n    getMap() {\n        return this.map;\n    }\n\n    /**\n     *    @description    Gibt die interne Konfiguration von geoline.ol.js zurück.<br/>\n     *                    Diese Funktion sollte nur sparsam genutzt werden, zum Beispiel zum Ermitteln der Konfiguration für die Offlineverfügbarkeit in Apps.\n     *\n     *    @returns        {GeolineConfig}\n     *\n     *    @since          v1.0\n     */\n    getConfig() {\n        return this._getConfig();\n    }\n\n}\n\n// Default Export für moderne ES6 Imports\nexport default StmaOpenLayers;\n"],"names":["s","m","h","d","plural","ms","n","name","Math","floor","ceil","module","exports","val","options","type","length","str","String","match","exec","parseFloat","toLowerCase","parse","isNaN","long","round","fmtShort","Error","JSON","stringify","debug","url","opts","fn","script","timer","prefix","id","count","param","timeout","enc","encodeURIComponent","target","document","getElementsByTagName","head","cleanup","parentNode","removeChild","window","noop","clearTimeout","setTimeout","data","indexOf","replace","createElement","src","insertBefore","load","r","storage","e","process","env","DEBUG","log","console","Function","prototype","apply","call","arguments","formatArgs","args","useColors","this","namespace","humanize","diff","c","color","splice","index","lastC","save","namespaces","removeItem","documentElement","style","WebkitAppearance","firebug","exception","table","navigator","userAgent","parseInt","RegExp","$1","chrome","local","localStorage","localstorage","colors","formatters","j","v","err","message","enable","prevTime","createDebug","enabled","self","curr","Date","prev","Array","i","coerce","unshift","format","formatter","bind","hash","charCodeAt","abs","selectColor","init","stack","disable","names","skips","split","len","push","substr","test","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","hasOwnProperty","constructor","disposed","dispose","disposeInternal","ascending","a","b","descending","linearFindNearest","arr","direction","candidate","reverseSubArray","begin","end","tmp","extension","isArray","equals","arr1","arr2","len1","TRUE","VOID","memoizeOne","lastResult","lastArgs","lastThis","nextArgs","slice","toPromise","getter","value","Promise","reject","resolve","promiseGetter","clear","object","property","propagationStopped","defaultPrevented","preventDefault","stopPropagation","super","eventTarget_","pendingRemovals_","dispatching_","listeners_","addEventListener","listener","listeners","listenersForType","includes","dispatchEvent","event","isString","evt","Event","dispatching","pendingRemovals","propagate","ii","handleEvent","pr","removeEventListener","getListeners","hasListener","keys","listen","thisArg","once","originalListener","eventsKey","listenOnce","unlistenByKey","Observable","on","un","revision_","changed","EventType","getRevision","onInternal","onceInternal","ol_key","unInternal","unByKey","uidCounter_","getUid","ol_uid","ObjectEvent","oldValue","values","values_","setProperties","getKeys","getProperties","assign","getPropertiesInternal","hasProperties","notify","eventType","ObjectEventType","addChangeListener","removeChangeListener","set","silent","applyProperties","source","unset","assert","assertion","errorMessage","geometryOrProperties","id_","geometryName_","style_","styleFunction_","geometryChangeKey_","handleGeometryChanged_","geometry","setGeometry","properties","clone","setGeometryName","getGeometryName","getGeometry","getStyle","setStyle","getId","getStyleFunction","handleGeometryChange_","styles","createStyleFunction","setId","Property","CollectionEvent","element","array","unique_","unique","array_","assertUnique_","updateLength_","getLength","pop","extend","forEach","f","getArray","item","insertAt","elem","CollectionEventType","removeAt","remove","setAt","except","map","frameState","originalEvent","dragging","activePointers","pixel_","coordinate_","pixel","getEventPixel","coordinate","getCoordinateFromPixel","SINGLECLICK","CLICK","DBLCLICK","POINTERDRAG","POINTERMOVE","POINTERDOWN","POINTERUP","POINTEROVER","POINTEROUT","POINTERENTER","POINTERLEAVE","POINTERCANCEL","ua","WEBKIT","DEVICE_PIXEL_RATIO","devicePixelRatio","WORKER_OFFSCREEN_CANVAS","WorkerGlobalScope","OffscreenCanvas","IMAGE_DECODE","Image","decode","CREATE_IMAGE_BITMAP","createImageBitmap","PASSIVE_EVENT_LISTENERS","passive","moveTolerance","map_","clickTimeoutId_","emulateClicks_","dragging_","dragListenerKeys_","moveTolerance_","down_","getViewport","activePointers_","trackedTouches_","element_","pointerdownListenerKey_","handlePointerDown_","originalPointerMoveEvent_","relayedListenerKey_","relayMoveEvent_","boundHandleTouchMove_","handleTouchMove_","emulateClick_","pointerEvent","newEvent","updateActivePointers_","pointerId","handlePointerUp_","isMouseActionButton_","button","PointerEvent","writable","doc","getOwnerDocument","handlePointerMove_","getRootNode","isMoving_","cancelable","clientX","clientY","DROP","Infinity","priorityFunction","keyFunction","priorityFunction_","keyFunction_","elements_","priorities_","queuedElements_","dequeue","elements","priorities","siftUp_","elementKey","enqueue","priority","siftDown_","getCount","getLeftChildIndex_","getRightChildIndex_","getParentIndex_","heapify_","isEmpty","isKeyQueued","isQueued","startIndex","lIndex","rIndex","smallerChildIndex","parentIndex","reprioritize","tilePriorityFunction","tileChangeCallback","getKey","boundHandleTileChange_","handleTileChange","tileChangeCallback_","tilesLoading_","tilesLoadingKeys_","added","getTilesLoading","tile","state","getState","tileKey","loadMoreTiles","maxTotalLoading","maxNewLoads","newLoads","CENTER","RESOLUTION","ROTATION","clamp","min","max","squaredSegmentDistance","x","y","x1","y1","x2","y2","dx","dy","t","angleInRadians","PI","angleInDegrees","lerp","decimals","factor","pow","wrap","range","createExtent","extent","onlyCenter","smooth","center","resolution","size","isMoving","centerShift","viewWidth","viewHeight","shiftX","shiftY","minX","maxX","minY","maxY","ratio","none","boundingExtent","coordinates","extendCoordinate","buffer","dest","closestSquaredDistanceXY","containsCoordinate","containsXY","containsExtent","extent1","extent2","coordinateRelationship","relationship","createOrUpdate","createOrUpdateEmpty","createOrUpdateFromCoordinate","createOrUpdateFromFlatCoordinates","flatCoordinates","offset","stride","extendFlatCoordinates","extendXY","forEachCorner","callback","getBottomLeft","getBottomRight","getTopRight","getTopLeft","getArea","area","getWidth","getHeight","getCenter","getCorner","corner","getForViewAndSize","rotation","x0","y0","x3","y3","getRotatedViewport","cosRotation","cos","sinRotation","sin","xCos","xSin","yCos","ySin","getIntersection","intersection","intersects","wrapX","projection","projectionExtent","getExtent","canWrapX","worldWidth","wrapAndSliceX","multiWorld","isFinite","coordinate1","coordinate2","rotate","angle","cosAngle","sinAngle","worldsAway","getWorldsAway","sourceExtentWidth","easeIn","easeOut","inAndOut","linear","levels","level","warn","METERS_PER_UNIT","code_","code","units_","extent_","worldExtent_","worldExtent","axisOrientation_","axisOrientation","global_","global","canWrapX_","getPointResolutionFunc_","getPointResolution","defaultTileGrid_","metersPerUnit_","metersPerUnit","getCode","getUnits","getMetersPerUnit","getWorldExtent","getAxisOrientation","isGlobal","setGlobal","getDefaultTileGrid","setDefaultTileGrid","tileGrid","setExtent","setWorldExtent","setGetPointResolution","func","getPointResolutionFunc","RADIUS","HALF_SIZE","EXTENT","WORLD_EXTENT","MAX_SAFE_Y","tan","EPSG3857Projection","units","point","cosh","PROJECTIONS","EPSG4326Projection","cache","transforms","destination","transformFn","sourceCode","destinationCode","K0","E","E2","E3","E_P2","SQRT_E","sqrt","_E","_E2","_E3","_E4","_E5","M1","M3","M4","P2","P3","P4","P5","R","toLonLat","easting","northing","zone","mu","north","pRad","pSin","pSin2","pCos","pTan","pTan2","pTan4","epSin","epSinSqrt","c2","d2","d3","d4","d5","latitude","longitude","zoneToCentralLongitude","number","fromLonLat","latRad","latSin","latCos","latTan","latTan2","latTan4","lonRad","centralLonRad","a2","a3","a4","a5","a6","epsgRegExes","zoneFromCode","epsgId","re","makeTransformFunction","transformer","input","output","dimension","coord","getDistance","c1","radius","lat1","lat2","deltaLatBy2","deltaLonBy2","atan2","transformFactories","forward","inverse","projectionFactories","showCoordinateWarning","cloneTransform","addProjection","projectionLike","makeProjection","pointResolution","projUnits","toEPSG4326","getTransformFromProjections","vertices","addEquivalentProjections","projections","addProjections","createProjection","defaultCode","createTransformFromCoordinateTransform","coordTransform","pointLength","jj","addCoordinateTransforms","sourceProj","destProj","equivalent","projection1","projection2","equalUnits","transformFunc","sourceTransforms","destinationTransforms","makeTransforms","intermediateCode","composeTransformFuncs","fromSource","toDestination","t1","t2","dimensions","getTransform","transform","stops","width","height","xs","ys","l","_boundingExtentXYs","applyTransform","userProjection","getUserProjection","toUserCoordinate","sourceProjection","fromUserCoordinate","destProjection","toUserExtent","fromUserExtent","toUserResolution","createSafeCoordinateTransform","transformed","sourceExtent","projections2","forwardTransform","inverseTransform","compose","dx1","dy1","sx","sy","dx2","dy2","makeInverse","det","mat","atan","exp","matrixPrecision","fromString","cssTransform","substring","transform2D","destinationStride","k","anchor","anchorX","anchorY","deltaX","deltaY","tmpTransform","tmpPoint","NaN","extentRevision_","simplifiedGeometryMaxMinSquaredTolerance","simplifiedGeometryRevision","simplifyTransformedInternal","revision","squaredTolerance","getSimplifiedGeometry","simplifyTransformed","closestPointXY","closestPoint","minSquaredDistance","Number","MIN_VALUE","getClosestPoint","intersectsCoordinate","computeExtent","returnOrUpdate","scale","simplify","tolerance","getType","intersectsExtent","translate","inCoordinates","outCoordinates","pixelExtent","projectedExtent","projTransform","getLayoutForStride","layout","getStrideForLayout","getCoordinates","getFirstCoordinate","getFlatCoordinates","getLastCoordinate","getLayout","simplifiedGeometry","getSimplifiedGeometryInternal","getStride","setFlatCoordinates","setCoordinates","setLayout","nesting","startsWith","linearRing","twiceArea","linearRings","ends","assignClosest","offset1","offset2","maxSquaredDelta","squaredDelta","arrayMaxSquaredDelta","assignClosestPoint","maxDelta","isRing","squaredDistance","assignClosestArrayPoint","deflateCoordinates","deflateCoordinatesArray","coordinatess","deflateMultiCoordinatesArray","coordinatesss","endss","inflateCoordinates","inflateCoordinatesArray","inflateMultiCoordinatesArray","douglasPeucker","simplifiedFlatCoordinates","simplifiedOffset","markers","last","first","maxSquaredDistance","douglasPeuckerArray","simplifiedEnds","snap","quantize","quantizeArray","LinearRing","maxDelta_","maxDeltaRevision_","deflateCoordinate","linearRingContainsExtent","linearRingContainsXY","wn","linearRingsContainsXY","getInteriorPointOfArray","flatCenters","flatCentersOffset","intersections","rr","pointX","maxSegmentLength","sort","segmentLength","getInteriorPointsOfMultiArray","interiorPoints","ret","intersectsLineString","coordinatesExtent","point1","point2","start","startRel","endRel","startX","startY","endX","endY","slope","intersectsSegment","intersectsLinearRing","intersectsLinearRingArray","linearRingIsClockwise","edge","linearRingsAreOriented","right","isClockwise","linearRingssAreOriented","orientLinearRings","orientLinearRingsArray","ends_","flatInteriorPointRevision_","flatInteriorPoint_","orientedRevision_","orientedFlatCoordinates_","appendLinearRing","polygon","getOrientedFlatCoordinates","getEnds","getFlatInteriorPoint","flatCenter","getInteriorPoint","getLinearRingCount","getLinearRing","getLinearRings","fromExtent","getViewportClampedResolution","maxExtent","viewportSize","showFullExtent","xResolution","yResolution","getSmoothClampedResolution","maxResolution","minResolution","result","createMinMaxResolution","cappedMaxRes","animationCallback","returnValue","isNoopAnimation","animation","sourceCenter","targetCenter","sourceResolution","targetResolution","sourceRotation","targetRotation","calculateCenterOn","position","rotX","rotY","hints_","animations_","updateAnimationKey_","projection_","viewportSize_","targetCenter_","targetResolution_","targetRotation_","nextCenter_","nextResolution_","nextRotation_","cancelAnchor_","disableCoordinateWarning","applyOptions_","ViewProperty","resolutionConstraintInfo","resolutionConstraint","minZoom","maxZoom","zoomFactor","smoothResolutionConstraint","projExtent","constrainOnlyCenter","resolutions","constrainResolution","capped","z","createSnapToResolutions","defaultMaxResolution","degrees","defaultMinResolution","defaultMaxZoom","power","minZoomLevel","cappedZoomLevel","zoomLevel","createSnapToPower","constraint","createResolutionConstraint","maxResolution_","minResolution_","zoomFactor_","resolutions_","padding_","padding","minZoom_","centerConstraint","smoothExtentConstraint","createCenterConstraint","rotationConstraint","enableRotation","constrainRotation","createSnapToZero","theta","createSnapToN","createRotationConstraint","constraints_","setRotation","setCenterInternal","setResolution","zoom","setZoom","oldPadding","getCenterInternal","newPadding","getResolution","offsetX","offsetY","getUpdatedOptions_","newOptions","getZoom","getRotation","animate","var_args","isDef","getAnimating","resolveConstraints","getProjection","animateInternal","animationCount","now","series","complete","duration","easing","getResolutionForZoom","delta","setHint","updateAnimations_","getInteracting","cancelAnimations","cancelAnimationFrame","more","seriesComplete","elapsed","fraction","progress","getViewportSize_","constrainedResolution","calculateCenterZoom","applyTargetState_","constrainedRotation","calculateCenterRotate","filter","Boolean","requestAnimationFrame","currentCenter","currentResolution","w","setViewportSize","getConstraints","getConstrainResolution","getHints","hints","calculateExtent","calculateExtentInternal","getViewportSizeMinusPadding_","getMaxResolution","getMinResolution","getMaxZoom","getZoomForResolution","setMaxZoom","getMinZoom","setMinZoom","setConstrainResolution","getResolutions","getResolutionForExtent","getResolutionForExtentInternal","getResolutionForValueFunction","getConstrainedResolution","getValueForResolutionFunction","logPower","reducedSize","nextCenter","nextResolution","nextRotation","getViewStateAndExtent","viewState","nearest","baseLevel","fit","geometryOrExtent","fitInternal","rotatedExtentForGeometry","coords","minRotX","minRotY","maxRotX","maxRotY","rotatedExtent","centerRot","centerX","centerY","getConstrainedCenter","centerOn","centerOnInternal","calculateCenterShift","shiftedCenter","adjustCenter","deltaCoordinates","setCenter","adjustCenterInternal","adjustResolution","adjustResolutionInternal","newResolution","adjustZoom","adjustRotation","adjustRotationInternal","newRotation","hint","doNotCancelAnims","forceMoving","newCenter","resolutionDirection","beginInteraction","endInteraction","endInteractionInternal","getConstrainedZoom","targetZoom","targetRes","CLASS_HIDDEN","CLASS_UNSELECTABLE","CLASS_CONTROL","CLASS_COLLAPSED","fontRegEx","join","fontRegExMatchIndex","fontWeights","normal","bold","getFontParameters","fontSpec","lineHeight","weight","variant","trim","families","family","canvasPool","settings","canvas","shift","getContext","sharedCanvasContext","getSharedCanvasContext2D","releaseCanvas","context","clearRect","offsetWidth","getComputedStyle","marginLeft","marginRight","offsetHeight","marginTop","marginBottom","replaceNode","newNode","oldNode","parent","replaceChild","removeChildren","node","lastChild","pointerEvents","target_","listenerKeys","render","setTarget","getMap","setMap","getOverlayContainerStopEvent","appendChild","MapEventType","mapEvent","getElementById","ulElement_","collapsed_","collapsed","userCollapsed_","overrideCollapsible_","collapsible","collapsible_","attributions_","attributions","className","tipLabel","expandClassName","collapseLabel","collapseClassName","collapseLabel_","textContent","label","label_","activeLabel","toggleButton_","setAttribute","title","handleClick_","cssClasses","renderedAttributions_","renderedVisible_","collectSourceAttributions_","layers","getAllLayers","visibleAttributions","Set","flatMap","layer","getAttributions","add","some","getSource","getAttributionsCollapsible","setCollapsible","from","updateElement_","display","all","attribution","visible","innerHTML","handleToggle_","classList","toggle","getCollapsible","setCollapsed","getCollapsed","compassClassName","callResetNorth_","resetNorth","duration_","autoHide_","autoHide","rotation_","resetNorth_","view","getView","contains","zoomInClassName","zoomOutClassName","zoomInLabel","zoomOutLabel","zoomInTipLabel","zoomOutTipLabel","inElement","createTextNode","outElement","zoomByDelta_","currentZoom","newZoom","defaults","controls","zoomOptions","rotateOptions","attributionOptions","decay","minVelocity","delay","decay_","minVelocity_","delay_","points_","angle_","initialVelocity_","update","lastIndex","firstIndex","getAngle","zoomByDelta","setActive","getActive","mapBrowserEvent","active","delta_","stopEvent","browserEvent","shiftKey","conditions","pass","altShiftKeysOnly","altKey","metaKey","ctrlKey","focusWithTabindex","targetElement","getTargetElement","rootNode","ShadowRoot","host","hasAttribute","activeElement","always","mouseActionButton","noModifierKeys","shiftKeyOnly","targetNotEditable","tagName","isContentEditable","mouseOnly","pointerType","primaryAction","isPrimary","handleDownEvent","handleDragEvent","handleMoveEvent","handleUpEvent","stopDown","handlingDownUpSequence","targetPointers","getPointerCount","updateTrackedPointers_","handledUp","handled","Pointer","kinetic_","kinetic","lastCentroid","lastPointersCount_","panning_","condition","condition_","onFocusOnly","noKinetic_","centroid","distance","centerpx","getPixelFromCoordinateInternal","getCoordinateFromPixelInternal","lastAngle_","getSize","geometry_","startPixel_","endPixel_","render_","startPixel","endPixel","px","left","top","getOverlayContainer","setPixels","createOrUpdateGeometry","DragBoxEventType","DragBoxEvent","box_","minArea_","minArea","onBoxEnd","boxEndCondition_","boxEndCondition","defaultBoxEndCondition","completeBox","out_","out","defaultCondition_","pixelDelta_","pixelDelta","keyEvent","Key","mapUnitsDelta","pan","platformModifierKey","totalDelta_","lastDelta_","timeout_","useAnchor_","useAnchor","constrainResolution_","lastAnchor_","startTime_","timeoutId_","mode_","trackpadEventGap_","trackpadTimeoutId_","deltaPerZoom_","endInteraction_","wheelEvent","deltaMode","WheelEvent","DOM_DELTA_LINE","DOM_DELTA_PAGE","timeLeft","handleWheelZoom_","setMouseAnchor","pointerOptions","anchor_","rotating_","rotationDelta_","threshold_","threshold","rotationDelta","touch0","touch1","lastDistance_","lastScaleDelta_","scaleDelta","background_","background","opacity","zIndex","className_","state_","getBackground","getClassName","getLayerState","managed","getZIndex","getOpacity","getVisible","getLayersArray","getLayerStatesArray","states","getSourceState","setBackground","setMaxResolution","setMinResolution","setOpacity","setVisible","setZIndex","zindex","GroupEvent","LayerGroup","Base","baseOptions","layersListenerKeys_","listenerKeys_","handleLayersChanged_","setLayers","handleLayerChange_","getLayers","handleLayersAdd_","handleLayersRemove_","layersArray","registerLayerListeners_","handleLayerGroupAdd_","handleLayerGroupRemove_","collectionEvent","collection","currentLayers","pos","ownLayerState","defaultZIndex","layerState","inView","mapPrecomposeKey_","mapRenderKey_","sourceChangeKey_","renderer_","sourceReady_","rendered","handleSourcePropertyChange_","setSource","getRenderSource","handleSourceChange_","getFeatures","getData","isVisible","getMapInternal","layerStatesArray","getLayerGroup","find","layerExtent","layerRenderer","getRenderer","prepareFrame","renderFrame","unrender","getDeclutter","renderDeclutter","renderDeferred","setMapInternal","handlePrecompose_","renderEvent","arrayLayerState","createRenderer","hasRenderer","clearRenderer","quickselect","compare","defaultCompare","sd","swap","maxEntries","_maxEntries","_minEntries","_all","search","bbox","toBBox","nodesToSearch","children","child","childBBox","leaf","collides","insert","_build","_splitRoot","tmpNode","_insert","createNode","equalsFn","path","indexes","goingUp","findItem","_condense","compareMinX","compareMinY","toJSON","fromJSON","items","N","M","calcBBox","N2","N1","multiSelect","right2","right3","_chooseSubtree","targetNode","minEnlargement","bboxArea","enlargement","enlargedArea","isNode","insertPath","_split","_adjustParentBBoxes","_chooseSplitAxis","splitIndex","_chooseSplitIndex","minOverlap","bbox1","distBBox","bbox2","overlap","intersectionArea","compareNodeMinX","compareNodeMinY","_allDistMargin","leftBBox","rightBBox","margin","bboxMargin","siblings","p","destNode","mid","NO_COLOR","colorParseContext","rgbModernRegEx","rgbLegacyAbsoluteRegEx","rgbLegacyPercentageRegEx","hexRegEx","toColorComponent","divider","endsWith","throwInvalidColor","parseRgba","rgb","alpha","rgbDivider","hex","step","colorFromHex","colorComponent","willReadFrequently","desynchronized","fillStyle","invalidCheckFillStyle","colorString","fillRect","colorFromImage","getImageData","cacheSize","withAlpha","b1","b2","a1","rgbaToLcha","g","q","asArray","hasArea","toSize","numTypes","BooleanType","NumberType","StringType","ColorType","NumberArrayType","SizeType","AnyType","typeNames","namedTypes","typeName","namedType","includesType","broad","specific","isType","expected","LiteralExpression","isSpecific","CallExpression","operator","newParsingContext","variables","featureId","geometryType","mapState","encoded","expectedType","toString","returnType","parser","parsers","parseCallExpression","Ops","createCallExpressionParser","hasArgsCount","withGetArgs","withNoArgs","withArgsOfType","usesMapState","withArgsOfReturnType","hasEvenArgs","argsCount","inputType","fallback","interpolationType","base","interpolation","stop","operation","argCount","needleType","haystack","arg","parsedColors","minArgs","maxArgs","expression","argType","validators","parsed","computeGeometryType","getGeometries","buildExpression","compileExpression","colorValue","compileAssertionExpression","hasOwn","compileAccessorExpression","concat","op","compileLogicalExpression","compileComparisonExpression","compileNumericExpression","compileCaseExpression","compileMatchExpression","previousInput","previousOutput","isColor","interpolateColor","interpolateNumber","compileInterpolateExpression","compileConvertExpression","input1","output1","input2","output2","along","rgba1","rgba2","lcha1","lcha2","deltaHue","lchaToRgba","decodeFallback","image","then","catch","handleLoad","unlisten","handleError","pixelRatio","stateOrLoader","pixelRatio_","image_","loader","getImage","getPixelRatio","requestResolution","HTMLImageElement","ImageBitmap","HTMLCanvasElement","HTMLVideoElement","error","finally","setImage","getCacheKey","crossOrigin","shared","cache_","patternCache_","cacheSize_","maxCacheSize_","canExpireCache","expire","iconImage","getPattern","pattern","getImageState","ready","createPattern","setSize","maxCacheSize","taintedTestContext","IconImage","imageState","hitDetectionImage_","crossOrigin_","canvas_","color_","imageState_","size_","src_","tainted_","ready_","initializeImage_","isTainted_","drawImage","dispatchChangeEvent_","handleImageError_","handleImageLoad_","replaceColor_","getHitDetectionImage","getSrc","ctx","globalCompositeOperation","onChange","cacheKey","asColorLike","canvasPattern","patternCanvasContext","asCanvasPattern","defaultFont","defaultFillStyle","defaultLineCap","defaultLineDash","defaultLineJoin","defaultStrokeStyle","defaultTextAlign","defaultTextBaseline","defaultPadding","checkedFonts","measureFont","measureContext","textHeights","genericFontFamilies","getFontKey","registerFont","retries","fontFaceSet","async","isAvailable","fontFaces","font","checkFamily","checkWeight","check","done","checkedFontsProperties","fonts","currentRetries","needCheck","has","measureTextHeight","measureElement","metrics","measureText","actualBoundingBoxAscent","actualBoundingBoxDescent","minHeight","maxHeight","border","body","text","measureTextWidth","measureAndCacheTextWidth","reduce","ImageStyle","opacity_","rotateWithView_","rotateWithView","scale_","scaleArray_","displacement_","displacement","declutterMode_","declutterMode","getScale","getRotateWithView","getDisplacement","getDeclutterMode","getScaleArray","getAnchor","getImageSize","getOrigin","setDisplacement","setRotateWithView","setScale","listenImageChange","unlistenImageChange","RegularShape","hitDetectionCanvas_","fill_","fill","origin_","points","radius2_","radius2","stroke_","stroke","renderOptions_","loading","getFill","getPoints","getRadius","getRadius2","getStroke","setFill","createHitDetectionCanvas_","fillKey","renderOptions","draw_","setStroke","calculateLineJoinSize_","lineJoin","strokeWidth","miterLimit","r1","r2","miterRatio","bevelAdd","aa","dd","innerMiterRatio","innerLength","createRenderOptions","strokeStyle","lineCap","lineDash","lineDashOffset","getColor","getLineDash","getLineDashOffset","getLineJoin","getLineCap","getMiterLimit","maxRadius","createPath_","lineWidth","setLineDash","drawHitDetectionCanvas_","arc","startAngle","angle0","radiusC","lineTo","closePath","setRadius","patternImage_","setColor","patternImage","CanvasPattern","CanvasGradient","calculateScale","wantedWidth","wantedHeight","Icon","normalizedAnchor_","anchorOrigin_","anchorOrigin","anchorXUnits_","anchorXUnits","anchorYUnits_","anchorYUnits","img","iconImage_","offset_","offsetOrigin_","offsetOrigin","initialOptions_","onload","imageSize","setAnchor","iconImageSize","lineCap_","lineDash_","lineDashOffset_","lineJoin_","miterLimit_","width_","setLineCap","setLineDashOffset","setLineJoin","setMiterLimit","setWidth","Style","geometryFunction_","defaultGeometryFunction","renderer","hitDetectionRenderer_","hitDetectionRenderer","text_","zIndex_","getText","setRenderer","setHitDetectionRenderer","getHitDetectionRenderer","getGeometryFunction","setText","feature","defaultStyles","createDefaultStyle","Circle","Text","font_","keepUpright_","keepUpright","textAlign_","textAlign","justify_","justify","repeat_","repeat","textBaseline_","textBaseline","maxAngle_","maxAngle","placement_","placement","overflow_","overflow","offsetX_","offsetY_","backgroundFill_","backgroundFill","backgroundStroke_","backgroundStroke","getFont","getPlacement","getRepeat","getMaxAngle","getOverflow","getKeepUpright","getTextAlign","getJustify","getTextBaseline","getOffsetX","getOffsetY","getBackgroundFill","getBackgroundStroke","getPadding","setOverflow","setFont","setMaxAngle","setOffsetX","setOffsetY","setPlacement","setRepeat","setKeepUpright","setTextAlign","setJustify","setTextBaseline","setBackgroundFill","setBackgroundStroke","setPadding","rulesToStyleFunction","rules","parsingContext","evaluator","compiledRules","rule","styleLength","buildStyle","someMatched","filterEvaluator","else","styleEvaluator","buildRuleSet","evaluationContext","flatStylesToStyleFunction","flatStyles","evaluators","nonNullCount","flatStyle","evaluateFill","buildFill","evaluateStroke","buildStroke","evaluateText","evaluateValue","stringEvaluator","evaluateBackgroundFill","evaluateBackgroundStroke","evaluateFont","evaluateMaxAngle","numberEvaluator","evaluateOffsetX","evaluateOffsetY","evaluateOverflow","booleanEvaluator","evaluatePlacement","evaluateRepeat","evaluateScale","sizeLikeEvaluator","evaluateRotateWithView","evaluateRotation","evaluateAlign","evaluateJustify","evaluateBaseline","evaluateKeepUpright","evaluatePadding","numberArrayEvaluator","optionalDeclutterMode","buildText","evaluateImage","srcName","requireString","evaluateAnchor","coordinateEvaluator","evaluateOpacity","evaluateDisplacement","optionalIconOrigin","optionalIconAnchorUnits","requireColorLike","optionalColorLike","optionalString","requireNumberArray","optionalNumberArray","optionalNumber","optionalSize","icon","buildIcon","pointsName","radiusName","requireNumber","shape","buildShape","evaluateRadius","circle","buildCircle","buildImage","evaluateZIndex","empty","evaluateColor","srcEvaluator","offsetEvaluator","sizeEvaluator","patternSizeEvaluator","colorEvaluator","colorLikeEvaluator","patternEvaluator","evaluateWidth","evaluateLineCap","evaluateLineJoin","evaluateLineDash","evaluateLineDashOffset","evaluateMiterLimit","requireSize","renderBuffer","updateWhileAnimating","updateWhileInteracting","declutter_","declutter","renderBuffer_","updateWhileAnimating_","updateWhileInteracting_","getRenderBuffer","getRenderOrder","getUpdateWhileAnimating","getUpdateWhileInteracting","declutterGroup","setRenderOrder","renderOrder","styleLike","toStyleLike","styleFunction","setDeclutter","inversePixelTransform","expireIconCache","dispatchRenderEvent","calculateMatrices2D","coordinateToPixelTransform","pixelToCoordinateTransform","forEachFeatureAtCoordinate","hitTolerance","checkWrapped","layerFilter","thisArg2","translatedCoordinate","offsets","layerStates","numLayers","matches","tmpCoord","getWrapX","order","distanceSq","hasFeatureAtCoordinate","scheduleExpireIconCache","postRenderFunctions","Map","fontChangeListenerKey_","redrawText","container","firstChild","children_","BaseVector","renderedLayerStates","previousElement","layerIndex","sourceState","oldChildren","childNodes","oldChild","newChild","replaceChildren","removeLayerMapProperty","setLayerMapProperty","optionsInternal","keyboardEventTarget","layerGroup","interactions","overlays","MapProperty","createOptionsInternal","renderComplete_","loaded_","boundHandleBrowserEvent_","handleBrowserEvent","maxTilesLoading_","maxTilesLoading","postRenderTimeoutHandle_","animationDelayKey_","animationDelay_","coordinateToPixelTransform_","pixelToCoordinateTransform_","frameIndex_","frameState_","previousExtent_","viewPropertyListenerKey_","viewChangeListenerKey_","layerGroupPropertyListenerKeys_","viewport_","overlayContainer_","overlayContainerStopEvent_","mapBrowserEventHandler_","keyboardEventTarget_","targetChangeHandlerKeys_","targetElement_","resizeObserver_","ResizeObserver","updateSize","altShiftDragRotate","doubleClickZoom","zoomDelta","zoomDuration","dragPan","pinchRotate","pinchZoom","keyboard","mouseWheelZoom","shiftDragZoom","overlays_","overlayIdIndex_","postRenderFunctions_","tileQueue_","getTilePriority","handleTileChange_","handleLayerGroupChanged_","handleViewChanged_","handleSizeChanged_","handleTargetChanged_","viewOptions","setView","addOverlayInternal_","control","interaction","addControl","getControls","addInteraction","getInteractions","addLayer","handleLayerAdd_","addOverlay","overlay","getOverlays","disconnect","forEachFeatureAtPixel","getFeaturesAtPixel","features","addLayersFrom","hasFeatureAtPixel","getEventCoordinate","getEventCoordinateInternal","viewportPosition","getBoundingClientRect","scaleX","scaleY","eventPosition","changedTouches","getTarget","getOverlayById","group","getLoadingOrNotReady","getPixelFromCoordinate","viewCoordinate","ownerDocument","tileSourceKey","tileCenter","tileResolution","wantedTiles","handleMapBrowserEvent","currentDoc","interactionsArray","handlePostRender","tileQueue","viewHints","lowOnFrameBudget","time","unobserve","Composite","targetRoot","observe","handleViewPropertyChanged_","updateViewportSize_","handleLayerRemove_","isRendered","renderFrame_","renderSync","handleFontsChanged","removeControl","removeInteraction","removeLayer","removeOverlay","previousFrameState","usedTiles","mapId","renderTargets","nextExtent","setLayerGroup","oldLayerGroup","computedStyle","getClientRects","oldSize","insertFirst","autoPan","transform_","mapPostrenderListenerKey","handleElementChanged","handleMapChanged","handleOffsetChanged","handlePositionChanged","handlePositioningChanged","setElement","setOffset","setPositioning","positioning","setPosition","getElement","getOffset","getPosition","getPositioning","updatePixelPosition","performAutoPan","panIntoView","panIntoViewOptions","mapRect","getRect","overlayRect","myMargin","offsetLeft","offsetRight","offsetTop","offsetBottom","centerPx","newCenterPx","panOptions","box","pageXOffset","pageYOffset","mapSize","updateRenderedPosition","posX","posY","getOptions","TileRange","tileCoord","containsTileRange","tileRange","tmpTileCoord","every","currentVal","res","isSorted","origins","origin","origins_","tileSizes_","tileSizes","tileSize_","tileSize","fullTileRanges_","tmpSize_","tmpExtent_","sizes","restrictedTileRange","getTileRangeForExtentAndZ","calculateTileRanges_","forEachTileCoord","forEachTileCoordParentTileRange","tempTileRange","tempExtent","tileCoordExtent","getTileCoordExtent","getTileCoordChildTileRange","getTileRangeForTileCoordAndZ","tileCoordZ","tileCoordX","tileCoordY","getTileCoordForXYAndZ_","getTileCoordCenter","getTileSize","getTileCoordForCoordAndResolution","opt_tileCoord","getTileCoordForXYAndResolution_","reverseIntersectionPolicy","getZForResolution","getTileCoordForCoordAndZ","getTileCoordResolution","getFullTileRange","opt_direction","tileCoordIntersectsViewport","viewport","fullTileRanges","interpolatePoint","cumulativeLengths","needle","comparator","cmp","low","high","found","binarySearch","lineStringCoordinateAtM","extrapolate","lo","hi","m0","lineStringLength","flatMidpoint_","flatMidpointRevision_","appendCoordinate","lineString","forEachSegment","getCoordinateAtM","getCoordinateAt","getFlatMidpoint","lineStrings","appendLineString","multiLineString","interpolate","lineStringsCoordinateAtM","getLineString","getLineStrings","getFlatMidpoints","midpoints","intersectsLineStringArray","appendPoint","multiPoint","getPoint","endss_","flatInteriorPointsRevision_","flatInteriorPoints_","polygons","thisEndss","appendPolygon","newEndss","multiPolygon","multiArrayMaxSquaredDelta","assignClosestMultiArrayPoint","linearRingssContainsXY","linearRingss","getEndss","getFlatInteriorPoints","getInteriorPoints","simplifiedEndss","quantizeMultiArray","getPolygon","prevEnds","getPolygons","intersectsLinearRingMultiArray","lastEnds","GeometryCollection","geometries","geometries_","changeEventsKeys_","listenGeometriesChange_","unlistenGeometriesChange_","geometryCollection","cloneGeometries","getGeometriesArray","getGeometriesArrayRecursive","geometriesArray","simplifiedGeometries","simplified","setGeometries","setGeometriesArray","RenderFeature","type_","flatCoordinates_","flatMidpoints_","properties_","squaredTolerance_","stride_","simplifiedGeometry_","startOrientation","prevEndIndex","orientation","midpoint","enableSimplifyTransformed","dataProjection","defaultFeatureProjection","featureClass","supportedMediaTypes","getReadOptions","readProjection","featureProjection","adaptOptions","readFeature","readFeatures","readGeometry","writeFeature","writeFeatures","writeGeometry","transformGeometryWithOptions","write","fromProjection","toProjection","GeometryConstructor","Point","LineString","Polygon","MultiPoint","MultiLineString","MultiPolygon","createRenderFeature","flat","orientFlatCoordinates","createGeometry","Geometry","getObject","readFeatureFromObject","readFeaturesFromObject","readGeometryFromObject","readProjectionFromObject","writeFeatureObject","writeFeaturesObject","writeGeometryObject","GEOMETRY_READERS","getGeometryLayout","paths","rings","GEOMETRY_WRITERS","esriJSON","hasZM","getHasZM","hasZ","hasM","esriJSONPolygon","flatRing","outerRings","holes","hole","matched","outerRing","reverse","convertRings","geometryReader","geometryWriter","geometryName","idField","esriJSONFeature","attributes","esriJSONFeatures","objectIdFieldName","wkid","objects","readGeometryInternal","readGeometryCollectionGeometry","geoJSON","rightHanded","writeGeometryCollectionGeometry","extractGeometryName_","extractGeometryName","geoJSONFeature","geoJSONFeatures","featureObject","crs","normalizeWhitespace","getAllTextContent_","accumulator","nodeType","Node","CDATA_SECTION_NODE","TEXT_NODE","nodeValue","nextSibling","makeArrayPusher","valueReader","objectStack","makeObjectPropertyPusher","localName","makeObjectPropertySetter","makeStructureNS","namespaceURIs","structure","structureNS","pushParseAndPop","parsersNS","firstElementChild","nextElementSibling","namespaceURI","parseNode","read","xml","DOMParser","parseFromString","readFromDocument","readFromNode","ELEMENT_NODE","readHref","getAttributeNS","readPositiveInteger","string","readNonNegativeIntegerString","readString","NAMESPACE_URIS","PARSERS","SERVICE_IDENTIFICATION_PARSERS","SERVICE_PROVIDER_PARSERS","OPERATIONS_METADATA_PARSERS","ADDRESS_PARSERS","ALLOWED_VALUES_PARSERS","CONSTRAINT_PARSERS","CONTACT_INFO_PARSERS","PHONE_PARSERS","DCP_PARSERS","HTTP_PARSERS","href","REQUEST_METHOD_PARSERS","OPERATION_PARSERS","getAttribute","SERVICE_CONTACT_PARSERS","OWS_NAMESPACE_URIS","CONTENTS_PARSERS","LAYER_PARSERS","TMS_PARSERS","STYLE_PARSERS","isDefault","TMS_LINKS_PARSERS","DIMENSION_PARSERS","template","resourceType","resource","readBoundingBox","WGS84_BBOX_READERS","legend","TMS_LIMITS_LIST_PARSERS","TMS_LIMITS_PARSERS","readCoordinates","TM_PARSERS","readDecimalString","owsParser_","version","WMTSCapabilityObject","instructions_","context_","Proxy","push_","pushMethodArgs_","instructions","pushFunction","draw","instructionsAtIndex","instructionAtIndex","boundHandleImageChange_","handleImageChange_","layer_","staleKeys_","maxStaleKeys","getStaleKeys","prependStaleKey","getLayer","renderIfReadyAndVisible","loadImage","pixelContext","renderedResolution","tempTransform","pixelTransform","deferredContext_","containerReused","col","row","useContainer","backgroundColor","layerClassName","cssTransform1","cssTransform2","mat1","mat2","transformOrigin","clipUnrotated","topLeft","topRight","bottomRight","bottomLeft","inverted","beginPath","moveTo","clip","prepareContainer","canvasTransform","dispatchRenderEvent_","preRender","postRender","renderDeferredInternal","getRenderContext","getRenderTransform","imageLayer","viewResolution","imageSource","renderedExtent","imageExtent","imageMapWidth","imageMapHeight","imageResolution","imageResolutionX","imageResolutionY","imagePixelRatio","viewCenter","clipped","dw","dh","getInterpolate","imageSmoothingEnabled","globalAlpha","restore","BaseImage","transition_","transition","transitionStarts_","release","setState","getTileCoord","getAlpha","inTransition","endTransition","asImageLike","disposedError","defaultSize","loader_","data_","error_","controller_","controller","imageData","getError","abort","tileLoadFunction","unlisten_","tileLoadFunction_","unlistenImage_","getBlankImage","naturalWidth","naturalHeight","loadHandler","errorHandler","listening","decoding","loaded","listenImage","brokenDiagonalRendering_","drawTestTriangle","u1","v1","u2","v2","verifyBrokenDiagonalRendering","calculateSourceResolution","targetProj","targetMetersPerUnit","sourceMetersPerUnit","compensationFactor","targetExtent","triangulation","sources","gutter","renderEdges","drawSingle","clipExtent","pixelRound","sourceDataExtent","stitchContext","stitchScale","inverseScale","xPos","yPos","rect","srcWidth","srcHeight","targetTopLeft","getTriangles","triangle","u0","v0","sourceNumericalShiftX","sourceNumericalShiftY","affineCoefs","maxRow","maxEl","absValue","coef","solveLinearSystem","isBrokenDiagonalRendering","steps","ud","vd","maxSourceExtent","errorThreshold","destinationResolution","sourceMatrix","sourceProj_","targetProj_","transformInvCache","transformInv","transformInv_","maxSourceExtent_","errorThresholdSquared_","triangles_","wrapsXInSource_","canWrapXInSource_","sourceWorldWidth_","targetWorldWidth_","destinationTopLeft","destinationTopRight","destinationBottomRight","destinationBottomLeft","sourceTopLeft","sourceTopRight","sourceBottomRight","sourceBottomLeft","maxSubdivision","log2","addQuad_","leftBound","newTriangle","addTriangle_","aSrc","bSrc","cSrc","dSrc","sourceQuadExtent","sourceCoverageX","sourceWorldWidth","wrapsX","needsSubdivision","isNotFinite","centerSrc","bc","bcSrc","da","daSrc","ab","abSrc","cd","cdSrc","calculateSourceExtent","sourceTileGrid","targetTileGrid","wrappedTileCoord","getTileFunction","renderEdges_","gutter_","sourceTileGrid_","targetTileGrid_","wrappedTileCoord_","sourceTiles_","sourcesListenerKeys_","sourceZ_","clipExtent_","maxTargetExtent","limitedTargetExtent","sourceProjExtent","calculateSourceExtentResolution","errorThresholdInPixels","triangulation_","sourceRange","srcX","srcY","reproject_","leftToLoad","sourceListenKey","unlistenSources_","highWaterMark","count_","entries_","oldest_","newest_","deleteOldest","entry","expireCache","keep","containsKey","value_","key_","newer","older","getValues","peekLast","peekLastKey","peekFirstKey","peek","sourceKey","getKeyZXY","addTileToLookup","tilesByZ","existing","removeTileFromLookup","delete","getRenderExtent","gridExtent","getTileGridForProjection","tileLayer","extentChanged","renderComplete","renderedExtent_","renderedPixelRatio","renderedProjection","renderedTiles","renderedSourceKey_","renderedSourceRevision_","tempTileRange_","tempTileCoord_","tileCache_","getTileCache","getOrCreateTile","tileCache","tileSource","getTile","tilePixelRatio","getTilePixelRatio","tileOrigin","getGutterForProjection","sourceRevision","enqueueTiles","initialZ","preload","minZ","zDirection","tileQueueKey","findStaleTile_","staleKeys","findAltTiles_","altZ","covered","frameExtent","canvasExtent","getPreload","targetZ","renderExtent","uid","tileState","parentZ","canvasScale","zs","currentClip","clips","clipZs","currentZ","currentTilePixelSize","getTilePixelSize","currentScale","originTileCoord","originTileExtent","tileGutter","xIndex","nextX","yIndex","nextY","contextSaved","drawTile","updateUsedTiles","postRenderFunction","tilesCount","updateCacheSize","tileCount","getTileImage","alphaChanged","useInterimTilesOnError","setPreload","setUseInterimTilesOnError","getCacheSize","TileProperty","getUseInterimTilesOnError","BaseTile","drawCustom","drawGeometry","drawCircle","circleGeometry","drawFeature","drawGeometryCollection","geometryCollectionGeometry","drawLineString","lineStringGeometry","drawMultiLineString","multiLineStringGeometry","drawMultiPoint","multiPointGeometry","drawMultiPolygon","multiPolygonGeometry","drawPoint","pointGeometry","drawPolygon","polygonGeometry","drawText","setFillStrokeStyle","setImageStyle","imageStyle","declutterImageWithText","setTextStyle","textStyle","Instruction","BEGIN_GEOMETRY","BEGIN_PATH","CIRCLE","CLOSE_PATH","CUSTOM","DRAW_CHARS","DRAW_IMAGE","END_GEOMETRY","FILL","MOVE_TO_LINE_TO","SET_FILL_STYLE","SET_STROKE_STYLE","STROKE","fillInstruction","strokeInstruction","beginPathInstruction","closePathInstruction","maxLineWidth","beginGeometryInstruction1_","beginGeometryInstruction2_","bufferedMaxExtent_","tmpCoordinate_","hitDetectionInstructions","applyPixelRatio","dashArray","dash","appendFlatPointCoordinates","getBufferedMaxExtent","myEnd","appendFlatLineCoordinates","closed","skipFirst","lastXCoord","lastYCoord","nextCoord","lastRel","nextRel","skipped","drawCustomCoordinates_","builderEnds","builderEnd","beginGeometry","builderBegin","builderEndss","myEnds","endGeometry","finish","reverseHitDetectionInstructions","instruction","fillStyleToState","fillStyleColor","fillPatternScale","strokeStyleToState","strokeStyleColor","strokeStyleLineCap","strokeStyleLineDash","strokeStyleLineDashOffset","strokeStyleLineJoin","strokeStyleWidth","strokeStyleMiterLimit","createFill","applyStroke","createStroke","updateFillStyle","currentFillStyle","updateStrokeStyle","currentStrokeStyle","currentLineCap","currentLineDash","currentLineDashOffset","currentLineJoin","currentLineWidth","currentMiterLimit","endGeometryInstruction","drawFlatCoordinatess_","numEnds","myBegin","moveToLineToInstruction","setFillStrokeStyles_","circleInstruction","lineChunk","chunkLength","chunks","cursor","chunkM","currentChunk","missing","matchingChunk","acos","m12","m23","x12","y12","x23","y23","chunkStart","chunkEnd","TEXT_ALIGN","BATCH_CONSTRUCTORS","PolygonBuilder","Builder","imagePixelRatio_","anchorX_","anchorY_","height_","originX_","originY_","declutterImageWithText_","filteredFlatCoordinates","sharedData","drawFlatCoordinates_","lastStroke","labels_","textOffsetX_","textOffsetY_","textRotateWithView_","textKeepUpright_","textRotation_","textFillState_","fillStates","textStrokeState_","strokeStates","textState_","textStates","textKey_","fillKey_","strokeKey_","fillState","strokeState","textState","geometryWidths","beg","saveTextStates_","p0","p1","p2","p3","hitDetectionBackgroundFill","flatOffset","oo","cc","chunk","chunkBegin","drawChars_","strokeKey","textKey","baseline","textFillStyle","textStrokeStyle","textScale","textOffsetX","textOffsetY","textRotateWithView","textKeepUpright","textRotation","tolerance_","maxExtent_","resolution_","buildersByZIndex_","builderInstructions","zKey","builders","builderKey","builderInstruction","getBuilder","builderType","zIndexKey","replays","replay","Constructor","drawTextOnPath","startM","segmentM","advance","beginX","beginY","startOffset","startLength","endM","singleSegment","previousAngle","iStart","charLength","chars","tmpExtent","p4","getDeclutterBox","replayImageOrLabelArgs","declutterBox","rtlRegEx","fromCharCode","horizontalTextAlign","align","createTextChunks","acc","line","richTextToPlainText","part","overlaps","deferredRendering","alignAndScaleFill_","coordinateCache_","renderedTransform_","pixelCoordinates_","viewRotation_","widths_","zIndexContext_","getZIndexContext","createLabel","widths","heights","lineWidths","baseStyle","currentWidth","currentHeight","getTextDimensions","renderWidth","contextInstructions","leftRight","strokeInstructions","fillInstructions","previousFont","lineOffset","widthHeightIndex","lineWidthIndex","fillStrokeArgs","replayTextBackground_","setStrokeStyle_","calculateImageOrLabelDimensions_","sheetWidth","sheetHeight","originX","originY","snapToPixel","fillStroke","boxW","boxH","boxX","boxY","drawImageX","drawImageY","drawImageW","drawImageH","replayImageOrLabel_","scaledCanvasSize","imageOrLabel","strokePadding","labelOrImage","executeLabelInstructions","drawImageOrLabel","alignAndScale","repeatSize","drawLabelWithPointPlacement_","execute_","featureCallback","hitExtent","declutterTree","zIndexContext","pixelCoordinates","transform1","transform2","prevX","prevY","roundX","roundY","pendingFill","pendingStroke","coordinateCache","viewRotation","viewRotationFromTransform","batchSize","currentGeometry","labelWithAnchor","backgroundFillInstruction","backgroundStrokeInstruction","widthIndex","imageArgs","imageDeclutterMode","imageDeclutterBox","renderImage","renderText","imageDeclutter","measurePixelRatio","pixelRatioScale","cachedWidths","pathLength","textLength","parts","drawChars","execute","executeHitDetection","ALL","DECLUTTER","NON_DECLUTTER","circlePixelIndexArrayCache","allInstructions","overlaps_","executorsByZIndex_","hitDetectionContext_","hitDetectionTransform_","renderedContext_","deferredZIndexContexts_","createExecutors_","flatClipCoords","getClipCoords","executors","instructionByZindex","hasExecutors","candidates","declutteredFeatures","contextSize","newContext","maxDistanceSq","distances","pixelIndex","getPixelIndexArray","idx","executor","targetContext","builderTypes","maxBuilderTypes","requireClip","getDeferredZIndexContexts","getRenderedContext","deferredZIndexContexts","userTransform","transformRotation_","userTransform_","contextFillState_","contextStrokeState_","contextTextState_","fillState_","strokeState_","imageAnchorX_","imageAnchorY_","imageHeight_","imageOpacity_","imageOriginX_","imageOriginY_","imageRotateWithView_","imageRotation_","imageScale_","imageWidth_","textScale_","tmpLocalTransform_","drawImages_","localTransform","drawText_","setContextFillState_","setContextStrokeState_","setContextTextState_","strokeText","fillText","moveToLineTo_","close","drawRings_","simpleGeometry","transformGeom2D","setTransform","flatMidpoint","geometryExtent","flatMidpoints","flatInteriorPoint","flatInteriorPoints","contextFillState","contextStrokeState","contextTextState","imageAnchor","imageOrigin","imageScale","textFillStyleColor","textStrokeStyleColor","textStrokeStyleLineCap","textStrokeStyleLineDash","textStrokeStyleLineDashOffset","textStrokeStyleLineJoin","textStrokeStyleWidth","textStrokeStyleMiterLimit","textFont","textText","textTextAlign","textTextBaseline","HIT_DETECT_RESOLUTION","GEOMETRY_RENDERERS","builderGroup","hasText","imageReplay","textReplay","lineStringReplay","polygonReplay","hasImage","replayGroup","declutterBuilderGroup","geometryRenderer","circleReplay","defaultOrder","feature1","feature2","getSquaredTolerance","getTolerance","renderFeature","loadingPromises","renderGeometry","renderFeatureInternal","vectorLayer","boundHandleStyleImageChange_","handleStyleImageChange_","animatingOrInteracting_","hitDetectionImageData_","clipped_","renderedFeatures_","renderedRevision_","renderedResolution_","wrappedRenderedExtent_","renderedRotation_","renderedCenter_","renderedProjection_","renderedPixelRatio_","renderedRenderOrder_","renderedFrameDeclutter_","replayGroup_","replayGroupChanged","clipping","targetContext_","renderWorlds","executorGroup","declutterable","vectorSource","endWorld","world","setDrawContext_","resetDrawContext_","userExtent","featureCount","indexFactor","featuresByZIndex","featureStyleFunction","padStart","originalStyle","imgSize","imgContext","byGeometryType","zIndexKeys","geomAndStyle","kk","createHitDetectionImageData","resultFeatures","hitDetect","lastIndexOf","animating","interacting","frameStateExtent","vectorLayerRevision","vectorLayerRenderBuffer","vectorLayerRenderOrder","loadExtents","loadExtent","loadFeatures","dirty","getFeaturesInExtent","replayGroupInstructions","getOverlaps","fromResolutionLike","getImageFunction","sourceImage","sourcePixelRatio","targetExtent_","sourceImage_","sourcePixelRatio_","interpolate_","sourceListenerKey_","unlistenSource_","adaptAttributions","attributionLike","attributionsCollapsible_","attributionsCollapsible","wrapX_","viewResolver","viewRejector","viewPromise_","refresh","setAttributions","ImageSourceEvent","defaultImageLoadFunction","getRequestExtent","reprojectedImage_","reprojectedRevision_","wantedExtent_","wantedResolution_","static_","wantedProjection_","setResolutions","findNearestResolution","getImageInternal","requestExtent","handleImageChange","appendParams","uri","params","keyParams","qs","zRegEx","xRegEx","yRegEx","dashYRegEx","expandUrl","urls","startCharCode","stopCharCode","charCode","hidpi_","hidpi","url_","imageLoadFunction_","imageLoadFunction","params_","imageSize_","ratio_","loaderProjection_","getParams","baseUrl","srid","getRequestUrl","createLoader","getImageLoadFunction","getUrl","setImageLoadFunction","setUrl","setParams","updateParams","compareVersions","s1","s2","n1","n2","DEFAULT_VERSION","GETFEATUREINFO_IMAGE_SIZE","v13","getImageSrc","serverType","REQUEST","dpi","getRequestParams","request","serverType_","getFeatureInfoUrl","projectionObj","sourceProjectionObj","baseParams","getLegendUrl","mpu","pixelSize","getForProjection","resolutionsFromExtent","createForExtent","extentFromProjection","createForProjection","createXYZ","xyzOptions","gridOptions","half","createFromTemplate","renderXYZTemplate","createFromTileUrlFunctions","tileUrlFunctions","TileSourceEvent","tilePixelRatio_","tmpSize","tileOptions","setKey","getTileGrid","getTileCoordForTileUrlFunction","gridProjection","withinExtentAndZ","UrlTile","generateTileUrlFunction_","tileUrlFunction","setUrls","tileLoadingKeys_","getTileLoadFunction","getTileUrlFunction","getPrototypeOf","getUrls","setTileLoadFunction","setTileUrlFunction","templates","createFromTemplates","defaultTileLoadFunction","imageTile","tileClass","tileGridForProjection","reprojectionErrorThreshold_","reprojectionErrorThreshold","renderReprojectionEdges_","getGutter","thisProj","projKey","createTile_","urlTileCoord","tileUrl","getTileInternal","setRenderReprojectionEdges","setTileGridForProjection","tilegrid","proj","v13_","updateV13_","getKeyForParams_","sourceProjCoord","tileExtent","getRequestUrl_","LAYERS","setParams_","xhr","success","failure","XMLHttpRequest","open","responseType","withCredentials","status","responseText","responseXML","onerror","send","loadFeaturesXhr","addFeatures","rbush_","items_","extents","getAll","getInExtent","forEach_","forEachInExtent","rbush","VectorSourceEvent","format_","strategy_","strategy","useSpatialIndex","featuresRtree_","loadedExtentsRtree_","loadingExtentsCount_","nullGeometryFeatures_","idIndex_","uidIndex_","featureChangeKeys_","featuresCollection_","addFeaturesInternal","bindFeaturesCollection_","addFeature","addFeatureInternal","featureKey","addToIndex_","setupChangeEvents_","VectorEventType","handleFeatureChange_","valid","indexedFeature","newFeatures","geometryFeatures","modifyingCollection","removeFeature","fast","removeFeatureInternal","clearEvent","forEachFeature","forEachFeatureAtCoordinateDirect","forEachFeatureInExtent","forEachFeatureIntersectingExtent","getFeaturesCollection","getFeaturesAtCoordinate","anExtent","getClosestFeatureToCoordinate","closestFeature","previousMinSquaredDistance","minDistance","getFeatureById","getFeatureByUid","getFormat","sid","removeFromIdIndex_","hasFeature","loadedExtentsRtree","extentsToLoad","extentToLoad","removeLoadedExtent","removeFeatures","removed","featureChangeKeys","idString","setLoader","setOverlaps","WMTSTileGrid","matrixIds_","matrixIds","getMatrixId","getMatrixIds","requestEncoding","version_","dimensions_","matrixSet_","matrixSet","requestEncoding_","getKeyForDimensions_","createFromWMTSTemplate","getDimensions","getMatrixSet","getRequestEncoding","getVersion","updateDimensions","localContext","registered","register","proj4","projCodes","defs","def","projName","axis","to_meter","code1","proj1","code2","proj2","SRS_WGS84_SEMIMAJOR","SRS_WGS84_ESQUARED","SEC_TO_RAD","HALF_PI","EPSLN","D2R","R2D","FORTPI","TWO_PI","SPI","primeMeridian","mm","cm","ft","fath","kmi","km","mi","yd","ch","link","dm","in","ignoredChar","testkey","lkey","defData","paramName","paramVal","paramOutname","paramObj","datum","rf","lat_0","lat0","lat_1","lat_2","lat_ts","lon_0","long0","lon_1","long1","lon_2","long2","gamma","rectified_grid_angle","lonc","longc","x_0","y_0","k_0","k0","r_a","R_A","south","utmSouth","towgs84","datum_params","unit","from_greenwich","pm","PrimeMeridian","nadgrids","datumCode","legalAxis","approx","idNode","authority","convertUnit","conversion_factor","conversionFactor","convertAxis","abbreviationMatch","abbreviation","toUpperCase","orderNode","unitNode","extractAxes","convert","base_crs","conversion","csNode","coordinate_system","lengthUnitNode","datumOrEnsembleNode","datumOrEnsemble","datum_ensemble","primem","prime_meridian","ellipsoid","members","member","accuracyNode","accuracy","ellipsoidNode","semi_major_axis","inverse_flattening","method","parameters","sourceCrsNode","sourceCrsContent","source_crs","targetCrsNode","targetCrsContent","target_crs","transformationNode","transformation","scaleDifference","keyword","subtype","usage","usageNode","scope","NEUTRAL","whitespace","latin","endThings","digets","Parser","place","root","currentObject","mapit","thing","newObj","sExpr","d2r","applyProjectionDefaults","wkt","normalizedProjName","processUnit","toValue","valueOrObject","calculateEllipsoid","semi_minor_axis","transformPROJJSON","projjson","srsCode","ellps","paramValue","latitude_of_false_origin","longitude_of_false_origin","latitude_of_standard_parallel","latitude_of_1st_standard_parallel","latitude_of_2nd_standard_parallel","latitude_of_projection_centre","longitude_of_projection_centre","easting_at_false_origin","northing_at_false_origin","latitude_of_natural_origin","longitude_of_natural_origin","longitude_of_origin","false_easting","easting_at_projection_centre","false_northing","northing_at_projection_centre","standard_parallel_1","standard_parallel_2","scale_factor_at_natural_origin","scale_factor_at_projection_centre","scale_factor_on_pseudo_standard_parallel","azimuth","azimuth_at_projection_centre","angle_from_rectified_to_skew_grid","readCharicter","char","neutral","quoted","afterquote","word","afterItem","newObjects","knownTypes","cleanWKT","setPropertiesFromWkt","AUTHORITY","PROJECTION","AXIS","axisOrder","UNIT","DATUM","SPHEROID","geogcs","GEOGCS","toMeter","sphere","TOWGS84","outName","inName","rename","normalizedWKT","detectWKTVersion","lisp","detectWKT2Version","buildPROJJSON","that","charAt","EPSG","ESRI","IAU2000","WGS84","GOOGLE","codes","eccent","sinphi","cosphi","con","sign","phi","com","ts","dphi","eccnth","identity","pt","projs","es","msfnz","lon","lat","adjust_lon","tsfnz","phi2z","projStore","getNormalizedProjName","MERIT","ellipseName","SGS85","GRS80","IAU76","airy","APL4","NWL9D","mod_airy","andrae","aust_SA","GRS67","bessel","bess_nam","clrk66","clrk80","clrk80ign","clrk58","CPM","delmbr","engelis","evrst30","evrst48","evrst56","evrst69","evrstSS","fschr60","fschr60m","fschr68","helmert","hough","intl","kaula","lerch","mprts","new_intl","plessis","krass","SEasia","walbeck","WGS60","WGS66","WGS7","Ellipsoid","datums","wgs84","ellipse","datumName","ch1903","ggrs87","nad83","nad27","potsdam","carthage","hermannskogel","mgi","osni52","ire65","rassadiran","nzgd49","osgb36","s_jtsk","beduaram","gunung_segara","rnb72","EPSG_5451","IGNF_LURESG","EPSG_4614","EPSG_4615","ESRI_37241","ESRI_37249","ESRI_37245","EPSG_4178","EPSG_4622","EPSG_4625","EPSG_5252","EPSG_4314","EPSG_4282","EPSG_4231","EPSG_4274","EPSG_4134","EPSG_4254","EPSG_4159","EPSG_4687","EPSG_4227","EPSG_4746","EPSG_4745","EPSG_6311","EPSG_4289","EPSG_4230","EPSG_4154","EPSG_4156","EPSG_4299","EPSG_4179","EPSG_4313","EPSG_4194","EPSG_4195","EPSG_4196","EPSG_4611","EPSG_4633","EPSG_4641","EPSG_4643","EPSG_4300","EPSG_4188","EPSG_4660","EPSG_4662","EPSG_3906","EPSG_4307","EPSG_6892","EPSG_4690","EPSG_4691","EPSG_4629","EPSG_4630","EPSG_4692","EPSG_9333","EPSG_9059","EPSG_4312","EPSG_4123","EPSG_4309","ESRI_104106","EPSG_4281","EPSG_4322","EPSG_4324","EPSG_4284","EPSG_4277","EPSG_4207","EPSG_4688","EPSG_4689","EPSG_4720","EPSG_4273","EPSG_4240","EPSG_4817","ESRI_104131","EPSG_4265","EPSG_4263","EPSG_4298","EPSG_4270","EPSG_4229","EPSG_4220","EPSG_4214","EPSG_4232","EPSG_4238","EPSG_4168","EPSG_4131","EPSG_4152","EPSG_5228","EPSG_8351","EPSG_4683","EPSG_4133","EPSG_7373","EPSG_9075","EPSG_9072","EPSG_9294","EPSG_4212","EPSG_4191","EPSG_4237","EPSG_4740","EPSG_4124","EPSG_5681","EPSG_4141","EPSG_4204","EPSG_4319","EPSG_4200","EPSG_4130","EPSG_4127","EPSG_4149","EPSG_4617","EPSG_4663","EPSG_4664","EPSG_4665","EPSG_4666","EPSG_4756","EPSG_4723","EPSG_4726","EPSG_4267","EPSG_5365","EPSG_4218","EPSG_4242","EPSG_4216","ESRI_104105","ESRI_104129","EPSG_4673","EPSG_4202","EPSG_4203","EPSG_3819","EPSG_8694","EPSG_4145","EPSG_4283","EPSG_4317","EPSG_4272","EPSG_4248","EPSG_5561","EPSG_5233","ESRI_104130","ESRI_104102","ESRI_37207","EPSG_4675","ESRI_104109","ESRI_104112","ESRI_104113","IGNF_WGS72G","IGNF_NTFG","IGNF_EFATE57G","IGNF_PGP50G","IGNF_REUN47G","IGNF_CSG67G","IGNF_GUAD48G","IGNF_TAHI51G","IGNF_TAHAAG","IGNF_NUKU72G","IGNF_PETRELS72G","IGNF_WALL78G","IGNF_MAYO50G","IGNF_TANNAG","IGNF_IGN72G","IGNF_ATIGG","IGNF_FANGA84G","IGNF_RUSAT84G","IGNF_KAUE70G","IGNF_MOP90G","IGNF_MHPF67G","IGNF_TAHI79G","IGNF_ANAA92G","IGNF_MARQUI72G","IGNF_APAT86G","IGNF_TUBU69G","IGNF_STPM50G","EPSG_4150","EPSG_4754","ESRI_104101","EPSG_4693","EPSG_6207","EPSG_4153","EPSG_4132","EPSG_4221","EPSG_4266","EPSG_4193","EPSG_5340","EPSG_4246","EPSG_4318","EPSG_4121","EPSG_4223","EPSG_4158","EPSG_4285","EPSG_4613","EPSG_4607","EPSG_4475","EPSG_4208","EPSG_4743","EPSG_4710","EPSG_7881","EPSG_4682","EPSG_4739","EPSG_4679","EPSG_4750","EPSG_4644","EPSG_4695","EPSG_4292","EPSG_4302","EPSG_4143","EPSG_4606","EPSG_4699","EPSG_4247","EPSG_4160","EPSG_4161","EPSG_9251","EPSG_9253","EPSG_4297","EPSG_4269","EPSG_4301","EPSG_4618","EPSG_4612","EPSG_4678","EPSG_4250","EPSG_4144","EPSG_4147","EPSG_4259","EPSG_4164","EPSG_4211","EPSG_4182","EPSG_4224","EPSG_4225","EPSG_5527","EPSG_4752","EPSG_4310","EPSG_9248","EPSG_4680","EPSG_4701","EPSG_4706","EPSG_4805","EPSG_4201","EPSG_4210","EPSG_4183","EPSG_4139","EPSG_4668","EPSG_4717","EPSG_4732","EPSG_4280","EPSG_4209","EPSG_4261","EPSG_4658","EPSG_4721","EPSG_4222","EPSG_4601","EPSG_4602","EPSG_4603","EPSG_4605","EPSG_4621","EPSG_4657","EPSG_4316","EPSG_4642","EPSG_4698","EPSG_4192","EPSG_4311","EPSG_4135","ESRI_104138","EPSG_4245","EPSG_4142","EPSG_4213","EPSG_4253","EPSG_4129","EPSG_4713","EPSG_4239","EPSG_4146","EPSG_4155","EPSG_4165","EPSG_4672","EPSG_4236","EPSG_4251","EPSG_4271","EPSG_4175","EPSG_4716","EPSG_4315","EPSG_4744","EPSG_4244","EPSG_4293","EPSG_4714","EPSG_4736","EPSG_6883","EPSG_6894","EPSG_4205","EPSG_4256","EPSG_4262","EPSG_4604","EPSG_4169","EPSG_4620","EPSG_4184","EPSG_4616","EPSG_9403","EPSG_4684","EPSG_4708","EPSG_4707","EPSG_4709","EPSG_4712","EPSG_4711","EPSG_4718","EPSG_4719","EPSG_4724","EPSG_4725","EPSG_4735","EPSG_4722","EPSG_4728","EPSG_4734","EPSG_4727","EPSG_4729","EPSG_4730","EPSG_4733","ESRI_37218","ESRI_37240","ESRI_37221","ESRI_4305","ESRI_104139","EPSG_4748","EPSG_4219","EPSG_4255","EPSG_4257","EPSG_4646","EPSG_6881","EPSG_6882","EPSG_4715","IGNF_RGF93GDD","IGNF_RGM04GDD","IGNF_RGSPM06GDD","IGNF_RGTAAF07GDD","IGNF_RGFG95GDD","IGNF_RGNCG","IGNF_RGPFGDD","IGNF_ETRS89G","IGNF_RGR92GDD","EPSG_4173","EPSG_4180","EPSG_4619","EPSG_4667","EPSG_4075","EPSG_6706","EPSG_7798","EPSG_4661","EPSG_4669","EPSG_8685","EPSG_4151","EPSG_9702","EPSG_4758","EPSG_4761","EPSG_4765","EPSG_8997","EPSG_4023","EPSG_4670","EPSG_4694","EPSG_4148","EPSG_4163","EPSG_4167","EPSG_4189","EPSG_4190","EPSG_4176","EPSG_4659","EPSG_3824","EPSG_3889","EPSG_4046","EPSG_4081","EPSG_4558","EPSG_4483","EPSG_5013","EPSG_5264","EPSG_5324","EPSG_5354","EPSG_5371","EPSG_5373","EPSG_5381","EPSG_5393","EPSG_5489","EPSG_5593","EPSG_6135","EPSG_6365","EPSG_5246","EPSG_7886","EPSG_8431","EPSG_8427","EPSG_8699","EPSG_8818","EPSG_4757","EPSG_9140","EPSG_8086","EPSG_4686","EPSG_4737","EPSG_4702","EPSG_4747","EPSG_4749","EPSG_4674","EPSG_4755","EPSG_4759","EPSG_4762","EPSG_4763","EPSG_4764","EPSG_4166","EPSG_4170","EPSG_5546","EPSG_7844","EPSG_4818","loadedNadgrids","readGeotiffGrid","tiff","subgrids","subGridCount","getImageCount","subgridIndex","readRasters","lim","imageBBoxRadians","getBoundingBox","degreesToRadians","del","fileDirectory","ModelPixelScale","latitudeOffsetBand","longitudeOffsetBand","nodes","secondsToRadians","ll","cvs","tifGrid","header","nSubgrids","parseNadgridString","optional","mandatory","grid","isNull","seconds","decodeString","Uint8Array","mapNodes","longitudeShift","latitudeShift","readGridHeader","isLittleEndian","lowerLatitude","getFloat64","upperLatitude","lowerLongitude","upperLongitude","latitudeInterval","longitudeInterval","gridNodeCount","getInt32","readGridNodes","gridHeader","includeErrorFields","nodesOffset","gridRecordLength","gridShiftRecords","record","getFloat32","latitudeAccuracy","longitudeAccuracy","json","testObj","testDef","testWKT","auth","checkMercator","maybeProjStr","ext","checkProjStr","testProj","parseCode","ourProj","datumDef","Datum","sphere_","ecc","ep2","getNadgrids","datumObj","datum_type","grids","geodeticToGeocentric","Rn","Sin_Lat","Sin2_Lat","Cos_Lat","Longitude","Latitude","Height","geocentricToGeodetic","P","RR","CT","ST","RX","RK","RN","CPHI0","SPHI0","CPHI","SPHI","SDPHI","iter","X","Y","Z","checkParams","applyGridShift","attemptedGrids","outer","subgrid","epsilon","applySubgridShift","pin","ct","tb","nadInterpolate","dif","inx","indx","frct","f00","f10","f11","f01","m11","m10","m00","m01","denorm","xin","yin","zin","checkCoord","num","TypeError","enforceAxis","toPoint","checkSanity","checkNotWGS","adjust_axis","compareDatums","source_a","source_es","dest_a","dest_b","dest_es","Dx_BF","Dy_BF","Dz_BF","Rx_BF","Ry_BF","Rz_BF","M_BF","geocentricToWgs84","x_tmp","y_tmp","z_tmp","geocentricFromWgs84","datum_transform","to","transformedArray","checkProj","oProj","SET_ORIGIN_COLUMN_LETTERS","SET_ORIGIN_ROW_LETTERS","A","I","O","mgrs","UTMtoLL","bottom","utm","column","colOrigin","rowOrigin","colInt","rowInt","rollover","setParm","seasting","snorthing","zoneNumber","zoneLetter","get100kSetForZone","encode","eccPrimeSquared","T","C","LongOriginRad","ZoneNumber","Lat","Long","eccSquared","LatRad","degToRad","LongRad","LetterDesignator","UTMEasting","UTMNorthing","LLtoUTM","deg","radToDeg","rad","T1","C1","R1","D","LongOrigin","phi1Rad","e1","mgrsString","testChar","hunK","sb","east100k","curCol","eastingValue","rewindMarker","getEastingFromChar","north100k","curRow","northingValue","getNorthingFromChar","getMinNorthing","remainder","accuracyBonus","sepEastingString","sepNorthingString","sep","sepEasting","sepNorthing","fromMGRS","mgrsStr","toMGRS","C04","C06","C08","en","sphi","cphi","pj_mlfn","pj_enfn","ml0","delta_lon","sin_phi","cos_phi","al","als","cs","tq","ml","pj_inv_mlfn","tan_phi","ds","temp","asin","pp","B","cos_2B","h1","h2","arg_r","arg_i","hr2","hi2","sin_arg_r","cos_arg_r","sinh_arg_i","sinh","cosh_arg_i","hr","hi1","hr1","tmerc","cgb","cbg","utg","gtu","np","Qn","gatg","Zb","clens","Ce","Cn","sin_Cn","cos_Cn","sin_Ce","cos_Ce","hypot","log1py","asinhy","clens_cmplx","adjust_zone","etmerc","dependsOn","esinp","rc","phic0","ratexp","K","srat","gauss","sinc0","cosc0","R2","sinc","cosc","cosl","rho","ssfn_","phit","eccen","coslat0","sinlat0","cons","ms1","X0","cosX0","sinX0","sinX","cosX","rh","sinlat","coslat","dlon","ce","Chi","phy0","lambda0","sinPhy0","semiMajorAxis","flattening","e2","b0","k1","k2","k3","Sa1","Sa2","S","rotI","rotB","lambda","phy","prevPhy","iteration","TOL","cosph0","F","H","L","sinph0","J","gamma0","typeAProjections","projectionName","lamc","lam1","lam2","phi1","phi2","alpha_c","no_off","no_rot","alp","gam","one_es","lam0","singam","cosgam","sinrot","cosrot","rB","ArB","BrA","u_0","v_pole_n","v_pole_s","U","V","W","u","Qp","Sp","Tp","Vp","Up","sin1","cos1","ts1","sin2","cos2","ms2","ts2","ts0","ns","f0","rh1","s45","s90","fi0","alfa","uq","n0","s0","ro0","ad","gfi","deltav","eps","ro","czech","fi1","ok","e0","e3","e0fn","e1fn","e2fn","e3fn","mlfn","lam","nl","gN","tl","asq","cl","imlfn","nl1","rl1","tl1","dl","dsq","adjust_lat","mode","qp","qsfnz","mmf","apa","APA","authset","rq","xmf","ymf","sinb1","cosb1","coslam","sinlam","sinb","cosb","OBLIQ","EQUIT","N_POLE","S_POLE","cCe","sCe","beta","cosz","sinz","sin_po","cos_po","qs1","qs2","t3","qs0","ns0","phi1z","asinz","eccnts","sin_p14","cos_p14","infinity_dist","coslon","iqsfnz","dlat","el","bl","tanphi","mln","mlnp","ma","B_re","B_im","C_re","C_im","delta_lat","d_phi","d_lambda","d_phi_n","d_psi","th_n_im1","th_re","th_im","th_n_re","th_n_im","z_re","z_im","z_n_im1","delta_x","z_n_re","z_n_im","iterations","num_re","num_im","den_re","den_im","den2","d_psi_n","C_y","C_x","delta_theta","ml1","ml2","sinth","costh","gsq","msq","xx","yy","xys","c3","m1","th1","sin_p12","cos_p12","Mlp","Ml","kp","cos_c","vars","azi1","lon1","lon2","U1","U2","sinU1","cosU1","sinU2","cosU2","lambdaP","sinLambda","cosLambda","sinSigma","cosSigma","sigma","sinAlpha","cos2Alpha","cos2SigmaM","uSq","deltaSigma","iterLimit","s12","vincentyInverse","sinAlpha1","cosAlpha1","sigma1","sigmaP","vincentyDirect","qsc_fwd_equat_face_theta","qsc_shift_lon_origin","slon","face","one_minus_f","one_minus_f_squared","xy","sinlon","nu","cosmu","tannu","tantheta","invert_sign","xa","lp","COEFS_X","COEFS_Y","FXC","FYC","RC1","poly3_val","coefs","NODES","f_df","max_err","iters","upd","newton_rapshon","poly3_der","azi","tilt","pn1","rp","pfact","omega","cg","sg","cw","sw","yt","ba","bm","bq","flip_axis","sweep","radius_g_1","radius_g","rone_es","radius_p","radius_p2","radius_p_inv2","v_x","v_y","v_z","v_zp","A1","A2","A3","A4","paramLat","paramLatSq","paramLatPow6","EPS10","e_fwd","am1","e_inv","s_fwd","cphi1","s_inv","fromProjOrToProj","toProjOrCoord","fromProj","toProj","single","defaultDatum","Proj","nadgrid","ArrayBuffer","DataView","nFields","detectLittleEndian","nSubgridFields","shiftType","fromSemiMajorAxis","fromSemiMinorAxis","toSemiMajorAxis","toSemiMinorAxis","readHeader","gridOffset","subHeader","lngColumnCount","latColumnCount","rowSize","readSubgrids","readNTV2Grid","sterea","stere","somerc","omerc","lcc","krovak","cass","laea","aea","gnom","cea","eqc","poly","nzmg","mill","sinu","moll","eqdc","vandg","aeqd","ortho","qsc","robin","geocent","tpers","geos","eqearth","bonne","config","configUrl","configPromise","viewParams","overlayLayer","overlayLayers","overlayFunctions","_configUrl","_fetchConfig","URLSearchParams","epsg","location","fetch","headers","response","_data","ags_hosts","ags_services","ags_host","wmts_hosts","wmts_services","wms_hosts","wms_services","_getConfig","_jsonpCached","cached","jsonp","_fetchTextCached","_getGeoJSONFormat","fmt","_addEsriLayer","_url","_layerParams","_sourceParams","_callbackFunction","ags_info","URL","hostname","copyrightText","_attributionControl","_control","currentVersion","spatialReference","latestWkid","singleFusedMapCache","_initCachedLayer","_initDynamicLayer","_addWMTSLayer_impl","_layerName","wmtscapabilities","sourceParams","wmtsCap","elt","tileMatrixSets","findIndex","supportedCRS","matrixLimits","matrixSetObj","projConfig","switchXY","matrix","TileMatrix","selectedMatrixLimit","MinTileCol","MinTileRow","MaxTileCol","MatrixWidth","MaxTileRow","MatrixHeight","tileMatrixValue","Identifier","ScaleDenominator","TopLeftCorner","tileSpanX","TileWidth","tileSpanY","TileHeight","matrixSetExtent","wgs84BoundingBox","wgs84ProjectionExtent","wgs84MatrixSetExtent","matrixIdsPropName","identifierPropName","scaleDenominatorPropName","topLeftCornerPropName","switchOriginXY","matrixAvailable","elt_ml","tileWidth","tileHeight","createFromCapabilitiesMatrixSet","gets","encodings","_zIndex","predefinedSourceParams","pathname","layerParams","predefinedLayerParams","_addWMSLayer","TILED","tileInfo","lods","lod","fullExtent","xmin","ymin","xmax","ymax","rows","cols","initMap","_epsgCode","_mapParams","_viewParams","_customParams","mapParams","logo","loadTilesWhileAnimating","loadTilesWhileInteracting","_attributionControlAvailable","querySelector","addEsriLayer","addWMTSLayer","addWMSLayer","addStmaEsriLayer","_mapservice","ags_instance","addStmaWMTSLayer","_predefinedSourceParams","wmts_matrix","wmts_host","wmts_instance","addStmaWMSLayer","wms_tiled","wms_host","wms_instance","addStmaBaseLayer","_mapname","ags_service","_urlGetCapabilities","instance","service","tiled","addPoints","_pointCoords","_imageURL","addGeoJSONfromURL","_zoomTo","_style","geojson","addGeoJSON","_geojson","_projectionGeoJSON","_geojsonFormat","_vectorSource","zoomToInterval","setInterval","clearInterval","addOverlayForLayer","_layer","_overlayFunction","insertAdjacentHTML","_overlayDIV","featuredata","_feature","_layerCandidate","addStmaEsriFeatureLayer","_layerId","_styleFunction","_extent","_resolution","_projection","_urlParams","fullUrl","require","_response","alert","details","getConfig"],"sourceRoot":""}